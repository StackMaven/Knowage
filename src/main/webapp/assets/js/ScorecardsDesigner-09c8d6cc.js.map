{"version":3,"file":"ScorecardsDesigner-09c8d6cc.js","sources":["../../../../modules/managers/scorecards/ScorecardsHelpers.ts","../../../../modules/managers/scorecards/ScorecardsTable/ScorecardsTableHint.vue","../../../../modules/managers/scorecards/ScorecardsKpiDialog/ScorecardsKpiDialog.vue","../../../../modules/managers/scorecards/ScorecardsTable/ScorecardsTargetItem.vue","../../../../modules/managers/scorecards/ScorecardsTable/ScorecardsPerspectiveItem.vue","../../../../modules/managers/scorecards/ScorecardsTable/ScorecardsTable.vue","../../../../components/UI/KnPerspectiveCard/KnPerspectiveCard.vue","../../../../modules/managers/scorecards/ScorecardsDesigner.vue"],"sourcesContent":["import { iKpi, iScorecardCriterion } from \"./Scorecards\"\r\nimport descriptor from './ScorecardsTable/ScorecardsTableDescriptor.json'\r\n\r\nexport function getSelectedCriteriaTooltip(option: string, $t: any) {\r\n    return descriptor.criteriaTooltipMap[option] ? $t(descriptor.criteriaTooltipMap[option]) : ''\r\n}\r\n\r\nexport function getKpiIconColorClass(kpi: iKpi) {\r\n    return kpi.status ? descriptor.kpiIconColorClassMap[kpi.status] : descriptor.kpiIconColorClassMap['LIGHT-GREY']\r\n}\r\n\r\nexport function getDefaultCriterion(criterias: iScorecardCriterion[]) {\r\n    let tempCriterion = {} as iScorecardCriterion\r\n    const index = criterias.findIndex((criteria: iScorecardCriterion) => criteria.valueCd === descriptor.defaultCriteriaValue)\r\n    if (index !== -1) tempCriterion = criterias[index]\r\n    return tempCriterion\r\n}\r\n\r\nexport function getSelectedCriteria(criterionValue: string) {\r\n    return descriptor.selectedCriteriaMap[criterionValue] ? descriptor.selectedCriteriaMap[criterionValue] : descriptor.selectedCriteriaMap[descriptor.defaultCriteriaValue]\r\n}","<template>\r\n    <KnHint class=\"p-my-2\" :title=\"'managers.scorecards.scorecardDesigner'\" :hint=\"hint\"></KnHint>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport KnHint from '@/components/UI/KnHint.vue'\r\n\r\nexport default defineComponent({\r\n    name: 'scorecards-table-hint',\r\n    props: { hint: { type: String } },\r\n    components: { KnHint }\r\n})\r\n</script>\r\n","<template>\r\n    <Dialog id=\"scorecards-kpi-dialog\" class=\"p-fluid kn-dialog--toolbar--primary\" :style=\"scorecardsKpiDialogDescriptor.style.dialog\" :visible=\"visible\" :modal=\"true\" :closable=\"false\">\r\n        <template #header>\r\n            <Toolbar class=\"kn-toolbar kn-toolbar--primary p-p-0 p-m-2 p-col-12\">\r\n                <template #start>\r\n                    {{ $t('common.kpi') }}\r\n                </template>\r\n            </Toolbar>\r\n        </template>\r\n\r\n        <DataTable\r\n            :value=\"kpis\"\r\n            :paginator=\"kpis.length > 20\"\r\n            :rows=\"20\"\r\n            class=\"p-datatable-sm kn-table p-p-2\"\r\n            v-model:selection=\"selected\"\r\n            dataKey=\"id\"\r\n            v-model:filters=\"filters\"\r\n            :globalFilterFields=\"scorecardsKpiDialogDescriptor.globalFilterFields\"\r\n            :scrollable=\"true\"\r\n            :scrollHeight=\"scorecardsKpiDialogDescriptor.style.dialog.scrollHeight\"\r\n        >\r\n            <template #header>\r\n                <div class=\"table-header\">\r\n                    <span class=\"p-input-icon-left\">\r\n                        <i class=\"pi pi-search\" />\r\n                        <InputText class=\"kn-material-input\" v-model=\"filters['global'].value\" :placeholder=\"$t('common.search')\" />\r\n                    </span>\r\n                </div>\r\n            </template>\r\n\r\n            <template #empty>\r\n                {{ $t('common.info.noDataFound') }}\r\n            </template>\r\n\r\n            <Column selectionMode=\"multiple\" :headerStyle=\"scorecardsKpiDialogDescriptor.selectColumnStyle\"></Column>\r\n            <Column class=\"kn-truncated\" field=\"status\" :header=\"$t('common.status')\" :sortable=\"true\">\r\n                <template #body=\"slotProps\">\r\n                    <i class=\"fas fa-square fa-2xl p-mr-2\" :class=\"getKpiIconColorClass(slotProps.data)\"></i>\r\n                </template>\r\n            </Column>\r\n            <Column class=\"kn-truncated\" field=\"name\" :header=\"$t('common.name')\" :sortable=\"true\"></Column>\r\n            <Column class=\"kn-truncated\" field=\"category.valueName\" :header=\"$t('common.category')\" :sortable=\"true\"></Column>\r\n            <Column class=\"kn-truncated\" field=\"creationDate\" :header=\"$t('common.creationDate')\" :sortable=\"true\">\r\n                <template #body=\"slotProps\">\r\n                    <span>{{ getFormattedDate(slotProps.data.creationDate) }}</span>\r\n                </template>\r\n            </Column>\r\n            <Column class=\"kn-truncated\" field=\"author\" :header=\"$t('common.author')\" :sortable=\"true\"></Column>\r\n        </DataTable>\r\n\r\n        <template #footer>\r\n            <Button class=\"kn-button kn-button--primary\" @click=\"closeDialog\"> {{ $t('common.close') }}</Button>\r\n            <Button class=\"kn-button kn-button--primary\" @click=\"save\"> {{ $t('common.save') }}</Button>\r\n        </template>\r\n    </Dialog>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent, PropType } from 'vue'\r\nimport { iKpi } from '../Scorecards'\r\nimport { filterDefault } from '@/helpers/commons/filterHelper'\r\nimport { formatDate } from '@/helpers/commons/localeHelper'\r\nimport { getKpiIconColorClass } from '../ScorecardsHelpers'\r\nimport Column from 'primevue/column'\r\nimport DataTable from 'primevue/datatable'\r\nimport Dialog from 'primevue/dialog'\r\nimport moment from 'moment'\r\nimport scorecardsKpiDialogDescriptor from './ScorecardsKpiDialogDescriptor.json'\r\n\r\nexport default defineComponent({\r\n    name: 'scorecards-kpi-dialog',\r\n    components: { Column, DataTable, Dialog },\r\n    props: { visible: { type: Boolean }, propKpis: { type: Array as PropType<iKpi[]>, required: true }, selectedKpis: { type: Array as PropType<iKpi[]>, required: true } },\r\n    emits: ['close', 'kpiSelected'],\r\n    data() {\r\n        return {\r\n            scorecardsKpiDialogDescriptor,\r\n            kpis: [] as iKpi[],\r\n            filters: { global: [filterDefault] },\r\n            selected: [] as iKpi[],\r\n            getKpiIconColorClass\r\n        }\r\n    },\r\n    watch: {\r\n        visible(value) {\r\n            if (value) this.loadSelectedKpi()\r\n        },\r\n        propKpis() {\r\n            this.loadKpi()\r\n        }\r\n    },\r\n    created() {\r\n        this.loadKpi()\r\n        this.loadSelectedKpi()\r\n    },\r\n    methods: {\r\n        loadKpi() {\r\n            this.kpis = this.propKpis ?? []\r\n        },\r\n        loadSelectedKpi() {\r\n            this.selected = this.selectedKpis\r\n        },\r\n        getFormattedDate(date: number) {\r\n            const tempDate = moment(date).format('DD/MM/YYYY')\r\n            return formatDate(tempDate, '', 'DD/MM/YYYY')\r\n        },\r\n        closeDialog() {\r\n            this.$emit('close')\r\n            this.selected = []\r\n        },\r\n        save() {\r\n            this.$emit('kpiSelected', this.selected)\r\n        }\r\n    }\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n#scorecards-kpi-dialog .p-dialog-header,\r\n#scorecards-kpi-dialog .p-dialog-content {\r\n    padding: 0;\r\n}\r\n#scorecards-kpi-dialog .p-dialog-content {\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex: 1;\r\n}\r\n\r\n.table-header {\r\n    width: 30%;\r\n}\r\n\r\n.scorecard-kpi-icon-red {\r\n    color: #ff5656;\r\n}\r\n\r\n.scorecard-kpi-icon-yellow {\r\n    color: #ffee58;\r\n}\r\n\r\n.scorecard-kpi-icon-green {\r\n    color: #50c550;\r\n}\r\n\r\n.scorecard-kpi-icon-grey {\r\n    color: #b7b7b7;\r\n}\r\n\r\n.scorecard-kpi-icon-light-grey {\r\n    color: #cccccc;\r\n}\r\n</style>\r\n","<template>\r\n    <div v-if=\"target\">\r\n        <div class=\"p-d-flex p-flex-row p-ai-center scorecards-target-container\">\r\n            <div class=\"p-d-flex p-ai-center p-ml-5\">\r\n                <Button v-if=\"!expanded\" icon=\"fas fa-chevron-right\" class=\"p-button-text p-button-rounded p-button-plain\" @click=\"expanded = true\" />\r\n                <Button v-else icon=\"fas fa-chevron-down\" class=\"p-button-text p-button-rounded p-button-plain\" @click=\"expanded = false\" />\r\n                <i class=\"fa fa-bullseye fa-lg p-mr-1 scorecard-blue-icon\" />\r\n                <InputText class=\"kn-material-input scorecards-target-name-input\" v-model=\"target.name\"  :maxLength=\"40\" @input=\"$emit('touched', false)\" />\r\n            </div>\r\n            <div class=\"p-d-flex p-flex-row p-ai-center\">\r\n                <SelectButton class=\"p-mr-1\" v-model=\"selectedCriteria\" :options=\"descriptor.criteriaOptions\" @change=\"onCriteriaChange\">\r\n                    <template #option=\"slotProps\">\r\n                        <span v-tooltip=\"getSelectedCriteriaTooltip(slotProps.option, $t)\" :data-test=\"'select-button-' + slotProps.option\">{{ slotProps.option }}</span>\r\n                    </template>\r\n                </SelectButton>\r\n                <MultiSelect v-if=\"selectedCriteria !== 'M'\" :style=\"descriptor.style.multiselect\" v-model=\"target.options.criterionPriority\" :options=\"target.kpis\" optionLabel=\"name\" optionValue=\"name\" @change=\"onCriterionPriortyChanged\" data-test=\"criteria-select-input\"></MultiSelect>\r\n            </div>\r\n\r\n            <div class=\"p-ml-auto\">\r\n                <Button icon=\"fa-solid fa-square-plus\" class=\"p-button-text p-button-rounded p-button-plain\" v-tooltip.top=\"$t('managers.scorecards.addKpi')\" @click=\"openKpiDialog\" />\r\n                <Button icon=\"fas fa-trash-alt\" class=\"p-button-text p-button-rounded p-button-plain\" @click=\"deleteTargetConfirm\" />\r\n            </div>\r\n        </div>\r\n        <div v-if=\"expanded\">\r\n            <div v-if=\"target.kpis.length === 0\" class=\"p-d-flex p-flex-row p-ai-center scorecards-kpi-container\">\r\n                <ScorecardsTableHint :hint=\"'managers.scorecards.addKpiHint'\"></ScorecardsTableHint>\r\n            </div>\r\n            <template v-else>\r\n                <div v-for=\"(kpi, index) in target.kpis\" :key=\"index\" class=\"p-d-flex p-flex-row p-ai-center scorecards-kpi-container\">\r\n                    <div class=\"scorecards-kpi-info\">\r\n                        <i class=\"fas fa-square fa-2xl p-mr-2\" :class=\"getKpiIconColorClass(kpi)\"></i>\r\n                        <span> {{ kpi.name }}</span>\r\n                    </div>\r\n                    <div class=\"p-ml-auto\">\r\n                        <Button icon=\"fas fa-trash-alt\" class=\"p-button-text p-button-rounded p-button-plain\" @click=\"deleteKpiConfirm(kpi)\" />\r\n                    </div>\r\n                </div>\r\n            </template>\r\n        </div>\r\n\r\n        <ScorecardsKpiDialog :visible=\"kpiDialogVisible\" :propKpis=\"kpis\" :selectedKpis=\"target.kpis\" @close=\"kpiDialogVisible = false\" @kpiSelected=\"onKpiSelected\"></ScorecardsKpiDialog>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent, PropType } from 'vue'\r\nimport { iScorecardTarget, iScorecardCriterion, iKpi } from '../Scorecards'\r\nimport { getSelectedCriteriaTooltip, getKpiIconColorClass, getSelectedCriteria } from '../ScorecardsHelpers'\r\nimport MultiSelect from 'primevue/multiselect'\r\nimport SelectButton from 'primevue/selectbutton'\r\nimport descriptor from './ScorecardsTableDescriptor.json'\r\nimport ScorecardsTableHint from './ScorecardsTableHint.vue'\r\nimport ScorecardsKpiDialog from '../ScorecardsKpiDialog/ScorecardsKpiDialog.vue'\r\n\r\nexport default defineComponent({\r\n    name: 'scorecards-target-item',\r\n    components: { MultiSelect, SelectButton, ScorecardsTableHint, ScorecardsKpiDialog },\r\n    props: { propTarget: { type: Object as PropType<iScorecardTarget> }, criterias: { type: Array as PropType<iScorecardCriterion[]>, required: true }, kpis: { type: Array as PropType<iKpi[]>, required: true } },\r\n    emits: ['deleteTarget', 'openKpiDialog', 'touched'],\r\n    data() {\r\n        return {\r\n            descriptor,\r\n            target: null as iScorecardTarget | null,\r\n            expanded: false,\r\n            selectedCriteria: 'M',\r\n            kpiDialogVisible: false,\r\n            getSelectedCriteriaTooltip,\r\n            getKpiIconColorClass\r\n        }\r\n    },\r\n    watch: {\r\n        propTarget() {\r\n            this.loadTarget()\r\n        }\r\n    },\r\n    async created() {\r\n        this.loadTarget()\r\n    },\r\n    methods: {\r\n        loadTarget() {\r\n            this.target = this.propTarget as iScorecardTarget\r\n            if (this.target.name === 'New Target') this.expanded = true\r\n            this.selectedCriteria = getSelectedCriteria(this.target.criterion?.valueCd)\r\n        },\r\n        onCriteriaChange() {\r\n            if (!this.target) return\r\n            for (let i = 0; i < this.criterias.length; i++) {\r\n                if ((this.selectedCriteria === 'M' && this.criterias[i].valueCd === 'MAJORITY') || (this.selectedCriteria === 'MP' && this.criterias[i].valueCd === 'MAJORITY_WITH_PRIORITY') || (this.selectedCriteria === 'P' && this.criterias[i].valueCd === 'PRIORITY')) {\r\n                    this.target.criterion = this.criterias[i]\r\n                    this.$emit('touched', true)\r\n                    this.target.updated = true\r\n                    break\r\n                }\r\n            }\r\n        },\r\n        openKpiDialog() {\r\n            this.kpiDialogVisible = true\r\n        },\r\n        onKpiSelected(selectedKpis: iKpi[]) {\r\n            if (this.target) {\r\n                this.target.kpis = selectedKpis\r\n                this.$emit('touched', true)\r\n                this.target.updated = true\r\n                this.expanded = true\r\n            }\r\n            this.kpiDialogVisible = false\r\n        },\r\n        deleteKpiConfirm(kpi: iKpi) {\r\n            this.$confirm.require({\r\n                message: this.$t('common.toast.deleteMessage'),\r\n                header: this.$t('common.toast.deleteConfirmTitle'),\r\n                icon: 'pi pi-exclamation-triangle',\r\n                accept: () => this.deleteKpi(kpi)\r\n            })\r\n        },\r\n        async deleteKpi(kpi: iKpi) {\r\n            if (!this.target) return\r\n            const index = this.target.kpis.findIndex((tempKpi: iKpi) => tempKpi.id === kpi.id)\r\n            if (index !== -1) {\r\n                this.target.kpis.splice(index, 1)\r\n                if (this.target.criterion.valueCd !== 'MAJORITY') {\r\n                    const index = this.target.options.criterionPriority.findIndex((criteria: string) => criteria === kpi.name)\r\n                    if (index !== -1) this.target.options.criterionPriority.splice(index, 1)\r\n                }\r\n                this.$emit('touched', true)\r\n                this.target.updated = true\r\n            }\r\n        },\r\n        deleteTargetConfirm() {\r\n            this.$confirm.require({\r\n                message: this.$t('common.toast.deleteMessage'),\r\n                header: this.$t('common.toast.deleteConfirmTitle'),\r\n                icon: 'pi pi-exclamation-triangle',\r\n                accept: () => this.$emit('deleteTarget', this.target)\r\n            })\r\n        },\r\n        onCriterionPriortyChanged() {\r\n            this.$emit('touched', true)\r\n            if (this.target) this.target.updated = true\r\n        }\r\n    }\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.scorecards-target-container {\r\n    border-top: 1px solid #cccccc;\r\n}\r\n\r\n.scorecards-kpi-info {\r\n    margin-left: 6rem;\r\n}\r\n\r\n.scorecard-kpi-icon-red {\r\n    color: #ff5656;\r\n}\r\n\r\n.scorecard-kpi-icon-yellow {\r\n    color: #ffee58;\r\n}\r\n\r\n.scorecard-kpi-icon-green {\r\n    color: #50c550;\r\n}\r\n\r\n.scorecard-kpi-icon-grey {\r\n    color: #b7b7b7;\r\n}\r\n\r\n.scorecard-kpi-icon-light-grey {\r\n    .p-selectbutton > div {\r\n        justify-content: center;\r\n    }\r\n\r\n    .scorecards-kpi-container {\r\n        border-top: 1px solid var(--kn-list-border-color);\r\n    }\r\n    color: #cccccc;\r\n}\r\n\r\n.scorecards-criteria-multiselect {\r\n    width: 50%;\r\n}\r\n\r\n.scorecards-target-name-input {\r\n    border: none;\r\n}\r\n</style>\r\n","<template>\r\n    <div id=\"perspective\" v-if=\"perspective\">\r\n        <div class=\"p-d-flex p-flex-row p-ai-center\">\r\n            <div class=\"p-d-flex p-ai-center\" :style=\"descriptor.style.inputContainer\">\r\n                <Button v-if=\"!expanded\" icon=\"fas fa-chevron-right\" class=\"p-button-text p-button-rounded p-button-plain\" @click=\"expanded = true\" />\r\n                <Button v-else icon=\"fas fa-chevron-down\" class=\"p-button-text p-button-rounded p-button-plain\" @click=\"expanded = false\" />\r\n                <i class=\"fa-solid fa-rectangle-list fa-lg p-mr-1 scorecard-blue-icon\" />\r\n                <InputText class=\"kn-material-input scorecards-target-perspective-input\" v-model=\"perspective.name\" :maxLength=\"40\" @input=\"$emit('touched')\" />\r\n            </div>\r\n            <div class=\"p-d-flex p-flex-row p-ai-center kn-flex\">\r\n                <SelectButton class=\"p-mr-1\" v-model=\"selectedCriteria\" :options=\"descriptor.criteriaOptions\" @change=\"onCriteriaChange\">\r\n                    <template #option=\"slotProps\">\r\n                        <span v-tooltip=\"getSelectedCriteriaTooltip(slotProps.option, $t)\" :data-test=\"'select-button-' + slotProps.option\">{{ slotProps.option }}</span>\r\n                    </template>\r\n                </SelectButton>\r\n                <MultiSelect v-if=\"selectedCriteria !== 'M'\" :style=\"descriptor.style.multiselect\" v-model=\"perspective.options.criterionPriority\" :options=\"perspective.targets\" optionLabel=\"name\" optionValue=\"name\" @change=\"onCriterionPriortyChanged\" data-test=\"criteria-select-input\" />\r\n            </div>\r\n\r\n            <div class=\"p-d-flex p-ai-center\">\r\n                <Button icon=\"fa-solid fa-square-plus\" class=\"p-button-text p-button-rounded p-button-plain\" v-tooltip.top=\"$t('managers.scorecards.addTarget')\" @click=\"addTarget\" />\r\n                <Button icon=\"fas fa-trash-alt\" class=\"p-button-text p-button-rounded p-button-plain\" @click=\"deletePerspectiveConfirm\" />\r\n            </div>\r\n        </div>\r\n        <div v-if=\"expanded\">\r\n            <div v-if=\"perspective.targets.length === 0\" class=\"p-d-flex p-flex-row p-ai-center scorecards-kpi-container\">\r\n                <ScorecardsTableHint :hint=\"'managers.scorecards.addTargetHint'\" data-test=\"no-targets-hint\"></ScorecardsTableHint>\r\n            </div>\r\n            <template v-else>\r\n                <ScorecardsTargetItem v-for=\"(target, index) in perspective.targets\" :key=\"index\" :propTarget=\"target\" :criterias=\"criterias\" :kpis=\"kpis\" @deleteTarget=\"deleteTarget\" @openKpiDialog=\"$emit('openKpiDialog', $event)\" @touched=\"onTargetTouched\"></ScorecardsTargetItem>\r\n            </template>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent, PropType } from 'vue'\r\nimport { iPerspective, iScorecardCriterion, iScorecardTarget, iKpi } from '../Scorecards'\r\nimport { getSelectedCriteriaTooltip, getDefaultCriterion, getSelectedCriteria } from '../ScorecardsHelpers'\r\nimport MultiSelect from 'primevue/multiselect'\r\nimport SelectButton from 'primevue/selectbutton'\r\nimport descriptor from './ScorecardsTableDescriptor.json'\r\nimport ScorecardsTargetItem from './ScorecardsTargetItem.vue'\r\nimport ScorecardsTableHint from './ScorecardsTableHint.vue'\r\nimport cryptoRandomString from 'crypto-random-string'\r\n\r\nexport default defineComponent({\r\n    name: 'scorecards-perspective-item',\r\n    components: { MultiSelect, SelectButton, ScorecardsTargetItem, ScorecardsTableHint },\r\n    props: { propPerspective: { type: Object as PropType<iPerspective> }, criterias: { type: Array as PropType<iScorecardCriterion[]>, required: true }, kpis: { type: Array as PropType<iKpi[]>, required: true } },\r\n    emits: ['deletePerspective', 'openKpiDialog', 'touched'],\r\n    data() {\r\n        return {\r\n            descriptor,\r\n            perspective: null as iPerspective | null,\r\n            expanded: false,\r\n            selectedCriteria: 'M',\r\n            getSelectedCriteriaTooltip\r\n        }\r\n    },\r\n    watch: {\r\n        propPerspective() {\r\n            this.loadPerspective()\r\n        }\r\n    },\r\n    async created() {\r\n        this.loadPerspective()\r\n    },\r\n    methods: {\r\n        loadPerspective() {\r\n            this.perspective = this.propPerspective as iPerspective\r\n            if (this.perspective.name === 'New Perspective') this.expanded = true\r\n            this.selectedCriteria = getSelectedCriteria(this.perspective.criterion?.valueCd)\r\n        },\r\n        addTarget() {\r\n            if (this.perspective) {\r\n                this.perspective.targets.push({ id: cryptoRandomString({ length: 16, type: 'base64' }), name: 'New Target', status: 'GRAY', criterion: getDefaultCriterion(this.criterias), options: { criterionPriority: [] }, kpis: [], groupedKpis: [], new: true })\r\n                this.$emit('touched')\r\n                this.expanded = true\r\n                this.perspective.updated = true\r\n            }\r\n        },\r\n        onCriteriaChange() {\r\n            if (!this.perspective) return\r\n\r\n            for (let i = 0; i < this.criterias.length; i++) {\r\n                if ((this.selectedCriteria === 'M' && this.criterias[i].valueCd === 'MAJORITY') || (this.selectedCriteria === 'MP' && this.criterias[i].valueCd === 'MAJORITY_WITH_PRIORITY') || (this.selectedCriteria === 'P' && this.criterias[i].valueCd === 'PRIORITY')) {\r\n                    this.perspective.criterion = this.criterias[i]\r\n                    this.$emit('touched')\r\n                    this.perspective.updated = true\r\n                    break\r\n                }\r\n            }\r\n\r\n            this.perspective.options.criterionPriority = []\r\n        },\r\n        deletePerspectiveConfirm() {\r\n            this.$confirm.require({\r\n                message: this.$t('common.toast.deleteMessage'),\r\n                header: this.$t('common.toast.deleteConfirmTitle'),\r\n                icon: 'pi pi-exclamation-triangle',\r\n                accept: () => this.$emit('deletePerspective', this.perspective)\r\n            })\r\n        },\r\n        deleteTarget(target: iScorecardTarget) {\r\n            if (!this.perspective) return\r\n            const index = this.perspective.targets.findIndex((tempTarget: iScorecardTarget) => tempTarget.id === target.id)\r\n            if (index !== -1) {\r\n                this.perspective.targets.splice(index, 1)\r\n                if (this.perspective.criterion.valueCd !== 'MAJORITY') {\r\n                    const index = this.perspective.options.criterionPriority.findIndex((criteria: string) => criteria === target.name)\r\n                    if (index !== -1) this.perspective.options.criterionPriority.splice(index, 1)\r\n                }\r\n                this.$emit('touched')\r\n                this.perspective.updated = true\r\n            }\r\n        },\r\n        onTargetTouched(updatePerspective: boolean) {\r\n            this.$emit('touched')\r\n            if (this.perspective && updatePerspective) this.perspective.updated = true\r\n        },\r\n        onCriterionPriortyChanged() {\r\n            this.$emit('touched', true)\r\n            if (this.perspective) this.perspective.updated = true\r\n        }\r\n    }\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.p-selectbutton > div {\r\n    justify-content: center;\r\n}\r\n#perspective {\r\n    border-bottom: 1px solid var(--kn-list-border-color);\r\n    border-left: 1px solid var(--kn-list-border-color);\r\n}\r\n</style>\r\n\r\n<style lang=\"scss\" scoped>\r\n.scorecards-target-perspective-input {\r\n    border: none;\r\n}\r\n</style>\r\n","<template>\r\n    <div class=\"p-d-flex p-flex-column kn-flex kn-overflow\" v-if=\"scorecard\">\r\n        <Toolbar class=\"kn-toolbar kn-toolbar--secondary\">\r\n            <template #start>\r\n                {{ $t('managers.scorecards.perspectives') }}\r\n            </template>\r\n            <template #end>\r\n                <Button :label=\"$t('managers.scorecards.addPerspective')\" class=\"p-button-text p-button-rounded p-button-plain kn-white-color\" @click=\"addPerspective\" data-test=\"add-perspective-button\" />\r\n            </template>\r\n        </Toolbar>\r\n\r\n        <ScorecardsTableHint v-if=\"scorecard.perspectives.length === 0\" class=\"p-my-2\" :hint=\"'managers.scorecards.addPerspectiveHint'\" data-test=\"no-perspective-hint\"></ScorecardsTableHint>\r\n        <div v-else class=\"kn-flex kn-overflow\">\r\n            <ScorecardsPerspectiveItem v-for=\"(perspective, index) in scorecard.perspectives\" :key=\"index\" :propPerspective=\"perspective\" :criterias=\"criterias\" :kpis=\"kpis\" @deletePerspective=\"deletePerspective\" @touched=\"$emit('touched')\"></ScorecardsPerspectiveItem>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent, PropType } from 'vue'\r\nimport { iScorecard, iScorecardCriterion, iPerspective, iKpi } from '../Scorecards'\r\nimport { getDefaultCriterion } from '../ScorecardsHelpers'\r\nimport ScorecardsPerspectiveItem from './ScorecardsPerspectiveItem.vue'\r\nimport ScorecardsTableHint from './ScorecardsTableHint.vue'\r\nimport cryptoRandomString from 'crypto-random-string'\r\n\r\nexport default defineComponent({\r\n    name: 'scorecards-table',\r\n    components: { ScorecardsPerspectiveItem, ScorecardsTableHint },\r\n    props: { propScorecard: { type: Object as PropType<iScorecard> }, criterias: { type: Array as PropType<iScorecardCriterion[]>, required: true }, kpis: { type: Array as PropType<iKpi[]>, required: true } },\r\n    emits: ['touched'],\r\n    data() {\r\n        return {\r\n            scorecard: null as iScorecard | null\r\n        }\r\n    },\r\n    watch: {\r\n        propScorecard() {\r\n            this.loadScorecard()\r\n        }\r\n    },\r\n    created() {\r\n        this.loadScorecard()\r\n    },\r\n    methods: {\r\n        loadScorecard() {\r\n            this.scorecard = this.propScorecard as iScorecard\r\n        },\r\n        addPerspective() {\r\n            if (this.scorecard) {\r\n                this.scorecard.perspectives.push({ id: cryptoRandomString({ length: 16, type: 'base64' }), name: 'New Perspective', status: 'GRAY', criterion: getDefaultCriterion(this.criterias), options: { criterionPriority: [] }, targets: [], groupedKpis: [], new: true })\r\n                this.$emit('touched')\r\n            }\r\n        },\r\n        deletePerspective(perspective: iPerspective) {\r\n            if (!this.scorecard) return\r\n            const index = this.scorecard.perspectives.findIndex((tempPerspective: iPerspective) => tempPerspective.id === perspective.id)\r\n            if (index !== -1) {\r\n                this.scorecard.perspectives.splice(index, 1)\r\n                this.$emit('touched')\r\n            }\r\n        }\r\n    }\r\n})\r\n</script>\r\n","<template>\r\n    <Card class=\"perspective-card\" v-if=\"perspective\">\r\n        <template #header>\r\n            <div class=\"perspective-header p-d-flex p-flex-row p-ai-center\" :class=\"toolbarBorderClass\">\r\n                <h2 class=\"p-m-0 p-p-2\">{{ perspective.name }}</h2>\r\n                <span v-tooltip=\"getSelectedCriteriaTooltip(perspective.criterion?.valueCd)\" class=\"perspective-target-icon kn-cursor-pointer\">{{ getTargetIconLetter(perspective.criterion?.valueCd) }}</span>\r\n                <div v-if=\"perspective.criterion?.valueCd !== 'MAJORITY'\" class=\"p-ml-2 kn-truncated priority-items-container\">{{ '(' + getPriorityItems(perspective) + ')' }}</div>\r\n            </div>\r\n        </template>\r\n        <template #content>\r\n            <div class=\"target-row p-d-flex p-flex-row p-ai-center p-p-3 p-my-2\" :class=\"{ 'perspective-target-container': index !== perspective.targets.length - 1 }\" v-for=\"(target, index) in perspective.targets\" :key=\"index\">\r\n                <div class=\"p-d-flex p-flex-row\">\r\n                    <span class=\"p-mr-2 kn-flex\">{{ target.name }}</span>\r\n                    <span v-tooltip=\"getSelectedCriteriaTooltip(target.criterion?.valueCd)\" class=\"p-ml-auto perspective-target-icon kn-cursor-pointer\">{{ getTargetIconLetter(target.criterion?.valueCd) }}</span>\r\n                    <div v-if=\"target.criterion?.valueCd !== 'MAJORITY'\" class=\"p-ml-2 kn-truncated priority-items-container\">{{ '(' + getPriorityItems(target) + ')' }}</div>\r\n                </div>\r\n                <div class=\"p-ml-auto\">\r\n                    <i class=\"fas fa-square fa-2xl p-mr-2\" :class=\"getTargetStatusIconColor(target)\"></i>\r\n                </div>\r\n            </div>\r\n        </template>\r\n    </Card>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent, PropType } from 'vue'\r\nimport { iPerspective, iScorecardTarget } from '@/modules/managers/scorecards/Scorecards'\r\nimport { AxiosResponse } from 'axios'\r\nimport Card from 'primevue/card'\r\nimport mainStore from '../../../App.store'\r\nimport deepEqual from 'deep-equal'\r\n\r\nexport default defineComponent({\r\n    name: 'kn-perspective-card',\r\n    components: { Card },\r\n    props: { propPerspective: { type: Object as PropType<iPerspective> } },\r\n    data() {\r\n        return {\r\n            perspective: null as iPerspective | null,\r\n            toolbarBorderClass: 'perspective-toolbar-light-grey'\r\n        }\r\n    },\r\n    computed: {\r\n        perspectiveUpdated(): boolean | undefined {\r\n            return this.perspective?.updated\r\n        }\r\n    },\r\n    watch: {\r\n        propPerspective() {\r\n            this.loadPerspective()\r\n        },\r\n        async perspectiveUpdated(value: boolean) {\r\n            if (value && this.perspective) {\r\n                await this.evaluatePerspective()\r\n                this.evaluatePerspectiveTargets()\r\n                this.perspective.updated = false\r\n            }\r\n        }\r\n    },\r\n    setup() {\r\n        const store = mainStore()\r\n        return { store }\r\n    },\r\n    created() {\r\n        this.loadPerspective()\r\n    },\r\n    methods: {\r\n        async loadPerspective() {\r\n            this.perspective = this.propPerspective ? this.propPerspective : ({} as iPerspective)\r\n\r\n            if (this.perspective && this.perspective.criterion.valueId) {\r\n                await this.evaluatePerspective()\r\n                this.evaluatePerspectiveTargets()\r\n            }\r\n        },\r\n        getTargetIconLetter(criterionValue: string | null) {\r\n            if (!criterionValue) criterionValue = ''\r\n\r\n            switch (criterionValue) {\r\n                case 'MAJORITY':\r\n                    return 'M'\r\n                case 'MAJORITY_WITH_PRIORITY':\r\n                    return 'MP'\r\n                case 'PRIORITY':\r\n                    return 'P'\r\n                default:\r\n                    return ''\r\n            }\r\n        },\r\n        async evaluateCriteria(criterionId: number, statusArray: any[], target: iScorecardTarget | null) {\r\n            this.store.setLoading(true)\r\n            await this.$http\r\n                .post(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `1.0/kpiee/${criterionId}/evaluateCriterion`, statusArray)\r\n                .then((response: AxiosResponse<any>) => {\r\n                    if (!target && this.perspective) {\r\n                        this.perspective.statusColor = response.data ? response.data.status : null\r\n                        this.setPerspectiveToolbarClass()\r\n                    } else if (target) {\r\n                        target.statusColor = response.data ? response.data.status : null\r\n                    }\r\n                })\r\n                .catch(() => {})\r\n            this.store.setLoading(false)\r\n        },\r\n        async evaluatePerspective() {\r\n            if (!this.perspective) return\r\n\r\n            for (let i = 0; i < this.perspective.targets.length; i++) {\r\n                this.addGroupedTargets(this.perspective.targets[i].status)\r\n                this.addGroupedKpiItems(this.perspective.targets[i])\r\n            }\r\n\r\n            const statusArray = [] as any[]\r\n            for (let i = 0; i < this.perspective.targets.length; i++) {\r\n                statusArray.push({ status: this.perspective.targets[i].status, priority: false })\r\n            }\r\n\r\n            for (let i = 0; i < this.perspective.options.criterionPriority.length; i++) {\r\n                for (let j = 0; j < this.perspective.targets.length; j++) {\r\n                    if (this.perspective.options.criterionPriority[i] === this.perspective.targets[j].name) {\r\n                        statusArray[j].priority = true\r\n                    }\r\n                }\r\n            }\r\n\r\n            await this.evaluateCriteria(this.perspective.criterion.valueId, statusArray, null)\r\n        },\r\n        evaluatePerspectiveTargets() {\r\n            if (!this.perspective) return\r\n            this.perspective.targets?.forEach((target: iScorecardTarget) => {\r\n                if (target.updated || target.updated === undefined) {\r\n                    this.evaluateTarget(target)\r\n                    target.updated = false\r\n                }\r\n            })\r\n        },\r\n        async evaluateTarget(target: iScorecardTarget) {\r\n            const statusArray = [] as any[]\r\n            for (let i = 0; i < target.kpis.length; i++) {\r\n                statusArray.push({ status: target.kpis[i].status, priority: false })\r\n            }\r\n\r\n            for (let i = 0; i < target.options.criterionPriority.length; i++) {\r\n                for (let j = 0; j < target.kpis.length; j++) {\r\n                    if (target.options.criterionPriority[i] === target.kpis[j].name) {\r\n                        statusArray[j].priority = true\r\n                    }\r\n                }\r\n            }\r\n\r\n            await this.evaluateCriteria(target.criterion.valueId, statusArray, target)\r\n        },\r\n        addGroupedTargets(type: any) {\r\n            if (!this.perspective || !this.perspective.groupedTargets) return\r\n\r\n            for (let i = 0; i < this.perspective.groupedTargets?.length; i++) {\r\n                if (deepEqual(this.perspective.groupedTargets[i].status, type)) {\r\n                    this.perspective.groupedTargets[i].count++\r\n                    break\r\n                }\r\n            }\r\n            this.perspective?.groupedTargets?.push({ status: type, count: 1 })\r\n        },\r\n        addGroupedKpiItems(target: iScorecardTarget) {\r\n            if (!this.perspective || !target.groupedKpis) return\r\n\r\n            if (!this.perspective.groupedKpis) {\r\n                this.perspective.groupedKpis = []\r\n            }\r\n\r\n            for (let i = 0; i < target.groupedKpis.length; i++) {\r\n                const tempGroupedKpis = target.groupedKpis[i]\r\n                let found = false\r\n\r\n                for (let j = 0; j < this.perspective?.groupedKpis?.length; j++) {\r\n                    if (deepEqual(this.perspective.groupedKpis[j].status, tempGroupedKpis.status)) {\r\n                        this.perspective.groupedKpis[j].count += tempGroupedKpis.count\r\n                        found = true\r\n                        break\r\n                    }\r\n                }\r\n                if (!found) {\r\n                    this.perspective.groupedKpis?.push({ status: tempGroupedKpis.status, count: tempGroupedKpis.count })\r\n                }\r\n            }\r\n        },\r\n        setPerspectiveToolbarClass() {\r\n            if (this.perspective?.statusColor) {\r\n                switch (this.perspective.statusColor) {\r\n                    case 'RED':\r\n                        this.toolbarBorderClass = 'perspective-toolbar-red'\r\n                        break\r\n                    case 'YELLOW':\r\n                        this.toolbarBorderClass = 'perspective-toolbar-yellow'\r\n                        break\r\n                    case 'GREEN':\r\n                        this.toolbarBorderClass = 'perspective-toolbar-green'\r\n                        break\r\n                    case 'GREY':\r\n                        this.toolbarBorderClass = 'perspective-toolbar-grey'\r\n                }\r\n            } else {\r\n                this.toolbarBorderClass = 'perspective-toolbar-light-grey'\r\n            }\r\n        },\r\n        getTargetStatusIconColor(target: iScorecardTarget) {\r\n            if (target?.statusColor) {\r\n                switch (target.statusColor) {\r\n                    case 'RED':\r\n                        return 'scorecard-icon-red'\r\n                    case 'YELLOW':\r\n                        return 'scorecard-icon-yellow'\r\n                    case 'GREEN':\r\n                        return 'scorecard-icon-green'\r\n                    case 'GREY':\r\n                        return 'scorecard-icon-grey'\r\n                }\r\n            } else {\r\n                return 'scorecard-icon-light-grey'\r\n            }\r\n        },\r\n        getSelectedCriteriaTooltip(criterionValue: string | null) {\r\n            switch (criterionValue) {\r\n                case 'MAJORITY':\r\n                    return this.$t('managers.scorecards.majority')\r\n                case 'MAJORITY_WITH_PRIORITY':\r\n                    return this.$t('managers.scorecards.majorityWithPriority')\r\n                case 'PRIORITY':\r\n                    return this.$t('managers.scorecards.priority')\r\n                default:\r\n                    return ''\r\n            }\r\n        },\r\n        getPriorityItems(item: iPerspective | iScorecardTarget) {\r\n            let targets = ''\r\n            if (item && item.options) {\r\n                for (let i = 0; i < item.options.criterionPriority.length; i++) {\r\n                    targets += item.options.criterionPriority[i]\r\n                    targets += i === item.options.criterionPriority.length - 1 ? ' ' : ', '\r\n                }\r\n            }\r\n\r\n            return targets\r\n        }\r\n    }\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.perspective-header {\r\n    border-bottom: 1px solid #c2c2c2;\r\n}\r\n\r\n.perspective-card .p-card-body,\r\n.perspective-card .p-card-body .p-card-content {\r\n    padding: 0;\r\n}\r\n\r\n.target-row {\r\n    min-height: 25px;\r\n}\r\n\r\n.perspective-target-icon {\r\n    border-radius: 3px;\r\n    padding: 4px 8px;\r\n    min-height: 25px;\r\n    text-align: center;\r\n    background-color: #c2c2c2;\r\n}\r\n\r\n.perspective-target-container {\r\n    border-bottom: 1px solid #c2c2c2;\r\n}\r\n\r\n.perspective-toolbar-red {\r\n    border-top: 8px solid #ff5656;\r\n}\r\n\r\n.perspective-toolbar-yellow {\r\n    border-top: 8px solid #ffee58;\r\n}\r\n\r\n.perspective-toolbar-green {\r\n    border-top: 8px solid #50c550;\r\n}\r\n\r\n.perspective-toolbar-grey {\r\n    border-top: 8px solid #b7b7b7;\r\n}\r\n\r\n.perspective-toolbar-light-grey {\r\n    border-top: 8px solid #cccccc;\r\n}\r\n\r\n.scorecard-icon-red {\r\n    color: #ff5656;\r\n}\r\n\r\n.scorecard-icon-yellow {\r\n    color: #ffee58;\r\n}\r\n\r\n.scorecard-icon-green {\r\n    color: #50c550;\r\n}\r\n\r\n.scorecard-icon-grey {\r\n    color: #b7b7b7;\r\n}\r\n\r\n.scorecard-icon-light-grey {\r\n    color: #cccccc;\r\n}\r\n\r\n.priority-items-container {\r\n    width: 100%;\r\n    max-width: 250px;\r\n}\r\n</style>\r\n","<template>\r\n    <div class=\"p-d-flex kn-flex\" :style=\"descriptor.style.mainDialog\">\r\n        <div class=\"kn-list--column\" :style=\"descriptor.style.designer\">\r\n            <Toolbar class=\"kn-toolbar kn-toolbar--primary\">\r\n                <template #start>\r\n                    {{ $t('managers.scorecards.scorecardDesigner') }}\r\n                </template>\r\n                <template #end>\r\n                    <Button class=\"kn-button p-button-text\" :disabled=\"saveButtonDisabled\" @click=\"saveScorecard\">{{ $t('common.save') }}</Button>\r\n                    <Button class=\"kn-button p-button-text\" @click=\"close\">{{ $t('common.close') }}</Button>\r\n                </template>\r\n            </Toolbar>\r\n\r\n            <Card v-if=\"scorecard\" class=\"p-m-2\">\r\n                <template #content>\r\n                    <div class=\"p-fluid p-formgrid p-grid\">\r\n                        <div class=\"p-field p-col-6\">\r\n                            <span class=\"p-float-label\">\r\n                                <InputText\r\n                                    class=\"kn-material-input\"\r\n                                    v-model=\"scorecard.name\"\r\n                                    :class=\"{\r\n                                        'p-invalid': !scorecard.name && nameTouched\r\n                                    }\"\r\n                                    @input=\"touched = true\"\r\n                                />\r\n                                <label class=\"kn-material-input-label\"> {{ $t('common.name') + ' *' }}</label>\r\n                            </span>\r\n                            <div v-if=\"!scorecard.name && nameTouched\" class=\"p-error\">\r\n                                <small class=\"p-col-12\"> {{ $t('common.validation.required', { fieldName: $t('documentExecution.olap.crossNavigationDefinition.parameterName') }) }} </small>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"p-field p-col-6\">\r\n                            <span class=\"p-float-label\">\r\n                                <InputText class=\"kn-material-input\" v-model=\"scorecard.description\" @input=\"touched = true\" />\r\n                                <label class=\"kn-material-input-label\"> {{ $t('common.description') }}</label>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </template>\r\n            </Card>\r\n\r\n            <ScorecardsTable v-if=\"scorecard\" :propScorecard=\"scorecard\" :criterias=\"criterias\" :kpis=\"kpis\" @touched=\"touched = true\"></ScorecardsTable>\r\n        </div>\r\n\r\n        <div v-if=\"scorecard\" id=\"sideMenu\" class=\"kn-overflow\" :style=\"descriptor.style.perspective\">\r\n            <KnPerspectiveCard class=\"p-m-4\" v-for=\"(perspective, index) in scorecard.perspectives\" :key=\"index\" :propPerspective=\"perspective\" :data-test=\"'perspective-' + perspective.name\"></KnPerspectiveCard>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport { iScorecard, iScorecardCriterion, iKpi, iPerspective, iScorecardTarget } from './Scorecards'\r\nimport { AxiosResponse } from 'axios'\r\nimport Card from 'primevue/card'\r\nimport ScorecardsTable from './ScorecardsTable/ScorecardsTable.vue'\r\nimport KnPerspectiveCard from '@/components/UI/KnPerspectiveCard/KnPerspectiveCard.vue'\r\nimport descriptor from './ScorecardsDescriptor.json'\r\nimport mainStore from '../../../App.store'\r\nimport deepcopy from 'deepcopy'\r\n\r\nexport default defineComponent({\r\n    name: 'scorecards-designer',\r\n    components: { Card, KnPerspectiveCard, ScorecardsTable },\r\n    props: { id: { type: String } },\r\n    data() {\r\n        return {\r\n            descriptor,\r\n            scorecard: null as iScorecard | null,\r\n            nameTouched: false,\r\n            criterias: [] as iScorecardCriterion[],\r\n            kpis: [] as iKpi[],\r\n            touched: false\r\n        }\r\n    },\r\n    computed: {\r\n        saveButtonDisabled(): boolean {\r\n            return !this.scorecard || !this.scorecard.name || this.scorecard.perspectives.length === 0\r\n        }\r\n    },\r\n    watch: {\r\n        async id() {\r\n            await this.loadScorecard()\r\n        }\r\n    },\r\n    setup() {\r\n        const store = mainStore()\r\n        return { store }\r\n    },\r\n    async created() {\r\n        await this.loadScorecard()\r\n        await this.loadCriterias()\r\n        await this.loadKpis()\r\n    },\r\n    methods: {\r\n        async loadScorecard() {\r\n            this.store.setLoading(true)\r\n            if (this.id) {\r\n                await this.$http.get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `1.0/kpiee/${this.id}/loadScorecard`).then((response: AxiosResponse<any>) => (this.scorecard = response.data))\r\n            } else {\r\n                this.scorecard = { name: '', description: '', perspectives: [] }\r\n            }\r\n            this.store.setLoading(false)\r\n        },\r\n        async loadCriterias() {\r\n            this.store.setLoading(true)\r\n            await this.$http.get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/domains/listByCode/KPI_SCORECARD_CRITE`).then((response: AxiosResponse<any>) => (this.criterias = response.data))\r\n            this.store.setLoading(false)\r\n        },\r\n        async loadKpis() {\r\n            this.store.setLoading(true)\r\n            await this.$http.get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `1.0/kpi/listKpiWithResult`).then((response: AxiosResponse<any>) => (this.kpis = response.data))\r\n            this.store.setLoading(false)\r\n        },\r\n        async saveScorecard() {\r\n            const tempScorecard = this.getFormattedScorecard()\r\n\r\n            const operation = tempScorecard && tempScorecard.id ? 'update' : 'create'\r\n            this.store.setLoading(true)\r\n            await this.$http\r\n                .post(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `1.0/kpiee/saveScorecard`, tempScorecard)\r\n                .then((response: AxiosResponse<any>) => {\r\n                    if (response.data.id && this.scorecard) {\r\n                        this.store.setInfo({\r\n                            title: this.$t('common.toast.' + operation + 'Title'),\r\n                            msg: this.$t('common.toast.success')\r\n                        })\r\n                        this.scorecard.id = response.data.id\r\n                        if (operation === 'create') this.$router.push(`/scorecards/${this.scorecard.id}`)\r\n                        this.touched = false\r\n                    }\r\n                })\r\n                .catch(() => {})\r\n            this.store.setLoading(false)\r\n        },\r\n        getFormattedScorecard() {\r\n            const tempScorecard = deepcopy(this.scorecard)\r\n            if (!tempScorecard) return\r\n            // TODO - BE needs to be changed for description\r\n            delete tempScorecard.description\r\n\r\n            const fieldToDelete = ['groupedKpis', 'statusColor', 'updated']\r\n            tempScorecard.perspectives?.forEach((perspective: iPerspective) => {\r\n                if (perspective.new) {\r\n                    delete perspective.id\r\n                    delete perspective.new\r\n                }\r\n                fieldToDelete.forEach((field: string) => delete perspective[field])\r\n                perspective.targets?.forEach((target: iScorecardTarget) => {\r\n                    if (target.new) {\r\n                        delete target.id\r\n                        delete target.new\r\n                    }\r\n                    fieldToDelete.forEach((field: string) => delete target[field])\r\n                })\r\n            })\r\n\r\n            return tempScorecard\r\n        },\r\n        close() {\r\n            if (!this.touched) {\r\n                this.$router.push(`/scorecards`)\r\n                this.scorecard = null\r\n            } else {\r\n                this.$confirm.require({\r\n                    message: this.$t('common.toast.unsavedChangesMessage'),\r\n                    header: this.$t('common.toast.unsavedChangesHeader'),\r\n                    icon: 'pi pi-exclamation-triangle',\r\n                    accept: () => {\r\n                        this.touched = false\r\n                        this.$router.push(`/scorecards`)\r\n                        this.scorecard = null\r\n                    }\r\n                })\r\n            }\r\n        }\r\n    }\r\n})\r\n</script>\r\n<style lang=\"scss\">\r\n@media screen and (max-width: 1024px) {\r\n    #sideMenu {\r\n        display: none;\r\n    }\r\n}\r\n.scorecard-blue-icon {\r\n    color: rgb(67, 116, 158);\r\n}\r\n</style>\r\n"],"names":["_sfc_main","_openBlock","_createBlock","Column","DataTable","Dialog","moment","_withScopeId","_popScopeId","_normalizeStyle","_withCtx","_createVNode","_createElementVNode","_hoisted_1","_hoisted_2","_hoisted_3","_normalizeClass","_toDisplayString","MultiSelect","SelectButton","_hoisted_6","_createElementBlock","_hoisted_4","_hoisted_5","_hoisted_7","_withDirectives","_hoisted_8","_hoisted_9","_Fragment","_renderList","_createCommentVNode","Card","mainStore","deepEqual","_createTextVNode","descriptor"],"mappings":"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"}