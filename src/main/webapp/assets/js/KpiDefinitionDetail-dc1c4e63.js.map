{"version":3,"file":"KpiDefinitionDetail-dc1c4e63.js","sources":["../../../../helpers/commons/codeMirrorMathematicaModifiedHelper.ts","../../../../modules/kpi/kpiDefinition/detailView/KpiDefinitionFormulaTab/KpiDefinitionFormulaTab.vue","../../../../modules/kpi/kpiDefinition/detailView/KpiDefinitionCardinalityTab/KpiDefinitionCardinalityTab.vue","../../../../modules/kpi/kpiDefinition/detailView/KpiDefinitionThresholdTab/KpiDefinitionThresholdTab.vue","../../../../modules/kpi/kpiDefinition/detailView/KpiDefinitionDetail.vue"],"sourcesContent":["/* eslint-disable no-useless-escape */\r\nimport CodeMirror from 'codemirror'\r\n\r\nexport function setMathematicaModified() {\r\n    CodeMirror.defineMode('mathematica', function (_config, _parserConfig) {\r\n        console.log(_config, _parserConfig)\r\n        // used pattern building blocks\r\n        var Identifier = '[a-zA-Z\\\\$][a-zA-Z0-9\\\\$]*'\r\n        var pBase = '(?:\\\\d+)'\r\n        var pFloat = '(?:\\\\.\\\\d+|\\\\d+\\\\.\\\\d*|\\\\d+)'\r\n        var pFloatBase = '(?:\\\\.\\\\w+|\\\\w+\\\\.\\\\w*|\\\\w+)'\r\n        var pPrecision = '(?:`(?:`?' + pFloat + ')?)'\r\n\r\n        // regular expressions\r\n        var reBaseForm = new RegExp('(?:' + pBase + '(?:\\\\^\\\\^' + pFloatBase + pPrecision + '?(?:\\\\*\\\\^[+-]?\\\\d+)?))')\r\n        var reFloatForm = new RegExp('(?:' + pFloat + pPrecision + '?(?:\\\\*\\\\^[+-]?\\\\d+)?)')\r\n        var reIdInContext = new RegExp('(?:`?)(?:' + Identifier + ')(?:`(?:' + Identifier + '))*(?:`?)')\r\n\r\n        function tokenBase(stream, state) {\r\n            var ch\r\n\r\n            // get next character\r\n            ch = stream.next()\r\n\r\n            // string\r\n            if (ch === '\"') {\r\n                state.tokenize = tokenString\r\n                return state.tokenize(stream, state)\r\n            }\r\n\r\n            // comment\r\n            if (ch === '(') {\r\n                if (stream.eat('*')) {\r\n                    state.commentLevel++\r\n                    state.tokenize = tokenComment\r\n                    return state.tokenize(stream, state)\r\n                }\r\n            }\r\n\r\n            // go back one character\r\n            stream.backUp(1)\r\n\r\n            // look for numbers\r\n            // Numbers in a baseform\r\n            if (stream.match(reBaseForm, true, false)) {\r\n                return 'number'\r\n            }\r\n\r\n            // Mathematica numbers. Floats (1.2, .2, 1.) can have optionally a precision (`float) or an accuracy definition\r\n            // (``float). Note: while 1.2` is possible 1.2`` is not. At the end an exponent (float*^+12) can follow.\r\n            if (stream.match(reFloatForm, true, false)) {\r\n                return 'number'\r\n            }\r\n\r\n            /* In[23] and Out[34] */\r\n            if (stream.match(/(?:In|Out)\\[[0-9]*\\]/, true, false)) {\r\n                return 'atom'\r\n            }\r\n\r\n            // usage\r\n            if (stream.match(/([a-zA-Z\\$]+(?:`?[a-zA-Z0-9\\$])*::usage)/, true, false)) {\r\n                return 'meta'\r\n            }\r\n\r\n            // message\r\n            if (stream.match(/([a-zA-Z\\$]+(?:`?[a-zA-Z0-9\\$])*::[a-zA-Z\\$][a-zA-Z0-9\\$]*):?/, true, false)) {\r\n                return 'string-2'\r\n            }\r\n\r\n            // this makes a look-ahead match for something like variable:{_Integer}\r\n            // the match is then forwarded to the mma-patterns tokenizer.\r\n            if (stream.match(/([a-zA-Z_\\$][a-zA-Z0-9\\$]*\\s*:)(?:(?:[a-zA-Z_\\$][a-zA-Z0-9_\\$]*)|(?:[^:=>~@\\^\\&\\*\\)\\[\\]'\\?,\\|])).*/, true, false)) {\r\n                return 'variable-2'\r\n            }\r\n\r\n            // catch variables which are used together with Blank (_), BlankSequence (__) or BlankNullSequence (___)\r\n            // Cannot start with a number, but can have numbers at any other position. Examples\r\n            // blub__Integer, a1_, b34_Integer32\r\n            if (stream.match(/[a-zA-Z_\\$][a-zA-Z_0-9\\$]*_+[a-zA-Z_\\$][a-zA-Z0-9_\\$]*/, true, false)) {\r\n                return 'variable-2'\r\n            }\r\n            if (stream.match(/[a-zA-Z_\\$][a-zA-Z_0-9\\$]*_+[0-9\\$]*/, true, false)) {\r\n                return 'variable-2'\r\n            }\r\n            if (stream.match(/_+[a-zA-Z_\\$][a-zA-Z_0-9\\$]*/, true, false)) {\r\n                return 'variable-2'\r\n            }\r\n\r\n            // Named characters in Mathematica, like \\[Gamma].\r\n            if (stream.match(/\\\\\\[[a-zA-Z\\$][a-zA-Z0-9\\$]*\\]/, true, false)) {\r\n                return 'variable-3'\r\n            }\r\n\r\n            // Match all braces separately\r\n            if (stream.match(/(?:\\[|\\]|{|}|\\(|\\))/, true, false)) {\r\n                return 'bracket'\r\n            }\r\n\r\n            // Catch Slots (#, ##, #3, ##9 and the V10 named slots #name). I have never seen someone using more than one digit after #, so we match\r\n            // only one.\r\n            if (stream.match(/(?:#[a-zA-Z\\$][a-zA-Z0-9\\$]*|#+[0-9]?)/, true, false)) {\r\n                return 'variable-2'\r\n            }\r\n\r\n            // Literals like variables, keywords, functions\r\n            if (stream.match(reIdInContext, true, false)) {\r\n                return 'keyword'\r\n            }\r\n\r\n            // operators. Note that operators like @@ or /; are matched separately for each symbol.\r\n            if (stream.match(/(?:\\\\|\\+|\\-|\\*|\\/|,|;|\\.|:|@|~|=|>|<|&|\\||_|`|'|\\^|\\?|!|%)/, true, false)) {\r\n                return 'operator'\r\n            }\r\n\r\n            // everything else is an error\r\n            return 'error'\r\n        }\r\n\r\n        function tokenString(stream, state) {\r\n            var next,\r\n                end = false,\r\n                escaped = false\r\n            while ((next = stream.next()) != null) {\r\n                if (next === '\"' && !escaped) {\r\n                    end = true\r\n                    break\r\n                }\r\n                escaped = !escaped && next === '\\\\'\r\n            }\r\n            if (end && !escaped) {\r\n                state.tokenize = tokenBase\r\n            }\r\n            return 'string'\r\n        }\r\n\r\n        function tokenComment(stream, state) {\r\n            var prev, next\r\n            while (state.commentLevel > 0 && (next = stream.next()) != null) {\r\n                if (prev === '(' && next === '*') state.commentLevel++\r\n                if (prev === '*' && next === ')') state.commentLevel--\r\n                prev = next\r\n            }\r\n            if (state.commentLevel <= 0) {\r\n                state.tokenize = tokenBase\r\n            }\r\n            return 'comment'\r\n        }\r\n\r\n        return {\r\n            startState: function () {\r\n                return { tokenize: tokenBase, commentLevel: 0 }\r\n            },\r\n            token: function (stream, state) {\r\n                if (stream.eatSpace()) return null\r\n                return state.tokenize(stream, state)\r\n            },\r\n            blockCommentStart: '(*',\r\n            blockCommentEnd: '*)'\r\n        }\r\n    })\r\n\r\n    CodeMirror.defineMIME('text/x-mathematica', {\r\n        name: 'mathematica'\r\n    })\r\n}","<template>\r\n    <form class=\"p-fluid p-formgrid p-grid p-mt-3\">\r\n        <div class=\"p-field p-col-6\">\r\n            <span class=\"p-float-label p-mb-2\">\r\n                <InputText\r\n                    id=\"name\"\r\n                    class=\"kn-material-input\"\r\n                    type=\"text\"\r\n                    maxLength=\"25\"\r\n                    v-model.trim=\"v$.selectedKpi.name.$model\"\r\n                    :class=\"{\r\n                        'p-invalid': v$.selectedKpi.name.$invalid && v$.selectedKpi.name.$dirty\r\n                    }\"\r\n                    @blur=\"v$.selectedKpi.name.$touch()\"\r\n                />\r\n                <label for=\"label\" class=\"kn-material-input-label\">{{ $t('common.name') }} * </label>\r\n            </span>\r\n            <KnValidationMessages\r\n                :vComp=\"v$.selectedKpi.name\"\r\n                :additionalTranslateParams=\"{\r\n                    fieldName: $t('common.name')\r\n                }\"\r\n            >\r\n            </KnValidationMessages>\r\n        </div>\r\n        <div class=\"p-field p-col-6\">\r\n            <span class=\"p-float-label p-mb-2\">\r\n                <InputText id=\"name\" class=\"kn-material-input\" type=\"text\" v-model.trim=\"selectedKpi.author\" :disabled=\"true\" />\r\n                <label for=\"name\" class=\"kn-material-input-label\"> {{ $t('common.author') }}</label>\r\n            </span>\r\n        </div>\r\n    </form>\r\n    <VCodeMirror v-if=\"!loading\" ref=\"codeMirror\" class=\"CodeMirrorMathematica\" v-model:value=\"selectedKpi.definition.formula\" :autoHeight=\"true\" :options=\"codeMirrorOptions\" @keyup=\"onKeyUp\" @mousedown=\"onMouseDown\" />\r\n    <Dialog class=\"kn-dialog--toolbar--primary importExportDialog\" footer=\"footer\" v-bind:visible=\"functionDialogVisible\" :closable=\"false\" modal>\r\n        <template #header>\r\n            <h4>{{ $t('kpi.kpiDefinition.formulaDialogHeader') }} {{ this.dialogHeaderInfo.functionName }}</h4>\r\n        </template>\r\n\r\n        <div class=\"p-mt-4 p-ml-4\">\r\n            <div class=\"p-field-radiobutton\">\r\n                <RadioButton id=\"SUM\" name=\"city\" value=\"SUM\" v-model=\"selectedFunctionalities\" />\r\n                <label for=\"SUM\">SUM</label>\r\n            </div>\r\n            <div class=\"p-field-radiobutton\">\r\n                <RadioButton id=\"MAX\" name=\"city\" value=\"MAX\" v-model=\"selectedFunctionalities\" />\r\n                <label for=\"MAX\">MAX</label>\r\n            </div>\r\n            <div class=\"p-field-radiobutton\">\r\n                <RadioButton id=\"MIN\" name=\"city\" value=\"MIN\" v-model=\"selectedFunctionalities\" />\r\n                <label for=\"MIN\">MIN</label>\r\n            </div>\r\n            <div class=\"p-field-radiobutton\">\r\n                <RadioButton id=\"COUNT\" name=\"city\" value=\"COUNT\" v-model=\"selectedFunctionalities\" />\r\n                <label for=\"COUNT\">COUNT</label>\r\n            </div>\r\n        </div>\r\n        <template #footer>\r\n            <div>\r\n                <Button class=\"kn-button kn-button--secondary\" :label=\"$t('common.apply')\" @click=\"openFunctionPicker\" />\r\n            </div>\r\n        </template>\r\n    </Dialog>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport VCodeMirror, { CodeMirror } from 'codemirror-editor-vue3'\r\nimport { setMathematicaModified } from '@/helpers/commons/codeMirrorMathematicaModifiedHelper'\r\nimport { createValidations } from '@/helpers/commons/validationHelper'\r\nimport KnValidationMessages from '@/components/UI/KnValidatonMessages.vue'\r\nimport useValidate from '@vuelidate/core'\r\nimport tabViewDescriptor from '../KpiDefinitionDetailDescriptor.json'\r\nimport Dialog from 'primevue/dialog'\r\nimport RadioButton from 'primevue/radiobutton'\r\nimport mainStore from '../../../../../App.store'\r\n\r\nexport default defineComponent({\r\n    components: { VCodeMirror, Dialog, RadioButton, KnValidationMessages },\r\n    props: { propKpi: Object as any, measures: { type: Array as any }, aliasToInput: { type: String }, checkFormula: { type: Boolean }, activeTab: { type: Number }, loading: Boolean, reloadKpi: Boolean },\r\n    emits: ['touched', 'errorInFormula', 'updateFormulaToSave', 'onGuideClose'],\r\n    data() {\r\n        return {\r\n            codeMirrorOptions: {\r\n                mode: 'text/x-mathematica',\r\n                indentWithTabs: true,\r\n                smartIndent: true,\r\n                lineWrapping: true,\r\n                matchBrackets: true,\r\n                autofocus: true,\r\n                theme: 'eclipse',\r\n                lineNumbers: true,\r\n                gutters: ['CodeMirror-lint-markers'],\r\n                lint: true,\r\n                extraKeys: {\r\n                    'Ctrl-Space': this.keyAssistFunc\r\n                } as any\r\n            },\r\n            v$: useValidate() as any,\r\n            tabViewDescriptor,\r\n            selectedKpi: {} as any,\r\n            codeMirror: {} as any,\r\n            previousTabIndex: 0 as any,\r\n            dialogHeaderInfo: {} as any,\r\n            measuresToJSON: [] as any,\r\n            functionsTOJSON: [] as any,\r\n            formula: '',\r\n            formulaDecoded: '',\r\n            formulaSimple: '',\r\n            token: '',\r\n            selectedFunctionalities: 'SUM',\r\n            functionDialogVisible: false,\r\n            cursorPosition: null\r\n        }\r\n    },\r\n    validations() {\r\n        return {\r\n            selectedKpi: createValidations('selectedKpi', tabViewDescriptor.validations.selectedKpi)\r\n        }\r\n    },\r\n    setup() {\r\n        const store = mainStore()\r\n        return { store }\r\n    },\r\n    created() {\r\n        setMathematicaModified()\r\n    },\r\n    mounted() {\r\n        if (this.propKpi) {\r\n            this.selectedKpi = this.propKpi as any\r\n        }\r\n        this.registerCodeMirrorHelper()\r\n        this.loadKPI()\r\n    },\r\n    watch: {\r\n        propKpi() {\r\n            this.selectedKpi = this.propKpi as any\r\n            if (this.selectedKpi.definition != '') {\r\n                this.selectedKpi.definition = JSON.parse(this.selectedKpi.definition)\r\n            }\r\n            this.loadKPI()\r\n        },\r\n        aliasToInput() {\r\n            this.cursorPosition = this.codeMirror.getCursor()\r\n            this.codeMirror.replaceRange(' ' + this.aliasToInput, this.cursorPosition)\r\n            this.$emit('touched')\r\n        },\r\n        activeTab() {\r\n            setTimeout(() => {\r\n                this.codeMirror.refresh()\r\n            }, 0)\r\n            if (this.previousTabIndex === 0 && this.activeTab != 0) {\r\n                this.checkFormulaForErrors()\r\n            }\r\n            this.previousTabIndex = this.activeTab\r\n        },\r\n        reloadKpi() {\r\n            if (this.reloadKpi === true) {\r\n                this.loadKPI()\r\n            }\r\n        }\r\n    },\r\n\r\n    methods: {\r\n        openFunctionPicker() {\r\n            var cur = this.codeMirror.getCursor()\r\n            var token = this.codeMirror.getTokenAt(cur)\r\n\r\n            while (token.string.trim() == '') {\r\n                cur.ch = cur.ch + 1\r\n                token = this.codeMirror.getTokenAt(cur)\r\n            }\r\n\r\n            while (token.type == 'operator' || token.type == 'bracket' || token.type == 'number') {\r\n                cur.ch = cur.ch + 1\r\n                token = this.codeMirror.getTokenAt(cur)\r\n            }\r\n\r\n            while (token.string.trim() == '') {\r\n                cur.ch = cur.ch + 1\r\n                token = this.codeMirror.getTokenAt(cur)\r\n            }\r\n\r\n            if (this.selectedFunctionalities != '') {\r\n                var arr = this.codeMirror.findMarksAt({ line: this.codeMirror.getCursor().line, ch: token.end })\r\n                for (var i = 0; i < arr.length; i++) {\r\n                    arr[i].clear()\r\n                }\r\n            }\r\n            if (this.selectedFunctionalities == 'MAX') {\r\n                this.codeMirror.markText({ line: this.codeMirror.getCursor().line, ch: token.start }, { line: this.codeMirror.getCursor().line, ch: token.end }, { className: 'cm-m-max', atomic: true })\r\n            } else if (this.selectedFunctionalities == 'MIN') {\r\n                this.codeMirror.markText({ line: this.codeMirror.getCursor().line, ch: token.start }, { line: this.codeMirror.getCursor().line, ch: token.end }, { className: 'cm-m-min', atomic: true })\r\n            } else if (this.selectedFunctionalities == 'COUNT') {\r\n                this.codeMirror.markText({ line: this.codeMirror.getCursor().line, ch: token.start }, { line: this.codeMirror.getCursor().line, ch: token.end }, { className: 'cm-m-count', atomic: true })\r\n            } else if (this.selectedFunctionalities == 'SUM') {\r\n                this.codeMirror.markText({ line: this.codeMirror.getCursor().line, ch: token.start }, { line: this.codeMirror.getCursor().line, ch: token.end }, { className: 'cm-m-sum', atomic: true })\r\n            }\r\n            this.functionDialogVisible = false\r\n            this.checkError(this.codeMirror, token)\r\n        },\r\n\r\n        checkError(cm, token) {\r\n            var flag = false\r\n\r\n            if (this.measureInList(token.string, this.measures) == -1) {\r\n                flag = true\r\n            }\r\n            if (flag) cm.markText({ line: cm.getCursor().line, ch: token.start }, { line: cm.getCursor().line, ch: token.end }, { className: 'error_word' })\r\n\r\n            document.querySelectorAll('.CodeMirrorMathematica .CodeMirror-code span.error_word ').forEach((element) => element.setAttribute('target', 'Measure Missing'))\r\n        },\r\n\r\n        registerCodeMirrorHelper() {\r\n            CodeMirror.registerHelper('hint', 'measures', () => {\r\n                var cur = this.codeMirror.getCursor()\r\n                var tok = this.codeMirror.getTokenAt(cur)\r\n                var start = tok.string.trim() == '' ? tok.start + 1 : tok.start\r\n                var end = tok.end\r\n\r\n                var hint = [] as any\r\n\r\n                for (var i = 0; i < this.measures.length; i++) {\r\n                    if (tok.string.trim() == '' || this.measures[i].alias.startsWith(tok.string)) {\r\n                        hint.push(this.measures[i].alias)\r\n                    }\r\n                }\r\n                return { list: hint, from: CodeMirror.Pos(cur.line, start), to: CodeMirror.Pos(cur.line, end) }\r\n            })\r\n        },\r\n\r\n        onKeyUp(event) {\r\n            var cm = this.codeMirror\r\n            this.$emit('touched')\r\n\r\n            if ((event.keyIdentifier != undefined && event.keyIdentifier != 'U+0008' && event.keyIdentifier != 'Left' && event.keyIdentifier != 'Right') || (event.key != undefined && event.key != 'Backspace' && event.key != 'Left' && event.key != 'Right')) {\r\n                var cur = cm.getCursor()\r\n                var token = cm.getTokenAt(cur)\r\n\r\n                if (token.string == '{' || token.string == '}' || token.string == '[' || token.string == ']') {\r\n                    cm.replaceRange('', { line: cm.getCursor().line, ch: token.start }, { line: cm.getCursor().line, ch: token.end + 1 })\r\n                } else if ((token.type == 'operator' || token.type == 'bracket') && token.string != '_') {\r\n                    token.string = ' '\r\n                    cm.replaceRange(token.string, { line: cm.getCursor().line, ch: token.end })\r\n                    cm.replaceRange(' ', { line: cm.getCursor().line, ch: token.start })\r\n                }\r\n            }\r\n        },\r\n\r\n        onMouseDown(event) {\r\n            if ('srcElement' in event) {\r\n                for (var i = 0; i < event.srcElement.classList.length; i++) {\r\n                    this.token = event.srcElement.innerHTML\r\n                    if (event.srcElement.classList[i] == 'cm-m-max') {\r\n                        this.selectedFunctionalities = 'MAX'\r\n                        break\r\n                    } else if (event.srcElement.classList[i] == 'cm-m-min') {\r\n                        this.selectedFunctionalities = 'MIN'\r\n                        break\r\n                    } else if (event.srcElement.classList[i] == 'cm-m-count') {\r\n                        this.selectedFunctionalities = 'COUNT'\r\n                        break\r\n                    } else if (event.srcElement.classList[i] == 'cm-m-sum') {\r\n                        this.selectedFunctionalities = 'SUM'\r\n                        break\r\n                    }\r\n                }\r\n                var className = event.srcElement.className\r\n                if (className.startsWith('cm-keyword') || className.startsWith('cm-variable-2')) {\r\n                    this.dialogHeaderInfo.functionName = event.srcElement.innerHTML\r\n                    this.functionDialogVisible = true\r\n                }\r\n            }\r\n        },\r\n\r\n        keyAssistFunc() {\r\n            CodeMirror.showHint(this.codeMirror, CodeMirror.hint.measures)\r\n        },\r\n\r\n        loadKPI() {\r\n            const interval = setInterval(() => {\r\n                if (!this.$refs.codeMirror) return\r\n                this.codeMirror = (this.$refs.codeMirror as any).cminstance as any\r\n                setTimeout(() => {\r\n                    this.codeMirror.refresh()\r\n                }, 0)\r\n                this.codeMirror.setValue('')\r\n                this.codeMirror.clearHistory()\r\n                this.codeMirror.setValue(this.selectedKpi.definition.formulaSimple)\r\n\r\n                this.changeIndexWithMeasures(this.selectedKpi.definition.functions, this.codeMirror)\r\n                clearInterval(interval)\r\n            }, 200)\r\n        },\r\n        changeIndexWithMeasures(functions, codeMirror) {\r\n            var counter = 0\r\n            for (var i = 0; i < codeMirror.lineCount(); i++) {\r\n                var arrayOfLines = this.removeSpace(codeMirror.getLineTokens(i))\r\n                for (var j = 0; j < arrayOfLines.length; j++) {\r\n                    var token = arrayOfLines[j]\r\n                    if (token.type == 'keyword' || token.type == 'variable-2') {\r\n                        var className = functions[counter]\r\n                        counter++\r\n                        if (className == 'MAX') {\r\n                            codeMirror.markText({ line: i, ch: token.start }, { line: i, ch: token.end }, { className: 'cm-m-max' })\r\n                        } else if (className == 'MIN') {\r\n                            codeMirror.markText({ line: i, ch: token.start }, { line: i, ch: token.end }, { className: 'cm-m-min' })\r\n                        } else if (className == 'SUM') {\r\n                            codeMirror.markText({ line: i, ch: token.start }, { line: i, ch: token.end }, { className: 'cm-m-sum' })\r\n                        } else if (className == 'COUNT') {\r\n                            codeMirror.markText({ line: i, ch: token.start }, { line: i, ch: token.end }, { className: 'cm-m-count' })\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        removeSpace(tokenList) {\r\n            for (var i = 0; i < tokenList.length; i++) {\r\n                if (tokenList[i].type == null) {\r\n                    tokenList.splice(i, 1)\r\n                }\r\n            }\r\n            return tokenList\r\n        },\r\n        reset() {\r\n            this.measuresToJSON = []\r\n            this.functionsTOJSON = []\r\n            this.formula = ''\r\n            this.formulaDecoded = ''\r\n            this.formulaSimple = ''\r\n        },\r\n        measureInList(item, list) {\r\n            for (var i = 0; i < list.length; i++) {\r\n                var object = list[i]\r\n                if (object.alias == item) {\r\n                    return i\r\n                }\r\n            }\r\n\r\n            return -1\r\n        },\r\n\r\n        checkFormulaForErrors() {\r\n            this.reset()\r\n            var countOpenBracket = 0\r\n            var countCloseBracket = 0\r\n            var codeMirror = (this.$refs.codeMirror as any).cminstance as any\r\n            var flag = true\r\n            var numMeasures = 0\r\n\r\n            FORFirst: for (var i = 0; i < codeMirror.lineCount(); i++) {\r\n                var line = i + 1\r\n                var array = this.removeSpace(codeMirror.getLineTokens(i))\r\n                for (var j = 0; j < array.length; j++) {\r\n                    var token = array[j]\r\n                    var arr = codeMirror.findMarksAt({ line: i, ch: token.end })\r\n                    if (token.string.trim() != '') {\r\n                        if (arr.length == 0) {\r\n                            if (j - 1 >= 0) {\r\n                                var token_before = array[j - 1]\r\n                                if (token_before.type == 'keyword' || token_before.type == 'variable-2') {\r\n                                    if (token.type == 'keyword' || token.type == 'number' || token.type == 'variable-2' || token.string == '(') {\r\n                                        this.store.setError({ msg: this.$t('kpi.kpiDefinition.errorformula.missingoperator') + line })\r\n                                        this.$emit('errorInFormula', true)\r\n                                        this.reset()\r\n                                        flag = false\r\n                                        break FORFirst\r\n                                    }\r\n                                }\r\n                                if (token_before.type == 'operator') {\r\n                                    if (token.type == 'operator' || token.string == ')') {\r\n                                        this.store.setError({ msg: this.$t('kpi.kpiDefinition.errorformula.malformed') + line })\r\n                                        this.$emit('errorInFormula', true)\r\n                                        this.reset()\r\n                                        flag = false\r\n                                        break FORFirst\r\n                                    }\r\n                                }\r\n                                if (token_before.type == 'number') {\r\n                                    if (token.type == 'number' || token.string == '(' || token.type == 'keyword' || token.type == 'variable-2') {\r\n                                        this.store.setError({ msg: this.$t('kpi.kpiDefinition.errorformula.malformed') + line })\r\n                                        this.$emit('errorInFormula', true)\r\n                                        this.reset()\r\n                                        flag = false\r\n                                        break FORFirst\r\n                                    }\r\n                                }\r\n                                if (token_before.type == 'bracket') {\r\n                                    if ((token.string == ')' && token_before.string == '(') || (token.string == '(' && token_before.string == ')')) {\r\n                                        this.store.setError({ msg: this.$t('kpi.kpiDefinition.errorformula.malformed') + line })\r\n                                        this.$emit('errorInFormula', true)\r\n                                        flag = false\r\n                                        break FORFirst\r\n                                    }\r\n                                    if (token_before.string == ')') {\r\n                                        if (token.type == 'keyword' || token.type == 'number' || token.type == 'variable-2') {\r\n                                            this.store.setError({ msg: this.$t('kpi.kpiDefinition.errorformula.missingoperator') })\r\n                                            this.$emit('errorInFormula', true)\r\n                                            this.reset()\r\n                                            flag = false\r\n                                            break FORFirst\r\n                                        }\r\n                                    }\r\n                                }\r\n                                if (token_before.string == '(') {\r\n                                    if (token.type == 'operator') {\r\n                                        this.store.setError({ msg: this.$t('kpi.kpiDefinition.errorformula.malformed') + line })\r\n                                        this.$emit('errorInFormula', true)\r\n                                        this.reset()\r\n                                        flag = false\r\n                                        break FORFirst\r\n                                    }\r\n                                }\r\n                            }\r\n                            if (j == array.length - 1) {\r\n                                if (token.type == 'operator') {\r\n                                    this.store.setError({ msg: this.$t('kpi.kpiDefinition.errorformula.malformed') + line })\r\n                                    this.$emit('errorInFormula', true)\r\n                                    this.reset()\r\n                                    flag = false\r\n                                    break FORFirst\r\n                                }\r\n                            }\r\n                            if (token.type == 'operator') {\r\n                                //operator\r\n                                if (j == 0) {\r\n                                    this.store.setError({ msg: this.$t('kpi.kpiDefinition.errorformula.malformed') + line })\r\n                                    this.$emit('errorInFormula', true)\r\n                                    this.reset()\r\n                                    flag = false\r\n                                    break FORFirst\r\n                                } else {\r\n                                    this.formula = this.formula + token.string\r\n                                    this.formulaDecoded = this.formulaDecoded + token.string\r\n                                    this.formulaSimple = this.formulaSimple + ' ' + token.string + ' '\r\n                                }\r\n                            } else if (token.type == 'bracket') {\r\n                                //bracket\r\n                                if (token.string == '(') {\r\n                                    countOpenBracket++\r\n                                } else {\r\n                                    countCloseBracket++\r\n                                }\r\n                                this.formula = this.formula + token.string\r\n                                this.formulaDecoded = this.formulaDecoded + token.string\r\n                                this.formulaSimple = this.formulaSimple + ' ' + token.string + ' '\r\n                            } else if (token.type == 'number') {\r\n                                this.formula = this.formula + token.string\r\n                                this.formulaDecoded = this.formulaDecoded + token.string\r\n                                this.formulaSimple = this.formulaSimple + token.string\r\n                            } else {\r\n                                //error no function associated\r\n                                this.store.setError({ msg: this.$t('kpi.kpiDefinition.errorformula.missingfunctions') })\r\n                                this.$emit('errorInFormula', true)\r\n                                this.reset()\r\n                                flag = false\r\n                                break FORFirst\r\n                            }\r\n                        } else {\r\n                            if (j - 1 >= 0) {\r\n                                token_before = array[j - 1]\r\n                                if (token_before.type == 'number' || token_before.type == 'keyword' || token_before.type == 'variable-2') {\r\n                                    this.store.setError({ msg: this.$t('kpi.kpiDefinition.errorformula.missingoperator') })\r\n                                    this.$emit('errorInFormula', true)\r\n                                    this.reset()\r\n                                    flag = false\r\n                                    break FORFirst\r\n                                }\r\n                            }\r\n                            //parse classes token\r\n                            for (var k = 0; k < arr.length; k++) {\r\n                                var className = arr[k]['className']\r\n                                if (this.measureInList(token.string, this.measures) == -1) {\r\n                                    this.store.setError({ msg: this.$t('kpi.kpiDefinition.errorformula.generic') })\r\n                                    this.$emit('errorInFormula', true)\r\n                                    this.reset()\r\n                                    flag = false\r\n                                }\r\n                                if (className == 'cm-m-max') {\r\n                                    numMeasures++\r\n                                    this.measuresToJSON.push(token.string)\r\n                                    this.functionsTOJSON.push('MAX')\r\n                                    var index = this.measuresToJSON.length - 1\r\n                                    var string = 'M' + index\r\n                                    this.formula = this.formula + string\r\n                                    this.formulaDecoded = this.formulaDecoded + 'MAX(' + token.string + ')'\r\n                                    this.formulaSimple = this.formulaSimple + token.string\r\n                                } else if (className == 'cm-m-min') {\r\n                                    numMeasures++\r\n                                    this.measuresToJSON.push(token.string)\r\n                                    this.functionsTOJSON.push('MIN')\r\n                                    index = this.measuresToJSON.length - 1\r\n                                    string = 'M' + index\r\n                                    this.formula = this.formula + string\r\n                                    this.formulaDecoded = this.formulaDecoded + 'MIN(' + token.string + ')'\r\n                                    this.formulaSimple = this.formulaSimple + token.string\r\n                                } else if (className == 'cm-m-count') {\r\n                                    numMeasures++\r\n                                    this.measuresToJSON.push(token.string)\r\n                                    this.functionsTOJSON.push('COUNT')\r\n                                    index = this.measuresToJSON.length - 1\r\n                                    string = 'M' + index\r\n                                    this.formula = this.formula + string\r\n                                    this.formulaDecoded = this.formulaDecoded + 'COUNT(' + token.string + ')'\r\n                                    this.formulaSimple = this.formulaSimple + token.string\r\n                                } else if (className == 'cm-m-sum') {\r\n                                    numMeasures++\r\n                                    this.measuresToJSON.push(token.string)\r\n                                    this.functionsTOJSON.push('SUM')\r\n                                    index = this.measuresToJSON.length - 1\r\n                                    string = 'M' + index\r\n                                    this.formula = this.formula + string\r\n                                    this.formulaDecoded = this.formulaDecoded + 'SUM(' + token.string + ')'\r\n                                    this.formulaSimple = this.formulaSimple + token.string\r\n                                } else if (className == 'error_word') {\r\n                                    this.store.setError({ msg: this.$t('kpi.kpiDefinition.errorformula.generic') })\r\n                                    this.$emit('errorInFormula', true)\r\n                                    this.reset()\r\n                                    flag = false\r\n                                    break FORFirst\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (flag) this.$emit('errorInFormula', false)\r\n            if (countOpenBracket != countCloseBracket && flag) {\r\n                this.store.setError({ msg: this.$t('kpi.kpiDefinition.errorformula.missingbracket') })\r\n                this.$emit('errorInFormula', true)\r\n                this.reset()\r\n            } else {\r\n                if (numMeasures == 0 && flag) {\r\n                    this.store.setError({ msg: this.$t('kpi.kpiDefinition.errorformula.missingmeasure') })\r\n                    this.$emit('errorInFormula', true)\r\n                    this.reset()\r\n                }\r\n                if (this.formula != '' && flag) {\r\n                    this.selectedKpi.definition['formula'] = this.formula\r\n                    this.selectedKpi.definition['measures'] = this.measuresToJSON\r\n                    this.selectedKpi.definition['functions'] = this.functionsTOJSON\r\n                    this.selectedKpi.definition['formulaDecoded'] = this.formulaDecoded\r\n                    this.selectedKpi.definition['formulaSimple'] = this.formulaSimple\r\n                    this.$emit('updateFormulaToSave', this.formula)\r\n                    this.loadKPI()\r\n                    return this.selectedKpi.definition\r\n                }\r\n            }\r\n            return {}\r\n        }\r\n    }\r\n})\r\n</script>\r\n","<template>\r\n    <Card :style=\"tabViewDescriptor.style.cardinalityCard\">\r\n        <template #content>\r\n            <div class=\"CodeMirrorMathematica\">\r\n                <div class=\"CodeMirror-code formula\"></div>\r\n            </div>\r\n        </template>\r\n    </Card>\r\n\r\n    <Card v-if=\"!loading\" :style=\"tabViewDescriptor.style.card\">\r\n        <template #content>\r\n            <DataTable :value=\"attributesList\" responsiveLayout=\"scroll\" class=\"cardinalityTable\">\r\n                <Column>\r\n                    <template #body=\"slotProps\">\r\n                        {{ slotProps.data }}\r\n                    </template>\r\n                </Column>\r\n                <Column v-for=\"measure of kpi.cardinality.measureList\" :key=\"measure\">\r\n                    <template #header>\r\n                        <div :style=\"tabViewDescriptor.style.cardinalityColumn\">{{ measure.measureName }}</div>\r\n                    </template>\r\n                    <template #body=\"slotProps\">\r\n                        <div class=\"measureCell\" v-if=\"measureHaveAttribute(slotProps.data, slotProps.column.key)\" @click=\"toggleCell(slotProps.data, slotProps.column.key)\">\r\n                            <i v-if=\"!isEnabled(slotProps.data, slotProps.column.key)\" class=\"fa fa-ban invalidCell\"></i>\r\n                            <i v-if=\"measure.attributes[slotProps.data]\" class=\"fa fa-check selectedCell\"></i>\r\n                            <i v-if=\"measure.attributes[slotProps.data] && !canDisable(slotProps.data, slotProps.column.key)\" class=\"fa fa-lock selectedCell\"></i>\r\n                            <i v-if=\"!measure.attributes[slotProps.data] && isEnabled(slotProps.data, slotProps.column.key)\" class=\"fa fa-check selectableCell\"></i>\r\n                        </div>\r\n                    </template>\r\n                </Column>\r\n            </DataTable>\r\n        </template>\r\n    </Card>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport tabViewDescriptor from '../KpiDefinitionDetailDescriptor.json'\r\nimport { AxiosResponse } from 'axios'\r\nimport Card from 'primevue/card'\r\nimport DataTable from 'primevue/datatable'\r\nimport Column from 'primevue/column'\r\n\r\nexport default defineComponent({\r\n    components: { Card, DataTable, Column },\r\n    props: {\r\n        selectedKpi: {\r\n            type: Object as any\r\n        },\r\n        updateMeasureList: Boolean,\r\n        loading: Boolean\r\n    },\r\n    computed: {},\r\n    emits: ['touched', 'measureListUpdated'],\r\n    data() {\r\n        return {\r\n            tabViewDescriptor,\r\n            kpi: {} as any,\r\n            attributesList: [] as any,\r\n            currentCell: {} as any,\r\n            formulaChanged: false,\r\n            indexOfMeasure: -1,\r\n            oldFormula: ''\r\n        }\r\n    },\r\n    watch: {\r\n        selectedKpi() {\r\n            this.kpi = this.selectedKpi as any\r\n            this.oldFormula = this.kpi.definition.formulaSimple\r\n        },\r\n        updateMeasureList() {\r\n            if (this.updateMeasureList === true) {\r\n                this.createFormulaToShow()\r\n                this.getAllMeasure()\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        createFormulaToShow() {\r\n            if (this.kpi && this.kpi.definition && this.kpi.definition.formulaSimple) {\r\n                if (this.oldFormula != this.kpi.definition.formulaSimple) {\r\n                    this.formulaChanged = true\r\n                    this.oldFormula = this.kpi.definition.formulaSimple\r\n                }\r\n\r\n                var string = this.kpi.definition.formulaSimple.split(' ')\r\n                var count = 0\r\n                let formuloaHTML = ''\r\n                for (let i = 0; i < string.length; i++) {\r\n                    let span = ''\r\n                    if (string[i].trim() == '+' || string[i].trim() == '-' || string[i].trim() == '/' || string[i].trim() == '*' || string[i].trim() == '(' || string[i].trim() == ')' || string[i].trim() == '' || !isNaN(string[i])) {\r\n                        span = \"<span class='showFormula'>\" + ' ' + string[i] + ' ' + '</span>'\r\n                    } else {\r\n                        span = \"<span ng-class='{classBold:currentCell.row==\" + i + \"}' class='showFormula \" + this.kpi.definition.functions[count] + \"' id=M\" + count + '>' + ' ' + string[i] + ' ' + '</span>'\r\n                        count++\r\n                    }\r\n                    formuloaHTML += span\r\n                }\r\n                const formulas = document.getElementsByClassName('formula')\r\n                if (formulas.length > 0) {\r\n                    const arrFormulas = [...formulas]\r\n                    arrFormulas.forEach((element) => (element.innerHTML = formuloaHTML))\r\n                }\r\n            }\r\n        },\r\n\r\n        getAllMeasure() {\r\n            this.attributesList = []\r\n            if (this.kpi.cardinality != undefined && this.kpi.cardinality != null) {\r\n                if (typeof this.kpi.cardinality !== 'object') {\r\n                    this.kpi.cardinality = JSON.parse(this.kpi.cardinality)\r\n                }\r\n\r\n                for (var i = 0; i < this.kpi.cardinality.measureList.length; i++) {\r\n                    for (var tmpAttr in this.kpi.cardinality.measureList[i].attributes) {\r\n                        if (this.attributesList.indexOf(tmpAttr) == -1) {\r\n                            this.attributesList.push(tmpAttr)\r\n                        }\r\n                    }\r\n                }\r\n                this.retryNewAttributes()\r\n            }\r\n        },\r\n\r\n        async retryNewAttributes() {\r\n            var definition = {}\r\n            for (var i = 0; i < this.kpi.definition.measures.length; i++) {\r\n                var meas = this.kpi.definition.measures[i]\r\n                definition[i] = meas\r\n            }\r\n\r\n            await this.$http.post(import.meta.env.VITE_RESTFUL_SERVICES_PATH + '1.0/kpi/buildCardinalityMatrix', definition).then((response: AxiosResponse<any>) => {\r\n                if (this.formulaChanged) {\r\n                    this.kpi.cardinality.measureList = [...response.data]\r\n                    this.formulaChanged = false\r\n                    this.attributesList = []\r\n                    for (var i = 0; i < response.data.length; i++) {\r\n                        for (let key of Object.keys(response.data[i]['attributes'])) {\r\n                            if (this.attributesList.indexOf(key) == -1) {\r\n                                this.attributesList.push(key)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                this.$emit('measureListUpdated')\r\n            })\r\n        },\r\n\r\n        isEnabled(attr, measure) {\r\n            var checkMs = this.checkMeasure(measure)\r\n            return checkMs.status || this.isContainedByUpperSet(attr, measure, checkMs.itemNumber)\r\n        },\r\n\r\n        canDisable(attr, measure) {\r\n            return !this.isContainedByUnderSet(attr, measure)\r\n        },\r\n\r\n        measureHaveAttribute(attr, measure) {\r\n            // eslint-disable-next-line no-prototype-builtins\r\n            return measure.attributes.hasOwnProperty(attr)\r\n        },\r\n\r\n        checkMeasure(measure) {\r\n            var tot = 0\r\n            for (var attr in measure.attributes) {\r\n                if (measure.attributes[attr]) {\r\n                    tot++\r\n                }\r\n            }\r\n            var resp = {\r\n                status: Object.keys(this.kpi.cardinality.checkedAttribute.attributeUnion).length == tot,\r\n                itemNumber: tot\r\n            }\r\n            return resp\r\n        },\r\n\r\n        isContainedByUpperSet(attr, measure, measureItemNumber) {\r\n            var upperSetAttributeNumber = 99999999\r\n            var upperSet\r\n            for (var i = 0; i < this.kpi.cardinality.measureList.length; i++) {\r\n                var tmpMeas = this.kpi.cardinality.measureList[i]\r\n                if (tmpMeas == measure) {\r\n                    continue\r\n                }\r\n                var tmpTot = 0\r\n                for (var tmpAttr in tmpMeas.attributes) {\r\n                    if (tmpMeas.attributes[tmpAttr]) {\r\n                        tmpTot++\r\n                    }\r\n                }\r\n                if (tmpTot - 1 == measureItemNumber) {\r\n                    upperSet = tmpMeas\r\n                    break\r\n                }\r\n                if (tmpTot < upperSetAttributeNumber && tmpTot > measureItemNumber) {\r\n                    upperSetAttributeNumber = tmpTot\r\n                    upperSet = tmpMeas\r\n                }\r\n            }\r\n            if (upperSet == undefined || upperSet.attributes[attr]) {\r\n                return true\r\n            } else {\r\n                return false\r\n            }\r\n        },\r\n\r\n        isContainedByUnderSet(attr, measure) {\r\n            var measureItemNumber = 0\r\n            for (var tmpattr in measure.attributes) {\r\n                if (measure.attributes[tmpattr]) {\r\n                    measureItemNumber++\r\n                }\r\n            }\r\n\r\n            var underSetAttributeNumber = 0\r\n            var underSet\r\n            for (var i = 0; i < this.kpi.cardinality.measureList.length; i++) {\r\n                var tmpMeas = this.kpi.cardinality.measureList[i]\r\n                if (tmpMeas == measure) {\r\n                    continue\r\n                }\r\n                var tmpTot = 0\r\n                for (var tmpAttr in tmpMeas.attributes) {\r\n                    if (tmpMeas.attributes[tmpAttr]) {\r\n                        tmpTot++\r\n                    }\r\n                }\r\n                if (tmpTot + 1 == measureItemNumber) {\r\n                    underSet = tmpMeas\r\n                    break\r\n                }\r\n                if (tmpTot > underSetAttributeNumber && tmpTot < measureItemNumber) {\r\n                    underSetAttributeNumber = tmpTot\r\n                    underSet = tmpMeas\r\n                }\r\n            }\r\n\r\n            if (underSet == undefined || !underSet.attributes[attr]) {\r\n                return false\r\n            } else {\r\n                return true\r\n            }\r\n        },\r\n\r\n        getMaxAttributeNumber(data) {\r\n            var max = 0\r\n            for (var key in data) {\r\n                if (data[key] >= max) {\r\n                    max = data[key]\r\n                }\r\n            }\r\n            return max\r\n        },\r\n\r\n        blinkMeasure(event, attr, index) {\r\n            //blink measure in formula\r\n            this.currentCell.row = attr\r\n            this.currentCell.column = index\r\n            this.indexOfMeasure = index\r\n            var string = 'M' + this.indexOfMeasure\r\n            var test = document.getElementById(string) as any\r\n            test.css('background', '#eceff1')\r\n        },\r\n\r\n        removeblinkMeasure() {\r\n            var string = 'M' + this.indexOfMeasure\r\n            var test = document.getElementById(string) as any\r\n            test.css('background', 'transparent')\r\n        },\r\n\r\n        toggleCell(attr, measure) {\r\n            if (!measure.attributes[attr] && !this.isEnabled(attr, measure)) {\r\n                return\r\n            }\r\n            if (measure.attributes[attr] && !this.canDisable(attr, measure)) {\r\n                return\r\n            }\r\n\r\n            //toggle the value\r\n            measure.attributes[attr] = !measure.attributes[attr]\r\n\r\n            if (measure.attributes[attr]) {\r\n                //update union\r\n                if (this.kpi.cardinality.checkedAttribute.attributeUnion[attr]) {\r\n                    this.kpi.cardinality.checkedAttribute.attributeUnion[attr]++\r\n                } else {\r\n                    this.kpi.cardinality.checkedAttribute.attributeUnion[attr] = 1\r\n                }\r\n            } else {\r\n                if (this.kpi.cardinality.checkedAttribute.attributeUnion[attr] == 1) {\r\n                    delete this.kpi.cardinality.checkedAttribute.attributeUnion[attr]\r\n                } else {\r\n                    this.kpi.cardinality.checkedAttribute.attributeUnion[attr]--\r\n                }\r\n            }\r\n            //update intersection\r\n            this.kpi.cardinality.checkedAttribute.attributeIntersection = {}\r\n            var maxAttrNum = this.getMaxAttributeNumber(this.kpi.cardinality.checkedAttribute.attributeUnion)\r\n            for (var key in this.kpi.cardinality.checkedAttribute.attributeUnion) {\r\n                if (this.kpi.cardinality.checkedAttribute.attributeUnion[key] == maxAttrNum) {\r\n                    this.kpi.cardinality.checkedAttribute.attributeIntersection[key] = true\r\n                }\r\n            }\r\n        }\r\n    }\r\n})\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.cardinalityTable .measureCell {\r\n    text-align: center;\r\n    height: 30px;\r\n}\r\n\r\n.cardinalityTable .invalidCell {\r\n    color: lightgray;\r\n    line-height: 30px;\r\n}\r\n\r\n.cardinalityTable .selectedCell {\r\n    color: green;\r\n    line-height: 30px;\r\n}\r\n\r\n.cardinalityTable .selectableCell {\r\n    color: lightgray;\r\n    line-height: 30px;\r\n}\r\n\r\n.cardinalityTable {\r\n    width: 100%;\r\n    table-layout: fixed;\r\n    border-collapse: collapse;\r\n}\r\n\r\n.cardinalityTable .attributeRow {\r\n    border-bottom: 1px solid #eceff1;\r\n}\r\n\r\n.disabledCell {\r\n    background-color: gray;\r\n}\r\n</style>\r\n","<template>\r\n    <Card v-if=\"!loading\" :style=\"tabViewDescriptor.style.card\">\r\n        <template #content>\r\n            <Message v-if=\"kpi.threshold.usedByKpi\" severity=\"info\" :closable=\"false\" :style=\"tresholdTabDescriptor.styles.message\">\r\n                {{ $t('kpi.kpiDefinition.thresholdReused') }}\r\n                <Button :label=\"$t('kpi.kpiDefinition.clone')\" @click=\"cloneExistingThreshold\" />\r\n            </Message>\r\n\r\n            <form class=\"p-fluid p-formgrid p-grid\">\r\n                <div class=\"p-field p-col-12 p-md-4\">\r\n                    <span class=\"p-float-label\">\r\n                        <InputText\r\n                            id=\"name\"\r\n                            class=\"kn-material-input\"\r\n                            type=\"text\"\r\n                            maxLength=\"100\"\r\n                            v-model.trim=\"v$.threshold.name.$model\"\r\n                            :class=\"{ 'p-invalid': v$.threshold.name.$invalid && v$.threshold.name.$dirty }\"\r\n                            @blur=\"v$.threshold.name.$touch()\"\r\n                            @change=\"$emit('touched')\"\r\n                            data-test=\"name-input\"\r\n                        />\r\n                        <label for=\"name\" class=\"kn-material-input-label\"> {{ $t('common.name') }} * </label>\r\n                    </span>\r\n                    <KnValidationMessages class=\"p-mt-1\" :vComp=\"v$.threshold.name\" :additionalTranslateParams=\"{ fieldName: $t('common.name') }\" />\r\n                </div>\r\n\r\n                <div class=\"p-field p-col-12 p-md-4\">\r\n                    <span class=\"p-float-label\">\r\n                        <InputText\r\n                            id=\"description\"\r\n                            class=\"kn-material-input\"\r\n                            type=\"text\"\r\n                            maxLength=\"500\"\r\n                            v-model.trim=\"v$.threshold.description.$model\"\r\n                            :class=\"{ 'p-invalid': v$.threshold.description.$invalid && v$.threshold.description.$dirty }\"\r\n                            @blur=\"v$.threshold.description.$touch()\"\r\n                            @change=\"$emit('touched')\"\r\n                            data-test=\"description-input\"\r\n                        />\r\n                        <label for=\"description\" class=\"kn-material-input-label\">{{ $t('common.description') }}</label>\r\n                    </span>\r\n                    <KnValidationMessages class=\"p-mt-1\" :vComp=\"v$.threshold.description\" :additionalTranslateParams=\"{ fieldName: $t('common.description') }\" />\r\n                </div>\r\n\r\n                <div class=\"p-field p-col-12 p-md-4\">\r\n                    <span class=\"p-float-label\">\r\n                        <Dropdown id=\"type\" class=\"kn-material-input\" v-model=\"threshold.typeId\" :options=\"thresholdTypeList\" optionLabel=\"translatedValueName\" optionValue=\"valueId\" @change=\"setTypeCd\">\r\n                            <template #option=\"slotProps\">\r\n                                <span>{{ slotProps.option.translatedValueName }}</span>\r\n                            </template>\r\n                        </Dropdown>\r\n                        <label for=\"type\" class=\"kn-material-input-label\">{{ $t('common.type') }}</label>\r\n                    </span>\r\n                </div>\r\n            </form>\r\n            <ProgressBar mode=\"indeterminate\" class=\"kn-progress-bar\" v-if=\"loading\" data-test=\"progress-bar\" />\r\n            <DataTable\r\n                v-if=\"!loading\"\r\n                :value=\"kpi.threshold.thresholdValues\"\r\n                :loading=\"loading\"\r\n                editMode=\"cell\"\r\n                class=\"p-datatable-sm kn-table\"\r\n                dataKey=\"id\"\r\n                responsiveLayout=\"stack\"\r\n                breakpoint=\"960px\"\r\n                @rowReorder=\"setPositionOnReorder\"\r\n                data-test=\"messages-table\"\r\n                @cell-edit-complete=\"onCellEditComplete\"\r\n            >\r\n                <Column :rowReorder=\"true\" headerStyle=\"width: 3rem\" :reorderableColumn=\"false\" />\r\n\r\n                <Column field=\"label\" :header=\"$t('common.label')\">\r\n                    <template #editor=\"slotProps\">\r\n                        <InputText :style=\"tresholdTabDescriptor.styles.input\" v-model=\"slotProps.data['label']\" @change=\"$emit('touched')\" />\r\n                    </template>\r\n                </Column>\r\n\r\n                <Column field=\"minValue\" :header=\"$t('kpi.kpiDefinition.min')\">\r\n                    <template #editor=\"slotProps\">\r\n                        <InputText :style=\"tresholdTabDescriptor.styles.input\" v-model=\"slotProps.data['minValue']\" type=\"number\" @change=\"$emit('touched')\" />\r\n                    </template>\r\n                </Column>\r\n\r\n                <Column field=\"includeMin\" :header=\"$t('kpi.kpiDefinition.minInclude')\">\r\n                    <template #body=\"slotProps\">\r\n                        <Checkbox v-model=\"slotProps.data['includeMin']\" :binary=\"true\" @change=\"$emit('touched')\" />\r\n                    </template>\r\n                </Column>\r\n\r\n                <Column field=\"maxValue\" :header=\"$t('kpi.kpiDefinition.max')\">\r\n                    <template #editor=\"slotProps\">\r\n                        <InputText :style=\"tresholdTabDescriptor.styles.input\" v-model=\"slotProps.data['maxValue']\" type=\"number\" @change=\"$emit('touched')\" />\r\n                    </template>\r\n                </Column>\r\n\r\n                <Column field=\"includeMax\" :header=\"$t('kpi.kpiDefinition.maxInclude')\">\r\n                    <template #body=\"slotProps\">\r\n                        <Checkbox v-model=\"slotProps.data['includeMax']\" :binary=\"true\" @change=\"$emit('touched')\" />\r\n                    </template>\r\n                </Column>\r\n\r\n                <Column field=\"severityId\" header=\"Severity\">\r\n                    <template #editor=\"slotProps\">\r\n                        <Dropdown v-model=\"slotProps.data['severityId']\" :style=\"tresholdTabDescriptor.styles.input\" :options=\"severityOptions\" optionLabel=\"valueCd\" optionValue=\"valueId\" @change=\"setSeverityCd($event, slotProps.data)\">\r\n                            <template #option=\"slotProps\">\r\n                                <span>{{ slotProps.option.valueCd }}</span>\r\n                            </template>\r\n                        </Dropdown>\r\n                    </template>\r\n                    <template #body=\"slotProps\">{{ slotProps.data['severityCd'] }} </template>\r\n                </Column>\r\n\r\n                <Column field=\"color\" :header=\"$t('kpi.kpiDefinition.color')\">\r\n                    <template #body=\"slotProps\">\r\n                        <ColorPicker v-model=\"slotProps.data['color']\" format=\"hex\" @change=\"$emit('touched')\" />\r\n                        <InputText class=\"kn-material-input\" v-tooltip.top=\"slotProps.data['color']\" :style=\"tresholdTabDescriptor.styles.colorInput\" v-model=\"slotProps.data['color']\" @change=\"$emit('touched')\" />\r\n                    </template>\r\n                </Column>\r\n\r\n                <Column header style=\"text-align: right\">\r\n                    <template #header>\r\n                        <Button :label=\"$t('kpi.kpiDefinition.thresholdsListTitle')\" class=\"p-button-link\" @click=\"thresholdListVisible = true\" />\r\n                    </template>\r\n                    <template #body=\"slotProps\">\r\n                        <Button icon=\"pi pi-trash\" class=\"p-button-link\" @click=\"deleteThresholdItemConfirm(slotProps.index)\" />\r\n                    </template>\r\n                </Column>\r\n\r\n                <template #footer>\r\n                    <Button :label=\"$t('kpi.kpiDefinition.addNewThreshold')\" class=\"p-button-link\" :style=\"tresholdTabDescriptor.styles.table.footer\" @click=\"addNewThresholdItem\" />\r\n                </template>\r\n            </DataTable>\r\n        </template>\r\n    </Card>\r\n\r\n    <Sidebar class=\"mySidebar\" v-model:visible=\"thresholdListVisible\" :showCloseIcon=\"false\" position=\"right\">\r\n        <Toolbar class=\"kn-toolbar kn-toolbar--secondary\">\r\n            <template #start>{{ $t('kpi.kpiDefinition.thresholdsListTitle') }}</template>\r\n        </Toolbar>\r\n        <Listbox class=\"kn-list--column\" :options=\"thresholdsList\" :filter=\"true\" :filterPlaceholder=\"$t('common.search')\" filterMatchMode=\"contains\" :filterFields=\"tabViewDescriptor.filterFields\" :emptyFilterMessage=\"$t('common.info.noDataFound')\" @change=\"confirmToLoadThreshold\">\r\n            <template #empty>{{ $t('common.info.noDataFound') }}</template>\r\n            <template #option=\"slotProps\">\r\n                <div class=\"kn-list-item\" data-test=\"list-item\">\r\n                    <div class=\"kn-list-item-text\">\r\n                        <span>{{ slotProps.option.name }}</span>\r\n                        <span class=\"kn-list-item-text-secondary\">{{ slotProps.option.description }}</span>\r\n                    </div>\r\n                </div>\r\n            </template>\r\n        </Listbox>\r\n    </Sidebar>\r\n\r\n    <Dialog class=\"kn-dialog--toolbar--primary importExportDialog\" v-bind:visible=\"overrideDialogVisible\" footer=\"footer\" :header=\"$t('kpi.kpiDefinition.reusedTitle')\" :closable=\"false\" modal>\r\n        <p class=\"p-mt-4\">{{ $t('kpi.kpiDefinition.thresholdReused') }}</p>\r\n        <template #footer>\r\n            <div class=\"p-d-flex p-jc-center\">\r\n                <Button class=\"kn-button kn-button--primary\" :label=\"$t('common.cancel')\" @click=\"overrideDialogVisible = false\" />\r\n                <Button class=\"kn-button kn-button--primary\" :label=\"$t('kpi.kpiDefinition.useIt')\" @click=\"cloneSelectedThreshold('use')\" />\r\n                <Button class=\"kn-button kn-button--primary\" :label=\"$t('kpi.kpiDefinition.clone')\" @click=\"cloneSelectedThreshold('clone')\" />\r\n            </div>\r\n        </template>\r\n    </Dialog>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { AxiosResponse } from 'axios'\r\nimport { defineComponent } from 'vue'\r\nimport { createValidations } from '@/helpers/commons/validationHelper'\r\nimport useValidate from '@vuelidate/core'\r\nimport tabViewDescriptor from '../KpiDefinitionDetailDescriptor.json'\r\nimport tresholdTabDescriptor from './KpiDefinitionThresholdTabDescriptor.json'\r\nimport KnValidationMessages from '@/components/UI/KnValidatonMessages.vue'\r\nimport Card from 'primevue/card'\r\nimport Sidebar from 'primevue/sidebar'\r\nimport Listbox from 'primevue/listbox'\r\nimport Message from 'primevue/message'\r\nimport DataTable from 'primevue/datatable'\r\nimport Column from 'primevue/column'\r\nimport Checkbox from 'primevue/checkbox'\r\nimport Dropdown from 'primevue/dropdown'\r\nimport ColorPicker from 'primevue/colorpicker'\r\nimport Dialog from 'primevue/dialog'\r\n\r\nexport default defineComponent({\r\n    components: { KnValidationMessages, Card, Sidebar, Listbox, Message, DataTable, Column, Checkbox, Dropdown, ColorPicker, Dialog },\r\n    props: { selectedKpi: { type: Object as any }, thresholdsList: Array, severityOptions: { type: Array as any, required: false }, thresholdTypeList: { type: Array as any, required: false }, loading: Boolean },\r\n    emits: ['touched'],\r\n\r\n    data() {\r\n        return {\r\n            v$: useValidate() as any,\r\n            tabViewDescriptor,\r\n            tresholdTabDescriptor,\r\n            kpi: {} as any,\r\n            threshold: {} as any,\r\n            thresholdToClone: {} as any,\r\n            thresholdListVisible: false,\r\n            overrideDialogVisible: false\r\n        }\r\n    },\r\n\r\n    watch: {\r\n        selectedKpi() {\r\n            this.kpi = this.selectedKpi as any\r\n            this.threshold = this.kpi.threshold\r\n        }\r\n    },\r\n\r\n    validations() {\r\n        return {\r\n            threshold: createValidations('threshold', tresholdTabDescriptor.validations.kpi)\r\n        }\r\n    },\r\n\r\n    methods: {\r\n        setPositionOnReorder(event) {\r\n            this.kpi.threshold.thresholdValues = event.value\r\n            this.kpi.threshold.thresholdValues.forEach((_, index) => {\r\n                this.kpi.threshold.thresholdValues[index].position = index + 1\r\n            })\r\n        },\r\n\r\n        setSeverityCd(event, data) {\r\n            const index = this.severityOptions.findIndex((SO: any) => SO.valueId === event.value)\r\n            data.severityCd = index >= 0 ? this.severityOptions[index].valueCd : ''\r\n        },\r\n\r\n        setTypeCd(event) {\r\n            const index = this.thresholdTypeList.findIndex((SO: any) => SO.valueId === event.value)\r\n            this.threshold.type = index >= 0 ? this.thresholdTypeList[index].translatedValueName : ''\r\n        },\r\n\r\n        addNewThresholdItem() {\r\n            const newThreshold = { ...tresholdTabDescriptor.newThreshold }\r\n            newThreshold.position = this.kpi.threshold.thresholdValues.length + 1\r\n            this.kpi.threshold.thresholdValues.push(newThreshold)\r\n        },\r\n\r\n        deleteThresholdItemConfirm(index) {\r\n            this.$confirm.require({\r\n                message: this.$t('common.toast.deleteMessage'),\r\n                header: this.$t('common.toast.deleteTitle'),\r\n                icon: 'pi pi-exclamation-triangle',\r\n                accept: () => this.deleteThresholdItem(index)\r\n            })\r\n        },\r\n        deleteThresholdItem(index) {\r\n            this.kpi.threshold.thresholdValues.splice(index, 1)\r\n        },\r\n\r\n        confirmToLoadThreshold(event) {\r\n            if (this.kpi.threshold.thresholdValues.length == 0 || this.kpi.threshold === tresholdTabDescriptor.newThreshold) {\r\n                this.loadSelectedThreshold(event)\r\n            } else {\r\n                this.$confirm.require({\r\n                    message: this.$t('kpi.kpiDefinition.confirmOverride'),\r\n                    header: this.$t('kpi.kpiDefinition.thresholdAlreadyPresent'),\r\n                    icon: 'pi pi-exclamation-triangle',\r\n                    accept: () => this.loadSelectedThreshold(event)\r\n                })\r\n            }\r\n        },\r\n        loadSelectedThreshold(event) {\r\n            this.thresholdToClone = []\r\n            let url = ''\r\n            this.kpi.id ? (url = import.meta.env.VITE_RESTFUL_SERVICES_PATH + `1.0/kpi/${event.value.id}/loadThreshold?kpiId=${this.selectedKpi.id}`) : (url = import.meta.env.VITE_RESTFUL_SERVICES_PATH + `1.0/kpi/${event.value.id}/loadThreshold`)\r\n\r\n            return this.$http.get(url).then((response: AxiosResponse<any>) => {\r\n                this.thresholdToClone = { ...response.data }\r\n                this.thresholdToClone.usedByKpi ? (this.overrideDialogVisible = true) : this.cloneSelectedThreshold()\r\n            })\r\n        },\r\n        cloneSelectedThreshold(operation?) {\r\n            if (this.thresholdToClone.usedByKpi) {\r\n                if (operation === 'clone') {\r\n                    this.thresholdToClone.name += ' (' + this.$t('kpi.kpiDefinition.clone') + ')'\r\n                    this.thresholdToClone.id = undefined\r\n                    this.thresholdToClone.usedByKpi = false\r\n                } else if (operation === 'use') {\r\n                    this.thresholdToClone.usedByKpi = true\r\n                }\r\n            }\r\n            this.kpi.threshold = this.thresholdToClone\r\n            this.threshold = this.kpi.threshold\r\n            this.thresholdListVisible = false\r\n            this.overrideDialogVisible = false\r\n        },\r\n        cloneExistingThreshold() {\r\n            this.kpi.threshold.name += ' (' + this.$t('kpi.kpiDefinition.clone') + ')'\r\n            this.kpi.threshold.id = undefined\r\n            this.kpi.threshold.usedByKpi = false\r\n        },\r\n\r\n        onCellEditComplete(event) {\r\n            this.kpi.threshold.thresholdValues[event.index] = event.newData\r\n        }\r\n    }\r\n})\r\n</script>\r\n<style lang=\"scss\">\r\n// vdeep not working correctly,need to find a working solution for the thresholds list padding...\r\n.mySidebar.p-sidebar .p-sidebar-header,\r\n.mySidebar.p-sidebar .p-sidebar-content {\r\n    padding: 0 !important;\r\n}\r\n.mySidebar .p-listbox {\r\n    height: calc(100% - 2.5rem);\r\n}\r\n</style>\r\n","<template>\r\n    <Toolbar class=\"kn-toolbar kn-toolbar--primary p-m-0\">\r\n        <template #start>{{ selectedKpi.name }}</template>\r\n        <template #end>\r\n            <Button :label=\"$t('kpi.kpiDefinition.aliasToolbarTitle')\" :style=\"tabViewDescriptor.style.aliasButton\" class=\"p-button-text p-button-rounded p-button-plain\" @click=\"toggleAlias\" />\r\n            <Button icon=\"pi pi-save\" class=\"p-button-text p-button-rounded p-button-plain\" @click=\"showSaveDialog = true\" :disabled=\"buttonDisabled\" />\r\n            <Button icon=\"pi pi-times\" class=\"p-button-text p-button-rounded p-button-plain\" @click=\"closeTemplateConfirm\" />\r\n        </template>\r\n    </Toolbar>\r\n\r\n    <ProgressBar mode=\"indeterminate\" class=\"kn-progress-bar\" v-if=\"loading\" />\r\n\r\n    <div class=\"p-d-flex p-flex-row\">\r\n        <div class=\"card kn-flex\">\r\n            <TabView v-model:activeIndex=\"activeTab\" class=\"tabview-custom\" data-test=\"tab-view\">\r\n                <TabPanel>\r\n                    <template #header>\r\n                        <span>{{ $t('kpi.kpiDefinition.formulaTitle') }}</span>\r\n                    </template>\r\n\r\n                    <KpiDefinitionFormulaTab\r\n                        :propKpi=\"selectedKpi\"\r\n                        :measures=\"measureList\"\r\n                        :loading=\"loading\"\r\n                        :aliasToInput=\"aliasToInput\"\r\n                        :checkFormula=\"checkFormula\"\r\n                        :activeTab=\"activeTab\"\r\n                        :reloadKpi=\"reloadKpi\"\r\n                        :showGuide=\"showGuide\"\r\n                        @updateFormulaToSave=\"onUpdateFormulaToSave\"\r\n                        @errorInFormula=\"ifErrorInFormula\"\r\n                        @touched=\"setTouched\"\r\n                        @onGuideClose=\"$emit('onGuideClose')\"\r\n                    />\r\n                </TabPanel>\r\n\r\n                <TabPanel>\r\n                    <template #header>\r\n                        <span>{{ $t('kpi.kpiDefinition.cardinalityTtitle') }}</span>\r\n                    </template>\r\n\r\n                    <KpiDefinitionCardinalityTab :selectedKpi=\"selectedKpi\" :loading=\"loading\" :updateMeasureList=\"updateMeasureList\" @measureListUpdated=\"updateMeasureList = false\" />\r\n                </TabPanel>\r\n\r\n                <TabPanel>\r\n                    <template #header>\r\n                        <span>{{ $t('kpi.kpiDefinition.tresholdTitle') }}</span>\r\n                    </template>\r\n\r\n                    <KpiDefinitionThresholdTab :selectedKpi=\"selectedKpi\" :thresholdsList=\"tresholdList\" :severityOptions=\"severityOptions\" :thresholdTypeList=\"thresholdTypeList\" :loading=\"loading\" @touched=\"setTouched\" />\r\n                </TabPanel>\r\n            </TabView>\r\n        </div>\r\n\r\n        <div v-if=\"isAliasVisible\">\r\n            <Toolbar class=\"kn-toolbar kn-toolbar--secondary\" :style=\"tabViewDescriptor.style.aliasList\">\r\n                <template #start>{{ $t('kpi.kpiDefinition.aliasToolbarTitle') }}</template>\r\n            </Toolbar>\r\n            <Listbox\r\n                class=\"kn-list--column\"\r\n                :options=\"measureList\"\r\n                :filter=\"true\"\r\n                :filterPlaceholder=\"$t('common.search')\"\r\n                optionLabel=\"alias\"\r\n                filterMatchMode=\"contains\"\r\n                :filterFields=\"tabViewDescriptor.filterFields\"\r\n                :emptyFilterMessage=\"$t('common.info.noDataFound')\"\r\n                @change=\"insertAlias($event.value.alias)\"\r\n                data-test=\"kpi-list\"\r\n            >\r\n                <template #empty>{{ $t('common.info.noDataFound') }}</template>\r\n                <template #option=\"slotProps\">\r\n                    <div class=\"kn-list-item\" data-test=\"list-item\">\r\n                        <div class=\"kn-list-item-text\">\r\n                            <span>{{ slotProps.option.alias }}</span>\r\n                        </div>\r\n                    </div>\r\n                </template>\r\n            </Listbox>\r\n        </div>\r\n\r\n        <Dialog id=\"saveDialog\" class=\"kn-dialog--toolbar--primary importExportDialog\" :style=\"tabViewDescriptor.style.saveDialog\" v-bind:visible=\"showSaveDialog\" footer=\"footer\" :closable=\"false\" modal>\r\n            <template #header>\r\n                <h4>{{ $t('kpi.kpiDefinition.addKpiAssociations') }}</h4>\r\n            </template>\r\n            <form class=\"p-fluid p-formgrid p-grid\">\r\n                <div class=\"p-field p-col-12 p-mt-4\">\r\n                    <span class=\"p-float-label p-mb-2\">\r\n                        <AutoComplete\r\n                            v-model=\"v$.selectedKpi.category.$model\"\r\n                            :class=\"{\r\n                                'p-invalid': v$.selectedKpi.category.$invalid && v$.selectedKpi.category.$dirty\r\n                            }\"\r\n                            :suggestions=\"filteredCategories\"\r\n                            field=\"valueName\"\r\n                            @complete=\"setAutocompleteCategory($event)\"\r\n                        />\r\n                        <label for=\"name\" class=\"kn-material-input-label\"> {{ $t('managers.configurationManagement.headers.category') }} *</label>\r\n                    </span>\r\n                    <KnValidationMessages\r\n                        :vComp=\"v$.selectedKpi.category\"\r\n                        :additionalTranslateParams=\"{\r\n                            fieldName: $t('managers.configurationManagement.headers.category')\r\n                        }\"\r\n                    >\r\n                    </KnValidationMessages>\r\n                </div>\r\n                <div class=\"p-field-checkbox p-ml-2\">\r\n                    <Checkbox id=\"versioning\" v-model=\"selectedKpi.enableVersioning\" :binary=\"true\" />\r\n                    <label for=\"versioning\">{{ $t('kpi.kpiDefinition.enableVersioning') }}</label>\r\n                </div>\r\n            </form>\r\n            <template #footer>\r\n                <div>\r\n                    <Button class=\"kn-button kn-button--secondary\" :label=\"$t('common.cancel')\" @click=\"showSaveDialog = false\" />\r\n                    <Button class=\"kn-button kn-button--primary\" :label=\"$t('common.save')\" @click=\"saveKpi\" :disabled=\"v$.$invalid\" />\r\n                </div>\r\n            </template>\r\n        </Dialog>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { AxiosResponse } from 'axios'\r\nimport { defineComponent } from 'vue'\r\nimport { createValidations } from '@/helpers/commons/validationHelper'\r\nimport useValidate from '@vuelidate/core'\r\nimport tabViewDescriptor from './KpiDefinitionDetailDescriptor.json'\r\nimport KpiDefinitionFormulaTab from './KpiDefinitionFormulaTab/KpiDefinitionFormulaTab.vue'\r\nimport KpiDefinitionCardinalityTab from './KpiDefinitionCardinalityTab/KpiDefinitionCardinalityTab.vue'\r\nimport KnValidationMessages from '@/components/UI/KnValidatonMessages.vue'\r\nimport KpiDefinitionThresholdTab from './KpiDefinitionThresholdTab/KpiDefinitionThresholdTab.vue'\r\nimport TabView from 'primevue/tabview'\r\nimport TabPanel from 'primevue/tabpanel'\r\nimport Listbox from 'primevue/listbox'\r\nimport Dialog from 'primevue/dialog'\r\nimport AutoComplete from 'primevue/autocomplete'\r\nimport Checkbox from 'primevue/checkbox'\r\nimport mainStore from '../../../../App.store'\r\n\r\nexport default defineComponent({\r\n    components: { TabView, TabPanel, KnValidationMessages, Listbox, KpiDefinitionThresholdTab, KpiDefinitionFormulaTab, Dialog, AutoComplete, Checkbox, KpiDefinitionCardinalityTab },\r\n    props: { id: { type: String, required: false }, version: { type: String, required: false }, cloneKpiVersion: { type: Number }, cloneKpiId: { type: Number } },\r\n    computed: {\r\n        buttonDisabled(): any {\r\n            if (this.selectedKpi.threshold) {\r\n                if (this.formulaHasErrors === true || !this.selectedKpi.threshold.name) {\r\n                    return true\r\n                }\r\n            }\r\n            return false\r\n        }\r\n    },\r\n    emits: ['touched', 'closed', 'kpiCreated', 'kpiUpdated'],\r\n    data() {\r\n        return {\r\n            v$: useValidate() as any,\r\n            tabViewDescriptor,\r\n            touched: false,\r\n            loading: false,\r\n            isAliasVisible: false,\r\n            reloadKpi: false,\r\n            updateMeasureList: false,\r\n            showSaveDialog: false,\r\n            aliasToInput: null as string | null,\r\n            activeTab: 0,\r\n            previousActiveTab: -1,\r\n            selectedKpi: {} as any,\r\n            kpiToSave: {} as any,\r\n            measureList: [] as any,\r\n            tresholdList: [] as any,\r\n            severityOptions: [] as any,\r\n            thresholdTypeList: [] as any,\r\n            kpiCategoryList: [] as any,\r\n            filteredCategories: [] as any,\r\n            formulaToSave: '',\r\n            formulaHasErrors: false\r\n        }\r\n    },\r\n    validations() {\r\n        return {\r\n            selectedKpi: createValidations('selectedKpi', tabViewDescriptor.validations.selectedKpi)\r\n        }\r\n    },\r\n    setup() {\r\n        const store = mainStore()\r\n        return { store }\r\n    },\r\n    async created() {\r\n        this.loadPersistentData()\r\n    },\r\n    watch: {\r\n        id() {\r\n            this.loadSelectedKpi()\r\n            this.activeTab = 0\r\n        },\r\n        cloneKpiId() {\r\n            this.cloneKpiConfirm(this.cloneKpiId, this.cloneKpiVersion)\r\n        }\r\n    },\r\n    methods: {\r\n        async loadPersistentData() {\r\n            this.loading = true\r\n            await this.createGetKpiDataUrl('listMeasure').then((response: AxiosResponse<any>) => {\r\n                this.measureList = [...response.data]\r\n            })\r\n            await this.createGetKpiDataUrl('listThreshold').then((response: AxiosResponse<any>) => {\r\n                this.tresholdList = [...response.data]\r\n            })\r\n            await this.createGetTabViewDataUrl('SEVERITY').then((response: AxiosResponse<any>) => {\r\n                this.severityOptions = [...response.data]\r\n            })\r\n            await this.createGetTabViewDataUrl('THRESHOLD_TYPE').then((response: AxiosResponse<any>) => {\r\n                this.thresholdTypeList = [...response.data]\r\n            })\r\n            await this.createCategories('KPI_KPI_CATEGORY').then((response: AxiosResponse<any>) => {\r\n                this.kpiCategoryList = [...response.data]\r\n            })\r\n            await this.loadSelectedKpi()\r\n            this.loading = false\r\n        },\r\n\r\n        createGetTabViewDataUrl(dataType: string) {\r\n            return this.$http.get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/domains/listByCode/${dataType}`)\r\n        },\r\n        createCategories(dataType: string) {\r\n            return this.$http.get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `3.0/category/listByCode/${dataType}`)\r\n        },\r\n        createGetKpiDataUrl(dataType: string) {\r\n            return this.$http.get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `1.0/kpi/${dataType}`)\r\n        },\r\n        async loadSelectedKpi() {\r\n            if (this.id) {\r\n                await this.$http.get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `1.0/kpi/${this.id}/${this.version}/loadKpi`).then((response: AxiosResponse<any>) => {\r\n                    this.selectedKpi = { ...response.data }\r\n                    let definitionFormula = JSON.parse(this.selectedKpi.definition)\r\n                    this.formulaToSave = definitionFormula.formula\r\n                })\r\n            } else {\r\n                this.selectedKpi = { ...tabViewDescriptor.emptyKpi }\r\n            }\r\n        },\r\n        onUpdateFormulaToSave(event) {\r\n            this.formulaToSave = event\r\n        },\r\n        setTouched() {\r\n            this.touched = true\r\n        },\r\n        toggleAlias() {\r\n            this.isAliasVisible = this.isAliasVisible ? false : true\r\n        },\r\n        insertAlias(selectedAlias: string) {\r\n            if (this.activeTab === 0) {\r\n                this.aliasToInput = selectedAlias\r\n            }\r\n        },\r\n        ifErrorInFormula(event) {\r\n            if (event) {\r\n                this.activeTab = 0\r\n                this.formulaHasErrors = true\r\n            } else {\r\n                this.updateMeasureList = true\r\n                this.formulaHasErrors = false\r\n            }\r\n        },\r\n\r\n        closeTemplateConfirm() {\r\n            if (!this.touched) {\r\n                this.closeTemplate()\r\n            } else {\r\n                this.$confirm.require({\r\n                    message: this.$t('common.toast.unsavedChangesMessage'),\r\n                    header: this.$t('common.toast.unsavedChangesHeader'),\r\n                    icon: 'pi pi-exclamation-triangle',\r\n                    accept: () => {\r\n                        this.touched = false\r\n                        this.closeTemplate()\r\n                    }\r\n                })\r\n            }\r\n        },\r\n        closeTemplate() {\r\n            this.$router.push('/kpi-definition')\r\n            this.$emit('closed')\r\n        },\r\n\r\n        cloneKpiConfirm(kpiId, kpiVersion) {\r\n            this.$confirm.require({\r\n                icon: 'pi pi-exclamation-triangle',\r\n                message: this.$t('kpi.kpiDefinition.confirmClone'),\r\n                header: this.$t(' '),\r\n                accept: () => this.cloneKpi(kpiId, kpiVersion)\r\n            })\r\n        },\r\n        async cloneKpi(kpiId, kpiVersion) {\r\n            await this.$http.get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `1.0/kpi/${kpiId}/${kpiVersion}/loadKpi`).then((response: AxiosResponse<any>) => {\r\n                response.data.id = undefined\r\n                response.data.name = this.$t('kpi.kpiDefinition.copyOf') + response.data.name\r\n\r\n                this.selectedKpi = { ...response.data }\r\n            })\r\n        },\r\n        setAutocompleteCategory(event) {\r\n            setTimeout(() => {\r\n                if (!event.query.trim().length) {\r\n                    this.filteredCategories = [...this.kpiCategoryList] as any[]\r\n                } else {\r\n                    this.filteredCategories = this.kpiCategoryList.filter((category: any) => {\r\n                        return category.valueCd.toLowerCase().startsWith(event.query.toLowerCase())\r\n                    })\r\n                }\r\n            }, 250)\r\n        },\r\n\r\n        async saveKpi() {\r\n            this.showSaveDialog = false\r\n            this.touched = false\r\n            this.kpiToSave = { ...this.selectedKpi }\r\n\r\n            if (typeof this.kpiToSave.category !== 'object') this.kpiToSave.category = { valueCd: this.kpiToSave.category }\r\n\r\n            this.correctColors(this.kpiToSave.threshold.thresholdValues)\r\n            if (typeof this.kpiToSave.definition === 'object') {\r\n                this.kpiToSave.definition.formula = this.formulaToSave\r\n                this.kpiToSave.definition = JSON.stringify(this.kpiToSave.definition)\r\n            }\r\n            if (typeof this.kpiToSave.cardinality === 'object') {\r\n                this.kpiToSave.cardinality = JSON.stringify(this.kpiToSave.cardinality)\r\n            }\r\n            await this.$http\r\n                .post(import.meta.env.VITE_RESTFUL_SERVICES_PATH + '1.0/kpi/saveKpi', this.kpiToSave)\r\n                .then(() => {\r\n                    this.store.setInfo({ title: this.$t('common.toast.success') })\r\n                    this.kpiToSave.id === undefined ? this.$emit('kpiCreated', this.kpiToSave.name) : this.$emit('kpiUpdated')\r\n                    this.reloadKpi = true\r\n                    setTimeout(() => {\r\n                        this.reloadKpi = false\r\n                    }, 250)\r\n                })\r\n                .catch((response: AxiosResponse<any>) => {\r\n                    this.store.setError({\r\n                        title: this.$t('common.error.generic'),\r\n                        msg: response\r\n                    })\r\n                })\r\n        },\r\n\r\n        correctColors(thresholdValues) {\r\n            thresholdValues.forEach((value: any) => {\r\n                if (!value.color.includes('#')) {\r\n                    let fixedColor = '#' + value.color\r\n                    value.color = fixedColor\r\n                }\r\n            })\r\n        }\r\n    }\r\n})\r\n</script>\r\n"],"names":["_sfc_main","VCodeMirror","Dialog","RadioButton","useValidate","mainStore","CodeMirror","_hoisted_1","_hoisted_4","_hoisted_7","_hoisted_9","_createElementVNode","_hoisted_11","_hoisted_13","_hoisted_15","_openBlock","_createElementBlock","_Fragment","_hoisted_2","_hoisted_3","_createVNode","_normalizeClass","_toDisplayString","_hoisted_5","_hoisted_6","_createCommentVNode","_withCtx","_hoisted_8","_hoisted_10","_hoisted_12","_hoisted_14","Card","DataTable","Column","_pushScopeId","_popScopeId","_normalizeStyle","_createBlock","_renderList","Sidebar","Listbox","Message","Checkbox","Dropdown","ColorPicker","_createTextVNode","_withDirectives","TabView","TabPanel","AutoComplete"],"mappings":"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"}