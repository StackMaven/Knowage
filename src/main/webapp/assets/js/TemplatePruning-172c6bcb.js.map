{"version":3,"file":"TemplatePruning-172c6bcb.js","sources":["../../../../modules/managers/templatePruning/TemplatePruning.vue"],"sourcesContent":["<template>\r\n    <div class=\"kn-page\">\r\n        <div class=\"kn-page-content p-m-0\">\r\n            <Toolbar class=\"kn-toolbar kn-toolbar--primary\">\r\n                <template #start>\r\n                    {{ $t('managers.templatePruning.title') }}\r\n                </template>\r\n            </Toolbar>\r\n            <ProgressBar mode=\"indeterminate\" class=\"kn-progress-bar\" v-if=\"loading\" />\r\n            <div id=\"spinner\" v-if=\"loading\">\r\n                <ProgressSpinner />\r\n            </div>\r\n            <div id=\"cards-container\" class=\"kn-page-contentp-grid p-m-0\">\r\n                <div class=\"p-col-12\">\r\n                    <Card>\r\n                        <template #header>\r\n                            <Toolbar class=\"kn-toolbar kn-toolbar--secondary\">\r\n                                <template #start>\r\n                                    {{ $t('managers.templatePruning.referenceDate') }}\r\n                                </template>\r\n                            </Toolbar>\r\n                        </template>\r\n                        <template #content>\r\n                            <div class=\"p-d-flex\">\r\n                                <div class=\"kn-flex\">\r\n                                    {{ $t('managers.templatePruning.enterDateMessage') }}\r\n                                </div>\r\n                                <div class=\"kn-flex\">\r\n                                    <div class=\"p-d-flex\">\r\n                                        <span class=\"p-float-label\">\r\n                                            <Calendar\r\n                                                id=\"expirationDate\"\r\n                                                class=\"kn-material-input\"\r\n                                                v-model=\"selectedDate\"\r\n                                                :class=\"{\r\n                                                    'p-invalid': !selectedDate\r\n                                                }\"\r\n                                                :showIcon=\"true\"\r\n                                                :maxDate=\"maxDate\"\r\n                                                :manualInput=\"false\"\r\n                                                data-test=\"date-input\"\r\n                                            />\r\n                                            <label for=\"expirationDate\" class=\"kn-material-input-label\"> {{ $t('managers.templatePruning.selectDate') }} * </label>\r\n                                        </span>\r\n                                        <Button icon=\"pi pi-filter\" class=\"p-button-text p-button-rounded p-button-plain\" :disabled=\"filterDisabled\" @click=\"loadDocumentSelection\" aria-label=\"Filter\" data-test=\"filter-button\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </template>\r\n                    </Card>\r\n                </div>\r\n                <div class=\"p-col-12\" v-if=\"documentSelectionVisible\">\r\n                    <Card data-test=\"document-selection-card\">\r\n                        <template #header>\r\n                            <Toolbar class=\"kn-toolbar kn-toolbar--secondary\">\r\n                                <template #start>\r\n                                    {{ $t('managers.templatePruning.documentSelection') }}\r\n                                </template>\r\n                            </Toolbar>\r\n                        </template>\r\n                        <template #content>\r\n                            <div class=\"p-d-flex p-flex-column\">\r\n                                <div class=\"kn-flex\">\r\n                                    <p>{{ documentSelectionMessage }}</p>\r\n                                    <Button class=\"kn-button kn-button--primary\" v-if=\"documentsAvailable\" :disabled=\"deleteDisabled\" @click=\"deleteConfirm\" aria-label=\"Delete Templates\" data-test=\"delete-button\">{{ $t('common.delete') }}</Button>\r\n                                </div>\r\n                                <div class=\"kn-flex p-mt-3\">\r\n                                    <Tree id=\"document-tree\" :value=\"nodes\" selectionMode=\"checkbox\" v-model:selectionKeys=\"selectedDocuments\" :filter=\"true\" filterMode=\"lenient\" @node-expand=\"setOpenFolderIcon($event)\" @node-collapse=\"setClosedFolderIcon($event)\" data-test=\"document-tree\"></Tree>\r\n                                </div>\r\n                            </div>\r\n                        </template>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport { iFile, iNode } from './TemplatePruning'\r\nimport { AxiosResponse } from 'axios'\r\nimport Card from 'primevue/card'\r\nimport Calendar from 'primevue/calendar'\r\nimport ProgressSpinner from 'primevue/progressspinner'\r\nimport Tree from 'primevue/tree'\r\nimport mainStore from '../../../App.store'\r\n\r\nexport default defineComponent({\r\n    name: 'template-pruning',\r\n    components: {\r\n        Calendar,\r\n        Card,\r\n        ProgressSpinner,\r\n        Tree\r\n    },\r\n    data() {\r\n        return {\r\n            selectedDate: new Date(),\r\n            folderStructure: [] as iFile[],\r\n            documents: [] as iFile[],\r\n            nodes: [] as iNode[],\r\n            selectedDocuments: {},\r\n            documentSelectionVisible: false,\r\n            loading: false\r\n        }\r\n    },\r\n    computed: {\r\n        maxDate() {\r\n            return new Date()\r\n        },\r\n        filterDisabled(): boolean {\r\n            return !this.selectedDate\r\n        },\r\n        documentSelectionMessage(): string {\r\n            return this.documents.length != 0 ? this.$t('managers.templatePruning.documentSelectionMessage') : this.$t('managers.templatePruning.noDocuments')\r\n        },\r\n        documentsAvailable(): boolean {\r\n            return this.documents.length > 0\r\n        },\r\n        deleteDisabled(): boolean {\r\n            return Object.keys(this.selectedDocuments).length === 0\r\n        }\r\n    },\r\n    setup() {\r\n        const store = mainStore()\r\n        return { store }\r\n    },\r\n    methods: {\r\n        formatDate(date: Date) {\r\n            return date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate()\r\n        },\r\n        async loadDocumentSelection() {\r\n            this.loading = true\r\n            this.selectedDocuments = {}\r\n            await this.loadDocuments(this.selectedDate)\r\n            await this.loadFolderStructure()\r\n            this.createNodeTree()\r\n            this.removeEmptyFolders()\r\n            this.documentSelectionVisible = true\r\n            this.loading = false\r\n        },\r\n        async loadFolderStructure() {\r\n            await this.$http.get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + '2.0/folders?includeDocs=true').then((response: AxiosResponse<any>) => (this.folderStructure = response.data))\r\n        },\r\n        async loadDocuments(date: Date) {\r\n            await this.$http.get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/documents?date=${this.formatDate(date)}`).then((response: AxiosResponse<any>) => (this.documents = response.data))\r\n        },\r\n        createNodeTree() {\r\n            this.nodes = []\r\n            const foldersWithMissingParent = [] as iNode[]\r\n            this.folderStructure.forEach((folder: iFile) => {\r\n                const node = { key: folder.name, icon: 'pi pi-folder', id: folder.id, parentId: folder.parentId, label: folder.name, children: [] as iNode[], data: { name: folder.name } }\r\n                node.children = foldersWithMissingParent.filter((folder: iNode) => node.id === folder.parentId)\r\n\r\n                this.attachDocumentsToNode(folder, node)\r\n                this.attachFolderToTree(node, foldersWithMissingParent)\r\n            })\r\n        },\r\n        attachDocumentsToNode(folder: iFile, node: iNode) {\r\n            folder.biObjects.forEach((document: iFile) => {\r\n                const index = this.documents.findIndex((file: iFile) => file.id === document.id)\r\n\r\n                if (index >= 0) {\r\n                    node.children?.push({ key: document.id, icon: 'pi pi-file', id: document.id, label: document.name, data: document.name })\r\n                }\r\n            })\r\n        },\r\n        attachFolderToTree(folder: iNode, foldersWithMissingParent: iNode[]) {\r\n            if (folder.parentId) {\r\n                let parentFolder = null as iNode | null\r\n\r\n                for (let i = 0; i < foldersWithMissingParent.length; i++) {\r\n                    if (folder.parentId === foldersWithMissingParent[i].id) {\r\n                        foldersWithMissingParent[i].children?.push(folder)\r\n                        break\r\n                    }\r\n                }\r\n\r\n                for (let i = 0; i < this.nodes.length; i++) {\r\n                    parentFolder = this.findParentFolder(folder, this.nodes[i])\r\n                    if (parentFolder) {\r\n                        parentFolder.children?.push(folder)\r\n                        break\r\n                    }\r\n                }\r\n                if (!parentFolder) {\r\n                    foldersWithMissingParent.push(folder)\r\n                }\r\n            } else {\r\n                this.nodes.push(folder)\r\n            }\r\n        },\r\n        findParentFolder(folderToAdd: iNode, folderToSearch: iNode) {\r\n            if (folderToAdd.parentId === folderToSearch.id) {\r\n                return folderToSearch\r\n            } else {\r\n                let tempFolder = null as iNode | null\r\n                if (folderToSearch.children) {\r\n                    for (let i = 0; i < folderToSearch.children.length; i++) {\r\n                        tempFolder = this.findParentFolder(folderToAdd, folderToSearch.children[i])\r\n                        if (tempFolder) {\r\n                            break\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return tempFolder\r\n            }\r\n        },\r\n        filterDocuments(folder: iNode, parentFolder: any) {\r\n            if (folder.children && folder.children.length > 0) {\r\n                for (let i = folder.children.length - 1; i >= 0; i--) {\r\n                    this.filterDocuments(folder.children[i], folder)\r\n                }\r\n            }\r\n\r\n            if (folder.children?.length == 0 && parentFolder && parentFolder.children) {\r\n                const array = parentFolder.children\r\n                const index = array.findIndex((node: iNode) => node.id === folder.id)\r\n                array.splice(index, 1)\r\n            }\r\n        },\r\n        removeEmptyFolders() {\r\n            for (let i = 0; i < this.nodes.length; i++) {\r\n                this.filterDocuments(this.nodes[i], null as any)\r\n                if (this.nodes[i].children?.length === 0) {\r\n                    this.nodes[i].selectable = false\r\n                }\r\n            }\r\n        },\r\n        setOpenFolderIcon(node: iNode) {\r\n            node.icon = 'pi pi-folder-open'\r\n        },\r\n        setClosedFolderIcon(node: iNode) {\r\n            node.icon = 'pi pi-folder'\r\n        },\r\n        deleteConfirm() {\r\n            this.$confirm.require({\r\n                message: this.$t('common.toast.deleteMessage'),\r\n                header: this.$t('common.toast.deleteTitle'),\r\n                icon: 'pi pi-exclamation-triangle',\r\n                accept: () => this.deleteDocuments()\r\n            })\r\n        },\r\n        async deleteDocuments() {\r\n            const documentsToDelete = [] as { id: number; data: string }[]\r\n            if (this.selectedDocuments) {\r\n                Object.keys(this.selectedDocuments as {}).forEach((id: any) => {\r\n                    if (!isNaN(id)) {\r\n                        documentsToDelete.push({ id: +id, data: this.formatDate(this.selectedDate) })\r\n                    }\r\n                })\r\n            }\r\n\r\n            await this.$http.post(import.meta.env.VITE_RESTFUL_SERVICES_PATH + 'template/deleteTemplate', documentsToDelete).then(() => {\r\n                this.store.setInfo({\r\n                    title: this.$t('common.toast.deleteTitle'),\r\n                    msg: this.$t('common.toast.deleteSuccess')\r\n                })\r\n                this.selectedDocuments = {}\r\n                this.loadDocumentSelection()\r\n            })\r\n        }\r\n    }\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n#cards-container {\r\n    flex: 0.5;\r\n}\r\n\r\n#document-tree {\r\n    border: 0;\r\n}\r\n\r\n#spinner {\r\n    position: fixed;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: 100%;\r\n    top: 0;\r\n    left: 0;\r\n    opacity: 0.7;\r\n    background-color: rgba(0, 0, 0, $alpha: 0.5);\r\n    z-index: 99;\r\n}\r\n\r\n::v-deep(.p-progress-spinner-circle) {\r\n    animation: p-progress-spinner-color 4s ease-in-out infinite;\r\n}\r\n@keyframes p-progress-spinner-color {\r\n    100%,\r\n    0% {\r\n        stroke: #43749e;\r\n    }\r\n    80%,\r\n    90% {\r\n        stroke: #d62d20;\r\n    }\r\n}\r\n</style>\r\n"],"names":["Calendar","Card","ProgressSpinner","Tree","mainStore","_openBlock","_createElementBlock","_createElementVNode","_createVNode","_withCtx","_createBlock","_createCommentVNode","_toDisplayString","_normalizeClass"],"mappings":"6OAwFA,KAAK,GAAa,EAAa,CAC3B,KAAM,mBACN,WAAY,CAAA,SACRA,EAAA,KACAC,EAAA,gBACAC,EAAA,KACAC,CACJ,EACA,MAAO,CACI,MAAA,CACH,aAAc,GAAI,MAClB,gBAAiB,CAAC,EAClB,UAAW,CAAC,EACZ,MAAO,CAAC,EACR,kBAAmB,CAAC,EACpB,yBAA0B,GAC1B,QAAS,EAAA,CAEjB,EACA,SAAU,CACN,SAAU,CACN,MAAO,IAAI,KACf,EACA,gBAA0B,CACtB,MAAO,CAAC,KAAK,YACjB,EACA,0BAAmC,CACxB,MAAA,MAAK,UAAU,QAAU,EAAI,KAAK,GAAG,mDAAmD,EAAI,KAAK,GAAG,sCAAsC,CACrJ,EACA,oBAA8B,CACnB,MAAA,MAAK,UAAU,OAAS,CACnC,EACA,gBAA0B,CACtB,MAAO,QAAO,KAAK,KAAK,iBAAiB,EAAE,SAAW,CAC1D,CACJ,EACA,OAAQ,CAEJ,MAAO,CAAA,MADOC,GACC,CACnB,EACA,QAAS,CACL,WAAW,EAAY,CACZ,MAAA,GAAK,cAAgB,IAAO,GAAK,WAAa,GAAK,IAAM,EAAK,QAAQ,CACjF,EACA,KAAM,wBAAwB,CAC1B,KAAK,QAAU,GACf,KAAK,kBAAoB,GACnB,KAAA,MAAK,cAAc,KAAK,YAAY,EAC1C,KAAM,MAAK,sBACX,KAAK,eAAe,EACpB,KAAK,mBAAmB,EACxB,KAAK,yBAA2B,GAChC,KAAK,QAAU,EACnB,EACA,KAAM,sBAAsB,CACxB,KAAM,MAAK,MAAM,IAAI,wDAA2E,EAAE,KAAK,AAAC,GAAkC,KAAK,gBAAkB,EAAS,IAAK,CACnL,EACA,KAAM,eAAc,EAAY,CAC5B,KAAM,MAAK,MAAM,IAAI,gDAAmE,KAAK,WAAW,CAAI,GAAG,EAAE,KAAK,AAAC,GAAkC,KAAK,UAAY,EAAS,IAAK,CAC5L,EACA,gBAAiB,CACb,KAAK,MAAQ,GACb,KAAM,GAA2B,CAAA,EAC5B,KAAA,gBAAgB,QAAQ,AAAC,GAAkB,CACtC,KAAA,GAAO,CAAE,IAAK,EAAO,KAAM,KAAM,eAAgB,GAAI,EAAO,GAAI,SAAU,EAAO,SAAU,MAAO,EAAO,KAAM,SAAU,CAAA,EAAe,KAAM,CAAE,KAAM,EAAO,IAAO,CAAA,EACrK,EAAA,SAAW,EAAyB,OAAO,AAAC,GAAkB,EAAK,KAAO,EAAO,QAAQ,EAEzF,KAAA,sBAAsB,EAAQ,CAAI,EAClC,KAAA,mBAAmB,EAAM,CAAwB,CAAA,CACzD,CACL,EACA,sBAAsB,EAAe,EAAa,CACvC,EAAA,UAAU,QAAQ,AAAC,GAAoB,OAG1C,AAAI,AAFU,KAAK,UAAU,UAAU,AAAC,GAAgB,EAAK,KAAO,EAAS,EAAE,GAElE,GACT,MAAK,WAAL,QAAe,KAAK,CAAE,IAAK,EAAS,GAAI,KAAM,aAAc,GAAI,EAAS,GAAI,MAAO,EAAS,KAAM,KAAM,EAAS,OACtH,CACH,CACL,EACA,mBAAmB,EAAe,EAAmC,SACjE,GAAI,EAAO,SAAU,CACjB,GAAI,GAAe,KAEnB,OAAS,GAAI,EAAG,EAAI,EAAyB,OAAQ,IACjD,GAAI,EAAO,WAAa,EAAyB,GAAG,GAAI,CAC3B,KAAA,GAAG,WAAH,QAAa,KAAK,GAC3C,KACJ,CAGJ,OAAS,GAAI,EAAG,EAAI,KAAK,MAAM,OAAQ,IAEnC,GADA,EAAe,KAAK,iBAAiB,EAAQ,KAAK,MAAM,EAAE,EACtD,EAAc,CACD,KAAA,WAAA,QAAU,KAAK,GAC5B,KACJ,CAEJ,AAAK,GACD,EAAyB,KAAK,CAAM,CACxC,KAEK,MAAA,MAAM,KAAK,CAAM,CAE9B,EACA,iBAAiB,EAAoB,EAAuB,CACpD,GAAA,EAAY,WAAa,EAAe,GACjC,MAAA,GACJ,CACH,GAAI,GAAa,KACjB,GAAI,EAAe,SACf,OAAS,GAAI,EAAG,EAAI,EAAe,SAAS,QACxC,GAAa,KAAK,iBAAiB,EAAa,EAAe,SAAS,EAAE,EACtE,IAF4C,IAEhD,CAMD,MAAA,EACX,CACJ,EACA,gBAAgB,EAAe,EAAmB,OAC9C,GAAI,EAAO,UAAY,EAAO,SAAS,OAAS,EAC5C,OAAS,GAAI,EAAO,SAAS,OAAS,EAAG,GAAK,EAAG,IAC7C,KAAK,gBAAgB,EAAO,SAAS,GAAI,CAAM,EAIvD,GAAI,MAAO,WAAP,cAAiB,SAAU,GAAK,GAAgB,EAAa,SAAU,CACvE,KAAM,GAAQ,EAAa,SACrB,EAAQ,EAAM,UAAU,AAAC,GAAgB,EAAK,KAAO,EAAO,EAAE,EAC9D,EAAA,OAAO,EAAO,CAAC,CACzB,CACJ,EACA,oBAAqB,OACjB,OAAS,GAAI,EAAG,EAAI,KAAK,MAAM,OAAQ,IACnC,KAAK,gBAAgB,KAAK,MAAM,GAAI,IAAW,EAC3C,SAAK,MAAM,GAAG,WAAd,cAAwB,UAAW,GAC9B,MAAA,MAAM,GAAG,WAAa,GAGvC,EACA,kBAAkB,EAAa,CAC3B,EAAK,KAAO,mBAChB,EACA,oBAAoB,EAAa,CAC7B,EAAK,KAAO,cAChB,EACA,eAAgB,CACZ,KAAK,SAAS,QAAQ,CAClB,QAAS,KAAK,GAAG,4BAA4B,EAC7C,OAAQ,KAAK,GAAG,0BAA0B,EAC1C,KAAM,6BACN,OAAQ,IAAM,KAAK,gBAAgB,CAAA,CACtC,CACL,EACA,KAAM,kBAAkB,CACpB,KAAM,GAAoB,CAAA,EAC1B,AAAI,KAAK,mBACL,OAAO,KAAK,KAAK,iBAAuB,EAAE,QAAQ,AAAC,GAAY,CACvD,AAAC,MAAM,CAAE,GACS,EAAA,KAAK,CAAE,GAAI,CAAC,EAAI,KAAM,KAAK,WAAW,KAAK,YAAY,CAAG,CAAA,CAChF,CACH,EAGC,KAAA,MAAK,MAAM,KAAK,oDAAwE,CAAiB,EAAE,KAAK,IAAM,CACxH,KAAK,MAAM,QAAQ,CACf,MAAO,KAAK,GAAG,0BAA0B,EACzC,IAAK,KAAK,GAAG,4BAA4B,CAAA,CAC5C,EACD,KAAK,kBAAoB,GACzB,KAAK,sBAAsB,CAAA,CAC9B,CACL,CACJ,CACJ,CAAC,KAvQY,MAAM,gDAOF,IAAG,EAAA,GAAA,WAGA,EAAA,CAAkB,GAAA,kBAAA,MAAA,+BAWL,EAAA,CAAA,MAAM,YACF,EAAA,CAAA,MAAM,YAGN,EAAA,CAAA,MAAM,WACF,EAAA,CAAA,MAAM,oBACI,sCAaG,EAAC,CAAiB,IAAK,iBAAA,MAAA,8BASxD,IAAK,EAAA,MAAA,YAWW,EAAA,CAAA,MAAM,6BAIN,MAAM,yLAhEnCC,GAwEM,EAAAC,EAAA,MAAA,EAAA,CAAAC,EAnEQ,MAJD,EAAA,CAAAC,EACW,EAC8B,CAAA,MAAA,gCAAA,EAAA,CAAA,MAAAC,EAAA,IAAA,qDAGc,CAAA,EAAA,EAAA,QAAAJ,KAAAK,EAAA,EAAA,CAAnD,IAAI,EAAiB,KAAK,gBAAA,MAAA,qBACfC,EAAO,GAAA,EAAA,EAAA,EAAA,QAAAN,GAAA,EACRC,EAAA,MAAA,EAAA,CAAAE,EAAA,CAAA,CAEvB,CAAA,GAAAG,EA6DM,GA7DN,EAAA,EAAAJ,EACI,MAqCM,EAAA,CADKA,EAAA,MAAA,EAAA,CAAAC,EAlCc,EAKH,KAAA,CAAA,OAJVC,EAIU,IAAA,CAAAD,EAHU,EACsC,CAAA,MAAA,kCAAA,EAAA,CAAA,MAAAC,EAAA,IAAA,+DAInD,CAAA,EAAA,QACPA,EAwBM,IAAA,CAAAF,EAvBF,MAEM,EAAA,CACNA,EAmBM,MAnBN,EAmBMK,EAAA,EAAA,GAAA,2CAAA,CAAA,EAAA,CAAA,EAAAL,EAlBF,MAiBM,EAAA,CAAAA,EAhBF,MAcO,EAdP,CAYMA,EAAA,OAAA,EAAA,CAAAC,EAVK,EAAgB,CACnB,GAAA,iBAE6E,MAAAK,EAAA,CAAA,oBAAA,CAAA,YAAA,CAAA,EAAA,YADpE,CAAA,CAAA,EAAA,WAAA,EAAA,aAIR,sBAAc,EAAA,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,aAAA,GACd,SAAS,GACT,QAAa,EAAA,QACd,YAAU,GAAA,YAAA,YAEd,EAAA,KAAA,EAAA,CAAA,aAAuH,QAAvH,SAAuH,CAAA,EAAAN,EAAA,QAAA,EAAAK,EAAA,EAAA,GAAA,qCAAA,CAAA,EAAA,MAAA,CAAA,CAE3H,CAAA,EAAAJ,EAAa,EAAc,CAAC,KAAK,eAAkD,MAAA,gDAA2B,SAAO,EAAA,eAAuB,QAAW,EAAA,sBAAS,aAAU,SAAA,YAAA,6DAOtK,CAAA,EACxB,EAAA,yBAAAH,GAAA,EAmBOC,EAnBD,MAAU,EAAA,CAAAE,EACK,EAKH,CAAA,YAAA,yBAAA,EAAA,CAAA,OAJVC,EAIU,IAAA,CAAAD,EAHU,EAC0C,CAAA,MAAA,kCAAA,EAAA,CAAA,MAAAC,EAAA,IAAA,mEAIvD,CAAA,EAAA,QACPA,EAQM,IAAA,CAAAF,EAPF,MAGM,EAAA,CAAAA,EAFF,MAAqC,EAAA,CAAAA,EACc,IAAkB,KAAAK,EAAA,EAAA,wBAAA,EAAA,CAAA,EAAA,EAAA,mBAAAP,KAAAK,EAAA,EAAA,CAA7D,IAAK,EAA2D,MAAA,+BAA2B,SAAO,EAAA,eAAe,QAAW,EAAA,cAAmB,aAAU,mBAAA,YAAA,yGAErK,CAAA,EAC0QH,EAAA,MAAA,EAAA,CAAAC,EAA7P,EAAe,CAAE,GAAA,gBAAc,MAAA,EAAA,MAAiC,cAAe,WAAA,cAAA,EAAA,kBAAoB,yBAAY,EAAA,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,kBAAA,GAAE,OAAA,GAAsB,WAAW,UAA8B,aAAa,iBAAE,kBAAoB,CAAA,GAAS,eAAU,EAAe,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,oBAAA,CAAA,GAAA,YAAA"}