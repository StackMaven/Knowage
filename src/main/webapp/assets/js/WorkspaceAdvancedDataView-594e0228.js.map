{"version":3,"file":"WorkspaceAdvancedDataView-594e0228.js","sources":["../../../../components/functionalities/KnDatasetList/KnDatasetList.vue","../../../../modules/workspace/views/advancedData/WorkspaceAdvancedDataView.vue"],"sourcesContent":["<template>\r\n    <Dialog class=\"kn-dialog--toolbar--primary datasetListDialogClass\" v-bind:visible=\"visibility\" :header=\"$t('components.advancedData.chooseDataset')\" :closable=\"false\" modal :breakpoints=\"{ '960px': '75vw', '640px': '100vw' }\">\r\n        <DataTable\r\n            id=\"datasets-datatable\"\r\n            :value=\"filteredDatasets\"\r\n            :selection=\"selectedDataset\"\r\n            selectionMode=\"single\"\r\n            :paginator=\"true\"\r\n            :rows=\"KnDatasetListDescriptor.rows\"\r\n            :loading=\"loading\"\r\n            class=\"p-datatable-sm kn-table kn-page-content\"\r\n            dataKey=\"id\"\r\n            :responsiveLayout=\"KnDatasetListDescriptor.responsiveLayout\"\r\n            :breakpoint=\"KnDatasetListDescriptor.breakpoint\"\r\n            @rowClick=\"handleClick($event.data)\"\r\n        >\r\n            <template #loading>\r\n                {{ $t('common.info.dataLoading') }}\r\n            </template>\r\n            <template #empty>\r\n                <div id=\"noDatasetsFound\">\r\n                    {{ $t('managers.advancedData.noDatasetsFound') }}\r\n                </div>\r\n            </template>\r\n            <template #header>\r\n                <div class=\"table-header p-d-flex\">\r\n                    <span class=\"p-input-icon-left p-mr-3 p-col-12\">\r\n                        <i class=\"pi pi-search\" />\r\n                        <InputText class=\"kn-material-input\" v-model=\"searchWord\" type=\"text\" :placeholder=\"$t('common.search')\" @input=\"searchDatasets\" />\r\n                    </span>\r\n                </div>\r\n            </template>\r\n            <Column class=\"kn-truncated\" :style=\"col.style\" v-for=\"col of KnDatasetListDescriptor.columns\" :header=\"$t(col.header)\" :key=\"col.field\" :sortField=\"col.field\" :sortable=\"col.field !== 'icon'\">\r\n                <template #body=\"slotProps\">\r\n                    <span v-if=\"col.field !== 'icon'\" v-tooltip.top=\"slotProps.data[col.field]\"> {{ slotProps.data[col.field] }}</span>\r\n                    <span v-else>\r\n                        <Button icon=\"far fa-circle-check\" v-if=\"isAvroLoaded(slotProps.data.id)\" class=\"p-button-link\" v-tooltip.left=\"$t('workspace.advancedData.avroReady')\" />\r\n                        <Button icon=\"fa-solid fa-spinner\" v-else-if=\"isAvroLoading(slotProps.data.id)\" class=\"p-button-link\" v-tooltip.left=\"$t('workspace.advancedData.avroLoading')\" />\r\n                        <div v-else style=\"height: 1.57rem\"></div>\r\n                    </span>\r\n                </template>\r\n            </Column>\r\n        </DataTable>\r\n        <template #footer>\r\n            <Button class=\"kn-button kn-button--secondary\" :label=\"$t('common.cancel')\" @click=\"cancel\" />\r\n            <Button class=\"kn-button kn-button--primary\" v-t=\"'common.open'\" @click=\"apply\" :disabled=\"!isDatasetSelected\" />\r\n        </template>\r\n    </Dialog>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent, PropType } from 'vue'\r\nimport { iDataset } from './KnDatasetList'\r\nimport Column from 'primevue/column'\r\nimport DataTable from 'primevue/datatable'\r\nimport Dialog from 'primevue/dialog'\r\nimport KnDatasetListDescriptor from './KnDatasetListDescriptor.json'\r\nimport { mapState, mapActions } from 'pinia'\r\n\r\nimport mainStore from '@/App.store'\r\nimport workspaceStore from '@/modules/workspace/Workspace.store.js'\r\n\r\nexport default defineComponent({\r\n    name: 'datasets-catalog-datatable',\r\n    components: { Column, DataTable, Dialog },\r\n    props: {\r\n        items: [] as PropType<Array<iDataset>>,\r\n        visibility: Boolean\r\n    },\r\n    emits: ['selected', 'save', 'cancel'],\r\n    data() {\r\n        return {\r\n            KnDatasetListDescriptor,\r\n            datasets: [] as iDataset[],\r\n            filteredDatasets: [] as iDataset[],\r\n            selectedDataset: {},\r\n            searchWord: '',\r\n            loading: false,\r\n            isDatasetSelected: false\r\n        }\r\n    },\r\n    updated() {\r\n        if (this.items) this.datasets = this.items\r\n        this.filteredDatasets = [...this.datasets]\r\n    },\r\n    computed: {\r\n        ...mapState(workspaceStore, ['isAvroLoaded', 'isAvroLoading']),\r\n        isEmpty() {\r\n            return Object.keys(this.selectedDataset).length == 0\r\n        }\r\n    },\r\n    methods: {\r\n        ...mapActions(mainStore, ['setInfo', 'setError']),\r\n        apply(): void {\r\n            this.$emit('save', this.selectedDataset)\r\n            this.clearForm()\r\n        },\r\n        cancel(): void {\r\n            this.$emit('cancel', this.selectedDataset)\r\n            this.clearForm()\r\n        },\r\n        clearForm(): void {\r\n            this.selectedDataset = {}\r\n            this.isDatasetSelected = false\r\n        },\r\n        searchDatasets() {\r\n            setTimeout(() => {\r\n                if (!this.searchWord.trim().length) {\r\n                    this.filteredDatasets = [...this.datasets] as any[]\r\n                } else {\r\n                    this.filteredDatasets = this.datasets.filter((tempDataset: any) => {\r\n                        return tempDataset.label.toLowerCase().includes(this.searchWord.toLowerCase()) || tempDataset.name.toLowerCase().includes(this.searchWord.toLowerCase()) || tempDataset.dsTypeCd.toLowerCase().includes(this.searchWord.toLowerCase())\r\n                    })\r\n                }\r\n            }, 250)\r\n        },\r\n        handleClick(data) {\r\n            this.$emit('selected', data)\r\n            this.isDatasetSelected = true\r\n        }\r\n    }\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.datasetListDialogClass {\r\n    min-width: 600px;\r\n    width: 60%;\r\n    max-width: 1200px;\r\n}\r\n\r\n#noDatasetsFound {\r\n    margin: 0 auto;\r\n    border: 1px solid rgba(204, 204, 204, 0.6);\r\n    padding: 0.5rem;\r\n    background-color: #e6e6e6;\r\n    text-align: center;\r\n    text-transform: uppercase;\r\n    font-size: 0.8rem;\r\n    width: 80%;\r\n}\r\n\r\n#datasets-datatable .p-datatable-wrapper {\r\n    height: auto;\r\n}\r\n</style>\r\n","<template>\r\n    <DataPreparationMonitoringDialog v-model:visibility=\"showMonitoring\" @close=\"showMonitoring = false\" @save=\"updateDatasetAndSave\" :dataset=\"selectedDataset\"></DataPreparationMonitoringDialog>\r\n    <Toolbar class=\"kn-toolbar kn-toolbar--secondary\">\r\n        <template #start>\r\n            {{ $t('workspace.advancedData.title') }}\r\n        </template>\r\n        <template #end>\r\n            <Button v-if=\"toggleCardDisplay\" icon=\"fas fa-list\" class=\"p-button-text p-button-rounded p-button-plain\" @click=\"toggleDisplayView\" />\r\n            <Button v-if=\"!toggleCardDisplay\" icon=\"fas fa-th-large\" class=\"p-button-text p-button-rounded p-button-plain\" @click=\"toggleDisplayView\" />\r\n            <KnFabButton icon=\"fas fa-plus\" data-test=\"new-folder-button\" @click=\"showDataSetCatalog\" />\r\n        </template>\r\n    </Toolbar>\r\n    <ProgressBar mode=\"indeterminate\" class=\"kn-progress-bar p-ml-2\" v-if=\"loading\" data-test=\"progress-bar\" />\r\n    <KnDatasetList :visibility=\"showDatasetList\" :items=\"availableDatasets\" @selected=\"newDataPrep\" @save=\"openDataPreparation(selectedDsForDataPrep)\" @cancel=\"hideDataSetCatalog\" />\r\n\r\n    <div class=\"p-d-flex p-flex-row p-ai-center\">\r\n        <InputText class=\"kn-material-input p-m-2\" :style=\"mainDescriptor.style.filterInput\" v-model=\"searchWord\" type=\"text\" :placeholder=\"$t('common.search')\" @input=\"searchItems\" data-test=\"search-input\" />\r\n    </div>\r\n\r\n    <div class=\"kn-overflow\">\r\n        <DataTable v-if=\"!toggleCardDisplay\" class=\"p-datatable-sm kn-table p-mx-2\" :value=\"preparedDatasets\" :loading=\"loading\" dataKey=\"objId\" responsiveLayout=\"stack\" breakpoint=\"600px\" data-test=\"datasets-table\">\r\n            <template #empty>\r\n                {{ $t('common.info.noDataFound') }}\r\n            </template>\r\n            <Column field=\"label\" :header=\"$t('importExport.catalogFunction.column.label')\" class=\"kn-truncated\" :sortable=\"true\" />\r\n            <Column field=\"name\" :header=\"$t('importExport.gallery.column.name')\" class=\"kn-truncated\" :sortable=\"true\" />\r\n            <Column field=\"tags\" :header=\"$t('importExport.gallery.column.tags')\" :sortable=\"true\">\r\n                <template #body=\"slotProps\">\r\n                    <span v-if=\"slotProps.data.tags.length > 0\">\r\n                        <Chip v-for=\"(tag, index) of slotProps.data.tags\" :key=\"index\"> {{ tag.name }} </Chip>\r\n                    </span>\r\n                </template>\r\n            </Column>\r\n\r\n            <Column :style=\"mainDescriptor.style.iconColumn\">\r\n                <template #header> &ensp; </template>\r\n                <template #body=\"slotProps\">\r\n                    <Button icon=\"fas fa-ellipsis-v\" class=\"p-button-link\" @click.stop=\"showMenu($event, slotProps.data)\" />\r\n                    <Button icon=\"fas fa-info-circle\" class=\"p-button-link\" v-tooltip.left=\"$t('workspace.myModels.showInfo')\" @click.stop=\"showSidebar(slotProps.data)\" :data-test=\"'info-button-' + slotProps.data.name\" />\r\n                    <Button icon=\"fas fa-eye\" class=\"p-button-link\" @click.stop=\"previewDataset(slotProps.data)\" />\r\n                </template>\r\n            </Column>\r\n        </DataTable>\r\n        <div v-if=\"toggleCardDisplay\" class=\"p-grid p-m-2\" data-test=\"card-container\">\r\n            <Message v-if=\"preparedDatasets.length === 0\" class=\"kn-flex p-m-2\" severity=\"info\" :closable=\"false\" :style=\"mainDescriptor.style.message\">\r\n                {{ $t('common.info.noDataFound') }}\r\n            </Message>\r\n            <template v-else>\r\n                <WorkspaceCard\r\n                    v-for=\"(dataset, index) of preparedDatasets\"\r\n                    :key=\"index\"\r\n                    :viewType=\"'dataset'\"\r\n                    :document=\"dataset\"\r\n                    @previewDataset=\"previewDataset\"\r\n                    @editDataset=\"editDataset\"\r\n                    @exportToXlsx=\"exportDataset($event, 'xls')\"\r\n                    @exportToCsv=\"exportDataset($event, 'csv')\"\r\n                    @shareDataset=\"shareDataset\"\r\n                    @cloneDataset=\"cloneDataset\"\r\n                    @deleteDataset=\"deleteDatasetConfirm\"\r\n                    @openDataPreparation=\"openDataPreparation\"\r\n                    @openSidebar=\"showSidebar\"\r\n                    @monitoring=\"showMonitoring = !showMonitoring\"\r\n                />\r\n            </template>\r\n        </div>\r\n    </div>\r\n\r\n    <DetailSidebar\r\n        :visible=\"showDetailSidebar\"\r\n        :viewType=\"'dataset'\"\r\n        :document=\"selectedDataset\"\r\n        @previewDataset=\"previewDataset\"\r\n        @editDataset=\"editDataset\"\r\n        @exportToXlsx=\"exportDataset($event, 'xls')\"\r\n        @exportToCsv=\"exportDataset($event, 'csv')\"\r\n        @shareDataset=\"shareDataset\"\r\n        @cloneDataset=\"cloneDataset\"\r\n        @deleteDataset=\"deleteDatasetConfirm\"\r\n        @openDataPreparation=\"openDataPreparation\"\r\n        @close=\"showDetailSidebar = false\"\r\n        @monitoring=\"showMonitoring = !showMonitoring\"\r\n        data-test=\"detail-sidebar\"\r\n    />\r\n\r\n    <EditPreparedDatasetDialog :dataset=\"selectedDataset\" :visible=\"showEditPreparedDatasetDialog\" @save=\"updatePreparedDataset\" @cancel=\"showEditPreparedDatasetDialog = false\" />\r\n    <Menu id=\"optionsMenu\" ref=\"optionsMenu\" :model=\"menuButtons\" />\r\n    <Menu id=\"creationMenu\" ref=\"creationMenu\" :model=\"creationMenuButtons\" />\r\n\r\n    <WorkspaceDataCloneDialog :visible=\"cloneDialogVisible\" :propDataset=\"selectedDataset\" @close=\"cloneDialogVisible = false\" @clone=\"handleDatasetClone\"></WorkspaceDataCloneDialog>\r\n    <WorkspaceDataPreviewDialog :visible=\"previewDialogVisible\" :propDataset=\"selectedDataset\" @close=\"previewDialogVisible = false\"></WorkspaceDataPreviewDialog>\r\n    <WorkspaceWarningDialog :visible=\"warningDialogVisbile\" :title=\"$t('workspace.advancedData.title')\" :warningMessage=\"warningMessage\" @close=\"closeWarningDialog\"></WorkspaceWarningDialog>\r\n</template>\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport { filterDefault } from '@/helpers/commons/filterHelper'\r\nimport KnFabButton from '@/components/UI/KnFabButton.vue'\r\nimport EditPreparedDatasetDialog from '@/modules/workspace/views/dataView/dialogs/EditPreparedDatasetDialog.vue'\r\nimport mainDescriptor from '@/modules/workspace/WorkspaceDescriptor.json'\r\nimport DetailSidebar from '@/modules/workspace/genericComponents/DetailSidebar.vue'\r\nimport WorkspaceCard from '@/modules/workspace/genericComponents/WorkspaceCard.vue'\r\nimport DataTable from 'primevue/datatable'\r\nimport KnDatasetList from '@/components/functionalities/KnDatasetList/KnDatasetList.vue'\r\nimport Column from 'primevue/column'\r\nimport Chip from 'primevue/chip'\r\nimport Menu from 'primevue/contextmenu'\r\nimport { IDataset } from '@/modules/workspace/Workspace'\r\nimport Message from 'primevue/message'\r\nimport WorkspaceDataCloneDialog from '@/modules/workspace/views/dataView/dialogs/WorkspaceDataCloneDialog.vue'\r\nimport WorkspaceDataPreviewDialog from '@/modules/workspace/views/dataView/dialogs/WorkspaceDataPreviewDialog.vue'\r\nimport WorkspaceWarningDialog from '@/modules/workspace/genericComponents/WorkspaceWarningDialog.vue'\r\nimport { AxiosResponse } from 'axios'\r\nimport DataPreparationMonitoringDialog from '@/modules/workspace/dataPreparation/DataPreparationMonitoring/DataPreparationMonitoringDialog.vue'\r\nimport { mapState, mapActions } from 'pinia'\r\n\r\nimport mainStore from '../../../../App.store'\r\nimport workspaceStore from '@/modules/workspace/Workspace.store.js'\r\nimport { Client } from '@stomp/stompjs'\r\n\r\nexport default defineComponent({\r\n    components: { DataTable, KnDatasetList, Column, Chip, DataPreparationMonitoringDialog, EditPreparedDatasetDialog, DetailSidebar, WorkspaceCard, KnFabButton, WorkspaceDataCloneDialog, WorkspaceWarningDialog, WorkspaceDataPreviewDialog, Message, Menu },\r\n    emits: ['toggleDisplayView'],\r\n    props: { toggleCardDisplay: { type: Boolean } },\r\n    computed: {\r\n        ...mapState(mainStore, ['user']),\r\n        ...mapState(workspaceStore, ['dataPreparation', 'isAvroReady']),\r\n        isDatasetOwner(): any {\r\n            return this.user.userId === this.selectedDataset.owner\r\n        },\r\n        canLoadData(): any {\r\n            if (this.selectedDataset.actions) {\r\n                for (let i = 0; i < this.selectedDataset.actions.length; i++) {\r\n                    const action = this.selectedDataset.actions[i]\r\n                    if (action.name == 'loaddata') {\r\n                        return true\r\n                    }\r\n                }\r\n            }\r\n            return false\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            mainDescriptor,\r\n            loading: false,\r\n            showDetailSidebar: false,\r\n            showDatasetList: false as Boolean,\r\n            showEditPreparedDatasetDialog: false,\r\n            datasetList: [] as Array<IDataset>,\r\n            preparedDatasets: [] as any,\r\n            availableDatasets: [] as any,\r\n            selectedDataset: {} as any,\r\n            selectedDsForDataPrep: {} as any,\r\n            menuButtons: [] as any,\r\n            creationMenuButtons: [] as any,\r\n            filters: {\r\n                global: [filterDefault]\r\n            } as Object,\r\n            cloneDialogVisible: false,\r\n            shareDialogVisible: false,\r\n            previewDialogVisible: false,\r\n            warningDialogVisbile: false,\r\n            warningMessage: '',\r\n            searchWord: '' as string,\r\n            showMonitoring: false,\r\n            client: {} as any\r\n        }\r\n    },\r\n    async created() {\r\n        if (this.user?.functionalities.includes('DataPreparation')) {\r\n            var url = new URL(window.location.origin)\r\n            url.protocol = url.protocol.replace('http', 'ws')\r\n            let uri = url + 'knowage-data-preparation/ws?' + import.meta.env.VITE_DEFAULT_AUTH_HEADER + '=' + localStorage.getItem('token')\r\n            this.client = new Client({\r\n                brokerURL: uri,\r\n                connectHeaders: {},\r\n                heartbeatIncoming: 4000,\r\n                heartbeatOutgoing: 4000\r\n            })\r\n            this.client.onConnect = (frame) => {\r\n                // Do something, all subscribes must be done is this callback\r\n                // This is needed because this will be executed after a (re)connect\r\n                console.log(frame)\r\n                this.client.subscribe('/user/queue/prepare', (message) => {\r\n                    // called when the client receives a STOMP message from the server\r\n                    if (message.body) {\r\n                        let avroJobResponse = JSON.parse(message.body)\r\n                        if (avroJobResponse.statusOk) {\r\n                            this.setInfo({ title: 'Dataset prepared successfully' })\r\n                            this.addToLoadedAvros(avroJobResponse.dsId)\r\n                            this.addToAvroDatasets(avroJobResponse.dsId)\r\n                        } else {\r\n                            this.setError({ title: 'Cannot prepare dataset', msg: avroJobResponse.errorMessage })\r\n                        }\r\n                        this.removeFromLoadingAvros(avroJobResponse.dsId)\r\n                    } else {\r\n                        this.setError({ title: 'Websocket error', msg: 'got empty message' })\r\n                    }\r\n                })\r\n            }\r\n            this.client.onStompError = function (frame) {\r\n                // Will be invoked in case of error encountered at Broker\r\n                // Bad login/passcode typically will cause an error\r\n                // Complaint brokers will set `message` header with a brief message. Body may contain details.\r\n                // Compliant brokers will terminate the connection after any error\r\n                console.log('Broker reported error: ' + frame.headers['message'])\r\n                console.log('Additional details: ' + frame.body)\r\n            }\r\n            this.client.activate()\r\n        }\r\n\r\n        await this.getAllAvroDataSets()\r\n        await this.getDatasets()\r\n    },\r\n    unmounted() {\r\n        if (this.user?.functionalities.includes('DataPreparation') && this.client && Object.keys(this.client).length > 0) {\r\n            this.client.deactivate()\r\n            this.client = {}\r\n        }\r\n    },\r\n    methods: {\r\n        ...mapActions(mainStore, ['setInfo', 'setError']),\r\n        ...mapActions(workspaceStore, ['addToLoadedAvros', 'addToLoadingAvros', 'addToAvroDatasets', 'removeFromLoadingAvros', 'removeFromLoadedAvros', 'setAvroDatasets', 'setLoadedAvros']),\r\n        async updatePreparedDataset(newDataset) {\r\n            this.showEditPreparedDatasetDialog = false\r\n            this.selectedDataset.name = newDataset.name\r\n            this.selectedDataset.description = newDataset.description\r\n            this.selectedDataset.type = 'PreparedDataset'\r\n            await this.$http({\r\n                method: 'POST',\r\n                url: import.meta.env.VITE_RESTFUL_SERVICES_PATH + 'selfservicedataset/update',\r\n                data: this.selectedDataset,\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded', 'X-Disable-Errors': 'true' },\r\n                transformRequest: function (obj) {\r\n                    var str = [] as any\r\n                    for (var p in obj) str.push(encodeURIComponent(p) + '=' + encodeURIComponent(obj[p]))\r\n                    return str.join('&')\r\n                }\r\n            })\r\n                .then(() => {\r\n                    this.setInfo({ title: 'Updated successfully' })\r\n                })\r\n                .catch(() => {\r\n                    this.setError({ title: 'Save error', msg: 'Cannot update Prepared Dataset' })\r\n                })\r\n            await this.getDatasets()\r\n        },\r\n        async loadDataset(datasetId: Number) {\r\n            this.loading = true\r\n            await this.$http\r\n                .get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `1.0/datasets/dataset/id/${datasetId}`)\r\n                .then((response: AxiosResponse<any>) => {\r\n                    this.selectedDataset = response.data[0]\r\n                })\r\n                .catch(() => {})\r\n            this.loading = false\r\n        },\r\n        toggleDisplayView() {\r\n            this.$emit('toggleDisplayView')\r\n        },\r\n        newDataPrep(dataset) {\r\n            this.selectedDsForDataPrep = dataset\r\n        },\r\n        showSidebar(clickedDataset) {\r\n            this.selectedDataset = clickedDataset\r\n            this.showDetailSidebar = true\r\n        },\r\n        hideDataSetCatalog() {\r\n            this.showDatasetList = false\r\n            this.selectedDsForDataPrep = {}\r\n        },\r\n        showDataSetCatalog() {\r\n            this.$http.get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `3.0/datasets/for-dataprep`).then(\r\n                (response: AxiosResponse<any>) => {\r\n                    this.availableDatasets = [...response.data.root]\r\n                    this.showDatasetList = true\r\n                },\r\n                () => {\r\n                    this.setError({ title: 'Error', msg: 'Cannot load dataset list' })\r\n                }\r\n            )\r\n        },\r\n        showMenu(event, clickedDocument) {\r\n            this.selectedDataset = clickedDocument\r\n            this.createMenuItems(clickedDocument)\r\n            // eslint-disable-next-line\r\n            // @ts-ignore\r\n            this.$refs.optionsMenu.toggle(event)\r\n        },\r\n        // prettier-ignore\r\n        createMenuItems(clickedDocument: any) {\r\n                let tmp = [] as any\r\n                tmp.push(\r\n                    { key: '0', label: this.$t('workspace.myData.xlsxExport'), icon: 'fas fa-file-excel', command: () => this.exportDataset(clickedDocument, 'xls'), visible: this.canLoadData && this.selectedDataset.dsTypeCd != 'File' },\r\n                    { key: '1', label: this.$t('workspace.myData.csvExport'), icon: 'fas fa-file-csv', command: () => this.exportDataset(clickedDocument, 'csv'), visible: this.canLoadData && this.selectedDataset.dsTypeCd != 'File' },\r\n                    { key: '4', label: this.$t('workspace.myData.deleteDataset'), icon: 'fas fa-trash', command: () => this.deleteDatasetConfirm(clickedDocument), visible: this.isDatasetOwner }\r\n                )\r\n                if (this.user?.functionalities.includes('DataPreparation')) {\r\n                    tmp.push(\r\n                        { key: '2', label: this.$t('workspace.myData.openDataPreparation'), icon: 'fas fa-cogs', command: () => this.openDataPreparation(clickedDocument), visible: true },\r\n                        { key: '3', label: this.$t('workspace.myData.monitoring'), icon: 'pi pi-chart-line', command: () => this.handleMonitoring(clickedDocument), visible: true }\r\n                    )\r\n                }\r\n                tmp = tmp.sort((a,b)=>a.key.localeCompare(b.key))\r\n                this.menuButtons = tmp\r\n        },\r\n        createCreationMenuButtons() {\r\n            this.creationMenuButtons = []\r\n            this.creationMenuButtons.push({ key: '0', label: this.$t('workspace.myData.prepareData'), visible: true })\r\n        },\r\n        async previewDataset(dataset: any) {\r\n            await this.loadDataset(dataset.id)\r\n            this.previewDialogVisible = true\r\n        },\r\n        editDataset() {\r\n            this.showEditPreparedDatasetDialog = true\r\n        },\r\n        handleMonitoring(dataset: any) {\r\n            console.log(dataset)\r\n            this.showMonitoring = !this.showMonitoring\r\n        },\r\n        async openDataPreparation(dataset: any) {\r\n            if (dataset.dsTypeCd == 'Prepared') {\r\n                //edit existing data prep\r\n                await this.$http.get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `3.0/datasets/advanced/${dataset.id}`).then(\r\n                    (response: AxiosResponse<any>) => {\r\n                        let instanceId = response.data.configuration.dataPrepInstanceId\r\n                        this.$http.get(import.meta.env.VITE_DATA_PREPARATION_PATH + `1.0/process/by-instance-id/${instanceId}`).then((response: AxiosResponse<any>) => {\r\n                            let transformations = response.data.definition\r\n                            let processId = response.data.id\r\n                            let datasetId = response.data.instance.dataSetId\r\n\r\n                            if (!this.isAvroReady(datasetId)) {\r\n                                // check if Avro file has been deleted or not\r\n                                /*                                 this.$router.push({ name: 'data-preparation', params: { id: datasetId, transformations: JSON.stringify(transformations), processId: processId, instanceId: instanceId, dataset: JSON.stringify(dataset) } }) */\r\n\r\n                                this.generateAvro(datasetId)\r\n                            } else {\r\n                                this.$router.push({ name: 'data-preparation', params: { id: datasetId, transformations: JSON.stringify(transformations), processId: processId, instanceId: instanceId, dataset: JSON.stringify(dataset) } })\r\n                            }\r\n                        })\r\n                    },\r\n                    () => {\r\n                        this.setError({\r\n                            title: 'Cannot open data preparation'\r\n                        })\r\n                    }\r\n                )\r\n            } else if (this.isAvroReady(dataset.id)) {\r\n                // original dataset already exported in Avro\r\n                this.$router.push({ name: 'data-preparation', params: { id: dataset.id } })\r\n            } else {\r\n                await this.generateAvro(dataset.id)\r\n            }\r\n        },\r\n        async generateAvro(dsId: Number) {\r\n            // launch avro export job\r\n            await this.$http\r\n                .post(\r\n                    import.meta.env.VITE_RESTFUL_SERVICES_PATH + `1.0/data-preparation/prepare/${dsId}`,\r\n                    {},\r\n                    {\r\n                        headers: {\r\n                            Accept: 'application/json, text/plain, */*',\r\n                            'Content-Type': 'application/json;charset=UTF-8'\r\n                        }\r\n                    }\r\n                )\r\n                .then(() => {\r\n                    this.setInfo({\r\n                        title: this.$t('workspace.myData.isPreparing')\r\n                    })\r\n                    this.addToLoadingAvros(dsId)\r\n                    let idx = this.dataPreparation.loadedAvros.indexOf(dsId)\r\n                    if (idx >= 0) this.removeFromLoadedAvros(idx)\r\n                })\r\n                .catch(() => {})\r\n\r\n            // listen on websocket for avro export job to be finished\r\n            if (this.user?.functionalities.includes('DataPreparation') && this.client && Object.keys(this.client).length > 0) this.client.publish({ destination: '/app/prepare', body: dsId })\r\n        },\r\n        async getAllAvroDataSets() {\r\n            await this.$http\r\n                .get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `3.0/datasets/avro`)\r\n                .then((response: AxiosResponse<any>) => {\r\n                    this.setAvroDatasets(response.data)\r\n                    this.setLoadedAvros(response.data)\r\n                })\r\n                .catch(() => {})\r\n        },\r\n        async exportDataset(dataset: any, format: string) {\r\n            this.loading = true\r\n            //  { 'Content-Type': 'application/x-www-form-urlencoded' }\r\n            await this.$http\r\n                .post(\r\n                    import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/export/dataset/${dataset.id}/${format}`,\r\n                    {},\r\n                    {\r\n                        headers: {\r\n                            Accept: 'application/json, text/plain, */*',\r\n                            'Content-Type': 'application/json;charset=UTF-8'\r\n                        }\r\n                    }\r\n                )\r\n                .then(() => {\r\n                    this.setInfo({\r\n                        title: this.$t('common.toast.updateTitle'),\r\n                        msg: this.$t('workspace.myData.exportSuccess')\r\n                    })\r\n                })\r\n                .catch(() => {})\r\n            this.loading = false\r\n        },\r\n        getFileType(type: string) {\r\n            switch (type) {\r\n                case 'csv':\r\n                    return 'text/csv'\r\n                case 'xls':\r\n                    return 'application/vnd.ms-excel'\r\n                case 'xlsx':\r\n                    return 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\r\n            }\r\n        },\r\n        shareDataset() {\r\n            this.shareDialogVisible = true\r\n        },\r\n        async handleDatasetShare(dataset: any) {\r\n            this.loading = true\r\n            const url = dataset.catTypeId ? `selfservicedataset/share/?catTypeId=${dataset.catTypeId}&id=${dataset.id}` : `selfservicedataset/share/?id=${dataset.id}`\r\n            await this.$http\r\n                .post(import.meta.env.VITE_RESTFUL_SERVICES_PATH + url)\r\n                .then(() => {\r\n                    this.setInfo({\r\n                        title: this.$t('common.toast.updateTitle'),\r\n                        msg: this.$t('common.toast.success')\r\n                    })\r\n                    this.showDetailSidebar = false\r\n                    this.shareDialogVisible = false\r\n                    this.getDatasets()\r\n                })\r\n                .catch(() => {})\r\n            this.loading = false\r\n        },\r\n        async cloneDataset(dataset: any) {\r\n            await this.loadDataset(dataset.id)\r\n            this.cloneDialogVisible = true\r\n        },\r\n        async handleDatasetClone(dataset: any) {\r\n            await this.$http\r\n                .post(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `1.0/datasets`, dataset, { headers: { 'X-Disable-Errors': 'true' } })\r\n                .then(() => {\r\n                    this.setInfo({\r\n                        title: this.$t('common.toast.deleteTitle'),\r\n                        msg: this.$t('common.toast.success')\r\n                    })\r\n                    this.showDetailSidebar = false\r\n                    this.cloneDialogVisible = false\r\n                    this.getDatasets()\r\n                })\r\n                .catch((response: any) => {\r\n                    this.warningDialogVisbile = true\r\n                    this.warningMessage = response\r\n                })\r\n        },\r\n        datasetPreparation(dataset: any) {\r\n            this.$router.push({ name: 'data-preparation', params: { id: dataset.id } })\r\n        },\r\n        deleteDatasetConfirm(dataset: any) {\r\n            this.$confirm.require({\r\n                message: this.$t('common.toast.deleteMessage'),\r\n                header: this.$t('common.toast.deleteTitle'),\r\n                icon: 'pi pi-exclamation-triangle',\r\n                accept: async () => await this.deleteDataset(dataset)\r\n            })\r\n        },\r\n        async deleteDataset(dataset: any) {\r\n            this.loading = true\r\n            await this.$http\r\n                .delete(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `1.0/datasets/${dataset.label}`)\r\n                .then(() => {\r\n                    this.setInfo({\r\n                        title: this.$t('common.toast.deleteTitle'),\r\n                        msg: this.$t('common.toast.success')\r\n                    })\r\n                    this.showDetailSidebar = false\r\n                    this.getDatasets()\r\n                })\r\n                .catch(() => {})\r\n            this.loading = false\r\n        },\r\n        closeWarningDialog() {\r\n            this.warningMessage = ''\r\n            this.warningDialogVisbile = false\r\n        },\r\n        async getDatasets() {\r\n            this.loading = true\r\n            this.searchWord = ''\r\n            this.preparedDatasets = this.$http\r\n                .get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `3.0/datasets/advanced`)\r\n                .then((response: AxiosResponse<any>) => {\r\n                    this.datasetList = [...response.data.root]\r\n                    this.preparedDatasets = [...this.datasetList]\r\n                })\r\n                .finally(() => (this.loading = false))\r\n        },\r\n        searchItems() {\r\n            setTimeout(() => {\r\n                if (!this.searchWord.trim().length) {\r\n                    this.preparedDatasets = [...this.datasetList] as any[]\r\n                } else {\r\n                    this.preparedDatasets = this.datasetList.filter((el: any) => {\r\n                        return el.label?.toLowerCase().includes(this.searchWord.toLowerCase()) || el.name?.toLowerCase().includes(this.searchWord.toLowerCase()) || el.dsTypeCd?.toLowerCase().includes(this.searchWord.toLowerCase())\r\n                    })\r\n                }\r\n            }, 250)\r\n        },\r\n        async updateDatasetAndSave(newConfig) {\r\n            this.showMonitoring = false\r\n            await this.$http.patch(import.meta.env.VITE_DATA_PREPARATION_PATH + '1.0/instance/' + newConfig.instanceId, { config: newConfig.config }, { headers: { Accept: 'application/json, */*' } }).then(\r\n                () => {\r\n                    this.loadDataset(this.selectedDataset.id)\r\n                    this.setInfo({ title: this.$t('common.save'), msg: this.$t('common.toast.updateSuccess') })\r\n                },\r\n                () => {\r\n                    this.setError({ title: this.$t('common.error.saving'), msg: this.$t('managers.workspaceManagement.dataPreparation.errors.updatingSchedulation') })\r\n                }\r\n            )\r\n        }\r\n    }\r\n})\r\n</script>\r\n"],"names":["_sfc_main","Column","DataTable","Dialog","mainStore","_hoisted_3","_openBlock","_createBlock","_withCtx","_createVNode","_withDirectives","_createElementVNode","_hoisted_1","_toDisplayString","_hoisted_2","_hoisted_4","_createElementBlock","_Fragment","_renderList","_normalizeStyle","_hoisted_5","_createTextVNode","Chip","Message","Menu","_createCommentVNode","_withModifiers"],"mappings":"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"}