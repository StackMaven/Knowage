{"version":3,"file":"DocumentDetails-8e77fd31.js","sources":["../../../../modules/documentExecution/documentDetails/dialogs/olapDesignerDialog/DocumentDetailOlapHelpers.ts","../../../../modules/documentExecution/documentDetails/tabs/informations/DocumentDetailsDatasetDialog.vue","../../../../modules/documentExecution/documentDetails/tabs/informations/DocumentDetailsTree.vue","../../../../modules/documentExecution/documentDetails/tabs/informations/DocumentDetailsInformations.vue","../../../../modules/documentExecution/documentDetails/tabs/drivers/DocumentDetailsDataConditions.vue","../../../../modules/documentExecution/documentDetails/tabs/drivers/DocumentDetailsVisibilityConditions.vue","../../../../modules/documentExecution/documentDetails/tabs/drivers/DocumentDetailsDrivers.vue","../../../../modules/documentExecution/documentDetails/tabs/outputParams/DocumentDetailsOutputParameters.vue","../../../../modules/documentExecution/documentDetails/tabs/dataLineage/DocumentDetailsDataLineage.vue","../../../../modules/documentExecution/documentDetails/tabs/history/DocumentDetailsHistory.vue","../../../../modules/documentExecution/documentDetails/tabs/subreports/DocumentDetailsSubreports.vue","../../../../modules/documentExecution/documentDetails/dialogs/olapDesignerDialog/DocumentDetailXMLAForm.vue","../../../../modules/documentExecution/documentDetails/dialogs/olapDesignerDialog/DocumentDetailMondrianForm.vue","../../../../modules/documentExecution/documentDetails/dialogs/olapDesignerDialog/DocumentDetailOlapDesignerDialog.vue","../../../../modules/documentExecution/documentDetails/DocumentDetails.vue"],"sourcesContent":["import { AxiosResponse } from 'axios'\r\nimport X2JS from 'x2js'\r\n\r\nexport async function startOlap($http: any, user: any, sbiExecutionId: string, document: any, template: any, router: any) {\r\n    const language = user.locale?.split('_')[0]\r\n    const uniqueID = user.userUniqueIdentifier\r\n    const country = user.locale?.split('_')[1]\r\n    let fileType = template.name.split('.')\r\n    const selectedTemplateFileType = fileType[fileType.length - 1]\r\n    let selectedTemplateContent = await getSelectedTemplate($http, selectedTemplateFileType, document, template)\r\n    const schemaName = selectedTemplateContent.olap.cube._reference\r\n    let schema = (await getSchema($http, schemaName)) as any\r\n    if (!schema) return\r\n\r\n    const params = createUrlParameters(uniqueID, language, country, sbiExecutionId, document, selectedTemplateContent, schema)\r\n\r\n    $http.get(import.meta.env.VITE_OLAP_PATH + `olap/startolap`, { headers: { Accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9' }, params: params }).then(() => {\r\n        router.push(`/olap-designer/${sbiExecutionId}?olapId=${document.id}&olapName=${document.name}&olapLabel=${document.label}&artifactId=${schema.currentContentId}`)\r\n    })\r\n}\r\n\r\nasync function getSelectedTemplate($http: any, selectedTemplateFileType: string, document: any, template: any) {\r\n    let selectedTemplateContent = {} as any\r\n    await $http.get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/documentdetails/${document.id}/templates/selected/${template.id}`, { headers: { Accept: 'application/json, text/plain, */*', 'X-Disable-Errors': 'true' } }).then((response: AxiosResponse<any>) => {\r\n        selectedTemplateFileType == 'sbicockpit' || selectedTemplateFileType == 'json' || selectedTemplateFileType == 'sbigeoreport' ? (selectedTemplateContent = JSON.stringify(response.data, null, 4)) : (selectedTemplateContent = response.data)\r\n        const x2js = new X2JS()\r\n        selectedTemplateContent = x2js.xml2js(selectedTemplateContent)\r\n    })\r\n    return selectedTemplateContent\r\n}\r\n\r\nasync function getSchema($http: any, schemaName: string) {\r\n    let schema = null\r\n    await $http.get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/mondrianSchemasResource/name=${schemaName}`).then((response: AxiosResponse<any>) => (schema = response.data))\r\n    return schema\r\n}\r\n\r\nfunction createUrlParameters(uniqueID: string, language: string, country: string, sbiExecutionId: string, document: any, selectedTemplateContent: any, schema: any) {\r\n    const params = new URLSearchParams()\r\n    params.set('user_id', decodeURIComponent(uniqueID))\r\n    params.set('SBI_LANGUAGE', decodeURIComponent(language))\r\n    params.set('SBI_COUNTRY', decodeURIComponent(country))\r\n    params.set('ENGINE', document.engine)\r\n    params.set('SBI_EXECUTION_ID', decodeURIComponent(sbiExecutionId))\r\n    params.set('DOCUMENT_LABEL', decodeURIComponent(document.label))\r\n    params.set('document', decodeURIComponent('' + document.id))\r\n    params.set('template', selectedTemplateContent.olap.JSONTEMPLATE)\r\n    params.set('SBI_ARTIFACT_ID', decodeURIComponent('' + schema.id))\r\n    params.set('schemaID', decodeURIComponent('' + schema.id))\r\n    params.set('SBI_ARTIFACT_VERSION_ID', decodeURIComponent('' + schema.currentContentId))\r\n    params.set('schemaName', decodeURIComponent(schema.name))\r\n    params.set('onEditMode', decodeURIComponent(''))\r\n    return params\r\n}\r\n","<template>\r\n    <Dialog class=\"document-details-dialog remove-padding\" :contentStyle=\"mainDescriptor.style.flex\" position=\"right\" :visible=\"visible\" :modal=\"false\" :closable=\"false\" :baseZIndex=\"10\" :autoZIndex=\"true\">\r\n        <template #header>\r\n            <Toolbar class=\"kn-toolbar kn-toolbar--secondary kn-width-full\">\r\n                <template #start>\r\n                    {{ $t('documentExecution.documentDetails.info.datasetDialogTitle') }}\r\n                </template>\r\n            </Toolbar>\r\n        </template>\r\n        <DataTable class=\"p-datatable-sm kn-table p-m-2\" :value=\"datasets\" dataKey=\"id\" responsiveLayout=\"stack\" v-model:filters=\"filters\" :globalFilterFields=\"infoDescriptor.globalFilterFields\" :loading=\"loading\" v-model:selection=\"selectedDataset\" selectionMode=\"single\" stripedRows>\r\n            <template #header>\r\n                <span id=\"search-container\" class=\"p-input-icon-left p-mr-3\">\r\n                    <i class=\"pi pi-search\" />\r\n                    <InputText class=\"kn-material-input\" v-model=\"filters['global'].value\" type=\"text\" :placeholder=\"$t('common.search')\" data-test=\"filterInput\" />\r\n                </span>\r\n            </template>\r\n            <template #empty>{{ $t('common.info.noDataFound') }}</template>\r\n            <Column class=\"kn-truncated\" field=\"label\" :header=\"$t('common.label')\" :sortable=\"true\" />\r\n            <Column class=\"kn-truncated\" field=\"name\" :header=\"$t('common.name')\" :sortable=\"true\" />\r\n            <Column class=\"kn-truncated\" field=\"description\" :header=\"$t('common.description')\" :sortable=\"true\" />\r\n            <Column class=\"kn-truncated\" field=\"owner\" :header=\"$t('common.owner')\" :sortable=\"true\" />\r\n            <Column class=\"kn-truncated\" field=\"scope\" :header=\"$t('managers.datasetManagement.scope')\" :sortable=\"true\" />\r\n        </DataTable>\r\n        <template #footer>\r\n            <Button class=\"p-button-text kn-button\" :label=\"$t('common.cancel')\" @click=\"$emit('closeDialog')\" />\r\n            <Button class=\"kn-button kn-button--primary\" :label=\"$t('common.save')\" @click=\"$emit('saveSelectedDataset', selectedDataset), $emit('closeDialog')\" />\r\n        </template>\r\n    </Dialog>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport { AxiosResponse } from 'axios'\r\nimport { filterDefault } from '@/helpers/commons/filterHelper'\r\nimport mainDescriptor from '../../DocumentDetailsDescriptor.json'\r\nimport infoDescriptor from './DocumentDetailsInformationsDescriptor.json'\r\nimport Dialog from 'primevue/dialog'\r\nimport DataTable from 'primevue/datatable'\r\nimport Column from 'primevue/column'\r\n\r\nexport default defineComponent({\r\n    name: 'dataset-dialog',\r\n    components: { Dialog, DataTable, Column },\r\n    props: { visible: { type: Boolean, required: false } },\r\n    emits: ['closeDialog', 'saveSelectedDataset'],\r\n    data() {\r\n        return {\r\n            mainDescriptor,\r\n            infoDescriptor,\r\n            loading: false,\r\n            filters: { global: [filterDefault] } as Object,\r\n            datasets: [] as any,\r\n            selectedDataset: {} as any\r\n        }\r\n    },\r\n    created() {\r\n        this.getAllDatasets()\r\n    },\r\n    methods: {\r\n        async getAllDatasets() {\r\n            this.loading = true\r\n            this.$http\r\n                .get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/datasets/basicinfo/all/`)\r\n                .then((response: AxiosResponse<any>) => (this.datasets = response.data))\r\n                .finally(() => (this.loading = false))\r\n        }\r\n    }\r\n})\r\n</script>\r\n","<template>\r\n    <Tree class=\"documents-tree\" :value=\"nodes\" :expandedKeys=\"expandedKeys\" @node-expand=\"setOpenFolderIcon($event)\" @node-collapse=\"setClosedFolderIcon($event)\">\r\n        <template #default=\"slotProps\">\r\n            <i class=\"p-mr-2\" :class=\"slotProps.node.customIcon\"></i>\r\n            <Checkbox v-if=\"slotProps.node.selectable\" name=\"folders\" v-model=\"selectedFolders\" :value=\"slotProps.node.path\" @change=\"emitSelectedFolders\" />\r\n            <b>{{ slotProps.node.label }}</b>\r\n        </template>\r\n    </Tree>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport Checkbox from 'primevue/checkbox'\r\nimport Tree from 'primevue/tree'\r\nexport default defineComponent({\r\n    name: 'scheduler-document-accordion-tree',\r\n    components: { Checkbox, Tree },\r\n    props: { propFunctionalities: { type: Array }, propSelectedFolders: { type: Array } },\r\n    data() {\r\n        return {\r\n            functionalities: [] as any[],\r\n            selectedFolders: [] as any[],\r\n            nodes: [] as any[],\r\n            expandedKeys: {}\r\n        }\r\n    },\r\n    watch: {\r\n        propFunctionalities() {\r\n            this.loadFunctionalities()\r\n            this.createNodeTree()\r\n            this.expandAll()\r\n        },\r\n        propSelectedFolders() {\r\n            this.loadSelectedFolders()\r\n        }\r\n    },\r\n    created() {\r\n        this.loadFunctionalities()\r\n        this.createNodeTree()\r\n        this.expandAll()\r\n        this.loadSelectedFolders()\r\n    },\r\n    methods: {\r\n        loadFunctionalities() {\r\n            this.functionalities = this.propFunctionalities as any[]\r\n        },\r\n        loadSelectedFolders() {\r\n            this.selectedFolders = this.propSelectedFolders ? this.propSelectedFolders : []\r\n        },\r\n        createNodeTree() {\r\n            this.nodes = []\r\n            const foldersWithMissingParent = [] as any[]\r\n            this.functionalities.forEach((folder: any) => {\r\n                const node = {\r\n                    key: folder.name,\r\n                    id: folder.id,\r\n                    parentId: folder.parentId,\r\n                    label: folder.name,\r\n                    children: [] as any[],\r\n                    data: folder,\r\n                    path: folder.path,\r\n                    customIcon: folder.childs ? 'pi pi-folder-open' : 'pi pi-folder',\r\n                    selectable: folder.codType === 'USER_FUNCT' || folder.parentId\r\n                }\r\n                node.children = foldersWithMissingParent.filter((folder: any) => node.id === folder.parentId)\r\n                this.attachFolderToTree(node, foldersWithMissingParent)\r\n            })\r\n        },\r\n        attachFolderToTree(folder: any, foldersWithMissingParent: any[]) {\r\n            if (folder.parentId) {\r\n                let parentFolder = null as any\r\n                for (let i = 0; i < foldersWithMissingParent.length; i++) {\r\n                    if (folder.parentId === foldersWithMissingParent[i].id) {\r\n                        folder.data.parentFolder = foldersWithMissingParent[i]\r\n                        foldersWithMissingParent[i].children?.push(folder)\r\n                        break\r\n                    }\r\n                }\r\n                for (let i = 0; i < this.nodes.length; i++) {\r\n                    parentFolder = this.findParentFolder(folder, this.nodes[i])\r\n                    if (parentFolder) {\r\n                        folder.data.parentFolder = parentFolder\r\n                        parentFolder.children?.push(folder)\r\n                        break\r\n                    }\r\n                }\r\n                if (!parentFolder) {\r\n                    foldersWithMissingParent.push(folder)\r\n                }\r\n            } else {\r\n                this.nodes.push(folder)\r\n            }\r\n        },\r\n        findParentFolder(folderToAdd: any, folderToSearch: any) {\r\n            if (folderToAdd.parentId === folderToSearch.id) {\r\n                return folderToSearch\r\n            } else {\r\n                let tempFolder = null as any\r\n                if (folderToSearch.children) {\r\n                    for (let i = 0; i < folderToSearch.children.length; i++) {\r\n                        tempFolder = this.findParentFolder(folderToAdd, folderToSearch.children[i])\r\n                        if (tempFolder) {\r\n                            break\r\n                        }\r\n                    }\r\n                }\r\n                return tempFolder\r\n            }\r\n        },\r\n        expandAll() {\r\n            for (let node of this.nodes) {\r\n                this.expandNode(node)\r\n            }\r\n            this.expandedKeys = { ...this.expandedKeys }\r\n        },\r\n        expandNode(node: any) {\r\n            if (node.children && node.children.length) {\r\n                this.expandedKeys[node.key] = true\r\n                for (let child of node.children) {\r\n                    this.expandNode(child)\r\n                }\r\n            }\r\n        },\r\n        setOpenFolderIcon(node: any) {\r\n            node.customIcon = 'pi pi-folder-open'\r\n        },\r\n        setClosedFolderIcon(node: any) {\r\n            node.customIcon = 'pi pi-folder'\r\n        },\r\n        emitSelectedFolders() {\r\n            this.$emit('selected', this.selectedFolders)\r\n        }\r\n    }\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.documents-tree {\r\n    border: none;\r\n}\r\n</style>\r\n","<template>\r\n    <div class=\"p-grid p-m-0 kn-flex\">\r\n        <div class=\"p-col-7 p-m-0 p-p-0 right-border p-d-flex p-flex-column kn-flex\">\r\n            <Toolbar class=\"kn-toolbar kn-toolbar--secondary\">\r\n                <template #start>\r\n                    {{ $t('documentExecution.documentDetails.info.infoTitle') }}\r\n                </template>\r\n                <template #end>\r\n                    <Button v-if=\"designerButtonVisible\" :label=\"$t('documentExecution.olap.openDesigner')\" class=\"p-button-text p-button-plain\" @click=\"openDesignerConfirm\" />\r\n                </template>\r\n            </Toolbar>\r\n            <div id=\"informations-content\" class=\"kn-flex kn-relative\">\r\n                <div :style=\"mainDescriptor.style.absoluteScroll\">\r\n                    <Card class=\"p-m-2\">\r\n                        <template #content>\r\n                            <div v-if=\"templates.length == 0\">\r\n                                <div class=\"p-field p-col-12 p-d-flex\">\r\n                                    <div class=\"kn-flex\">\r\n                                        <span class=\"p-float-label\">\r\n                                            <InputText id=\"fileName\" class=\"kn-material-input kn-width-full\" v-model=\"templateToUpload.name\" :disabled=\"true\" />\r\n                                            <label for=\"fileName\" class=\"kn-material-input-label\"> {{ $t('documentExecution.documentDetails.info.uploadTemplate') }} </label>\r\n                                        </span>\r\n                                    </div>\r\n                                    <Button icon=\"fas fa-upload fa-1x\" class=\"p-button-text p-button-plain p-ml-2\" @click=\"setUploadType\" />\r\n                                    <KnInputFile label=\"\" v-if=\"!uploading\" :changeFunction=\"setTemplateForUpload\" :triggerInput=\"triggerUpload\" />\r\n                                </div>\r\n                            </div>\r\n                            <form class=\"p-fluid p-formgrid p-grid p-m-1\">\r\n                                <div class=\"p-field p-col-12 p-lg-6\">\r\n                                    <span class=\"p-float-label\">\r\n                                        <InputText\r\n                                            id=\"label\"\r\n                                            class=\"kn-material-input\"\r\n                                            type=\"text\"\r\n                                            maxLength=\"100\"\r\n                                            v-model=\"v$.document.label.$model\"\r\n                                            :class=\"{\r\n                                                'p-invalid': v$.document.label.$invalid && v$.document.label.$dirty\r\n                                            }\"\r\n                                            @blur=\"v$.document.label.$touch()\"\r\n                                            @change=\"$emit('touched')\"\r\n                                        />\r\n                                        <label for=\"label\" class=\"kn-material-input-label\"> {{ $t('common.label') }} * </label>\r\n                                    </span>\r\n                                    <KnValidationMessages class=\"p-mt-1\" :vComp=\"v$.document.label\" :additionalTranslateParams=\"{ fieldName: $t('common.label') }\" />\r\n                                </div>\r\n                                <div class=\"p-field p-col-12 p-lg-6\">\r\n                                    <span class=\"p-float-label\">\r\n                                        <InputText\r\n                                            id=\"name\"\r\n                                            class=\"kn-material-input\"\r\n                                            type=\"text\"\r\n                                            maxLength=\"200\"\r\n                                            v-model=\"v$.document.name.$model\"\r\n                                            :class=\"{\r\n                                                'p-invalid': v$.document.name.$invalid && v$.document.name.$dirty\r\n                                            }\"\r\n                                            @blur=\"v$.document.name.$touch()\"\r\n                                            @change=\"$emit('touched')\"\r\n                                        />\r\n                                        <label for=\"name\" class=\"kn-material-input-label\"> {{ $t('common.name') }} * </label>\r\n                                    </span>\r\n                                    <KnValidationMessages class=\"p-mt-1\" :vComp=\"v$.document.name\" :additionalTranslateParams=\"{ fieldName: $t('common.name') }\" />\r\n                                </div>\r\n\r\n                                <div class=\"p-field p-col-12 p-lg-6\">\r\n                                    <img v-if=\"selectedDocument?.previewFile && !imagePreview\" id=\"image-preview\" :src=\"getImageUrl\" :height=\"mainDescriptor.style.previewImage\" />\r\n                                    <img v-if=\"imagePreviewUrl && imagePreview\" id=\"image-preview\" :src=\"imagePreviewUrl\" :height=\"mainDescriptor.style.previewImage\" />\r\n                                </div>\r\n\r\n                                <div class=\"p-field p-col-12 p-lg-6\">\r\n                                    <span class=\"p-float-label\">\r\n                                        <Textarea\r\n                                            id=\"description\"\r\n                                            class=\"kn-material-input\"\r\n                                            rows=\"9\"\r\n                                            maxLength=\"400\"\r\n                                            :autoResize=\"true\"\r\n                                            v-model=\"v$.document.description.$model\"\r\n                                            :class=\"{\r\n                                                'p-invalid': v$.document.description.$invalid && v$.document.description.$dirty\r\n                                            }\"\r\n                                            @blur=\"v$.document.description.$touch()\"\r\n                                            @change=\"$emit('touched')\"\r\n                                        />\r\n                                        <label for=\"description\" class=\"kn-material-input-label\"> {{ $t('common.description') }} </label>\r\n                                    </span>\r\n                                    <KnValidationMessages class=\"p-mt-1\" :vComp=\"v$.document.description\" :additionalTranslateParams=\"{ fieldName: $t('common.description') }\" />\r\n                                </div>\r\n\r\n                                <div class=\"p-field p-col-12 p-d-flex\">\r\n                                    <div class=\"kn-flex\">\r\n                                        <span class=\"p-float-label\">\r\n                                            <InputText id=\"fileName\" class=\"kn-material-input\" v-model=\"document.previewFile\" :disabled=\"true\" />\r\n                                            <label for=\"fileName\" class=\"kn-material-input-label\"> {{ $t('documentExecution.documentDetails.info.previewImage') }} </label>\r\n                                        </span>\r\n                                    </div>\r\n                                    <Button icon=\"fas fa-upload fa-1x\" class=\"p-button-text p-button-plain p-ml-2\" @click=\"setImageUploadType\" />\r\n                                    <Button v-if=\"document.previewFile\" icon=\"fas fa-trash fa-1x\" class=\"p-button-text p-button-plain p-ml-2\" @click=\"$emit('deleteImage')\" />\r\n                                    <KnInputFile :changeFunction=\"setImageForUpload\" accept=\".png, .jpg, .jpeg\" :triggerInput=\"triggerImageUpload\" />\r\n                                </div>\r\n                                <div class=\"p-field p-col-12 p-lg-6\">\r\n                                    <span class=\"p-float-label\">\r\n                                        <Dropdown\r\n                                            id=\"type\"\r\n                                            class=\"kn-material-input\"\r\n                                            v-model=\"v$.document.typeCode.$model\"\r\n                                            :options=\"documentTypes\"\r\n                                            optionLabel=\"translatedValueName\"\r\n                                            optionValue=\"valueCd\"\r\n                                            :class=\"{\r\n                                                'p-invalid': v$.document.typeCode.$invalid && v$.document.typeCode.$dirty\r\n                                            }\"\r\n                                            @blur=\"v$.document.typeCode.$touch()\"\r\n                                            @change=\"onTypeChange\"\r\n                                        />\r\n                                        <label for=\"type\" class=\"kn-material-input-label\"> {{ $t('importExport.catalogFunction.column.type') }} *</label>\r\n                                    </span>\r\n                                    <KnValidationMessages class=\"p-mt-1\" :vComp=\"v$.document.typeCode\" :additionalTranslateParams=\"{ fieldName: $t('importExport.catalogFunction.column.type') }\" />\r\n                                </div>\r\n                                <div class=\"p-field p-col-12 p-lg-6\">\r\n                                    <span class=\"p-float-label\">\r\n                                        <Dropdown\r\n                                            id=\"engine\"\r\n                                            class=\"kn-material-input\"\r\n                                            v-model=\"v$.document.engine.$model\"\r\n                                            :options=\"filteredEngines\"\r\n                                            optionLabel=\"name\"\r\n                                            optionValue=\"label\"\r\n                                            :disabled=\"!document.typeCode || document.typeCode == ''\"\r\n                                            :class=\"{\r\n                                                'p-invalid': v$.document.engine.$invalid && v$.document.engine.$dirty\r\n                                            }\"\r\n                                            @blur=\"v$.document.engine.$touch()\"\r\n                                            @change=\"$emit('touched')\"\r\n                                        />\r\n                                        <label for=\"engine\" class=\"kn-material-input-label\"> {{ $t('documentExecution.documentDetails.info.engine') }} *</label>\r\n                                    </span>\r\n                                    <small>{{ $t('documentExecution.documentDetails.info.engineHint') }}</small>\r\n                                    <KnValidationMessages class=\"p-mt-1\" :vComp=\"v$.document.engine\" :additionalTranslateParams=\"{ fieldName: $t('documentExecution.documentDetails.info.engine') }\" />\r\n                                </div>\r\n\r\n                                <span v-if=\"isDataSourceVisible\" class=\"p-field p-float-label p-col-12 p-lg-6\" v-bind:class=\"{ 'p-lg-12': !isDataSetVisible }\">\r\n                                    <Dropdown id=\"datasource\" class=\"kn-material-input\" v-model=\"document.dataSourceLabel\" :options=\"availableDatasources\" optionLabel=\"label\" optionValue=\"label\" />\r\n                                    <label for=\"datasource\" class=\"kn-material-input-label\"> {{ $t('managers.businessModelManager.dataSource') }} </label>\r\n                                </span>\r\n\r\n                                <div v-if=\"isDataSetVisible\" class=\"p-field p-col-12 p-lg-6 p-d-flex\">\r\n                                    <div class=\"kn-flex\">\r\n                                        <span class=\"p-float-label\">\r\n                                            <InputText id=\"dataset\" class=\"kn-material-input\" v-model=\"dataset.name\" :disabled=\"true\" />\r\n                                            <label for=\"dataset\" class=\"kn-material-input-label\"> {{ $t('common.dataset') }} </label>\r\n                                        </span>\r\n                                    </div>\r\n                                    <Button v-if=\"isDataSetVisible\" icon=\"fas fa-search fa-1x\" class=\"p-button-text p-button-plain p-ml-2\" @click=\"showDatasetDialog = true\" />\r\n                                </div>\r\n\r\n                                <div class=\"p-field p-col-12 p-lg-6\">\r\n                                    <span class=\"p-float-label\">\r\n                                        <Dropdown\r\n                                            id=\"state\"\r\n                                            class=\"kn-material-input\"\r\n                                            v-model=\"v$.document.stateCode.$model\"\r\n                                            :options=\"availableStates\"\r\n                                            optionLabel=\"translatedValueName\"\r\n                                            optionValue=\"valueCd\"\r\n                                            :class=\"{\r\n                                                'p-invalid': v$.document.stateCode.$invalid && v$.document.stateCode.$dirty\r\n                                            }\"\r\n                                            @blur=\"v$.document.stateCode.$touch()\"\r\n                                            @change=\"$emit('touched')\"\r\n                                        />\r\n                                        <label for=\"state\" class=\"kn-material-input-label\"> {{ $t('common.state') }} *</label>\r\n                                    </span>\r\n                                    <KnValidationMessages class=\"p-mt-1\" :vComp=\"v$.document.stateCode\" :additionalTranslateParams=\"{ fieldName: $t('common.state') }\" />\r\n                                </div>\r\n                                <div class=\"p-field p-col-12 p-lg-6\">\r\n                                    <span class=\"p-float-label\">\r\n                                        <InputText id=\"refresh\" class=\"kn-material-input\" v-model=\"document.refreshSeconds\" type=\"number\" />\r\n                                        <label for=\"refresh\" class=\"kn-material-input-label\"> {{ $t('documentExecution.documentDetails.info.refresh') }} </label>\r\n                                    </span>\r\n                                    <small>{{ $t('documentExecution.documentDetails.info.refreshHint') }}</small>\r\n                                </div>\r\n                                <span class=\"p-field p-col-12 p-lg-6 p-jc-center p-mt-3\">\r\n                                    <InputSwitch id=\"visible\" v-model=\"document.visible\" />\r\n                                    <i class=\"far fa-eye p-ml-2\" />\r\n                                    <label for=\"visible\" class=\"kn-material-input-label p-ml-2\"> {{ $t('common.visible') }} </label>\r\n                                </span>\r\n                                <span class=\"p-field p-col-12 p-lg-6 p-mt-3\">\r\n                                    <InputSwitch id=\"locked\" v-model=\"lockedByUser\" @change=\"setIsLockedByUser\" />\r\n                                    <i class=\"fas fa-lock p-ml-2\" />\r\n                                    <label for=\"locked\" class=\"kn-material-input-label p-ml-2\"> {{ $t('common.locked') }} </label>\r\n                                </span>\r\n                            </form>\r\n                        </template>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"p-col-5 p-m-0 p-p-0 p-d-flex p-flex-column kn-flex\">\r\n            <Toolbar class=\"kn-toolbar kn-toolbar--secondary\">\r\n                <template #start>\r\n                    {{ $t('documentExecution.documentDetails.info.positionTitle') }}\r\n                </template>\r\n            </Toolbar>\r\n            <div id=\"position-content\" class=\"kn-flex kn-relative\">\r\n                <div :style=\"mainDescriptor.style.absoluteScroll\">\r\n                    <div id=\"driver-position-container\" class=\"p-m-2\" v-if=\"document.drivers && document.drivers.length > 0\">\r\n                        <Toolbar class=\"kn-toolbar kn-toolbar--default\">\r\n                            <template #start>\r\n                                {{ $t('documentExecution.documentDetails.info.parametersPanelPosition') }}\r\n                            </template>\r\n                        </Toolbar>\r\n                        <Card>\r\n                            <template #content>\r\n                                <span class=\"p-field p-float-label p-col-12\">\r\n                                    <Dropdown id=\"attributes\" class=\"kn-material-input kn-width-full\" v-model=\"document.parametersRegion\" :options=\"driversPositions\" :optionLabel=\"translatedLabel\" optionValue=\"value\">\r\n                                        <template #option=\"slotProps\">\r\n                                            <div class=\"p-dropdown-option\">\r\n                                                <span class=\"kn-capitalize\">{{ $t(slotProps.option.label) }}</span>\r\n                                            </div>\r\n                                        </template>\r\n                                    </Dropdown>\r\n                                    <label for=\"attributes\" class=\"kn-material-input-label\"> {{ $t('documentExecution.documentDetails.info.positionTitle') }} </label>\r\n                                </span>\r\n                            </template>\r\n                        </Card>\r\n                    </div>\r\n                    <div id=\"restriction-container\" class=\"p-m-2\">\r\n                        <Toolbar class=\"kn-toolbar kn-toolbar--default\">\r\n                            <template #start>\r\n                                {{ $t('documentExecution.documentDetails.info.restrictionsTitle') }}\r\n                            </template>\r\n                        </Toolbar>\r\n                        <Card>\r\n                            <template #content>\r\n                                <form class=\"p-formgrid p-grid p-mb-3\">\r\n                                    <span class=\"p-float-label p-col-10\">\r\n                                        <Textarea id=\"profiledVisibility\" class=\"kn-material-input kn-width-full\" rows=\"1\" :autoResize=\"true\" v-model=\"document.profiledVisibility\" :disabled=\"true\" />\r\n                                        <label for=\"profiledVisibility\" class=\"kn-material-input-label\"> {{ $t('documentExecution.documentDetails.info.profiledVisibility') }} </label>\r\n                                    </span>\r\n                                    <Button icon=\"fas fa-plus-circle fa-1x\" class=\"p-button-text p-button-plain p-ml-2 p-col-1\" :disabled=\"!visibilityAttribute\" @click=\"addRestriction\" />\r\n                                    <Button icon=\"fas fa-eraser fa-1x\" class=\"p-button-text p-button-plain p-ml-2 p-col-1\" @click=\"clearAllRestrictions\" />\r\n                                </form>\r\n                                <form class=\"p-formgrid p-grid\">\r\n                                    <span class=\"p-field p-float-label p-col-12 p-lg-5\">\r\n                                        <Dropdown id=\"attributes\" class=\"kn-material-input kn-width-full\" v-model=\"visibilityAttribute\" :options=\"availableAttributes\" optionLabel=\"attributeName\" optionValue=\"attributeName\" />\r\n                                        <label for=\"attributes\" class=\"kn-material-input-label\"> {{ $t('documentExecution.documentDetails.info.attribute') }} </label>\r\n                                    </span>\r\n                                    <span class=\"p-col-12 p-lg-1\" :style=\"infoDescriptor.style.center\">=</span>\r\n                                    <span class=\"p-field p-float-label p-col-12 p-lg-6\">\r\n                                        <InputText id=\"restrictionValue\" class=\"kn-material-input kn-width-full\" v-model=\"restrictionValue\" />\r\n                                        <label for=\"restrictionValue\" class=\"kn-material-input-label\"> {{ $t('documentExecution.documentDetails.info.restrictionValueHint') }} </label>\r\n                                    </span>\r\n                                </form>\r\n                            </template>\r\n                        </Card>\r\n                    </div>\r\n                    <div id=\"tree-container\" class=\"p-m-2\">\r\n                        <Toolbar class=\"kn-toolbar kn-toolbar--default\">\r\n                            <template #start>\r\n                                {{ $t('documentExecution.documentDetails.info.visibilityLocationTitle') }}\r\n                            </template>\r\n                        </Toolbar>\r\n                        <Card class=\"card-0-padding\">\r\n                            <template #content>\r\n                                <DocumentDetailsTree :propFunctionalities=\"folders\" :propSelectedFolders=\"document.functionalities\" @selected=\"setFunctionality\" />\r\n                            </template>\r\n                        </Card>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <DatasetDialog v-if=\"showDatasetDialog\" :selectedDataset=\"selectedDataset\" :visible=\"showDatasetDialog\" @closeDialog=\"showDatasetDialog = false\" @saveSelectedDataset=\"saveSelectedDataset\" />\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { iDocument, iDataSource, iEngine, iTemplate, iAttribute, iFolder } from '@/modules/documentExecution/documentDetails/DocumentDetails'\r\nimport { defineComponent, PropType } from 'vue'\r\nimport { createValidations } from '@/helpers/commons/validationHelper'\r\nimport { AxiosResponse } from 'axios'\r\nimport { mapState } from 'pinia'\r\nimport { startOlap } from '../../dialogs/olapDesignerDialog/DocumentDetailOlapHelpers'\r\nimport mainDescriptor from '../../DocumentDetailsDescriptor.json'\r\nimport infoDescriptor from './DocumentDetailsInformationsDescriptor.json'\r\nimport useValidate from '@vuelidate/core'\r\nimport DatasetDialog from './DocumentDetailsDatasetDialog.vue'\r\nimport KnValidationMessages from '@/components/UI/KnValidatonMessages.vue'\r\nimport Card from 'primevue/card'\r\nimport Textarea from 'primevue/textarea'\r\nimport Dropdown from 'primevue/dropdown'\r\nimport InputSwitch from 'primevue/inputswitch'\r\nimport KnInputFile from '@/components/UI/KnInputFile.vue'\r\nimport DocumentDetailsTree from './DocumentDetailsTree.vue'\r\nimport mainStore from '../../../../../App.store'\r\n\r\nimport cryptoRandomString from 'crypto-random-string'\r\n\r\nexport default defineComponent({\r\n    name: 'document-details-informations',\r\n    components: { DatasetDialog, Card, Textarea, Dropdown, InputSwitch, KnValidationMessages, KnInputFile, DocumentDetailsTree },\r\n    props: {\r\n        selectedDocument: { type: Object as PropType<iDocument> },\r\n        selectedDataset: { type: Object },\r\n        availableStates: { type: Array },\r\n        documentTypes: { type: Array as any, required: true },\r\n        documentEngines: { type: Array as PropType<iEngine[]>, required: true },\r\n        availableDatasources: { type: Array as PropType<iDataSource[]> },\r\n        availableFolders: { type: Array as PropType<iFolder[]> },\r\n        availableTemplates: { type: Array as PropType<iTemplate[]> },\r\n        availableAttributes: { type: Array as PropType<iAttribute[]> }\r\n    },\r\n    emits: ['setTemplateForUpload', 'setImageForUpload', 'deleteImage', 'touched', 'openDesignerDialog'],\r\n    computed: {\r\n        filteredEngines(): any {\r\n            if (this.document.typeCode) {\r\n                return this.documentEngines.filter((engine) => engine.biobjTypeId === this.documentTypes.filter((type) => type.valueCd === this.document.typeCode)[0].valueId)\r\n            }\r\n            return []\r\n        },\r\n        isDataSourceVisible(): boolean {\r\n            switch (this.document.engine) {\r\n                case 'knowageofficeengine':\r\n                case 'knowagecompositedoce':\r\n                case 'knowageprocessengine':\r\n                case 'knowagechartengine':\r\n                case 'knowagenetworkengine':\r\n                case 'knowagecockpitengine':\r\n                case 'knowagedossierengine':\r\n                case 'knowagekpiengine':\r\n                case 'knowagesvgviewerengine':\r\n                    return false\r\n                default:\r\n                    return true\r\n            }\r\n        },\r\n        isDataSetVisible(): boolean {\r\n            switch (this.document.engine) {\r\n                case 'knowagegisengine':\r\n                case 'knowagechartengine':\r\n                case 'knowagenetworkengine':\r\n                    return true\r\n                default:\r\n                    return false\r\n            }\r\n        },\r\n        getImageUrl(): string {\r\n            return import.meta.env.VITE_HOST_URL + `/knowage/servlet/AdapterHTTP?ACTION_NAME=MANAGE_PREVIEW_FILE_ACTION&SBI_ENVIRONMENT=DOCBROWSER&LIGHT_NAVIGATOR_DISABLED=TRUE&operation=DOWNLOAD&fileName=${this.selectedDocument?.previewFile}`\r\n        },\r\n        designerButtonVisible(): boolean {\r\n            return this.document.typeCode == 'OLAP' || this.document.typeCode == 'KPI' || this.document.engine == 'knowagegisengine'\r\n        },\r\n        ...mapState(mainStore, {\r\n            user: 'user'\r\n        })\r\n    },\r\n    data() {\r\n        return {\r\n            v$: useValidate() as any,\r\n            mainDescriptor,\r\n            infoDescriptor,\r\n            uploading: false,\r\n            lockedByUser: false,\r\n            triggerUpload: false,\r\n            showDatasetDialog: false,\r\n            triggerImageUpload: false,\r\n            dataset: {} as any,\r\n            folders: [] as iFolder[],\r\n            document: {} as iDocument,\r\n            templates: [] as iTemplate[],\r\n            templateToUpload: { name: '' } as any,\r\n            imageToUpload: { name: '' } as any,\r\n            visibilityAttribute: '',\r\n            restrictionValue: '',\r\n            driversPositions: infoDescriptor.driversPositions,\r\n            listOfTemplates: [] as iTemplate[],\r\n            imagePreviewUrl: null as any,\r\n            imagePreview: false\r\n        }\r\n    },\r\n    setup() {\r\n        const store = mainStore()\r\n        return { store }\r\n    },\r\n    async created() {\r\n        this.setData()\r\n        await this.getAllTemplates()\r\n    },\r\n    watch: {\r\n        async selectedDocument() {\r\n            this.setData()\r\n            await this.getAllTemplates()\r\n        }\r\n    },\r\n    validations() {\r\n        const validationObject = { document: createValidations('document', infoDescriptor.validations.document) }\r\n        return validationObject\r\n    },\r\n    methods: {\r\n        setData() {\r\n            this.templates = this.availableTemplates as iTemplate[]\r\n            this.document = this.selectedDocument as iDocument\r\n            this.dataset = this.selectedDataset\r\n            this.folders = this.availableFolders as iFolder[]\r\n            this.resetImagePreview()\r\n            this.IsLockedByUser()\r\n        },\r\n        IsLockedByUser() {\r\n            this.lockedByUser = this.document.lockedByUser === 'true' ? true : false\r\n        },\r\n        setIsLockedByUser() {\r\n            this.document.lockedByUser = this.lockedByUser ? 'true' : 'false'\r\n        },\r\n        addRestriction() {\r\n            if (this.document.profiledVisibility) {\r\n                this.document.profiledVisibility = this.document.profiledVisibility + ' AND ' + this.visibilityAttribute + ' = ' + this.restrictionValue\r\n            } else {\r\n                this.document.profiledVisibility = this.visibilityAttribute + ' = ' + this.restrictionValue\r\n            }\r\n        },\r\n        clearAllRestrictions() {\r\n            this.document.profiledVisibility = ''\r\n            this.visibilityAttribute = ''\r\n            this.restrictionValue = ''\r\n        },\r\n        saveSelectedDataset(event) {\r\n            this.document.dataSetId = event.id\r\n            this.dataset = event\r\n        },\r\n        setUploadType() {\r\n            this.triggerUpload = false\r\n            setTimeout(() => (this.triggerUpload = true), 200)\r\n        },\r\n        setTemplateForUpload(event) {\r\n            this.uploading = true\r\n            this.templateToUpload = event.target.files[0]\r\n            this.$emit('setTemplateForUpload', event.target.files[0])\r\n            this.triggerUpload = false\r\n            setTimeout(() => (this.uploading = false), 200)\r\n        },\r\n        setImageUploadType() {\r\n            this.triggerImageUpload = false\r\n            setTimeout(() => (this.triggerImageUpload = true), 200)\r\n        },\r\n        setImageForUpload(event) {\r\n            this.uploading = true\r\n            this.imageToUpload = event.target.files[0]\r\n            this.$emit('setImageForUpload', event.target.files[0])\r\n            this.setImagePreview(event.target.files[0])\r\n            this.triggerImageUpload = false\r\n            setTimeout(() => (this.uploading = false), 200)\r\n        },\r\n        setImagePreview(imageFile) {\r\n            this.imagePreviewUrl = URL.createObjectURL(imageFile)\r\n            this.imagePreview = true\r\n            this.store.setInfo({ title: this.$t('common.uploadFileSuccess'), msg: this.$t('documentExecution.documentDetails.info.imageInfo') })\r\n        },\r\n        resetImagePreview() {\r\n            this.imagePreviewUrl = null\r\n            this.imagePreview = false\r\n        },\r\n        setFunctionality(event) {\r\n            this.document.functionalities = event\r\n        },\r\n        onTypeChange() {\r\n            this.$emit('touched')\r\n            this.document.engine = ''\r\n        },\r\n        openDesignerConfirm() {\r\n            this.$confirm.require({\r\n                header: this.$t('common.toast.warning'),\r\n                message: this.$t('documentExecution.olap.openDesignerMsg'),\r\n                icon: 'pi pi-exclamation-triangle',\r\n                accept: () => {\r\n                    switch (this.document.typeCode) {\r\n                        case 'KPI':\r\n                            this.openKpiDocumentDesigner()\r\n                            break\r\n                        case 'MAP': {\r\n                            this.openGis()\r\n                            break\r\n                        }\r\n                        default:\r\n                            this.openDesigner()\r\n                    }\r\n                }\r\n            })\r\n        },\r\n        async openDesigner() {\r\n            if (this.listOfTemplates.length === 0) {\r\n                this.$emit('openDesignerDialog')\r\n            } else {\r\n                const activeTemplate = this.findActiveTemplate()\r\n                const sbiExecutionId = cryptoRandomString({ length: 16, type: 'base64' })\r\n                await startOlap(this.$http, this.user, sbiExecutionId, this.document, activeTemplate, this.$router)\r\n            }\r\n        },\r\n        findActiveTemplate() {\r\n            let activeTemplate = null as any\r\n            for (let i = 0; i < this.listOfTemplates.length; i++) {\r\n                if (this.listOfTemplates[i].active) {\r\n                    activeTemplate = this.listOfTemplates[i]\r\n                    break\r\n                }\r\n            }\r\n            return activeTemplate\r\n        },\r\n        translatedLabel(a) {\r\n            return this.$t(a.label)\r\n        },\r\n        openKpiDocumentDesigner() {\r\n            this.$router.push(`/kpi-edit/${this.document.id}?from=documentDetail`)\r\n        },\r\n        openGis() {\r\n            this.$router.push(`/gis/edit?documentId=${this.document.id}`)\r\n        },\r\n        async getAllTemplates() {\r\n            if (this.document && this.document.id) this.$http.get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/documentdetails/${this.document.id}/templates`).then((response: AxiosResponse<any>) => (this.listOfTemplates = response.data as iTemplate[]))\r\n        }\r\n    }\r\n})\r\n</script>\r\n<style lang=\"scss\">\r\n.p-dropdown-label {\r\n    text-transform: capitalize;\r\n}\r\n.card-0-padding .p-card-body,\r\n.card-0-padding .p-card-content {\r\n    padding: 0px;\r\n}\r\n</style>\r\n","<template>\r\n    <div v-if=\"!loading\" class=\"kn-remove-card-padding p-col\">\r\n        <Toolbar class=\"kn-toolbar kn-toolbar--default\">\r\n            <template #start>\r\n                {{ $t('documentExecution.documentDetails.drivers.conditionsTitle') }}\r\n            </template>\r\n            <template #end>\r\n                <Button :label=\"$t('managers.businessModelManager.addCondition')\" class=\"p-button-text p-button-rounded p-button-plain kn-white-color\" @click=\"showForm\" />\r\n            </template>\r\n        </Toolbar>\r\n        <ProgressBar mode=\"indeterminate\" class=\"kn-progress-bar\" v-if=\"loading\" />\r\n        <Listbox class=\"kn-list data-condition-list\" :options=\"conditions\" @change=\"showForm\">\r\n            <template #empty>{{ $t('documentExecution.documentDetails.drivers.noDataCond') }} </template>\r\n            <template #option=\"slotProps\">\r\n                <div class=\"kn-list-item\">\r\n                    <div class=\"kn-list-item-text\">\r\n                        <span class=\"kn-truncated\" v-tooltip.top=\"slotProps.option.filterOperation + $t('documentExecution.documentDetails.drivers.dataConditionsValue') + slotProps.option.parFatherUrlName\">\r\n                            <b>{{ slotProps.option.filterOperation }} {{ $t('documentExecution.documentDetails.drivers.dataConditionsValue') }}</b> {{ slotProps.option.parFatherUrlName }}\r\n                        </span>\r\n                    </div>\r\n                    <Button icon=\"far fa-trash-alt\" class=\"p-button-text p-button-rounded p-button-plain\" @click.stop=\"deleteConditions(slotProps.option)\" />\r\n                </div>\r\n            </template>\r\n        </Listbox>\r\n\r\n        <Dialog class=\"remove-padding\" :style=\"driversDescriptor.style.conditionDialog\" :visible=\"conditionFormVisible\" :modal=\"true\" :closable=\"false\">\r\n            <template #header>\r\n                <Toolbar class=\"kn-toolbar kn-toolbar--primary kn-width-full\">\r\n                    <template #start>\r\n                        {{ $t('documentExecution.documentDetails.drivers.visualizationTitle') }}\r\n                    </template>\r\n                </Toolbar>\r\n            </template>\r\n            <div id=\"form-container\" class=\"p-m-1\">\r\n                <div>\r\n                    <InlineMessage severity=\"info\" class=\"kn-width-full\">{{ $t('documentExecution.documentDetails.drivers.dataHint') }}</InlineMessage>\r\n                </div>\r\n\r\n                <form class=\"p-fluid p-formgrid p-grid p-mx-2 p-mt-5\">\r\n                    <div class=\"p-field p-col-12 p-md-4\">\r\n                        <span class=\"p-float-label\">\r\n                            <Dropdown id=\"driver\" class=\"kn-material-input\" v-model=\"condition.parFatherId\" :options=\"excludeCurrentDriverFromList()\" optionLabel=\"label\" optionValue=\"id\" @change=\"setParFatherUrlName\" />\r\n                            <label for=\"driver\" class=\"kn-material-input-label\"> {{ $t('documentExecution.documentDetails.drivers.ad') }} {{ $t('documentExecution.documentDetails.drivers.adDepends') }} </label>\r\n                        </span>\r\n                    </div>\r\n                    <div class=\"p-field p-col-12 p-md-4\">\r\n                        <span class=\"p-float-label\">\r\n                            <Dropdown id=\"filterOp\" class=\"kn-material-input\" v-model=\"condition.filterOperation\" :options=\"availableOperators\" />\r\n                            <label for=\"filterOp\" class=\"kn-material-input-label\"> {{ $t('managers.businessModelManager.filterOperator') }} </label>\r\n                        </span>\r\n                    </div>\r\n                    <div class=\"p-field p-col-12 p-md-4\">\r\n                        <span class=\"p-float-label\">\r\n                            <Dropdown id=\"logicalOp\" class=\"kn-material-input\" v-model=\"condition.logicOperator\" :options=\"connectingOperators\" />\r\n                            <label for=\"logicalOp\" class=\"kn-material-input-label\"> {{ $t('managers.businessModelManager.logicOperator') }} </label>\r\n                        </span>\r\n                    </div>\r\n                    <div v-for=\"mode in modes\" :key=\"mode.useID\" class=\"p-col-12 p-mb-4\">\r\n                        <form class=\"p-fluid p-formgrid p-grid\">\r\n                            <p class=\"p-col-12 p-m-0\">{{ $t('managers.businessModelManager.modality') + ': ' + mode.name }}</p>\r\n                            <div class=\"mode-inputs p-col-4\" :style=\"driversDescriptor.style.modalityCheckbox\">\r\n                                <Checkbox class=\"p-mr-2\" :value=\"mode.useID\" v-model=\"selectedModes\" :disabled=\"readonly\" />\r\n                                <label>{{ $t('managers.businessModelManager.check') }}</label>\r\n                            </div>\r\n                            <div class=\"mode-inputs p-col-8\">\r\n                                <label class=\"kn-material-input-label\">{{ $t('managers.businessModelManager.lovsColumn') }}</label>\r\n                                <Dropdown id=\"parFather\" class=\"kn-material-input\" v-model=\"modalities[mode.useID]\" :options=\"getLovs(mode.idLov)\" :placeholder=\"$t('managers.businessModelManager.lovsColumnSelect')\">\r\n                                    <template #value=\"slotProps\">\r\n                                        <div v-if=\"slotProps.value\">\r\n                                            <span>{{ slotProps.value }}</span>\r\n                                        </div>\r\n                                    </template>\r\n                                    <template #option=\"slotProps\">\r\n                                        <div>\r\n                                            <span>{{ slotProps.option }}</span>\r\n                                        </div>\r\n                                    </template>\r\n                                </Dropdown>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n\r\n            <template #footer>\r\n                <Button class=\"p-button-text kn-button\" :label=\"$t('common.cancel')\" @click=\"conditionFormVisible = false\" />\r\n                <Button class=\"kn-button kn-button--primary\" :label=\"$t('common.save')\" @click=\"handleSubmit\" />\r\n            </template>\r\n        </Dialog>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent, PropType } from 'vue'\r\nimport { iDriver, iDocument } from '@/modules/documentExecution/documentDetails/DocumentDetails'\r\nimport { AxiosResponse } from 'axios'\r\nimport mainDescriptor from '@/modules/documentExecution/documentDetails/DocumentDetailsDescriptor.json'\r\nimport driversDescriptor from './DocumentDetailsDriversDescriptor.json'\r\nimport Listbox from 'primevue/listbox'\r\nimport Dialog from 'primevue/dialog'\r\nimport Dropdown from 'primevue/dropdown'\r\nimport Checkbox from 'primevue/checkbox'\r\nimport InlineMessage from 'primevue/inlinemessage'\r\nimport mainStore from '../../../../../App.store'\r\n\r\nexport default defineComponent({\r\n    name: 'document-drivers',\r\n    components: { Listbox, Dialog, Dropdown, Checkbox, InlineMessage },\r\n    props: { availableDrivers: { type: Array as PropType<iDriver[]>, required: true }, selectedDocument: { type: Object as PropType<iDocument>, required: true }, selectedDriver: { type: Object as PropType<iDriver>, required: true } },\r\n    emits: ['driversChanged'],\r\n    data() {\r\n        return {\r\n            mainDescriptor,\r\n            driversDescriptor,\r\n            availableOperators: driversDescriptor.dataOperators,\r\n            connectingOperators: driversDescriptor.connectingOperators,\r\n            modes: [] as any,\r\n            lovs: [] as any,\r\n            condition: {} as any,\r\n            conditionFormVisible: false,\r\n            loading: false,\r\n            modalities: {} as any,\r\n            selectedModes: [] as any,\r\n            originalModalities: [] as any[],\r\n            conditions: [] as any[],\r\n            oldDropdownValue: null as any,\r\n            driver: null as any | null,\r\n            operation: 'insert',\r\n            errorMessage: '',\r\n            displayWarning: false\r\n        }\r\n    },\r\n    watch: {\r\n        async selectedDriver() {\r\n            this.loadSelectedDriver()\r\n            if (this.driver) {\r\n                await this.loadDataDependencies()\r\n                if (this.driver.parameter) {\r\n                    await this.loadModes()\r\n                    await this.loadLovs()\r\n                }\r\n            }\r\n        }\r\n    },\r\n    setup() {\r\n        const store = mainStore()\r\n        return { store }\r\n    },\r\n    async created() {\r\n        this.loadSelectedDriver()\r\n        if (this.selectedDriver) {\r\n            await this.loadDataDependencies()\r\n            await this.loadModes()\r\n            await this.loadLovs()\r\n        }\r\n    },\r\n    methods: {\r\n        loadSelectedDriver() {\r\n            this.oldDropdownValue = null\r\n            this.driver = this.selectedDriver as any\r\n\r\n            if (this.driver) {\r\n                if (this.driver.parameter) {\r\n                    this.oldDropdownValue = this.driver.parameter\r\n                }\r\n            }\r\n        },\r\n        async loadDataDependencies() {\r\n            this.conditions = []\r\n            if (this.driver && this.driver.id) {\r\n                await this.$http.get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/documentdetails/${this.selectedDocument.id}/datadependencies?driverId=${this.selectedDriver.id}`).then((response: AxiosResponse<any>) =>\r\n                    response.data.forEach((condition: any) => {\r\n                        const index = this.conditions.findIndex((cond) => cond.parFatherId === condition.parFatherId && cond.filterOperation == condition.filterOperation && cond.logicOperator == condition.logicOperator)\r\n                        condition.modalities = []\r\n                        condition.modalities.push({ conditionId: condition.id, useModeId: condition.useModeId, filterColumn: condition.filterColumn })\r\n                        if (index > -1) {\r\n                            this.conditions[index].modalities.push({ conditionId: condition.id, useModeId: condition.useModeId, filterColumn: condition.filterColumn })\r\n                        } else {\r\n                            this.conditions.push(condition)\r\n                        }\r\n                    })\r\n                )\r\n            }\r\n        },\r\n        async loadModes() {\r\n            this.$http.get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/analyticalDrivers/${this.selectedDriver.parID}/modes`).then((response: AxiosResponse<any>) => (this.modes = response.data))\r\n        },\r\n        async loadLovs() {\r\n            this.$http.get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/analyticalDrivers/${this.selectedDriver.parID}/lovs`).then((response: AxiosResponse<any>) => (this.lovs = response.data))\r\n        },\r\n        getLovs(lovId: number) {\r\n            const index = this.lovs.findIndex((lov) => lov.id === lovId)\r\n            if (index > -1) {\r\n                const lov = JSON.parse(this.lovs[index].lovProviderJSON)\r\n                return lov.QUERY['VISIBLE-COLUMNS'].split(',')\r\n            }\r\n        },\r\n        isModeActive(modeId: number) {\r\n            const index = this.selectedModes.findIndex((id: any) => {\r\n                return id === modeId\r\n            })\r\n            return index === -1\r\n        },\r\n        urlNotUnique(url: string) {\r\n            const index = this.availableDrivers.findIndex((driver) => driver.parameterUrlName === url && driver.id != this.driver?.id)\r\n            return index === -1\r\n        },\r\n        excludeCurrentDriverFromList() {\r\n            return this.availableDrivers.filter((driver) => driver.id != this.selectedDriver.id)\r\n        },\r\n        setParFatherUrlName(event) {\r\n            this.availableDrivers.filter((driver) => {\r\n                driver.id === event.value ? (this.condition.parFatherUrlName = driver.parameterUrlName) : ''\r\n            })\r\n        },\r\n        showAnalyticalDropdownConfirm() {\r\n            if (this.oldDropdownValue) {\r\n                this.$confirm.require({\r\n                    message: this.$t('managers.businessModelManager.analyticalDropdownConfirm'),\r\n                    header: this.$t('common.toast.deleteTitle'),\r\n                    icon: 'pi pi-exclamation-triangle',\r\n                    // accept: () => this.deleteAllConditions(),\r\n                    accept: () => '',\r\n                    reject: () => this.resetDrodpwonValue()\r\n                })\r\n            }\r\n        },\r\n        resetDrodpwonValue() {\r\n            if (this.driver) {\r\n                this.driver.parameter = this.oldDropdownValue\r\n            }\r\n        },\r\n        showForm(event: any) {\r\n            this.originalModalities = []\r\n            this.selectedModes = []\r\n            if (event.value) {\r\n                this.condition = { ...event.value, parFather: this.selectedDriver }\r\n                this.condition.modalities.forEach((modality: any) => {\r\n                    this.originalModalities.push(modality)\r\n                    this.selectedModes.push(modality.useModeId)\r\n                    this.modalities[modality.useModeId] = modality.filterColumn\r\n                })\r\n            } else {\r\n                this.condition = {\r\n                    parFather: this.excludeCurrentDriverFromList()[0],\r\n                    parFatherId: this.excludeCurrentDriverFromList()[0].id,\r\n                    filterOperation: 'equal',\r\n                    logicOperator: 'AND'\r\n                }\r\n            }\r\n            this.conditionFormVisible = true\r\n        },\r\n        async handleSubmit() {\r\n            if (this.condition.id) {\r\n                this.operation = 'update'\r\n            }\r\n            const modalityKeys = Object.keys(this.modalities)\r\n            for (let i = 0; i < this.selectedModes.length; i++) {\r\n                for (let j = 0; j < modalityKeys.length; j++) {\r\n                    if (this.selectedModes[i] === +modalityKeys[j]) {\r\n                        console.log('CONDITION -----------', this.condition)\r\n                        console.log('SEL DRIVER -----------', this.selectedDriver)\r\n                        const conditionForPost = {\r\n                            ...this.condition,\r\n                            parFatherId: this.condition.parFatherId,\r\n                            // parFatherUrlName: (this.selectedDriver as any).parameterUrlName,\r\n                            parFatherUrlName: this.getDriverProperty(this.condition.parFatherId, 'parameterUrlName'),\r\n                            parId: (this.selectedDriver as any).id,\r\n                            useModeId: +modalityKeys[j],\r\n                            filterColumn: this.modalities[this.selectedModes[i]]\r\n                        }\r\n\r\n                        if (this.operation === 'update') {\r\n                            const index = this.originalModalities.findIndex((modality) => {\r\n                                return modality.conditionId === conditionForPost.id\r\n                            })\r\n                            if (index > -1) {\r\n                                this.originalModalities.splice(index, 1)\r\n                            }\r\n                        }\r\n\r\n                        if (!conditionForPost.prog) {\r\n                            conditionForPost.prog = 0\r\n                        }\r\n                        conditionForPost.prog++\r\n                        delete conditionForPost.parFather\r\n                        delete conditionForPost.modalities\r\n                        await this.sendRequest(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/documentdetails/${this.selectedDocument.id}/datadependencies`, conditionForPost).then((response: AxiosResponse<any>) => {\r\n                            if (response.data.errors) {\r\n                                this.errorMessage = response.data.errors[0].message\r\n                                this.displayWarning = true\r\n                            } else {\r\n                                this.store.setInfo({\r\n                                    title: this.$t('common.toast.success'),\r\n                                    msg: this.$t('documentExecution.documentDetails.drivers.conditionSavedMsg')\r\n                                })\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            this.originalModalities.forEach((modality) => {\r\n                this.deleteCondition({\r\n                    ...this.condition,\r\n                    id: modality.conditionId,\r\n                    parFatherId: this.condition.parFatherId,\r\n                    parFatherUrlName: (this.selectedDriver as any).parameterUrlName,\r\n                    parId: (this.selectedDriver as any).id,\r\n                    useModeId: modality.useModeId,\r\n                    filterColumn: modality.filterColumn\r\n                })\r\n            })\r\n            this.originalModalities = []\r\n\r\n            this.loadData()\r\n        },\r\n        sendRequest(url: string, condition: any) {\r\n            if (this.operation === 'insert') {\r\n                return this.$http.post(url, condition, { headers: { Accept: 'application/json, text/plain, */*', 'X-Disable-Errors': 'true' } })\r\n            } else {\r\n                return this.$http.put(url, condition, { headers: { Accept: 'application/json, text/plain, */*', 'X-Disable-Errors': 'true' } })\r\n            }\r\n        },\r\n        async deleteConditions(condition: any) {\r\n            condition.modalities.forEach((mode: any) => {\r\n                this.deleteCondition({ ...condition, id: mode.conditionId, useModeId: mode.useModeId, filterColumn: mode.filterColumn })\r\n            })\r\n        },\r\n        async deleteCondition(condition: any) {\r\n            delete condition.parFather\r\n            delete condition.modalities\r\n            await this.$http.post(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/documentdetails/${this.selectedDocument.id}/datadependencies/delete`, condition, { headers: { Accept: 'application/json, text/plain, */*', 'X-Disable-Errors': 'true' } }).then(() => {\r\n                this.store.setInfo({\r\n                    title: this.$t('common.toast.deleteTitle'),\r\n                    msg: this.$t('common.toast.deleteSuccess')\r\n                })\r\n                this.loadData()\r\n            })\r\n        },\r\n        deleteAllConditions() {\r\n            this.oldDropdownValue = this.driver?.parameter\r\n            this.conditions.forEach((condition) => this.deleteCondition(condition))\r\n        },\r\n        loadData() {\r\n            this.loadDataDependencies()\r\n            this.loadModes()\r\n            this.loadLovs()\r\n            this.selectedModes = []\r\n            this.condition = {}\r\n            this.operation = 'insert'\r\n            this.conditionFormVisible = false\r\n        },\r\n        getDriverProperty(driverId: number, property: string) {\r\n            const index = this.availableDrivers.findIndex((driver: any) => driver.id === driverId)\r\n            return index !== -1 ? this.availableDrivers[index][property] : ''\r\n        }\r\n    }\r\n})\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.kn-remove-card-padding .data-condition-list {\r\n    border: 1px solid var(--kn-color-borders);\r\n    border-top: none;\r\n}\r\n</style>\r\n","<template>\r\n    <div class=\"kn-remove-card-padding p-col\">\r\n        <Toolbar class=\"kn-toolbar kn-toolbar--default\">\r\n            <template #start>\r\n                {{ $t('documentExecution.documentDetails.drivers.visibilityTitle') }}\r\n            </template>\r\n            <template #end>\r\n                <Button :label=\"$t('managers.businessModelManager.addCondition')\" class=\"p-button-text p-button-rounded p-button-plain kn-white-color\" @click=\"openVisibilityConditionDialog('newCondition')\" />\r\n            </template>\r\n        </Toolbar>\r\n        <ProgressBar mode=\"indeterminate\" class=\"kn-progress-bar\" v-if=\"loading\" />\r\n        <Listbox class=\"kn-list data-condition-list\" :options=\"visusalDependencyObjects\" @change=\"openVisibilityConditionDialog($event.value)\">\r\n            <template #empty>{{ $t('documentExecution.documentDetails.drivers.noVisCond') }}</template>\r\n            <template #option=\"slotProps\">\r\n                <div class=\"kn-list-item\">\r\n                    <div class=\"kn-list-item-text\">\r\n                        <span class=\"kn-truncated\" v-tooltip.top=\"slotProps.option.viewLabel + ' ' + slotProps.option.parFatherUrlName + ' ' + slotProps.option.operation + slotProps.option.compareValue\">\r\n                            <b>{{ slotProps.option.viewLabel }}</b> {{ slotProps.option.parFatherUrlName }} {{ slotProps.option.operation }}{{ slotProps.option.compareValue }}\r\n                        </span>\r\n                    </div>\r\n                    <Button icon=\"far fa-trash-alt\" class=\"p-button-text p-button-rounded p-button-plain\" @click.stop=\"deleteCondition(slotProps.option)\" />\r\n                </div>\r\n            </template>\r\n        </Listbox>\r\n    </div>\r\n    <Dialog class=\"remove-padding\" :style=\"driversDescriptor.style.conditionDialog\" :visible=\"showVisibilityConditionDialog\" :modal=\"true\" :closable=\"false\">\r\n        <template #header>\r\n            <Toolbar class=\"kn-toolbar kn-toolbar--primary kn-width-full\">\r\n                <template #start>\r\n                    {{ $t('documentExecution.documentDetails.drivers.visualizationTitle') }}\r\n                </template>\r\n            </Toolbar>\r\n        </template>\r\n\r\n        <InlineMessage severity=\"info\" class=\"p-m-2 kn-width-full\">{{ $t('documentExecution.documentDetails.drivers.visualizationHint') }}</InlineMessage>\r\n\r\n        <form class=\"p-fluid p-formgrid p-grid p-m-2\">\r\n            <div class=\"p-field p-col-12 p-mt-2\">\r\n                <span class=\"p-float-label\">\r\n                    <InputText id=\"title\" class=\"kn-material-input\" v-model=\"v$.selectedCondition.viewLabel.$model\" :class=\"{ 'p-invalid': v$.selectedCondition.viewLabel.$invalid && v$.selectedCondition.viewLabel.$dirty }\" @blur=\"v$.selectedCondition.viewLabel.$touch()\" />\r\n                    <label for=\"title\" class=\"kn-material-input-label\"> {{ $t('common.title') }} *</label>\r\n                </span>\r\n                <KnValidationMessages class=\"p-mt-1\" :vComp=\"v$.selectedCondition.viewLabel\" :additionalTranslateParams=\"{ fieldName: $t('common.title') }\" />\r\n            </div>\r\n            <div class=\"p-field p-col-12 p-md-4\">\r\n                <span class=\"p-float-label\">\r\n                    <Dropdown\r\n                        id=\"driver\"\r\n                        class=\"kn-material-input\"\r\n                        v-model=\"v$.selectedCondition.parFatherId.$model\"\r\n                        :options=\"availableDrivers\"\r\n                        optionLabel=\"label\"\r\n                        optionValue=\"id\"\r\n                        :class=\"{ 'p-invalid': v$.selectedCondition.parFatherId.$invalid && v$.selectedCondition.parFatherId.$dirty }\"\r\n                        @blur=\"v$.selectedCondition.parFatherId.$touch()\"\r\n                        @change=\"setParFatherUrlName\"\r\n                    />\r\n                    <label for=\"driver\" class=\"kn-material-input-label\"> {{ $t('managers.businessModelManager.analyticalDriver') }} *</label>\r\n                </span>\r\n                <KnValidationMessages class=\"p-mt-1\" :vComp=\"v$.selectedCondition.parFatherId\" :additionalTranslateParams=\"{ fieldName: $t('managers.businessModelManager.analyticalDriver') }\" />\r\n            </div>\r\n            <div class=\"p-field p-col-12 p-md-4\">\r\n                <span class=\"p-float-label\">\r\n                    <Dropdown\r\n                        id=\"operator\"\r\n                        class=\"kn-material-input\"\r\n                        v-model=\"v$.selectedCondition.operation.$model\"\r\n                        :options=\"availableOperators\"\r\n                        :class=\"{ 'p-invalid': v$.selectedCondition.operation.$invalid && v$.selectedCondition.operation.$dirty }\"\r\n                        @blur=\"v$.selectedCondition.operation.$touch()\"\r\n                    />\r\n                    <label for=\"operator\" class=\"kn-material-input-label\"> {{ $t('managers.businessModelManager.analyticalDriver') }} *</label>\r\n                </span>\r\n                <KnValidationMessages class=\"p-mt-1\" :vComp=\"v$.selectedCondition.operation\" :additionalTranslateParams=\"{ fieldName: $t('managers.businessModelManager.analyticalDriver') }\" />\r\n            </div>\r\n            <div class=\"p-field p-col-12 p-md-4\">\r\n                <span class=\"p-float-label\">\r\n                    <InputText id=\"title\" class=\"kn-material-input\" v-model=\"v$.selectedCondition.compareValue.$model\" :class=\"{ 'p-invalid': v$.selectedCondition.compareValue.$invalid && v$.selectedCondition.compareValue.$dirty }\" @blur=\"v$.selectedCondition.compareValue.$touch()\" />\r\n                    <label for=\"title\" class=\"kn-material-input-label\"> {{ $t('common.value') }} *</label>\r\n                </span>\r\n                <KnValidationMessages class=\"p-mt-1\" :vComp=\"v$.selectedCondition.compareValue\" :additionalTranslateParams=\"{ fieldName: $t('common.value') }\" />\r\n            </div>\r\n        </form>\r\n\r\n        <template #footer>\r\n            <Button class=\"p-button-text kn-button\" :label=\"$t('common.cancel')\" @click=\";(showVisibilityConditionDialog = false), (selectedCondition = {})\" />\r\n            <Button class=\"kn-button kn-button--primary\" :label=\"$t('common.save')\" :disabled=\"v$.$invalid\" @click=\"saveCondition\" />\r\n        </template>\r\n    </Dialog>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { iDriver, iDocument, iVisualDependency } from '@/modules/documentExecution/documentDetails/DocumentDetails'\r\nimport { defineComponent, PropType } from 'vue'\r\nimport { createValidations, ICustomValidatorMap } from '@/helpers/commons/validationHelper'\r\nimport { AxiosResponse } from 'axios'\r\nimport useValidate from '@vuelidate/core'\r\nimport mainDescriptor from '@/modules/documentExecution/documentDetails/DocumentDetailsDescriptor.json'\r\nimport driversDescriptor from './DocumentDetailsDriversDescriptor.json'\r\nimport KnValidationMessages from '@/components/UI/KnValidatonMessages.vue'\r\nimport Listbox from 'primevue/listbox'\r\nimport Dialog from 'primevue/dialog'\r\nimport Dropdown from 'primevue/dropdown'\r\nimport InlineMessage from 'primevue/inlinemessage'\r\nimport mainStore from '../../../../../App.store'\r\n\r\nexport default defineComponent({\r\n    name: 'document-drivers',\r\n    components: { Listbox, Dialog, Dropdown, KnValidationMessages, InlineMessage },\r\n    props: { selectedDocument: { type: Object as PropType<iDocument>, required: true }, availableDrivers: { type: Array as PropType<iDriver[]>, required: true }, selectedDriver: { type: Object as PropType<iDriver>, required: true } },\r\n    emits: ['driversChanged'],\r\n    data() {\r\n        return {\r\n            v$: useValidate() as any,\r\n            mainDescriptor,\r\n            driversDescriptor,\r\n            selectedCondition: {} as iVisualDependency,\r\n            visusalDependencyObjects: [] as iVisualDependency[],\r\n            availableOperators: driversDescriptor.availableOperators,\r\n            showVisibilityConditionDialog: false,\r\n            loading: false\r\n        }\r\n    },\r\n    watch: {\r\n        selectedDriver() {\r\n            this.selectedDriver.id ? this.getVisualDependenciesByDriverId() : ''\r\n        }\r\n    },\r\n    setup() {\r\n        const store = mainStore()\r\n        return { store }\r\n    },\r\n    created() {\r\n        this.selectedDriver.id ? this.getVisualDependenciesByDriverId() : ''\r\n    },\r\n    validations() {\r\n        const visibilityValidator = (value) => {\r\n            return Object.keys(this.selectedCondition).length === 0 || value\r\n        }\r\n        const customValidators: ICustomValidatorMap = { 'visibility-validator': visibilityValidator }\r\n        const validationObject = { selectedCondition: createValidations('selectedCondition', driversDescriptor.validations.selectedCondition, customValidators) }\r\n        return validationObject\r\n    },\r\n    methods: {\r\n        async getVisualDependenciesByDriverId() {\r\n            this.loading = true\r\n            this.$http\r\n                .get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/documentdetails/${this.selectedDocument.id}/visualdependencies?driverId=${this.selectedDriver.id}`)\r\n                .then((response: AxiosResponse<any>) => {\r\n                    this.visusalDependencyObjects = response.data\r\n                })\r\n                .finally(() => (this.loading = false))\r\n        },\r\n        openVisibilityConditionDialog(condition?) {\r\n            condition != 'newCondition' ? (this.selectedCondition = { ...condition }) : (this.selectedCondition = { parId: this.selectedDriver.id, prog: this.visusalDependencyObjects.length + 1 } as iVisualDependency)\r\n            this.showVisibilityConditionDialog = true\r\n        },\r\n        setParFatherUrlName(event) {\r\n            this.availableDrivers.filter((driver) => {\r\n                driver.id === event.value ? (this.selectedCondition.parFatherUrlName = driver.parameterUrlName) : ''\r\n            })\r\n        },\r\n        async saveCondition() {\r\n            await this.saveRequest()\r\n                .then(() => {\r\n                    this.store.setInfo({ title: this.$t('common.save'), msg: this.$t('documentExecution.documentDetails.drivers.conditionSavedMsg') })\r\n                    this.showVisibilityConditionDialog = false\r\n                    this.getVisualDependenciesByDriverId()\r\n                })\r\n                .catch((error) => {\r\n                    this.store.setError({ title: this.$t('common.error.saving'), msg: error })\r\n                })\r\n        },\r\n        saveRequest() {\r\n            if (!this.selectedCondition.id) {\r\n                return this.$http.post(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/documentdetails/${this.selectedDocument.id}/visualdependencies`, this.selectedCondition, { headers: { Accept: 'application/json, text/plain, */*', 'X-Disable-Errors': 'true' } })\r\n            } else {\r\n                return this.$http.put(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/documentdetails/${this.selectedDocument.id}/visualdependencies`, this.selectedCondition, { headers: { Accept: 'application/json, text/plain, */*', 'X-Disable-Errors': 'true' } })\r\n            }\r\n        },\r\n        async deleteCondition(conditionToDelete) {\r\n            await this.$http\r\n                .post(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/documentdetails/${this.selectedDocument.id}/visualdependencies/delete`, conditionToDelete, { headers: { Accept: 'application/json, text/plain, */*', 'X-Disable-Errors': 'true' } })\r\n                .then(() => {\r\n                    this.store.setInfo({ title: this.$t('common.toast.deleteTitle'), msg: this.$t('common.toast.deleteSuccess') })\r\n                    this.getVisualDependenciesByDriverId()\r\n                })\r\n                .catch((error) => {\r\n                    this.store.setError({ title: this.$t('common.toast.errorTitle'), msg: error })\r\n                })\r\n        }\r\n    }\r\n})\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.kn-remove-card-padding .data-condition-list {\r\n    border: 1px solid var(--kn-color-borders);\r\n    border-top: none;\r\n}\r\n</style>\r\n","<template>\r\n    <div class=\"p-grid p-m-0 kn-flex\">\r\n        <div class=\"p-col-4 p-sm-4 p-md-3 p-p-0 p-d-flex p-flex-column kn-flex\">\r\n            <Toolbar class=\"kn-toolbar kn-toolbar--secondary\">\r\n                <template #start>\r\n                    {{ $t('documentExecution.documentDetails.drivers.title') }}\r\n                </template>\r\n                <template #end>\r\n                    <Button :label=\"$t('common.add')\" class=\"p-button-text p-button-rounded p-button-plain kn-white-color\" @click=\"addNewDriver\" />\r\n                </template>\r\n            </Toolbar>\r\n            <div id=\"drivers-list-container\" class=\"kn-flex kn-relative\">\r\n                <div :style=\"mainDescriptor.style.absoluteScroll\">\r\n                    <ProgressBar v-if=\"loading\" class=\"kn-progress-bar\" mode=\"indeterminate\" data-test=\"progress-bar\" />\r\n                    <KnListBox\r\n                        v-if=\"!loading\"\r\n                        class=\"kn-height-full\"\r\n                        :options=\"document.drivers\"\r\n                        :settings=\"driversDescriptor.knListSettings\"\r\n                        @click=\"selectDriver($event.item)\"\r\n                        @delete.stop=\"deleteDriverConfirm($event)\"\r\n                        @moveUp.stop=\"movePriority($event.item, 'up')\"\r\n                        @moveDown.stop=\"movePriority($event.item, 'down')\"\r\n                    >\r\n                    </KnListBox>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"p-col-8 p-sm-8 p-md-9 p-p-0 p-m-0\" :style=\"mainDescriptor.style.driverDetailsContainer\">\r\n            <Toolbar class=\"kn-toolbar kn-toolbar--secondary\">\r\n                <template #start>\r\n                    {{ $t('documentExecution.documentDetails.drivers.detailsTitle') }}\r\n                </template>\r\n            </Toolbar>\r\n            <div v-if=\"!loading\" id=\"driver-details-container\" class=\"kn-flex kn-relative\">\r\n                <div :style=\"mainDescriptor.style.absoluteScroll\">\r\n                    <div class=\"p-m-2\">\r\n                        <div v-if=\"Object.keys(selectedDriver).length === 0\">\r\n                            <InlineMessage severity=\"info\" class=\"kn-width-full\">{{ $t('documentExecution.documentDetails.drivers.noDriverSelected') }}</InlineMessage>\r\n                        </div>\r\n                        <Card v-else>\r\n                            <template #content>\r\n                                <form class=\"p-fluid p-formgrid p-grid p-m-1\">\r\n                                    <div class=\"p-field p-col-12\">\r\n                                        <span class=\"p-float-label\">\r\n                                            <InputText\r\n                                                id=\"label\"\r\n                                                class=\"kn-material-input\"\r\n                                                type=\"text\"\r\n                                                maxLength=\"40\"\r\n                                                v-model=\"v$.selectedDriver.label.$model\"\r\n                                                :class=\"{\r\n                                                    'p-invalid': v$.selectedDriver.label.$invalid && v$.selectedDriver.label.$dirty\r\n                                                }\"\r\n                                                @blur=\"v$.selectedDriver.label.$touch()\"\r\n                                                @change=\"markSelectedDriverForChange\"\r\n                                            />\r\n                                            <label for=\"label\" class=\"kn-material-input-label\"> {{ $t('common.title') }} * </label>\r\n                                        </span>\r\n                                        <KnValidationMessages class=\"p-mt-1\" :vComp=\"v$.selectedDriver.label\" :additionalTranslateParams=\"{ fieldName: $t('common.title') }\" />\r\n                                    </div>\r\n                                    <div class=\"p-field p-col-12\">\r\n                                        <span class=\"p-float-label\">\r\n                                            <Dropdown\r\n                                                id=\"analytical\"\r\n                                                class=\"kn-material-input\"\r\n                                                v-model=\"v$.selectedDriver.parameter.$model\"\r\n                                                :options=\"availableAnalyticalDrivers\"\r\n                                                :class=\"{\r\n                                                    'p-invalid': v$.selectedDriver.parameter.$invalid && v$.selectedDriver.parameter.$dirty\r\n                                                }\"\r\n                                                optionLabel=\"label\"\r\n                                                :filter=\"true\"\r\n                                                :filterPlaceholder=\"$t('documentExecution.documentDetails.drivers.dropdownSearchHint')\"\r\n                                                @blur=\"v$.selectedDriver.parameter.$touch()\"\r\n                                                @change=\"changeDriverValue\"\r\n                                            >\r\n                                                <template #value=\"slotProps\">\r\n                                                    <div class=\"p-dropdown-driver-value\" v-if=\"slotProps.value\">\r\n                                                        <span>{{ slotProps.value.label }}</span>\r\n                                                    </div>\r\n                                                    <span v-else>\r\n                                                        {{ $t('common.info.noDataFound') }}\r\n                                                    </span>\r\n                                                </template>\r\n                                                <template #option=\"slotProps\">\r\n                                                    <div class=\"p-dropdown-driver-option\">\r\n                                                        <span>{{ slotProps.option.label }}</span>\r\n                                                    </div>\r\n                                                </template>\r\n                                            </Dropdown>\r\n                                            <label for=\"analytical\" class=\"kn-material-input-label\"> {{ $t('managers.businessModelManager.analyticalDriver') }} </label>\r\n                                        </span>\r\n                                        <KnValidationMessages class=\"p-mt-1\" :vComp=\"v$.selectedDriver.parameter\" :additionalTranslateParams=\"{ fieldName: $t('managers.businessModelManager.analyticalDriver') }\" />\r\n                                    </div>\r\n                                    <div class=\"p-field p-col-12\">\r\n                                        <span class=\"p-float-label\">\r\n                                            <InputText\r\n                                                id=\"parameterUrlName\"\r\n                                                class=\"kn-material-input\"\r\n                                                type=\"text\"\r\n                                                maxLength=\"20\"\r\n                                                v-model=\"v$.selectedDriver.parameterUrlName.$model\"\r\n                                                :class=\"{\r\n                                                    'p-invalid': v$.selectedDriver.parameterUrlName.$invalid && v$.selectedDriver.parameterUrlName.$dirty\r\n                                                }\"\r\n                                                @blur=\"v$.selectedDriver.parameterUrlName.$touch()\"\r\n                                                @change=\"markSelectedDriverForChange\"\r\n                                            />\r\n                                            <label for=\"parameterUrlName\" class=\"kn-material-input-label\"> {{ $t('documentExecution.documentDetails.drivers.parameterUrlName') }} * </label>\r\n                                        </span>\r\n                                        <KnValidationMessages\r\n                                            class=\"p-mt-1\"\r\n                                            :vComp=\"v$.selectedDriver.parameterUrlName\"\r\n                                            :additionalTranslateParams=\"{ fieldName: $t('documentExecution.documentDetails.drivers.parameterUrlName') }\"\r\n                                            :specificTranslateKeys=\"{ custom_unique: 'managers.businessModelManager.driversUrlNotUnique' }\"\r\n                                        />\r\n                                    </div>\r\n                                    <span class=\"p-field p-col-12 p-md-4 p-jc-center p-mt-3\">\r\n                                        <InputSwitch id=\"visible\" v-model=\"selectedDriver.visible\" @change=\"markSelectedDriverForChange\" />\r\n                                        <i class=\"far fa-eye p-ml-2\" />\r\n                                        <label for=\"visible\" class=\"kn-material-input-label p-ml-2\"> {{ $t('common.visible') }} </label>\r\n                                    </span>\r\n                                    <span class=\"p-field p-col-12 p-md-4 p-jc-center p-mt-3\">\r\n                                        <InputSwitch id=\"required\" v-model=\"selectedDriver.required\" @change=\"markSelectedDriverForChange\" />\r\n                                        <i class=\"fas fa-asterisk p-ml-2\" />\r\n                                        <label for=\"required\" class=\"kn-material-input-label p-ml-2\"> {{ $t('common.required') }} </label>\r\n                                    </span>\r\n                                    <span class=\"p-field p-col-12 p-md-4 p-jc-center p-mt-3\">\r\n                                        <InputSwitch id=\"multivalue\" v-model=\"selectedDriver.multivalue\" @change=\"markSelectedDriverForChange\" />\r\n                                        <i class=\"fas fa-list p-ml-2\" />\r\n                                        <label for=\"multivalue\" class=\"kn-material-input-label p-ml-2\"> {{ $t('managers.businessModelManager.multivalue') }} </label>\r\n                                    </span>\r\n                                </form>\r\n                            </template>\r\n                        </Card>\r\n                        <div v-if=\"document.drivers.length > 1 && selectedDriver.id\" class=\"p-grid p-mt-1\">\r\n                            <DataConditions :availableDrivers=\"document.drivers\" :selectedDocument=\"selectedDocument\" :selectedDriver=\"selectedDriver\" />\r\n                            <VisibilityConditions v-if=\"selectedDocument.engine\" :availableDrivers=\"document.drivers\" :selectedDocument=\"selectedDocument\" :selectedDriver=\"selectedDriver\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { iDriver, iAnalyticalDriver, iDocument } from '@/modules/documentExecution/documentDetails/DocumentDetails'\r\nimport { createValidations, ICustomValidatorMap } from '@/helpers/commons/validationHelper'\r\nimport { defineComponent, PropType } from 'vue'\r\nimport { AxiosResponse } from 'axios'\r\nimport mainDescriptor from '@/modules/documentExecution/documentDetails/DocumentDetailsDescriptor.json'\r\nimport driversDescriptor from './DocumentDetailsDriversDescriptor.json'\r\nimport DataConditions from './DocumentDetailsDataConditions.vue'\r\nimport VisibilityConditions from './DocumentDetailsVisibilityConditions.vue'\r\nimport useValidate from '@vuelidate/core'\r\nimport KnListBox from '@/components/UI/KnListBox/KnListBox.vue'\r\nimport KnValidationMessages from '@/components/UI/KnValidatonMessages.vue'\r\nimport InputSwitch from 'primevue/inputswitch'\r\nimport Dropdown from 'primevue/dropdown'\r\nimport InlineMessage from 'primevue/inlinemessage'\r\nimport mainStore from '../../../../../App.store'\r\n\r\nexport default defineComponent({\r\n    name: 'document-drivers',\r\n    components: { DataConditions, VisibilityConditions, KnListBox, KnValidationMessages, InputSwitch, Dropdown, InlineMessage },\r\n    props: { selectedDocument: { type: Object as PropType<iDocument>, required: true }, availableDrivers: { type: Array as PropType<iDriver[]>, required: true }, availableAnalyticalDrivers: { type: Array as PropType<iAnalyticalDriver[]>, required: true } },\r\n    emits: ['driversChanged'],\r\n    data() {\r\n        return {\r\n            mainDescriptor,\r\n            driversDescriptor,\r\n            v$: useValidate() as any,\r\n            drivers: [] as iDriver[],\r\n            driversToChange: [] as iDriver[],\r\n            driversToDelete: [] as iDriver[],\r\n            selectedDriver: {} as iDriver,\r\n            driverParuses: [] as any,\r\n            lovIdAndColumns: [] as any,\r\n            visusalDependencyObjects: [] as any,\r\n            dataDependencyObjects: [] as any,\r\n            transformedObj: {} as any,\r\n            document: {} as any,\r\n            loading: false\r\n        }\r\n    },\r\n    setup() {\r\n        const store = mainStore()\r\n        return { store }\r\n    },\r\n    created() {\r\n        this.getDocumentDrivers()\r\n        this.document = this.selectedDocument\r\n    },\r\n    watch: {\r\n        selectedDocument() {\r\n            this.getDocumentDrivers()\r\n            this.document = this.selectedDocument\r\n            this.selectedDriver = {} as iDriver\r\n        }\r\n    },\r\n    validations() {\r\n        const customValidators: ICustomValidatorMap = {\r\n            'custom-unique': (value: string) => {\r\n                return this.urlNotUnique(value)\r\n            },\r\n            'drivers-validator': (value: string) => {\r\n                return Object.keys(this.selectedDriver).length === 0 || value\r\n            }\r\n        }\r\n        const validationObject = { selectedDriver: createValidations('driver', driversDescriptor.validations.driver, customValidators) }\r\n        return validationObject\r\n    },\r\n    methods: {\r\n        urlNotUnique(url: string) {\r\n            const index = this.document.drivers.findIndex((driver) => driver.parameterUrlName === url && driver.id != this.selectedDriver?.id)\r\n            return index === -1\r\n        },\r\n        async getDocumentDrivers() {\r\n            this.loading = true\r\n            if (this.selectedDocument?.id) {\r\n                this.$http\r\n                    .get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/documentdetails/${this.selectedDocument?.id}/drivers`)\r\n                    .then((response: AxiosResponse<any>) => (this.document.drivers = response.data))\r\n                    .finally(() => (this.loading = false))\r\n            }\r\n        },\r\n        selectDriver(driver) {\r\n            this.selectedDriver = driver\r\n            this.setParameterInfo(this.selectedDriver)\r\n        },\r\n        setParId(id) {\r\n            this.selectedDriver.parID = id\r\n        },\r\n        markSelectedDriverForChange() {\r\n            this.selectedDriver.isChanged = true\r\n            this.selectedDriver.numberOfErrors = this.v$.$errors.length\r\n        },\r\n        changeDriverValue(event) {\r\n            this.selectedDriver.isChanged = true\r\n            this.selectedDriver.numberOfErrors = this.v$.$errors.length\r\n            this.setParId(event.value.id)\r\n        },\r\n        setParameterInfo(driver) {\r\n            if (this.availableAnalyticalDrivers) {\r\n                for (var i = 0; i < this.availableAnalyticalDrivers.length; i++) {\r\n                    if ((driver.parameter && this.availableAnalyticalDrivers[i].id == driver.parID) || (driver.parameter && this.availableAnalyticalDrivers[i].name == driver.parameter.name)) {\r\n                        driver.parameter = { ...this.availableAnalyticalDrivers[i] }\r\n                        driver.parID = this.availableAnalyticalDrivers[i].id\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        addNewDriver() {\r\n            this.transformedObj = {}\r\n            let newDriver = {\r\n                label: '',\r\n                parameter: this.availableAnalyticalDrivers[0] ? this.availableAnalyticalDrivers[0] : null,\r\n                parameterUrlName: '',\r\n                priority: this.document.drivers.length == 0 ? 1 : this.document.drivers.length + 1,\r\n                biObjectID: this.selectedDocument.id,\r\n                visible: true,\r\n                required: true,\r\n                multivalue: false,\r\n                numberOfErrors: 1\r\n            } as iDriver\r\n            if (this.selectedDocument.id) {\r\n                if (this.document.drivers) {\r\n                    this.document.drivers.push(newDriver)\r\n                    this.selectDriver(this.document.drivers[this.document.drivers.length - 1])\r\n                } else {\r\n                    this.document.drivers = [newDriver]\r\n                    this.selectDriver(this.document.drivers[1])\r\n                }\r\n            }\r\n        },\r\n        async movePriority(driver, direction) {\r\n            direction == 'up' ? (driver.priority -= 1) : (driver.priority += 1)\r\n            await this.$http\r\n                .put(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/documentdetails/${this.selectedDocument.id}/drivers/${driver.id}`, driver, { headers: { Accept: 'application/json, text/plain, */*', 'X-Disable-Errors': 'true' } })\r\n                .then(() => {\r\n                    this.store.setInfo({ title: 'Succes', msg: 'Driver priority changed' })\r\n                    this.getDocumentDrivers()\r\n                })\r\n                .catch(() => this.store.setError({ title: this.$t('common.toast.errorTitle'), msg: this.$t('documentExecution.documentDetails.drivers.priorityError') }))\r\n        },\r\n        deleteDriverConfirm(event) {\r\n            this.$confirm.require({\r\n                header: this.$t('common.toast.deleteConfirmTitle'),\r\n                message: this.$t('documentExecution.documentDetails.drivers.deleteMessage'),\r\n                icon: 'pi pi-exclamation-triangle',\r\n                accept: () => this.deleteDriver(event.item)\r\n            })\r\n        },\r\n        async deleteDriver(driverToDelete) {\r\n            if (driverToDelete.id) {\r\n                await this.$http\r\n                    .delete(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/documentdetails/${this.document.id}/drivers/${driverToDelete.id}`, { headers: { 'X-Disable-Errors': 'true' } })\r\n                    .then(() => {\r\n                        let deletedDriver = this.document.drivers.findIndex((param) => param.id === driverToDelete.id)\r\n                        this.document.drivers.splice(deletedDriver, 1)\r\n                        this.store.setInfo({ title: this.$t('common.toast.deleteTitle'), msg: this.$t('common.toast.deleteSuccess') })\r\n                        this.selectedDriver = {} as iDriver\r\n                    })\r\n                    .catch((error) => {\r\n                        this.store.setError({ title: this.$t('common.toast.errorTitle'), msg: error.message })\r\n                    })\r\n            } else {\r\n                let deletedDriver = this.document.drivers.findIndex((param) => param.priority === driverToDelete.priority)\r\n                this.document.drivers.splice(deletedDriver, 1)\r\n                this.selectedDriver = {} as iDriver\r\n            }\r\n        }\r\n    }\r\n})\r\n</script>\r\n","<template>\r\n    <div class=\"p-grid p-m-0 kn-flex\">\r\n        <div class=\"p-col-4 p-sm-4 p-md-3 p-p-0 p-d-flex p-flex-column kn-flex\">\r\n            <Toolbar class=\"kn-toolbar kn-toolbar--secondary\">\r\n                <template #start>\r\n                    {{ $t('documentExecution.documentDetails.outputParams.title') }}\r\n                </template>\r\n                <template #end>\r\n                    <Button :label=\"$t('common.add')\" class=\"p-button-text p-button-rounded p-button-plain kn-white-color\" @click=\"addParam\" />\r\n                </template>\r\n            </Toolbar>\r\n            <div id=\"drivers-list-container\" class=\"kn-flex kn-relative\">\r\n                <div :style=\"mainDescriptor.style.absoluteScroll\">\r\n                    <KnListBox class=\"kn-height-full\" :options=\"document.outputParameters\" :settings=\"outputParamDescriptor.knListSettings\" @click=\"selectParam($event.item)\" @delete.stop=\"deleteParamConfirm($event)\"></KnListBox>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"p-col-8 p-sm-8 p-md-9 p-p-0 p-m-0\" :style=\"mainDescriptor.style.driverDetailsContainer\">\r\n            <Toolbar class=\"kn-toolbar kn-toolbar--secondary\">\r\n                <template #start>\r\n                    {{ $t('documentExecution.documentDetails.outputParams.paramDetails') }}\r\n                </template>\r\n            </Toolbar>\r\n            <div id=\"driver-details-container\" class=\"p-m-2 kn-flex kn-relative\">\r\n                <div v-if=\"Object.keys(selectedParam).length === 0\">\r\n                    <InlineMessage severity=\"info\" class=\"kn-width-full\"> {{ $t('documentExecution.documentDetails.outputParams.noParamSelected') }}</InlineMessage>\r\n                </div>\r\n                <Card v-else>\r\n                    <template #content>\r\n                        <form class=\"p-fluid p-formgrid p-grid p-m-2\">\r\n                            <div class=\"p-field p-col-12 p-mt-2\">\r\n                                <span class=\"p-float-label\">\r\n                                    <InputText\r\n                                        id=\"title\"\r\n                                        class=\"kn-material-input\"\r\n                                        :disabled=\"selectedParam.isUserDefined === null\"\r\n                                        v-model.trim=\"v$.selectedParam.name.$model\"\r\n                                        :class=\"{\r\n                                            'p-invalid': v$.selectedParam.name.$invalid && v$.selectedParam.name.$dirty\r\n                                        }\"\r\n                                        @blur=\"v$.selectedParam.name.$touch()\"\r\n                                        @input=\"markSelectedParamForChange\"\r\n                                    />\r\n                                    <label for=\"title\" class=\"kn-material-input-label\"> {{ $t('documentExecution.documentDetails.outputParams.paramName') }} *</label>\r\n                                </span>\r\n                                <KnValidationMessages class=\"p-mt-1\" :vComp=\"v$.selectedParam.name\" :additionalTranslateParams=\"{ fieldName: $t('documentExecution.documentDetails.outputParams.paramName') }\" />\r\n                            </div>\r\n                            <div class=\"p-field p-col-12\">\r\n                                <span class=\"p-float-label\">\r\n                                    <Dropdown id=\"type\" class=\"kn-material-input\" v-model=\"selectedParam.type\" :options=\"typeList\" optionLabel=\"valueCd\" :disabled=\"selectedParam.isUserDefined === null\" @change=\"markSelectedParamForChange\" />\r\n                                    <label for=\"type\" class=\"kn-material-input-label\"> {{ $t('documentExecution.documentDetails.outputParams.paramType') }} </label>\r\n                                </span>\r\n                            </div>\r\n                            <div v-if=\"selectedParam.type.valueCd === 'DATE'\" class=\"p-field p-col-12\">\r\n                                <span class=\"p-float-label\">\r\n                                    <Dropdown id=\"dateFormat\" class=\"kn-material-input\" v-model=\"selectedParam.formatCode\" :options=\"dateFormats\" optionLabel=\"translatedValueName\" optionValue=\"valueCd\" :disabled=\"selectedParam.isUserDefined === null\" @change=\"markSelectedParamForChange\" />\r\n                                    <label for=\"dateFormat\" class=\"kn-material-input-label\"> {{ $t('managers.datasetManagement.ckanDateFormat') }} </label>\r\n                                </span>\r\n                            </div>\r\n                            <div v-if=\"selectedParam.type.valueCd === 'DATE' && selectedParam.formatCode === 'CUSTOM'\" class=\"p-field p-col-12\">\r\n                                <span class=\"p-float-label\">\r\n                                    <InputText id=\"title\" class=\"kn-material-input\" v-model=\"selectedParam.formatValue\" :disabled=\"selectedParam.isUserDefined === null\" @input=\"markSelectedParamForChange\" />\r\n                                    <label for=\"title\" class=\"kn-material-input-label\"> {{ $t('documentExecution.documentDetails.outputParams.customValue') }} *</label>\r\n                                </span>\r\n                            </div>\r\n                        </form>\r\n                    </template>\r\n                </Card>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { iDocument, iParType, iDateFormat, iOutputParam } from '@/modules/documentExecution/documentDetails/DocumentDetails'\r\nimport { createValidations, ICustomValidatorMap } from '@/helpers/commons/validationHelper'\r\nimport { defineComponent, PropType } from 'vue'\r\nimport mainDescriptor from '@/modules/documentExecution/documentDetails/DocumentDetailsDescriptor.json'\r\nimport driversDescriptor from '@/modules/documentExecution/documentDetails/tabs/drivers/DocumentDetailsDriversDescriptor.json'\r\nimport outputParamDescriptor from './DocumentDetailsOutputParametersDescriptor.json'\r\nimport useValidate from '@vuelidate/core'\r\nimport KnListBox from '@/components/UI/KnListBox/KnListBox.vue'\r\nimport KnValidationMessages from '@/components/UI/KnValidatonMessages.vue'\r\nimport Dropdown from 'primevue/dropdown'\r\nimport InlineMessage from 'primevue/inlinemessage'\r\n\r\nexport default defineComponent({\r\n    name: 'document-drivers',\r\n    components: { KnListBox, Dropdown, KnValidationMessages, InlineMessage },\r\n    props: { selectedDocument: { type: Object as PropType<iDocument>, required: true }, typeList: { type: Array as PropType<iParType[]>, required: true }, dateFormats: { type: Array as PropType<iDateFormat[]>, required: true } },\r\n    emits: ['driversChanged'],\r\n    data() {\r\n        return {\r\n            v$: useValidate() as any,\r\n            mainDescriptor,\r\n            driversDescriptor,\r\n            outputParamDescriptor,\r\n            selectedParam: {} as iOutputParam,\r\n            document: {} as any\r\n        }\r\n    },\r\n    created() {\r\n        this.document = this.selectedDocument\r\n    },\r\n    validations() {\r\n        const outputParamsValidator = (value) => {\r\n            return Object.keys(this.selectedParam).length === 0 || value\r\n        }\r\n        const customValidators: ICustomValidatorMap = { 'output-params-validator': outputParamsValidator }\r\n        const validationObject = { selectedParam: createValidations('selectedParam', outputParamDescriptor.validations.selectedParam, customValidators) }\r\n        return validationObject\r\n    },\r\n    methods: {\r\n        addParam() {\r\n            this.selectedParam = { numberOfErrors: 1, biObjectId: this.document.id, formatCode: null, formatValue: null, isUserDefined: true, type: this.typeList[0] ? this.typeList[0] : ({} as iParType), tempId: this.document.outputParameters.length + 1 } as iOutputParam\r\n            this.document.outputParameters.push(this.selectedParam)\r\n        },\r\n        selectParam(event) {\r\n            this.selectedParam = event\r\n        },\r\n        markSelectedParamForChange() {\r\n            this.selectedParam.isChanged = true\r\n            this.selectedParam.numberOfErrors = this.v$.$errors.length\r\n        },\r\n\r\n        deleteParamConfirm(event) {\r\n            this.$confirm.require({\r\n                header: this.$t('common.toast.deleteConfirmTitle'),\r\n                message: this.$t('common.toast.deleteMessage'),\r\n                icon: 'pi pi-exclamation-triangle',\r\n                accept: () => this.deleteParam(event.item)\r\n            })\r\n        },\r\n        async deleteParam(paramToDelete) {\r\n            if (paramToDelete.id) {\r\n                await this.$http\r\n                    .delete(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/documentdetails/${this.selectedDocument.id}/outputparameters/${paramToDelete.id}`, { headers: { 'X-Disable-Errors': 'true' } })\r\n                    .then(() => {\r\n                        let deletedParam = this.document.outputParameters.findIndex((param) => param.id === paramToDelete.id)\r\n                        this.document.outputParameters.splice(deletedParam, 1)\r\n                        this.store.setInfo({ title: this.$t('common.toast.deleteTitle'), msg: this.$t('common.toast.deleteSuccess') })\r\n                        this.selectedParam = {} as iOutputParam\r\n                    })\r\n                    .catch((error) => {\r\n                        this.store.setError({ title: this.$t('common.toast.errorTitle'), msg: error.message })\r\n                    })\r\n            } else {\r\n                let deletedParam = this.document.outputParameters.findIndex((param) => param.tempId === paramToDelete.tempId)\r\n                this.document.outputParameters.splice(deletedParam, 1)\r\n                this.selectedParam = {} as iOutputParam\r\n            }\r\n        }\r\n    }\r\n})\r\n</script>\r\n","<template>\r\n    <div class=\"p-grid p-m-0 kn-flex\">\r\n        <div class=\"p-d-flex p-flex-column kn-flex\">\r\n            <Toolbar class=\"kn-toolbar kn-toolbar--secondary\">\r\n                <template #start>\r\n                    {{ $t('documentExecution.documentDetails.dataLineage.title') }}\r\n                </template>\r\n            </Toolbar>\r\n            <div class=\"kn-flex kn-relative\">\r\n                <div :style=\"mainDescriptor.style.absoluteScroll\">\r\n                    <div id=\"driver-details-container\" class=\"p-m-2\">\r\n                        <Toolbar class=\"kn-toolbar kn-toolbar--default\">\r\n                            <template #start>\r\n                                {{ $t('managers.datasetManagement.availableTables') }}\r\n                            </template>\r\n                        </Toolbar>\r\n                        <Card>\r\n                            <template #content>\r\n                                <div class=\"p-field p-col-12\">\r\n                                    <span class=\"p-float-label\">\r\n                                        <Dropdown id=\"dataSource\" class=\"kn-material-input kn-width-full\" v-model=\"dataSource\" :options=\"metaSourceResource\" @change=\"getTablesBySourceID\" optionLabel=\"name\" />\r\n                                        <label for=\"dataSource\" class=\"kn-material-input-label\"> {{ $t('documentExecution.documentDetails.dataLineage.selectSource') }} </label>\r\n                                    </span>\r\n                                </div>\r\n                                <div v-if=\"metaSourceResource.length == 0\">\r\n                                    <InlineMessage severity=\"info\" class=\"kn-width-full\">{{ $t('documentExecution.documentDetails.dataLineage.noDatasources') }}</InlineMessage>\r\n                                </div>\r\n                                <div v-if=\"dataSource && tablesList.length == 0 && metaSourceResource.length != 0\">\r\n                                    <InlineMessage severity=\"info\" class=\"kn-width-full\">{{ $t('documentExecution.documentDetails.dataLineage.noTables') }}</InlineMessage>\r\n                                </div>\r\n                                <ProgressBar v-if=\"loading\" class=\"kn-progress-bar\" mode=\"indeterminate\" data-test=\"progress-bar\" />\r\n                                <DataTable\r\n                                    v-if=\"dataSource && tablesList.length > 0 && !loading\"\r\n                                    class=\"p-datatable-sm kn-table\"\r\n                                    :value=\"tablesList\"\r\n                                    v-model:selection=\"selectedTables\"\r\n                                    dataKey=\"tableId\"\r\n                                    responsiveLayout=\"scroll\"\r\n                                    v-model:filters=\"filters\"\r\n                                    :globalFilterFields=\"globalFilterFields\"\r\n                                    @rowSelect=\"peristTable\"\r\n                                    @rowUnselect=\"deleteTable\"\r\n                                >\r\n                                    <template #header>\r\n                                        <div class=\"table-header p-d-flex p-ai-center\">\r\n                                            <span id=\"search-container\" class=\"p-input-icon-left p-mr-3\">\r\n                                                <i class=\"pi pi-search\" />\r\n                                                <InputText class=\"kn-material-input\" v-model=\"filters['global'].value\" :placeholder=\"$t('common.search')\" />\r\n                                            </span>\r\n                                        </div>\r\n                                    </template>\r\n                                    <Column class=\"lineage-table-header\" selectionMode=\"multiple\" :headerStyle=\"mainDescriptor.style.tableHeader\"> </Column>\r\n                                    <Column field=\"name\" :header=\"$t('managers.datasetManagement.flatTableName')\" :sortable=\"true\"></Column>\r\n                                </DataTable>\r\n                            </template>\r\n                        </Card>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent, PropType } from 'vue'\r\nimport { iDocument, iMetaSource, iTableSmall } from '@/modules/documentExecution/documentDetails/DocumentDetails'\r\nimport { AxiosResponse } from 'axios'\r\nimport { filterDefault } from '@/helpers/commons/filterHelper'\r\nimport mainDescriptor from '@/modules/documentExecution/documentDetails/DocumentDetailsDescriptor.json'\r\nimport Dropdown from 'primevue/dropdown'\r\nimport DataTable from 'primevue/datatable'\r\nimport Column from 'primevue/column'\r\nimport InlineMessage from 'primevue/inlinemessage'\r\nimport mainStore from '../../../../../App.store'\r\n\r\nexport default defineComponent({\r\n    name: 'data-lineage',\r\n    components: { Dropdown, DataTable, Column, InlineMessage },\r\n    props: { selectedDocument: { type: Object as PropType<iDocument>, required: true }, metaSourceResource: { type: Array as PropType<iMetaSource[]>, required: true }, savedTables: { type: Array as PropType<iTableSmall[]>, required: true } },\r\n    emits: [],\r\n    data() {\r\n        return {\r\n            mainDescriptor,\r\n            dataSource: {} as iMetaSource,\r\n            tablesList: [] as iTableSmall[],\r\n            selectedTables: [] as iTableSmall[],\r\n            loading: false,\r\n            filters: { global: [filterDefault] } as Object,\r\n            globalFilterFields: ['name']\r\n        }\r\n    },\r\n    setup() {\r\n        const store = mainStore()\r\n        return { store }\r\n    },\r\n    created() {},\r\n    methods: {\r\n        async getTablesBySourceID() {\r\n            this.loading = true\r\n            this.$http\r\n                .get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/metaSourceResource/${this.dataSource.sourceId}/metatables`)\r\n                .then((response: AxiosResponse<any>) => {\r\n                    this.tablesList = response.data as iTableSmall[]\r\n                    this.setCheckedTables()\r\n                })\r\n                .finally(() => (this.loading = false))\r\n        },\r\n        setCheckedTables() {\r\n            for (var i = 0; i < this.tablesList.length; i++) {\r\n                for (var j = 0; j < this.savedTables.length; j++) {\r\n                    if (this.tablesList[i].tableId == this.savedTables[j].tableId) {\r\n                        this.selectedTables.push(this.tablesList[i])\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        peristTable(event) {\r\n            this.$http\r\n                .post(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/metaDocumetRelationResource/${this.selectedDocument.id}`, event.data, {\r\n                    headers: { 'X-Disable-Errors': 'true' }\r\n                })\r\n                .then(() => this.store.setInfo({ title: this.$t('common.save'), msg: this.$t('documentExecution.documentDetails.dataLineage.persistOk') }))\r\n                .catch(() => this.store.setError({ title: this.$t('common.toast.errorTitle'), msg: this.$t('documentExecution.documentDetails.dataLineage.persistError') }))\r\n        },\r\n        deleteTable(event) {\r\n            this.$http\r\n                .delete(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/metaDocumetRelationResource/${this.selectedDocument.id}/${event.data.tableId}`, {\r\n                    headers: { 'X-Disable-Errors': 'true' }\r\n                })\r\n                .then(() => this.store.setInfo({ title: this.$t('common.save'), msg: this.$t('documentExecution.documentDetails.dataLineage.deleteOk') }))\r\n                .catch(() => this.store.setError({ title: this.$t('common.toast.errorTitle'), msg: this.$t('documentExecution.documentDetails.dataLineage.deleteError') }))\r\n        }\r\n    }\r\n})\r\n</script>\r\n<style lang=\"scss\">\r\n.lineage-table-header .p-column-header-content {\r\n    display: none;\r\n}\r\n</style>\r\n","<template>\r\n    <div class=\"p-grid p-m-0 kn-flex\">\r\n        <div class=\"p-col-4 p-sm-4 p-md-3 p-p-0 p-d-flex p-flex-column kn-flex\">\r\n            <Toolbar class=\"kn-toolbar kn-toolbar--secondary\">\r\n                <template #start>\r\n                    {{ $t('documentExecution.documentDetails.history.listTitle') }}\r\n                </template>\r\n                <template #end>\r\n                    <Button :label=\"$t('common.add')\" class=\"p-button-text p-button-rounded p-button-plain kn-white-color\" @click=\"setUploadType\" />\r\n                    <KnInputFile label=\"\" v-if=\"!uploading\" :changeFunction=\"startTemplateUpload\" :triggerInput=\"triggerUpload\" />\r\n                </template>\r\n            </Toolbar>\r\n            <div id=\"drivers-list-container\" class=\"kn-flex kn-relative\">\r\n                <div :style=\"mainDescriptor.style.absoluteScroll\">\r\n                    <ProgressBar v-if=\"loading\" class=\"kn-progress-bar\" mode=\"indeterminate\" data-test=\"progress-bar\" />\r\n                    <KnListBox\r\n                        v-if=\"!loading\"\r\n                        class=\"kn-height-full\"\r\n                        :options=\"listOfTemplates\"\r\n                        :settings=\"historyDescriptor.knListSettings\"\r\n                        @click=\"selectTemplate($event.item)\"\r\n                        @setActive.stop=\"setActiveTemplate($event.item)\"\r\n                        @download.stop=\"downloadTemplate($event.item)\"\r\n                        @delete.stop=\"deleteTemplateConfirm($event.item)\"\r\n                    ></KnListBox>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"p-col-8 p-sm-8 p-md-9 p-p-0 p-m-0\" :style=\"mainDescriptor.style.driverDetailsContainer\">\r\n            <Toolbar class=\"kn-toolbar kn-toolbar--secondary\">\r\n                <template #start>\r\n                    {{ $t('documentExecution.documentDetails.history.template') }}\r\n                </template>\r\n                <template #end>\r\n                    <Button v-if=\"designerButtonVisible\" :label=\"$t('documentExecution.olap.openDesigner')\" class=\"p-button-text p-button-rounded p-button-plain kn-white-color\" @click=\"openDesignerConfirm\" />\r\n                </template>\r\n            </Toolbar>\r\n            <div id=\"driver-details-container\" class=\"kn-flex kn-relative\">\r\n                <div id=\"codemirror-container\" :style=\"mainDescriptor.style.absoluteScroll\">\r\n                    {{ this.scriptOptions.mode }}\r\n                    <VCodeMirror v-if=\"showTemplateContent\" ref=\"codeMirrorScriptType\" class=\"kn-height-full\" v-model:value=\"selectedTemplateContent\" :options=\"scriptOptions\" @keyup=\"$emit('touched')\" />\r\n                    <div v-else>\r\n                        <InlineMessage severity=\"info\" class=\"p-m-2 kn-width-full\"> {{ $t('documentExecution.documentDetails.history.templateHint') }}</InlineMessage>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { iTemplate } from '@/modules/documentExecution/documentDetails/DocumentDetails'\r\nimport { defineComponent, PropType } from 'vue'\r\nimport { AxiosResponse } from 'axios'\r\nimport { iDocument } from '@/modules/documentExecution/documentDetails/DocumentDetails'\r\nimport { downloadDirect } from '@/helpers/commons/fileHelper'\r\nimport VCodeMirror from 'codemirror-editor-vue3'\r\nimport { mapState } from 'pinia'\r\nimport { startOlap } from '../../dialogs/olapDesignerDialog/DocumentDetailOlapHelpers'\r\nimport mainDescriptor from '@/modules/documentExecution/documentDetails/DocumentDetailsDescriptor.json'\r\nimport driversDescriptor from '@/modules/documentExecution/documentDetails/tabs/drivers/DocumentDetailsDriversDescriptor.json'\r\nimport historyDescriptor from './DocumentDetailsHistory.json'\r\nimport KnListBox from '@/components/UI/KnListBox/KnListBox.vue'\r\nimport KnInputFile from '@/components/UI/KnInputFile.vue'\r\nimport InlineMessage from 'primevue/inlinemessage'\r\nimport mainStore from '../../../../../App.store'\r\n\r\nimport cryptoRandomString from 'crypto-random-string'\r\n\r\nexport default defineComponent({\r\n    name: 'document-drivers',\r\n    components: { KnListBox, KnInputFile, VCodeMirror, InlineMessage },\r\n    props: { selectedDocument: { type: Object as PropType<iDocument>, required: true } },\r\n    computed: {\r\n        showTemplateContent(): any {\r\n            switch (this.selectedTemplateFileType) {\r\n                case 'xml':\r\n                    return true\r\n                case 'xls':\r\n                    return true\r\n                case 'rptdesign':\r\n                    return true\r\n                case 'sbicockpit':\r\n                    return true\r\n                case 'json':\r\n                    return true\r\n                case 'sbigeoreport':\r\n                    return true\r\n                default:\r\n                    return false\r\n            }\r\n        },\r\n        designerButtonVisible(): boolean {\r\n            return this.selectedDocument.typeCode == 'OLAP' || this.selectedDocument.typeCode == 'KPI' || this.selectedDocument.engine == 'knowagegisengine'\r\n        },\r\n        ...mapState(mainStore, {\r\n            user: 'user'\r\n        })\r\n    },\r\n    data() {\r\n        return {\r\n            mainDescriptor,\r\n            driversDescriptor,\r\n            historyDescriptor,\r\n            selectedTemplate: {} as iTemplate,\r\n            listOfTemplates: [] as iTemplate[],\r\n            selectedTemplateFileType: null as any,\r\n            selectedTemplateContent: '' as any,\r\n            loading: false,\r\n            triggerUpload: false,\r\n            uploading: false,\r\n            codeMirrorScriptType: {} as any,\r\n            scriptOptions: {\r\n                readOnly: true,\r\n                mode: '',\r\n                indentWithTabs: true,\r\n                smartIndent: true,\r\n                lineWrapping: true,\r\n                matchBrackets: true,\r\n                autofocus: true,\r\n                theme: 'eclipse',\r\n                lineNumbers: true\r\n            }\r\n        }\r\n    },\r\n    setup() {\r\n        const store = mainStore()\r\n        return { store }\r\n    },\r\n    created() {\r\n        const interval = setInterval(() => {\r\n            if (!this.$refs.codeMirrorScriptType) return\r\n            this.codeMirrorScriptType = (this.$refs.codeMirrorScriptType as any).cminstance as any\r\n            clearInterval(interval)\r\n        }, 200)\r\n        this.getAllTemplates()\r\n    },\r\n    methods: {\r\n        async getAllTemplates() {\r\n            this.loading = true\r\n            this.$http\r\n                .get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/documentdetails/${this.selectedDocument.id}/templates`)\r\n                .then((response: AxiosResponse<any>) => (this.listOfTemplates = response.data as iTemplate[]))\r\n                .finally(() => (this.loading = false))\r\n        },\r\n        async getSelectedTemplate(templateId) {\r\n            this.$http.get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/documentdetails/${this.selectedDocument.id}/templates/selected/${templateId}`, { headers: { Accept: 'application/json, text/plain, */*', 'X-Disable-Errors': 'true' } }).then((response: AxiosResponse<any>) => {\r\n                this.selectedTemplateFileType == 'sbicockpit' || this.selectedTemplateFileType == 'json' || this.selectedTemplateFileType == 'sbigeoreport' ? (this.selectedTemplateContent = JSON.stringify(response.data, null, 4)) : (this.selectedTemplateContent = response.data)\r\n            })\r\n        },\r\n        changeCodemirrorMode() {\r\n            let mode = ''\r\n            switch (this.selectedTemplateFileType) {\r\n                case 'xml':\r\n                    mode = 'text/html'\r\n                    break\r\n                case 'xls':\r\n                    mode = 'text/html'\r\n                    break\r\n                case 'rptdesign':\r\n                    mode = 'text/html'\r\n                    break\r\n                case 'sbicockpit':\r\n                    mode = 'text/javascript'\r\n                    break\r\n                case 'json':\r\n                    mode = 'text/javascript'\r\n                    break\r\n                case 'sbigeoreport':\r\n                    mode = 'text/javascript'\r\n            }\r\n            setTimeout(() => {\r\n                this.codeMirrorScriptType.setOption('mode', mode)\r\n            }, 250)\r\n        },\r\n        setFileType(template) {\r\n            if (template && template.name) {\r\n                let fileType = template.name.split('.')\r\n                this.selectedTemplateFileType = fileType[fileType.length - 1]\r\n            }\r\n        },\r\n        selectTemplate(event) {\r\n            this.selectedTemplate = event as iTemplate\r\n            this.setFileType(event)\r\n            this.changeCodemirrorMode()\r\n            this.getSelectedTemplate(event.id)\r\n        },\r\n        setUploadType() {\r\n            this.triggerUpload = false\r\n            setTimeout(() => (this.triggerUpload = true), 200)\r\n        },\r\n        startTemplateUpload(event) {\r\n            this.uploading = true\r\n            this.uploadTemplate(event.target.files[0])\r\n            this.triggerUpload = false\r\n            setTimeout(() => (this.uploading = false), 200)\r\n        },\r\n        async uploadTemplate(uploadedFile) {\r\n            var formData = new FormData()\r\n            formData.append('file', uploadedFile)\r\n            await this.$http\r\n                .post(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/documentdetails/${this.selectedDocument.id}/templates`, formData, { headers: { 'Content-Type': 'multipart/form-data', 'X-Disable-Errors': 'true' } })\r\n                .then(async () => {\r\n                    this.store.setInfo({ title: this.$t('common.toast.success'), msg: this.$t('common.toast.uploadSuccess') })\r\n                    await this.getAllTemplates()\r\n                    this.selectTemplate(this.listOfTemplates[0])\r\n                })\r\n                .catch(() => this.store.setError({ title: this.$t('common.toast.errorTitle'), msg: this.$t('documentExecution.documentDetails.history.uploadError') }))\r\n                .finally(() => (this.triggerUpload = false))\r\n        },\r\n        setActiveTemplate(template) {\r\n            this.$http\r\n                .put(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/documentdetails/${this.selectedDocument.id}/templates/${template.id}`, { headers: { 'X-Disable-Errors': 'true' } })\r\n                .then(() => {\r\n                    this.store.setInfo({ title: this.$t('common.toast.success'), msg: this.$t('documentExecution.documentDetails.history.activeOk') })\r\n                    this.getAllTemplates()\r\n                })\r\n                .catch(() => this.store.setError({ title: this.$t('common.toast.errorTitle'), msg: this.$t('documentExecution.documentDetails.history.activeError') }))\r\n        },\r\n        async downloadTemplate(template) {\r\n            let fileType = template.name.split('.')\r\n            await this.$http\r\n                .get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/documentdetails/${this.selectedDocument.id}/templates/${template.id}/${fileType[fileType.length - 1]}/file`, {\r\n                    headers: { Accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9', 'X-Disable-Errors': 'true' }\r\n                })\r\n                .then((response: AxiosResponse<any>) => {\r\n                    if (response.data.errors) {\r\n                        this.store.setError({ title: this.$t('common.error.downloading'), msg: this.$t('common.error.errorCreatingPackage') })\r\n                    } else {\r\n                        this.store.setInfo({ title: this.$t('common.toast.success') })\r\n                        if (response.headers) {\r\n                            var contentDisposition = response.headers['content-disposition']\r\n                            var contentDispositionMatcher = contentDisposition.match(/filename[^;\\n=]*=((['\"]).*?\\2|[^;\\n]*)/i)\r\n                            if (contentDispositionMatcher && contentDispositionMatcher.length > 1) {\r\n                                var fileAndExtension = contentDispositionMatcher[1]\r\n                                var completeFileName = fileAndExtension.replaceAll('\"', '')\r\n                                if (fileType[fileType.length - 1] == 'json' || fileType[fileType.length - 1] == 'sbicockpit') {\r\n                                    downloadDirect(JSON.stringify(response.data), completeFileName, 'text/html; charset=UTF-8')\r\n                                } else {\r\n                                    downloadDirect(response.data, completeFileName, 'text/html; charset=UTF-8')\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                })\r\n                .catch((error) => this.store.setError({ title: this.$t('common.toast.errorTitle'), msg: error.message }))\r\n        },\r\n        deleteTemplateConfirm(template) {\r\n            this.$confirm.require({\r\n                header: this.$t('common.toast.deleteConfirmTitle'),\r\n                message: this.$t('common.toast.deleteMessage'),\r\n                icon: 'pi pi-exclamation-triangle',\r\n                accept: () => this.deleteTemplate(template)\r\n            })\r\n        },\r\n        async deleteTemplate(template) {\r\n            await this.$http\r\n                .delete(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/documentdetails/${this.selectedDocument.id}/templates/${template.id}`, { headers: { Accept: 'application/json, text/plain, */*', 'X-Disable-Errors': 'true' } })\r\n                .then(() => {\r\n                    this.store.setInfo({ title: this.$t('common.toast.deleteTitle'), msg: this.$t('common.toast.deleteSuccess') })\r\n                    this.getAllTemplates()\r\n                })\r\n                .catch((error) => this.store.setError({ title: this.$t('common.toast.errorTitle'), msg: error.message }))\r\n        },\r\n        openDesignerConfirm() {\r\n            this.$confirm.require({\r\n                header: this.$t('common.toast.warning'),\r\n                message: this.$t('documentExecution.olap.openDesignerMsg'),\r\n                icon: 'pi pi-exclamation-triangle',\r\n                accept: () => {\r\n                    switch (this.selectedDocument.typeCode) {\r\n                        case 'KPI':\r\n                            this.openKpiDocumentDesigner()\r\n                            break\r\n                        case 'MAP': {\r\n                            this.openGis()\r\n                            break\r\n                        }\r\n                        default:\r\n                            this.openDesigner()\r\n                    }\r\n                }\r\n            })\r\n        },\r\n        async openDesigner() {\r\n            if (this.listOfTemplates.length === 0) {\r\n                this.$emit('openDesignerDialog')\r\n            } else {\r\n                const activeTemplate = this.findActiveTemplate()\r\n                const sbiExecutionId = cryptoRandomString({ length: 16, type: 'base64' })\r\n                await startOlap(this.$http, this.user, sbiExecutionId, this.selectedDocument, activeTemplate, this.$router)\r\n            }\r\n        },\r\n        findActiveTemplate() {\r\n            let activeTemplate = null as any\r\n            for (let i = 0; i < this.listOfTemplates.length; i++) {\r\n                if (this.listOfTemplates[i].active) {\r\n                    activeTemplate = this.listOfTemplates[i]\r\n                    break\r\n                }\r\n            }\r\n            return activeTemplate\r\n        },\r\n        openGis() {\r\n            this.$router.push(`/gis/edit?documentId=${this.selectedDocument.id}`)\r\n        },\r\n        openKpiDocumentDesigner() {\r\n            this.$router.push(`/kpi-edit/${this.selectedDocument.id}?from=documentDetail`)\r\n        }\r\n    }\r\n})\r\n</script>\r\n<style lang=\"scss\">\r\n#codemirror-container {\r\n    overflow: hidden !important;\r\n}\r\n</style>\r\n","<template>\r\n    <div class=\"p-grid p-m-0 kn-flex\">\r\n        <div class=\"p-d-flex p-flex-column kn-flex\">\r\n            <Toolbar class=\"kn-toolbar kn-toolbar--secondary\">\r\n                <template #start>\r\n                    {{ $t('documentExecution.documentDetails.subreports.title') }}\r\n                </template>\r\n            </Toolbar>\r\n            <div class=\"kn-flex kn-relative\">\r\n                <div :style=\"mainDescriptor.style.absoluteScroll\">\r\n                    <div id=\"driver-details-container\" class=\"p-m-2\">\r\n                        <Toolbar class=\"kn-toolbar kn-toolbar--default\">\r\n                            <template #start>\r\n                                {{ $t('documentExecution.documentDetails.subreports.tableName') }}\r\n                            </template>\r\n                        </Toolbar>\r\n                        <Card>\r\n                            <template #content>\r\n                                <InlineMessage severity=\"info\">{{ $t('documentExecution.documentDetails.subreports.info') }}</InlineMessage>\r\n\r\n                                <ProgressBar v-if=\"loading\" class=\"kn-progress-bar\" mode=\"indeterminate\" data-test=\"progress-bar\" />\r\n                                <DataTable\r\n                                    v-if=\"!loading\"\r\n                                    class=\"p-datatable-sm kn-table\"\r\n                                    :value=\"allDocumentDetailsProp\"\r\n                                    v-model:selection=\"selectedSubreports\"\r\n                                    dataKey=\"id\"\r\n                                    responsiveLayout=\"scroll\"\r\n                                    v-model:filters=\"filters\"\r\n                                    :globalFilterFields=\"globalFilterFields\"\r\n                                    :loading=\"loading\"\r\n                                    @rowSelect=\"peristTable\"\r\n                                    @rowUnselect=\"deleteTable\"\r\n                                >\r\n                                    <template #header>\r\n                                        <div class=\"table-header p-d-flex p-ai-center\">\r\n                                            <span id=\"search-container\" class=\"p-input-icon-left p-mr-3\">\r\n                                                <i class=\"pi pi-search\" />\r\n                                                <InputText class=\"kn-material-input\" v-model=\"filters['global'].value\" :placeholder=\"$t('common.search')\" />\r\n                                            </span>\r\n                                        </div>\r\n                                    </template>\r\n                                    <Column class=\"lineage-table-header\" selectionMode=\"multiple\" :headerStyle=\"mainDescriptor.style.tableHeader\"> </Column>\r\n                                    <Column field=\"label\" :header=\"$t('common.label')\" :sortable=\"true\"></Column>\r\n                                    <Column field=\"name\" :header=\"$t('common.name')\" :sortable=\"true\"></Column>\r\n                                    <Column field=\"description\" :header=\"$t('common.description')\" :sortable=\"true\"></Column>\r\n                                </DataTable>\r\n                            </template>\r\n                        </Card>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent, PropType } from 'vue'\r\nimport { iDocument } from '@/modules/documentExecution/documentDetails/DocumentDetails'\r\nimport { AxiosResponse } from 'axios'\r\nimport { filterDefault } from '@/helpers/commons/filterHelper'\r\nimport mainDescriptor from '@/modules/documentExecution/documentDetails/DocumentDetailsDescriptor.json'\r\nimport DataTable from 'primevue/datatable'\r\nimport Column from 'primevue/column'\r\nimport InlineMessage from 'primevue/inlinemessage'\r\nimport mainStore from '../../../../../App.store'\r\n\r\nexport default defineComponent({\r\n    name: 'data-lineage',\r\n    components: {\r\n        DataTable,\r\n        Column,\r\n        InlineMessage\r\n    },\r\n    props: { selectedDocument: { type: Object as PropType<iDocument>, required: true }, allDocumentDetailsProp: { type: Array as any, required: true } },\r\n    emits: [],\r\n    data() {\r\n        return {\r\n            mainDescriptor,\r\n            savedSubreports: [] as any,\r\n            selectedSubreports: [] as any[],\r\n            loading: false,\r\n            filters: { global: [filterDefault] } as Object,\r\n            globalFilterFields: ['name']\r\n        }\r\n    },\r\n    setup() {\r\n        const store = mainStore()\r\n        return { store }\r\n    },\r\n    async created() {\r\n        await this.getSelectedSubreports()\r\n    },\r\n    watch: {\r\n        async allDocumentDetailsProp() {\r\n            await this.getSelectedSubreports()\r\n        }\r\n    },\r\n\r\n    methods: {\r\n        async getSelectedSubreports() {\r\n            this.loading = true\r\n            if (this.selectedDocument?.id) {\r\n                await this.$http.get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/documentdetails/${this.selectedDocument?.id}/subreports`).then((response: AxiosResponse<any>) => (this.savedSubreports = response.data))\r\n                this.setCheckedTables()\r\n            }\r\n            this.loading = false\r\n        },\r\n        setCheckedTables() {\r\n            for (var i = 0; i < this.allDocumentDetailsProp.length; i++) {\r\n                for (var j = 0; j < this.savedSubreports.length; j++) {\r\n                    if (this.allDocumentDetailsProp[i].id == this.savedSubreports[j].sub_rpt_id) {\r\n                        this.selectedSubreports.push(this.allDocumentDetailsProp[i])\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        peristTable(event) {\r\n            const postData = event.data\r\n            delete postData.dataSetLabel\r\n            delete postData.creationDate\r\n            postData.refreshSeconds = parseInt(postData.refreshSeconds)\r\n            this.$http\r\n                .post(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/documentdetails/${this.selectedDocument.id}/subreports`, postData, {\r\n                    headers: { 'X-Disable-Errors': 'true' }\r\n                })\r\n                .then(() => this.store.setInfo({ title: this.$t('common.save'), msg: this.$t('documentExecution.documentDetails.subreports.persistOk') }))\r\n                .catch(() => this.store.setError({ title: this.$t('common.toast.errorTitle'), msg: this.$t('documentExecution.documentDetails.subreports.persistError') }))\r\n        },\r\n        deleteTable(event) {\r\n            this.$http\r\n                .delete(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/documentdetails/${this.selectedDocument.id}/subreports/${event.data.id}`, {\r\n                    headers: { 'X-Disable-Errors': 'true' }\r\n                })\r\n                .then(() => this.store.setInfo({ title: this.$t('common.save'), msg: this.$t('documentExecution.documentDetails.subreports.deleteOk') }))\r\n                .catch(() => this.store.setError({ title: this.$t('common.toast.errorTitle'), msg: this.$t('documentExecution.documentDetails.subreports.deleteError') }))\r\n        }\r\n    }\r\n})\r\n</script>\r\n<style lang=\"scss\">\r\n.lineage-table-header .p-column-header-content {\r\n    display: none;\r\n}\r\n</style>\r\n","<template>\r\n    <div class=\"p-m-4\">\r\n        <div class=\"p-fluid p-field p-col-4\">\r\n            <span class=\"p-float-label\">\r\n                <InputText id=\"address\" class=\"kn-material-input\" v-model=\"model.address\" />\r\n                <label for=\"address\" class=\"kn-material-input-label\"> {{ $t('documentExecution.documentDetails.designerDialog.xmlaAddress') }}</label>\r\n            </span>\r\n        </div>\r\n        <div class=\"p-m-2 p-col-6\">\r\n            <div class=\"p-d-flex p-flex-row\">\r\n                <label class=\"kn-material-input-label\"> {{ $t('documentExecution.documentDetails.designerDialog.xmlaParameters') }}</label>\r\n                <Button id=\"add-parameter-button\" class=\"kn-button kn-button--primary p-ml-auto\" :label=\"$t('documentExecution.documentDetails.designerDialog.addParameter')\" @click=\"addParameter\"></Button>\r\n            </div>\r\n\r\n            <DataTable :value=\"xmlModel?.parameters\" class=\"p-datatable-sm kn-table p-m-5\" responsiveLayout=\"stack\" breakpoint=\"960px\">\r\n                <template #empty>\r\n                    {{ $t('common.info.noDataFound') }}\r\n                </template>\r\n                <Column class=\"kn-truncated p-mr-2\" v-for=\"column in descriptor.xmlaParametersColumns\" :key=\"column.header\" :field=\"column.field\" :header=\"$t(column.header)\">\r\n                    <template #body=\"slotProps\">\r\n                        <div class=\"p-fluid\">\r\n                            <InputText class=\"kn-material-input p-inputtext-sm p-mr-2\" v-model.trim=\"slotProps.data[slotProps.column.props.field]\" />\r\n                            <i class=\"pi pi-pencil edit-icon\" />\r\n                        </div>\r\n                    </template>\r\n                </Column>\r\n                <Column :style=\"descriptor.iconColumnStyle\">\r\n                    <template #body=\"slotProps\">\r\n                        <Button icon=\"pi pi-trash\" class=\"p-button-link\" @click=\"deleteParameter(slotProps.index)\" :data-test=\"'delete-button-' + slotProps.index\" />\r\n                    </template>\r\n                </Column>\r\n            </DataTable>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent, PropType } from 'vue'\r\nimport { iXMLATemplate } from '../../DocumentDetails'\r\nimport Column from 'primevue/column'\r\nimport DataTable from 'primevue/datatable'\r\nimport descriptor from './DocumentDetailOlapDesignerDialogDescriptor.json'\r\n\r\nexport default defineComponent({\r\n    name: 'document-detail-xmla-form',\r\n    components: { Column, DataTable },\r\n    props: { xmlModel: { type: Object as PropType<iXMLATemplate> } },\r\n    data() {\r\n        return {\r\n            descriptor,\r\n            model: {} as iXMLATemplate\r\n        }\r\n    },\r\n    watch: {\r\n        xmlModel() {\r\n            this.loadModel()\r\n        }\r\n    },\r\n    created() {\r\n        this.loadModel()\r\n    },\r\n    methods: {\r\n        loadModel() {\r\n            this.model = this.xmlModel as iXMLATemplate\r\n        },\r\n        addParameter() {\r\n            this.model.parameters.push({ name: '', value: '' })\r\n        },\r\n        deleteParameter(index: number) {\r\n            this.model.parameters.splice(index, 1)\r\n        }\r\n    }\r\n})\r\n</script>\r\n","<template>\r\n    <div class=\"p-m-2\">\r\n        <div class=\"p-fluid p-formgrid p-grid\">\r\n            <div class=\"p-field p-col-4\">\r\n                <span class=\"p-float-label\">\r\n                    <Dropdown id=\"mondrian-schema-select\" class=\"kn-material-input\" v-model=\"selectedMondrianSchema\" :options=\"mondrianSchemas\" optionLabel=\"name\" @change=\"onMondrianSchemaSelected\"> </Dropdown>\r\n                    <label for=\"mondrian-schema-select\" class=\"kn-material-input-label\"> {{ $t('documentExecution.documentDetails.designerDialog.selectMondrianSchema') }}</label>\r\n                </span>\r\n            </div>\r\n            <div class=\"p-col-8\"></div>\r\n\r\n            <div v-if=\"selectedMondrianSchema\" class=\"p-field p-col-4\">\r\n                <span class=\"p-float-label\">\r\n                    <Dropdown id=\"cube-select\" class=\"kn-material-input\" v-model=\"selectedCube\" :options=\"cubes\" @change=\"onCubeSelected\"> </Dropdown>\r\n                    <label for=\"cube-select\" class=\"kn-material-input-label\"> {{ $t('documentExecution.documentDetails.designerDialog.selectCube') }}</label>\r\n                </span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent, PropType } from 'vue'\r\nimport { iMondrianTemplate, iMondrianSchema } from '../../DocumentDetails'\r\nimport Dropdown from 'primevue/dropdown'\r\nimport { AxiosResponse } from 'axios'\r\nimport { mapActions } from 'pinia'\r\nimport mainStore from '@/App.store'\r\n\r\nexport default defineComponent({\r\n    name: 'document-detail-mondrian-form',\r\n    components: { Dropdown },\r\n    props: { sbiExecutionId: { type: String }, mondrianModel: { type: Object as PropType<iMondrianTemplate> }, mondrianSchemas: { type: Array as PropType<iMondrianSchema[]> } },\r\n    data() {\r\n        return {\r\n            model: {} as iMondrianTemplate,\r\n            selectedMondrianSchema: null as iMondrianSchema | null,\r\n            cubes: [] as string[],\r\n            selectedCube: ''\r\n        }\r\n    },\r\n    watch: {\r\n        mondrianModel() {\r\n            this.loadModel()\r\n        }\r\n    },\r\n    created() {\r\n        this.loadModel()\r\n    },\r\n    methods: {\r\n        ...mapActions(mainStore, ['setLoading']),\r\n        loadModel() {\r\n            this.model = this.mondrianModel as iMondrianTemplate\r\n        },\r\n        onMondrianSchemaSelected() {\r\n            if (!this.selectedMondrianSchema) return\r\n\r\n            this.model.mondrianSchema = this.selectedMondrianSchema.name\r\n            this.model.mondrianSchemaId = this.selectedMondrianSchema.currentContentId\r\n            this.model.id = this.selectedMondrianSchema.id\r\n            this.loadCubes()\r\n        },\r\n        async loadCubes() {\r\n            if (!this.selectedMondrianSchema) return\r\n\r\n            this.setLoading(true)\r\n            await this.$http\r\n                .get(import.meta.env.VITE_OLAP_PATH + `1.0/designer/allcubes/${this.selectedMondrianSchema.currentContentId}?SBI_EXECUTION_ID=${this.sbiExecutionId}`)\r\n                .then((response: AxiosResponse<any>) => (this.cubes = response.data))\r\n                .catch(() => {})\r\n            this.setLoading(false)\r\n        },\r\n        onCubeSelected() {\r\n            if (!this.selectedCube) return\r\n\r\n            this.loadMDX()\r\n        },\r\n        async loadMDX() {\r\n            if (!this.selectedMondrianSchema || !this.selectedCube) return\r\n\r\n            this.setLoading(true)\r\n            await this.$http\r\n                .get(import.meta.env.VITE_OLAP_PATH + `1.0/designer/cubes/getMDX/${this.selectedMondrianSchema.currentContentId}/${this.selectedCube}?SBI_EXECUTION_ID=${this.sbiExecutionId}`, { headers: { Accept: 'application/json, text/plain, */*' } })\r\n                .then((response: AxiosResponse<any>) => {\r\n                    this.model.mdxQuery = response.data\r\n                    this.model.mondrianMdxQuery = response.data\r\n                })\r\n                .catch(() => {})\r\n            this.setLoading(false)\r\n        }\r\n    }\r\n})\r\n</script>\r\n","<template>\r\n    <Dialog class=\"full-screen-dialog\" :visible=\"visible\" :modal=\"false\" :closable=\"false\" position=\"right\" :baseZIndex=\"1\" :autoZIndex=\"true\">\r\n        <template #header>\r\n            <Toolbar class=\"kn-toolbar kn-toolbar--primary p-col-12\">\r\n                <template #start>\r\n                    <span>{{ $t('documentExecution.documentDetails.designerDialog.olapDesigner') }}</span>\r\n                </template>\r\n                <template #end>\r\n                    <Button class=\"kn-button kn-button--primary olap-designer-toolbar-button\" @click=\"closeDialog\"> {{ $t('common.back') }}</Button>\r\n                    <Button class=\"kn-button kn-button--primary olap-designer-toolbar-button\" @click=\"start\"> {{ $t('common.start') }}</Button>\r\n                </template>\r\n            </Toolbar>\r\n        </template>\r\n        <ProgressSpinner class=\"kn-progress-spinner\" v-if=\"loading\" />\r\n\r\n        <div class=\"p-fluid p-formgrid p-grid p-m-4\">\r\n            <div class=\"p-field p-col-4\">\r\n                <span class=\"p-float-label\">\r\n                    <Dropdown id=\"type\" class=\"kn-material-input\" v-model=\"type\" :options=\"descriptor.typeOptions\" optionValue=\"value\" optionDisabled=\"disabled\">\r\n                        <template #value=\"slotProps\">\r\n                            <div v-if=\"slotProps.value\">\r\n                                <span>{{ $t(`documentExecution.documentDetails.designerDialog.${slotProps.value}`) }}</span>\r\n                            </div>\r\n                        </template>\r\n                        <template #option=\"slotProps\">\r\n                            <div>\r\n                                <span>{{ $t(slotProps.option.label) }}</span>\r\n                            </div>\r\n                        </template>\r\n                    </Dropdown>\r\n                    <label for=\"type\" class=\"kn-material-input-label\"> {{ $t('documentExecution.documentDetails.designerDialog.templateType') }}</label>\r\n                </span>\r\n            </div>\r\n        </div>\r\n        <DocumentDetailXMLAForm v-if=\"type === 'xmla'\" class=\"p-m-4\" :xmlModel=\"xmlModel\"></DocumentDetailXMLAForm>\r\n        <DocumentDetailMondrianForm v-else class=\"p-m-4\" :sbiExecutionId=\"sbiExecutionId\" :mondrianModel=\"mondrianModel\" :mondrianSchemas=\"mondrianSchemas\"></DocumentDetailMondrianForm>\r\n    </Dialog>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent, PropType } from 'vue'\r\nimport { AxiosResponse } from 'axios'\r\nimport { iDocument, iMondrianSchema, iXMLATemplate, iMondrianTemplate } from '../../DocumentDetails'\r\nimport { mapState, mapActions } from 'pinia'\r\nimport Dialog from 'primevue/dialog'\r\nimport descriptor from './DocumentDetailOlapDesignerDialogDescriptor.json'\r\nimport DocumentDetailXMLAForm from './DocumentDetailXMLAForm.vue'\r\nimport DocumentDetailMondrianForm from './DocumentDetailMondrianForm.vue'\r\nimport Dropdown from 'primevue/dropdown'\r\nimport ProgressSpinner from 'primevue/progressspinner'\r\nimport mainStore from '../../../../../App.store'\r\nimport cryptoRandomString from 'crypto-random-string'\r\n\r\nexport default defineComponent({\r\n    name: 'document-detail-olap-designer-dialog',\r\n    components: {\r\n        Dialog,\r\n        DocumentDetailXMLAForm,\r\n        DocumentDetailMondrianForm,\r\n        Dropdown,\r\n        ProgressSpinner\r\n    },\r\n    props: {\r\n        visible: { type: Boolean },\r\n        selectedDocument: { type: Object as PropType<iDocument> }\r\n    },\r\n    emits: ['designerStarted', 'close'],\r\n    data() {\r\n        return {\r\n            descriptor,\r\n            document: null as iDocument | null,\r\n            mondrianSchemas: [] as iMondrianSchema[],\r\n            type: 'mondrian' as string,\r\n            xmlModel: { address: '', parameters: [] } as iXMLATemplate,\r\n            mondrianModel: {} as iMondrianTemplate,\r\n            sbiExecutionId: '',\r\n            loading: false\r\n        }\r\n    },\r\n    computed: {\r\n        ...mapState(mainStore, {\r\n            user: 'user'\r\n        })\r\n    },\r\n    watch: {\r\n        selectedDocument() {\r\n            this.loadDocument()\r\n        }\r\n    },\r\n    async created() {\r\n        this.sbiExecutionId = cryptoRandomString({ length: 16, type: 'base64' })\r\n        this.loadDocument()\r\n    },\r\n    methods: {\r\n        ...mapActions(mainStore, ['setLoading']),\r\n        async loadDocument() {\r\n            this.document = this.selectedDocument ? { ...this.selectedDocument } : ({} as iDocument)\r\n            this.sbiExecutionId = cryptoRandomString({ length: 16, type: 'base64' })\r\n\r\n            this.initialize()\r\n            this.loadMondrianSchemaResources()\r\n        },\r\n        async initialize() {\r\n            if (!this.document || !this.user) return\r\n\r\n            const language = this.user.locale?.split('_')[0]\r\n            const uniqueID = this.user.userUniqueIdentifier\r\n            const country = this.user.locale?.split('_')[1]\r\n\r\n            const hiddenFormData = new URLSearchParams()\r\n            hiddenFormData.set('document', decodeURIComponent('' + this.document.id))\r\n            hiddenFormData.set('user_id', decodeURIComponent(uniqueID))\r\n            hiddenFormData.set('DOCUMENT_LABEL', decodeURIComponent(this.document.label))\r\n            hiddenFormData.set('SBI_COUNTRY', decodeURIComponent(country))\r\n            hiddenFormData.set('DOCUMENT_AUTHOR', decodeURIComponent(this.document.creationUser))\r\n            hiddenFormData.set('DOCUMENT_DESCRIPTION', decodeURIComponent(this.document.description))\r\n            hiddenFormData.set('SBI_LANGUAGE', decodeURIComponent(language))\r\n            hiddenFormData.set('DOCUMENT_NAME', decodeURIComponent(this.document.name))\r\n            hiddenFormData.set('NEW_SESSION', decodeURIComponent('TRUE'))\r\n            hiddenFormData.set('SBI_EXECUTION_ID', decodeURIComponent(this.sbiExecutionId))\r\n            hiddenFormData.set('EDIT_MODE', decodeURIComponent('null'))\r\n            hiddenFormData.set('timereloadurl', decodeURIComponent('' + new Date().getTime()))\r\n            hiddenFormData.set('ENGINE', 'knowageolapengine')\r\n\r\n            this.setLoading(true)\r\n            await this.$http\r\n                .post(import.meta.env.VITE_OLAP_PATH + `olap/startolap/edit`, hiddenFormData, {\r\n                    headers: {\r\n                        Accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9'\r\n                    }\r\n                })\r\n                .then(() => {})\r\n            this.setLoading(false)\r\n        },\r\n        async loadMondrianSchemaResources() {\r\n            this.setLoading(true)\r\n            await this.$http.get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/mondrianSchemasResource`).then((response: AxiosResponse<any>) => (this.mondrianSchemas = response.data))\r\n            this.setLoading(false)\r\n        },\r\n        closeDialog() {\r\n            this.$emit('close')\r\n            this.type = 'xmla'\r\n            this.xmlModel = { address: '', parameters: [] }\r\n            this.mondrianModel = {} as iMondrianTemplate\r\n        },\r\n        async start() {\r\n            const postData = this.type === 'xmla' ? { ...this.xmlModel } : { ...this.mondrianModel }\r\n            this.setLoading(true)\r\n            await this.$http\r\n                .post(import.meta.env.VITE_OLAP_PATH + `1.0/designer/cubes?SBI_EXECUTION_ID=${this.sbiExecutionId}`, postData, { headers: { Accept: 'application/json, text/plain, */*' } })\r\n                .then(() => {\r\n                    this.$emit('designerStarted', {\r\n                        ...this.selectedDocument,\r\n                        sbiExecutionId: this.sbiExecutionId,\r\n                        reference: this.mondrianModel?.mondrianSchema,\r\n                        artifactId: this.mondrianModel.mondrianSchemaId\r\n                    })\r\n                })\r\n                .catch(() => {})\r\n            this.setLoading(false)\r\n        }\r\n    }\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.full-screen-dialog.p-dialog {\r\n    max-height: 100%;\r\n    height: 100vh;\r\n    width: calc(100vw - #{var(--kn-mainmenu-width)});\r\n    margin: 0;\r\n    .p-dialog-content {\r\n        padding: 0;\r\n        margin: 0;\r\n        flex: 1;\r\n        overflow: hidden;\r\n    }\r\n    .p-dialog-header {\r\n        padding: 0;\r\n        margin: 0;\r\n    }\r\n}\r\n\r\n.olap-designer-toolbar-button {\r\n    font-size: 0.75rem;\r\n}\r\n</style>\r\n","<template>\r\n    <div v-if=\"viewMode === 'document-detail' || $route.name === 'document-details-new-document' || $route.name === 'document-details-edit-document'\" id=\"document-details-container\" class=\"p-d-flex p-flex-column kn-flex kn-height-full\">\r\n        <Toolbar class=\"kn-toolbar kn-toolbar--primary p-p-0 p-m-0 p-col-12\">\r\n            <template #start>\r\n                {{ $t('documentExecution.documentDetails.title') }}\r\n            </template>\r\n            <template #end>\r\n                <Button icon=\"pi pi-save\" class=\"p-button-text p-button-rounded p-button-plain\" v-tooltip.bottom=\"$t('common.save')\" @click=\"saveDocument\" :disabled=\"invalidDrivers > 0 || invalidOutputParams > 0 || v$.$invalid\" />\r\n                <Button v-if=\"propMode === 'execution'\" icon=\"pi pi-times\" class=\"p-button-text p-button-rounded p-button-plain\" v-tooltip.bottom=\"$t('common.close')\" @click=\"closeDocument\" />\r\n            </template>\r\n        </Toolbar>\r\n        <ProgressSpinner v-if=\"loading\" class=\"doc-details-spinner\" :style=\"mainDescriptor.style.spinnerStyle\" />\r\n\r\n        <div class=\"document-details-tab-container p-d-flex p-flex-column kn-flex\">\r\n            <TabView class=\"document-details-tabview p-d-flex p-flex-column kn-flex\" @tab-change=\"onTabChange\">\r\n                <TabPanel>\r\n                    <template #header>\r\n                        <span>{{ $t('documentExecution.documentDetails.info.infoTitle') }}</span>\r\n                    </template>\r\n                    <InformationsTab\r\n                        v-if=\"!loading\"\r\n                        :selectedDocument=\"selectedDocument\"\r\n                        :availableFolders=\"availableFolders\"\r\n                        :documentTypes=\"types\"\r\n                        :documentEngines=\"engines\"\r\n                        :availableDatasources=\"dataSources\"\r\n                        :availableStates=\"states\"\r\n                        :selectedDataset=\"selectedDataset\"\r\n                        :availableTemplates=\"templates\"\r\n                        :availableAttributes=\"attributes\"\r\n                        @setTemplateForUpload=\"setTemplateForUpload\"\r\n                        @setImageForUpload=\"setImageForUpload\"\r\n                        @deleteImage=\"deleteImage\"\r\n                        @openDesignerDialog=\"openDesignerDialog\"\r\n                    />\r\n                </TabPanel>\r\n                <TabPanel v-if=\"this.selectedDocument?.id\">\r\n                    <template #header>\r\n                        <span v-bind:class=\"{ 'details-warning-color': invalidDrivers }\">{{ $t('documentExecution.documentDetails.drivers.title') }}</span>\r\n                        <Badge :value=\"invalidDrivers\" class=\"p-ml-2\" severity=\"danger\" v-if=\"invalidDrivers > 0\"></Badge>\r\n                    </template>\r\n                    <DriversTab :selectedDocument=\"selectedDocument\" :availableDrivers=\"drivers\" :availableAnalyticalDrivers=\"analyticalDrivers\" />\r\n                </TabPanel>\r\n                <TabPanel v-if=\"this.selectedDocument?.id\">\r\n                    <template #header>\r\n                        <span v-bind:class=\"{ 'details-warning-color': invalidOutputParams }\">{{ $t('documentExecution.documentDetails.outputParams.title') }}</span>\r\n                        <Badge :value=\"invalidOutputParams\" class=\"p-ml-2\" severity=\"danger\" v-if=\"invalidOutputParams > 0\"></Badge>\r\n                    </template>\r\n                    <OutputParamsTab :selectedDocument=\"selectedDocument\" :typeList=\"parTypes\" :dateFormats=\"dateFormats\" />\r\n                </TabPanel>\r\n                <TabPanel v-if=\"this.selectedDocument?.id && showDataLineageTab\">\r\n                    <template #header>\r\n                        <span>{{ $t('documentExecution.documentDetails.dataLineage.title') }}</span>\r\n                    </template>\r\n\r\n                    <DataLineageTab :selectedDocument=\"selectedDocument\" :metaSourceResource=\"metaSourceResource\" :savedTables=\"savedTables\" />\r\n                </TabPanel>\r\n                <TabPanel v-if=\"this.selectedDocument?.id\">\r\n                    <template #header>\r\n                        <span>{{ $t('documentExecution.documentDetails.history.title') }}</span>\r\n                    </template>\r\n                    <HistoryTab :selectedDocument=\"selectedDocument\" @openDesignerDialog=\"openDesignerDialog\" />\r\n                </TabPanel>\r\n                <TabPanel v-if=\"this.selectedDocument?.id && this.selectedDocument?.typeCode == 'REPORT' && this.selectedDocument?.engine == 'knowagejasperreporte'\">\r\n                    <template #header>\r\n                        <span>{{ $t('documentExecution.documentDetails.subreports.title') }}</span>\r\n                    </template>\r\n\r\n                    <SubreportsTab :selectedDocument=\"selectedDocument\" :allDocumentDetailsProp=\"allDocumentDetails\" />\r\n                </TabPanel>\r\n            </TabView>\r\n        </div>\r\n\r\n        <DocumentDetailOlapDesignerDialog v-if=\"designerDialogVisible\" :visible=\"designerDialogVisible\" :selectedDocument=\"selectedDocument\" @close=\"designerDialogVisible = false\" @designerStarted=\"onDesignerStart\"></DocumentDetailOlapDesignerDialog>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport { AxiosResponse } from 'axios'\r\nimport useValidate from '@vuelidate/core'\r\nimport mainDescriptor from './DocumentDetailsDescriptor.json'\r\nimport InformationsTab from './tabs/informations/DocumentDetailsInformations.vue'\r\nimport DriversTab from './tabs/drivers/DocumentDetailsDrivers.vue'\r\nimport OutputParamsTab from './tabs/outputParams/DocumentDetailsOutputParameters.vue'\r\nimport DataLineageTab from './tabs/dataLineage/DocumentDetailsDataLineage.vue'\r\nimport HistoryTab from './tabs/history/DocumentDetailsHistory.vue'\r\nimport SubreportsTab from './tabs/subreports/DocumentDetailsSubreports.vue'\r\nimport TabView from 'primevue/tabview'\r\nimport Badge from 'primevue/badge'\r\nimport TabPanel from 'primevue/tabpanel'\r\nimport ProgressSpinner from 'primevue/progressspinner'\r\nimport { iDataSource, iAnalyticalDriver, iDriver, iEngine, iTemplate, iAttribute, iParType, iDateFormat, iFolder, iTableSmall, iOutputParam, iDocumentType } from '@/modules/documentExecution/documentDetails/DocumentDetails'\r\nimport DocumentDetailOlapDesignerDialog from './dialogs/olapDesignerDialog/DocumentDetailOlapDesignerDialog.vue'\r\nimport mainStore from '../../../App.store'\r\n\r\nexport default defineComponent({\r\n    name: 'document-details',\r\n    components: {\r\n        InformationsTab,\r\n        DriversTab,\r\n        OutputParamsTab,\r\n        DataLineageTab,\r\n        HistoryTab,\r\n        SubreportsTab,\r\n        TabView,\r\n        TabPanel,\r\n        Badge,\r\n        ProgressSpinner,\r\n        DocumentDetailOlapDesignerDialog\r\n    },\r\n    props: { propDocId: { type: String }, propFolderId: { type: String }, propMode: { type: String }, viewMode: { type: String }, wholeItem: { type: Object } },\r\n    emits: ['closeDetails', 'documentSaved'],\r\n    data() {\r\n        return {\r\n            v$: useValidate() as any,\r\n            mainDescriptor,\r\n            loading: false,\r\n            docId: null as any,\r\n            folderId: null as any,\r\n            templateToUpload: null as any,\r\n            imageToUpload: null as any,\r\n            selectedDataset: {} as any,\r\n            selectedDocument: {} as any,\r\n            dataSources: [] as iDataSource[],\r\n            analyticalDrivers: [] as iAnalyticalDriver[],\r\n            drivers: [] as iDriver[],\r\n            engines: [] as iEngine[],\r\n            templates: [] as iTemplate[],\r\n            attributes: [] as iAttribute[],\r\n            parTypes: [] as iParType[],\r\n            dateFormats: [] as iDateFormat[],\r\n            metaSourceResource: [] as any,\r\n            savedTables: [] as iTableSmall[],\r\n            availableFolders: [] as iFolder[],\r\n            states: mainDescriptor.states,\r\n            types: [] as iDocumentType[],\r\n            allDocumentDetails: [] as any,\r\n            savedSubreports: [] as any,\r\n            selectedSubreports: [] as any,\r\n            designerDialogVisible: false\r\n        }\r\n    },\r\n    computed: {\r\n        invalidOutputParams(): number {\r\n            if (this.selectedDocument && this.selectedDocument.outputParameters) {\r\n                return this.selectedDocument.outputParameters.filter((parameter: any) => parameter.numberOfErrors > 0).length\r\n            }\r\n            return 0\r\n        },\r\n        invalidDrivers(): number {\r\n            if (this.selectedDocument && this.selectedDocument.drivers) {\r\n                return this.selectedDocument.drivers.filter((parameter: any) => parameter.numberOfErrors > 0).length\r\n            }\r\n            return 0\r\n        },\r\n        showDataLineageTab(): boolean {\r\n            return (this.store.$state as any).user.functionalities.includes('DataSourceManagement')\r\n        }\r\n    },\r\n    watch: {\r\n        async propDocId() {\r\n            await this.isForEdit()\r\n        }\r\n    },\r\n    setup() {\r\n        const store = mainStore()\r\n        return { store }\r\n    },\r\n    async created() {\r\n        if (this.viewMode !== 'document-detail' && this.$route.name !== 'document-details-new-document' && this.$route.name !== 'document-details-edit-document') return\r\n        await this.isForEdit()\r\n    },\r\n    activated() {\r\n        this.resetNewDocumentData()\r\n        if (this.propFolderId) {\r\n            this.getFunctionalities()\r\n            this.getAnalyticalDrivers()\r\n            this.getDatasources()\r\n            this.getTypes()\r\n            this.getEngines()\r\n            this.getAttributes()\r\n            this.getParTypes()\r\n            this.getDateFormats()\r\n            this.getSavedTablesByDocumentID()\r\n            this.getDataset()\r\n            this.getDataSources()\r\n        }\r\n    },\r\n    methods: {\r\n        async isForEdit() {\r\n            if (this.propMode === 'execution') {\r\n                this.docId = this.propDocId\r\n                this.folderId = this.propFolderId\r\n            } else {\r\n                this.$route.params.docId ? (this.docId = this.$route.params.docId) : (this.folderId = this.$route.params.folderId)\r\n            }\r\n            await this.loadPage(this.docId)\r\n        },\r\n        resetNewDocumentData() {\r\n            if (this.wholeItem && !this.wholeItem.fromTab && this.propFolderId) {\r\n                this.selectedDocument = { ...this.mainDescriptor.newDocument }\r\n                this.selectedDocument.functionalities = []\r\n            }\r\n        },\r\n        async loadPage(id) {\r\n            this.loading = true\r\n            await Promise.all([\r\n                await this.getSelectedDocumentById(id),\r\n                this.getFunctionalities(),\r\n                this.getAnalyticalDrivers(),\r\n                this.getDatasources(),\r\n                this.getTypes(),\r\n                this.getEngines(),\r\n                this.getAttributes(),\r\n                this.getParTypes(),\r\n                this.getDateFormats(),\r\n                this.getSavedTablesByDocumentID(),\r\n                this.getDataset(),\r\n                this.getDataSources()\r\n            ])\r\n            this.loading = false\r\n        },\r\n        async getSelectedDocumentById(id) {\r\n            if (id) {\r\n                await this.$http.get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/documents/${id}`).then((response: AxiosResponse<any>) => (this.selectedDocument = response.data))\r\n            } else {\r\n                this.selectedDocument = { ...this.mainDescriptor.newDocument }\r\n                this.selectedDocument.functionalities = []\r\n            }\r\n        },\r\n        async getFunctionalities() {\r\n            await this.$http.get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/folders?includeDocs=false`).then((response: AxiosResponse<any>) => {\r\n                this.availableFolders = response.data\r\n                if (this.$route.params.folderId) {\r\n                    let sourceFolder = this.availableFolders.find((folder) => folder.id == parseInt(this.folderId)) as iFolder\r\n                    if (!this.selectedDocument.functionalities.includes(sourceFolder.path)) this.selectedDocument.functionalities.push(sourceFolder.path)\r\n                }\r\n            })\r\n        },\r\n        async getAnalyticalDrivers() {\r\n            await this.$http.get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/analyticalDrivers`).then((response: AxiosResponse<any>) => (this.analyticalDrivers = response.data))\r\n        },\r\n        async getDatasources() {\r\n            await this.$http.get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/datasources`).then((response: AxiosResponse<any>) => (this.dataSources = response.data))\r\n        },\r\n        async getDocumentDrivers() {\r\n            if (this.selectedDocument?.id) {\r\n                await this.$http.get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/documentdetails/${this.selectedDocument?.id}/drivers`).then((response: AxiosResponse<any>) => (this.drivers = response.data))\r\n            }\r\n        },\r\n        async getTemplates() {\r\n            if (this.selectedDocument?.id) {\r\n                await this.$http.get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/documentdetails/${this.selectedDocument?.id}/templates`).then((response: AxiosResponse<any>) => (this.templates = response.data))\r\n            }\r\n        },\r\n        async getTypes() {\r\n            await this.$http.get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `1.0/document-detail/types`).then((response: AxiosResponse<any>) => (this.types = response.data))\r\n        },\r\n        async getEngines() {\r\n            await this.$http.get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `1.0/document-detail/engines`).then((response: AxiosResponse<any>) => (this.engines = response.data))\r\n        },\r\n        async getAttributes() {\r\n            await this.$http.get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/attributes`).then((response: AxiosResponse<any>) => (this.attributes = response.data))\r\n        },\r\n        async getParTypes() {\r\n            await this.$http.get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/domains/listByCode/PAR_TYPE`).then((response: AxiosResponse<any>) => (this.parTypes = response.data))\r\n        },\r\n        async getDateFormats() {\r\n            await this.$http.get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/domains/listByCode/DATE_FORMAT`).then((response: AxiosResponse<any>) => (this.dateFormats = response.data))\r\n        },\r\n        async getDataSources() {\r\n            await this.$http.get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/metaSourceResource/`).then((response: AxiosResponse<any>) => (this.metaSourceResource = response.data))\r\n        },\r\n        async getSavedTablesByDocumentID() {\r\n            if (this.selectedDocument.id) {\r\n                await this.$http.get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/metaDocumetRelationResource/document/${this.selectedDocument.id}`).then((response: AxiosResponse<any>) => (this.savedTables = response.data))\r\n            }\r\n        },\r\n        async getDataset() {\r\n            if (this.selectedDocument?.dataSetId) {\r\n                await this.$http\r\n                    .get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `1.0/datasets/dataset/id/${this.selectedDocument?.dataSetId}`, { headers: { 'X-Disable-Errors': 'true' } })\r\n                    .then((response: AxiosResponse<any>) => {\r\n                        this.selectedDataset = response.data[0]\r\n                    })\r\n                    .catch((error) => {\r\n                        this.store.setError({ title: this.$t('common.toast.errorTitle'), msg: error.message })\r\n                    })\r\n            }\r\n        },\r\n        async getAllSubreports() {\r\n            this.loading = true\r\n            await this.$http.get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/documentdetails/`).then((response: AxiosResponse<any>) => (this.allDocumentDetails = response.data))\r\n            this.loading = false\r\n        },\r\n        setTemplateForUpload(event) {\r\n            this.templateToUpload = event\r\n        },\r\n        async uploadTemplate(uploadedFile, responseId) {\r\n            if (this.templateToUpload) {\r\n                var formData = new FormData()\r\n                formData.append('file', uploadedFile)\r\n                await this.$http\r\n                    .post(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/documentdetails/${responseId}/templates`, formData, {\r\n                        headers: { 'Content-Type': 'multipart/form-data', 'X-Disable-Errors': 'true' }\r\n                    })\r\n                    .then(() => (this.templateToUpload = null))\r\n                    .catch(() => {\r\n                        this.store.setError({ title: this.$t('common.toast.errorTitle'), msg: this.$t('documentExecution.documentDetails.history.uploadError') })\r\n                    })\r\n            }\r\n        },\r\n        deleteImage() {\r\n            this.$http\r\n                .delete(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/documentdetails/${this.selectedDocument.id}/image`, { headers: { Accept: 'application/json, text/plain, */*', 'X-Disable-Errors': 'true' } })\r\n                .then(() => this.loadPage(this.docId))\r\n                .catch(() => this.store.setError({ title: this.$t('common.toast.errorTitle'), msg: this.$t('documentExecution.documentDetails.info.imageError') }))\r\n        },\r\n        setImageForUpload(event) {\r\n            this.imageToUpload = event\r\n        },\r\n        async uploadImage(uploadedFile, responseId) {\r\n            if (this.imageToUpload) {\r\n                var formData = new FormData()\r\n                formData.append('file', uploadedFile)\r\n                formData.append('fileName', uploadedFile.name)\r\n                await this.$http\r\n                    .post(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/documentdetails/${responseId}/image`, formData, {\r\n                        headers: { 'Content-Type': 'multipart/form-data', 'X-Disable-Errors': 'true' }\r\n                    })\r\n                    .then(() => (this.imageToUpload = null))\r\n                    .catch(() => {\r\n                        this.store.setError({ title: this.$t('common.toast.errorTitle'), msg: this.$t('documentExecution.documentDetails.info.imageUploadError') })\r\n                    })\r\n            }\r\n        },\r\n        async saveOutputParams() {\r\n            if (this.selectedDocument.outputParameters) {\r\n                this.selectedDocument.outputParameters.forEach((parameter: iOutputParam) => {\r\n                    if (!parameter.id) {\r\n                        delete parameter.numberOfErrors\r\n                        delete parameter.tempId\r\n                        delete parameter.isChanged\r\n                        this.$http\r\n                            .post(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/documentdetails/${this.selectedDocument.id}/outputparameters`, parameter, { headers: { Accept: 'application/json, text/plain, */*', 'X-Disable-Errors': 'true' } })\r\n                            .catch(() => this.store.setError({ title: this.$t('common.toast.errorTitle'), msg: this.$t('documentExecution.documentDetails.outputParams.persistError') }))\r\n                    } else if (parameter.isChanged) {\r\n                        delete parameter.numberOfErrors\r\n                        delete parameter.isChanged\r\n                        this.$http\r\n                            .put(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/documentdetails/${this.selectedDocument.id}/outputparameters/${parameter.id}`, parameter, { headers: { Accept: 'application/json, text/plain, */*', 'X-Disable-Errors': 'true' } })\r\n                            .catch(() => this.store.setError({ title: this.$t('common.toast.errorTitle'), msg: this.$t('documentExecution.documentDetails.outputParams.persistError') }))\r\n                    }\r\n                })\r\n            }\r\n        },\r\n        async saveDrivers() {\r\n            if (this.selectedDocument.drivers) {\r\n                this.selectedDocument.drivers.forEach((driver: iDriver) => {\r\n                    driver.modifiable = 0\r\n                    if (!driver.id) {\r\n                        delete driver.numberOfErrors\r\n                        delete driver.isChanged\r\n                        this.$http\r\n                            .post(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/documentdetails/${this.selectedDocument.id}/drivers`, driver, { headers: { Accept: 'application/json, text/plain, */*', 'X-Disable-Errors': 'true' } })\r\n                            .catch(() => this.store.setError({ title: this.$t('common.toast.errorTitle'), msg: this.$t('documentExecution.documentDetails.drivers.persistError') }))\r\n                    } else if (driver.isChanged) {\r\n                        delete driver.numberOfErrors\r\n                        delete driver.isChanged\r\n                        this.$http\r\n                            .put(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/documentdetails/${this.selectedDocument.id}/drivers/${driver.id}`, driver, { headers: { Accept: 'application/json, text/plain, */*', 'X-Disable-Errors': 'true' } })\r\n                            .catch(() => this.store.setError({ title: this.$t('common.toast.errorTitle'), msg: this.$t('documentExecution.documentDetails.drivers.persistError') }))\r\n                    }\r\n                })\r\n            }\r\n        },\r\n        saveRequest(docToSave) {\r\n            if (!this.selectedDocument.id) {\r\n                return this.$http.post(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/documentdetails`, docToSave, { headers: { Accept: 'application/json, text/plain, */*', 'X-Disable-Errors': 'true' } })\r\n            } else {\r\n                return this.$http.put(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/documentdetails/${docToSave.id}`, docToSave, { headers: { Accept: 'application/json, text/plain, */*', 'X-Disable-Errors': 'true' } })\r\n            }\r\n        },\r\n        async saveDocument() {\r\n            this.loading = true\r\n            let docToSave = { ...this.selectedDocument }\r\n            const folderId = this.propFolderId\r\n            delete docToSave.drivers\r\n            delete docToSave.outputParameters\r\n            delete docToSave.dataSetLabel\r\n\r\n            await this.saveRequest(docToSave)\r\n                .then(async (response: AxiosResponse<any>) => {\r\n                    await this.saveOutputParams()\r\n                    await this.saveDrivers()\r\n                    await this.uploadTemplate(this.templateToUpload, response.data.id)\r\n                    await this.uploadImage(this.imageToUpload, response.data.id)\r\n                    this.store.setInfo({ title: this.$t('common.save'), msg: this.$t('common.toast.updateSuccess') })\r\n                    setTimeout(() => {\r\n                        const path = `/document-details/${response.data.id}`\r\n                        !this.selectedDocument.id ? this.$router.push(path) : ''\r\n                        this.$emit('documentSaved', { ...response.data, folderId: folderId })\r\n                        this.loadPage(response.data.id)\r\n                    }, 200)\r\n                })\r\n                .catch((error) => {\r\n                    this.store.setError({ title: this.$t('common.toast.errorTitle'), msg: error.message }), (this.loading = false)\r\n                })\r\n        },\r\n        closeDocument() {\r\n            this.$emit('closeDetails')\r\n        },\r\n        onTabChange(event) {\r\n            event.index === 5 ? this.getAllSubreports() : ''\r\n        },\r\n        openDesignerDialog() {\r\n            this.designerDialogVisible = true\r\n        },\r\n        onDesignerStart(document: any) {\r\n            this.$router.push(`/olap-designer/${document.sbiExecutionId}?olapId=${document.id}&olapName=${document.name}&olapLabel=${document.label}&noTemplate=${true}&reference=${document.reference}&engine=${document.engine}&artifactId=${document.artifactId}`)\r\n        }\r\n    }\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.right-border {\r\n    border-right: 1px solid #ccc;\r\n}\r\n.document-details-tabview .p-tabview-panels {\r\n    padding: 0 !important;\r\n}\r\n\r\n.document-details-dialog.p-dialog {\r\n    max-height: 100%;\r\n    height: 80vh;\r\n    width: calc(100vw - var(--kn-mainmenu-width));\r\n    margin: 0;\r\n}\r\n\r\n.remove-padding.p-dialog .p-dialog-header,\r\n.remove-padding.p-dialog .p-dialog-content {\r\n    padding: 0;\r\n    margin: 0;\r\n}\r\n\r\n.document-details-tab-container .p-tabview .p-tabview-panel,\r\n.document-details-tab-container .p-tabview .p-tabview-panels {\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex: 1;\r\n}\r\n\r\n.details-warning-color {\r\n    color: red;\r\n}\r\n\r\n.doc-details-spinner .p-progress-spinner-svg {\r\n    width: 125px;\r\n}\r\n</style>\r\n"],"names":["_sfc_main","Dialog","DataTable","Column","_hoisted_1","_openBlock","_createBlock","_withCtx","_createVNode","_createElementVNode","_hoisted_2","Checkbox","Tree","_normalizeClass","_createCommentVNode","_toDisplayString","Card","Textarea","Dropdown","InputSwitch","mainStore","useValidate","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_8","_hoisted_10","_hoisted_12","_hoisted_13","_hoisted_15","_hoisted_19","_hoisted_21","_hoisted_22","_hoisted_25","_hoisted_26","_hoisted_28","_hoisted_29","_createElementBlock","_normalizeStyle","_hoisted_6","_hoisted_7","_hoisted_9","_hoisted_11","_hoisted_14","_hoisted_16","_hoisted_17","_hoisted_20","_hoisted_23","_hoisted_24","_hoisted_27","Listbox","InlineMessage","_withDirectives","_createTextVNode","_withModifiers","_Fragment","_renderList","_hoisted_18","VCodeMirror","ProgressSpinner","TabView","TabPanel","Badge"],"mappings":"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"}