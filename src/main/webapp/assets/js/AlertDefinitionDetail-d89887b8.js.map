{"version":3,"file":"AlertDefinitionDetail-d89887b8.js","sources":["../../../../modules/kpi/alertDefinition/cards/AlertDefinitionNameCard.vue","../../../../modules/kpi/alertDefinition/cards/AlertDefinitionKpiCard.vue","../../../../modules/kpi/alertDefinition/cards/AlertDefinitionEventsCard.vue","../../../../modules/kpi/alertDefinition/actions/AlertDefinitionExectuteEtlCard.vue","../../../../modules/kpi/alertDefinition/actions/AlertDefinitionContextBrokerCard.vue","../../../../modules/kpi/alertDefinition/actions/AlertDefinitionSendMailCard.vue","../../../../modules/kpi/alertDefinition/actions/AlertDefinitionActionDialog.vue","../../../../modules/kpi/alertDefinition/AlertDefinitionDetail.vue"],"sourcesContent":["<template>\r\n    <Card style=\"width:100%\" class=\"p-m-2\">\r\n        <template #content>\r\n            <form class=\"p-fluid p-formgrid p-grid\">\r\n                <div class=\"p-field p-col-6\">\r\n                    <span class=\"p-float-label\">\r\n                        <InputText\r\n                            v-bind=\"$attrs\"\r\n                            id=\"name\"\r\n                            class=\"kn-material-input\"\r\n                            type=\"text\"\r\n                            v-model=\"alert.name\"\r\n                            @input=\"valueChanged('name', $event.target.value)\"\r\n                            :class=\"{\r\n                                'p-invalid': vcomp.name.$invalid && vcomp.name.$dirty\r\n                            }\"\r\n                            @blur=\"vcomp.name.$touch()\"\r\n                        />\r\n                        <label for=\"name\" class=\"kn-material-input-label\">{{ $t('kpi.alert.name') }} * </label>\r\n                    </span>\r\n                    <KnValidationMessages class=\"p-mt-1\" :vComp=\"vcomp.name\" :additionalTranslateParams=\"{ fieldName: $t('kpi.alert.name') }\"></KnValidationMessages>\r\n                </div>\r\n                <div class=\"p-field p-col-6\">\r\n                    <span class=\"p-float-label\">\r\n                        <Dropdown\r\n                            v-bind=\"$attrs\"\r\n                            id=\"listener\"\r\n                            class=\"kn-material-input\"\r\n                            v-model=\"alert.alertListener\"\r\n                            :options=\"listeners\"\r\n                            optionLabel=\"name\"\r\n                            @change=\"valueChanged('alertListener', $event.value)\"\r\n                            :class=\"{\r\n                                'p-invalid': vcomp.alertListener.$invalid && vcomp.alertListener.$dirty\r\n                            }\"\r\n                            @blur=\"vcomp.alertListener.$touch()\"\r\n                        />\r\n                        <label for=\"listener\" class=\"kn-material-input-label\"> {{ $t('kpi.alert.kpiListener') }} * </label>\r\n                    </span>\r\n                    <KnValidationMessages class=\"p-mt-1\" :vComp=\"vcomp.alertListener\" :additionalTranslateParams=\"{ fieldName: $t('kpi.alert.kpiListener') }\"></KnValidationMessages>\r\n                </div>\r\n            </form>\r\n        </template>\r\n    </Card>\r\n</template>\r\n<script lang=\"ts\">\r\nimport { defineComponent, PropType } from 'vue'\r\nimport { iAlert, iListener } from '../AlertDefinition'\r\nimport Dropdown from 'primevue/dropdown'\r\nimport KnValidationMessages from '@/components/UI/KnValidatonMessages.vue'\r\nimport alertDescriptor from '../AlertDefinitionDescriptor.json'\r\nexport default defineComponent({\r\n    name: 'name-card',\r\n    components: { Dropdown, KnValidationMessages },\r\n    props: {\r\n        selectedAlert: {\r\n            type: Object as PropType<iAlert>,\r\n            required: false\r\n        },\r\n        listeners: {\r\n            type: Array as PropType<iListener[]>,\r\n            required: false\r\n        },\r\n        vcomp: Object\r\n    },\r\n    emits: ['touched', 'valueChanged'],\r\n    watch: {\r\n        selectedAlert() {\r\n            this.alert = { ...this.selectedAlert }\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            alert: {} as iAlert,\r\n            alertDescriptor\r\n        }\r\n    },\r\n    methods: {\r\n        valueChanged(fieldName: string, value: any) {\r\n            this.$emit('valueChanged', { fieldName, value })\r\n        }\r\n    }\r\n})\r\n</script>\r\n","<template>\r\n    <Card :style=\"alertDescriptor.styles.basicCard\" class=\"p-m-2\">\r\n        <template #content>\r\n            <div class=\"p-field\">\r\n                <span class=\"p-float-label\">\r\n                    <Dropdown id=\"kpi\" class=\"kn-material-input\" dataKey=\"id\" v-model=\"kpi\" :options=\"kpiList\" optionLabel=\"name\" @change=\"confirmLoadSelectedKpi($event.value)\" />\r\n                    <label for=\"kpi\" class=\"kn-material-input-label\"> Kpi *</label>\r\n                </span>\r\n            </div>\r\n            <Toolbar class=\"kn-toolbar kn-toolbar--primary\">\r\n                <template #start>\r\n                    <span>{{ $t('kpi.alert.actionList') }}</span>\r\n                </template>\r\n\r\n                <template #end>\r\n                    <Button :label=\"$t('kpi.alert.addAction')\" class=\"p-button-text p-button-rounded p-button-plain\" :disabled=\"disableActionButton\" @click=\"$emit('showDialog')\" data-test=\"add-action-button\" />\r\n                </template>\r\n            </Toolbar>\r\n            <div class=\"p-grid p-mt-2\">\r\n                <div class=\"p-m-2 p-shadow-2 action-box\" v-for=\"(action, index) in alert.jsonOptions?.actions\" :key=\"index\">\r\n                    <Toolbar class=\"kn-toolbar kn-toolbar--primary p-col-12\">\r\n                        <template #start>\r\n                            <span>{{ action.data?.name }}</span>\r\n                        </template>\r\n\r\n                        <template #end>\r\n                            <Button class=\"p-button-link p-button-sm\" :style=\"alertDescriptor.styles.menuButton\" icon=\"fa fa-ellipsis-v\" @click=\"toggleMenu($event, { action, index })\" aria-haspopup=\"true\" aria-controls=\"overlay_menu\" data-test=\"menu-button\" />\r\n                            <Menu ref=\"menu\" :model=\"items\" :popup=\"true\" data-test=\"menu\" />\r\n                        </template>\r\n                    </Toolbar>\r\n                    <div class=\"p-d-flex p-flex-column severity-container p-m-2\" v-if=\"action\">\r\n                        <div class=\"p-d-inline-flex p-m-2\" v-for=\"(threshVal, index) in action.thresholdData\" :key=\"index\">\r\n                            <div class=\"color-box\" :style=\"{ 'background-color': threshVal?.color }\"></div>\r\n                            <span flex>{{ threshVal?.label }}</span>\r\n                            <span class=\"severity-box\" style=\"text\" v-if=\"threshVal?.severityCd != undefined\">({{ threshVal.severityCd }})</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </template>\r\n    </Card>\r\n</template>\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport { AxiosResponse } from 'axios'\r\nimport alertDescriptor from '../AlertDefinitionDescriptor.json'\r\nimport Dropdown from 'primevue/dropdown'\r\nimport Menu from 'primevue/menu'\r\n\r\nexport default defineComponent({\r\n    components: { Dropdown, Menu },\r\n    props: { selectedAlert: { type: Object as any }, kpiList: { type: Array as any }, actionList: { type: Array as any } },\r\n    emits: ['showDialog', 'kpiLoaded', 'touched'],\r\n\r\n    async created() {\r\n        this.alert = this.selectedAlert\r\n        if (this.alert.jsonOptions) {\r\n            await this.loadKpi(this.alert.jsonOptions.kpiId, this.alert.jsonOptions.kpiVersion)\r\n            this.alert.jsonOptions.actions = this.alert.jsonOptions.actions.map((action) => {\r\n                const option = { ...action, data: this.actionList?.find((ac) => action.idAction == ac.id) }\r\n                option['thresholdData'] = option.thresholdValues.map((thresholdId) => {\r\n                    return this.kpi.threshold.thresholdValues.find((threshold) => threshold.id == thresholdId)\r\n                })\r\n                return option\r\n            })\r\n        }\r\n    },\r\n    watch: {\r\n        async selectedAlert() {\r\n            this.alert = this.selectedAlert\r\n            if (this.alert.jsonOptions) {\r\n                await this.loadKpi(this.alert.jsonOptions.kpiId, this.alert.jsonOptions.kpiVersion)\r\n                this.alert.jsonOptions.actions = this.alert.jsonOptions.actions.map((action) => {\r\n                    const option = { ...action, data: this.actionList.find((ac) => action.idAction == ac.id) }\r\n                    option['thresholdData'] = option.thresholdValues.map((thresholdId) => {\r\n                        return this.kpi.threshold.thresholdValues.find((threshold) => threshold.id == thresholdId)\r\n                    })\r\n                    return option\r\n                })\r\n            }\r\n        }\r\n    },\r\n    computed: {\r\n        disableActionButton() {\r\n            for (var i in this.kpi) return false\r\n            return true\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            alertDescriptor,\r\n            alert: {} as any,\r\n            kpi: {} as any,\r\n            oldKpi: null as any,\r\n            items: [] as { label: String; icon: string; command: Function }[]\r\n        }\r\n    },\r\n    methods: {\r\n        toggleMenu(event: any, payload: any) {\r\n            this.createMenuItems(payload)\r\n            const menu = this.$refs.menu as any\r\n            menu.toggle(event)\r\n        },\r\n        createMenuItems(payload) {\r\n            this.items = []\r\n            this.items.push({\r\n                label: this.$t('common.modify'),\r\n                icon: 'pi pi-pencil',\r\n                command: () => {\r\n                    this.$emit('showDialog', payload)\r\n                }\r\n            })\r\n            this.items.push({\r\n                label: this.$t('common.delete'),\r\n                icon: 'far fa-trash-alt',\r\n                command: () => {\r\n                    this.$emit('touched')\r\n                    this.alert.jsonOptions.actions.splice(payload.index, 1)\r\n                }\r\n            })\r\n        },\r\n        async loadKpi(kpiId, kpiVersion) {\r\n            if (kpiId != undefined) {\r\n                await this.$http.get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `1.0/kpi/${kpiId}/${kpiVersion}/loadKpi`).then((response: AxiosResponse<any>) => {\r\n                    this.oldKpi = { ...response.data }\r\n                    this.kpi = { ...response.data }\r\n                    this.$emit('kpiLoaded', this.kpi)\r\n                })\r\n            }\r\n        },\r\n        confirmLoadSelectedKpi(kpi) {\r\n            if (this.alert.jsonOptions.actions.length > 0) {\r\n                this.$confirm.require({\r\n                    message: this.$t('kpi.alert.kpiEditingMessage'),\r\n                    header: this.$t('kpi.alert.kpiEditing'),\r\n                    icon: 'pi pi-exclamation-triangle',\r\n                    accept: () => {\r\n                        this.loadKpi(kpi.id, kpi.version)\r\n                        this.alert.jsonOptions.actions = []\r\n                        this.alert.jsonOptions.kpiId = kpi.id\r\n                        this.alert.jsonOptions.kpiVersion = kpi.version\r\n                        this.oldKpi = this.kpi\r\n                        this.$emit('touched')\r\n                    },\r\n                    reject: () => {\r\n                        this.kpi = this.oldKpi\r\n                    }\r\n                })\r\n            } else {\r\n                this.loadKpi(kpi.id, kpi.version)\r\n                this.alert.jsonOptions.kpiId = kpi.id\r\n                this.alert.jsonOptions.kpiVersion = kpi.version\r\n                this.oldKpi = this.kpi\r\n            }\r\n        },\r\n        getActionLabel(idAction) {\r\n            for (var i = 0; i < this.actionList.length; i++) {\r\n                if (this.actionList[i].id == idAction) {\r\n                    return this.actionList[i].name\r\n                }\r\n            }\r\n            return ''\r\n        },\r\n        getThresholdItem(actionThresholds) {\r\n            if (!this.kpi?.threshold?.thresholdValues) {\r\n                return []\r\n            }\r\n            var actionThresholdsList = [] as any\r\n            for (var i = 0; i < this.kpi.threshold.thresholdValues.length; i++) {\r\n                if (actionThresholds.indexOf('' + this.kpi.threshold.thresholdValues[i].id) != -1) {\r\n                    actionThresholdsList.push(this.kpi.threshold.thresholdValues[i])\r\n                }\r\n            }\r\n            return actionThresholdsList\r\n        }\r\n    }\r\n})\r\n</script>\r\n<style scoped>\r\n/* these styles dont work in descriptor for some reason... */\r\n.color-box {\r\n    height: 20px;\r\n    width: 20px;\r\n    margin-right: 5px;\r\n}\r\n.action-box {\r\n    height: 200px;\r\n    width: 200px;\r\n}\r\n.severity-box {\r\n    position: absolute;\r\n    right: 5px;\r\n}\r\n.severity-container {\r\n    position: relative;\r\n}\r\n</style>\r\n","<template>\r\n    <Card :style=\"alertDescriptor.styles.basicCard\" class=\"p-m-2\">\r\n        <template #content>\r\n            <form class=\"p-fluid p-formgrid p-grid\">\r\n                <div class=\"p-field p-col-6\">\r\n                    <span class=\"p-float-label\">\r\n                        <InputNumber id=\"noOfEvents\" inputClass=\"kn-material-input\" v-model=\"alert.eventBeforeTriggerAction\" @input=\"valueChanged('eventBeforeTriggerAction', $event.value)\" />\r\n                        <label for=\"noOfEvents\" class=\"kn-material-input-label\">{{ $t('kpi.alert.noOfEvents') }}</label>\r\n                    </span>\r\n                </div>\r\n                <div class=\"p-field-checkbox\">\r\n                    <Checkbox id=\"execution\" v-model=\"alert.singleExecution\" :binary=\"true\" @click=\"valueChanged('singleExecution', $event)\" />\r\n                    <label for=\"execution\">{{ $t('kpi.alert.execution') }}</label>\r\n                </div>\r\n            </form>\r\n        </template>\r\n    </Card>\r\n</template>\r\n<script lang=\"ts\">\r\nimport { defineComponent, PropType } from 'vue'\r\nimport { iAlert } from '../AlertDefinition'\r\nimport InputNumber from 'primevue/inputnumber'\r\nimport Checkbox from 'primevue/checkbox'\r\nimport alertDescriptor from '../AlertDefinitionDescriptor.json'\r\nexport default defineComponent({\r\n    name: 'events-card',\r\n    components: { InputNumber, Checkbox },\r\n    props: {\r\n        selectedAlert: {\r\n            type: Object as PropType<iAlert>,\r\n            required: false\r\n        },\r\n        vcomp: Object\r\n    },\r\n    emits: ['touched', 'valueChanged'],\r\n    watch: {\r\n        selectedAlert() {\r\n            this.alert = { ...this.selectedAlert }\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            alert: {} as iAlert,\r\n            alertDescriptor\r\n        }\r\n    },\r\n    methods: {\r\n        valueChanged(fieldName: string, value: any) {\r\n            this.$emit('valueChanged', { fieldName, value })\r\n        }\r\n    }\r\n})\r\n</script>\r\n","<template>\r\n    <DataTable\r\n        v-model:selection=\"selectedFiles\"\r\n        :value=\"files\"\r\n        :loading=\"loading\"\r\n        class=\"p-datatable-sm kn-table\"\r\n        dataKey=\"DOCUMENT_ID\"\r\n        responsiveLayout=\"stack\"\r\n        v-model:filters=\"filters\"\r\n        filterDisplay=\"menu\"\r\n        :globalFilterFields=\"addActionDialogDescriptor.documentFilterFields\"\r\n        @row-select=\"fileSelected\"\r\n        @row-unselect=\"fileSelected\"\r\n        @row-select-all=\"fileSelected\"\r\n        @row-unselect-all=\"fileSelected\"\r\n    >\r\n        <template #header>\r\n            <div class=\"table-header\">\r\n                <span class=\"p-input-icon-left\">\r\n                    <i class=\"pi pi-search\" />\r\n                    <InputText class=\"kn-material-input\" type=\"text\" v-model=\"filters['global'].value\" :placeholder=\"$t('common.search')\" badge=\"0\" data-test=\"search-input\" />\r\n                </span>\r\n            </div>\r\n        </template>\r\n        <template #empty>\r\n            {{ $t('common.info.noDataFound') }}\r\n        </template>\r\n        <template #loading>\r\n            {{ $t('common.info.dataLoading') }}\r\n        </template>\r\n\r\n        <Column selectionMode=\"multiple\" headerStyle=\"width: 3rem\"></Column>\r\n        <Column v-for=\"col of addActionDialogDescriptor.columnsDocument\" :field=\"col.field\" :header=\"$t(col.header)\" :key=\"col.field\" :sortable=\"true\" class=\"kn-truncated\">\r\n            <template #body=\"slotProps\">\r\n                <span>{{ slotProps.data[slotProps.column.props.field] }}</span>\r\n            </template>\r\n        </Column>\r\n    </DataTable>\r\n</template>\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport Column from 'primevue/column'\r\nimport DataTable from 'primevue/datatable'\r\nimport { filterDefault } from '@/helpers/commons/filterHelper'\r\nimport { FilterOperator } from 'primevue/api'\r\nimport addActionDialogDescriptor from './AlertDefinitionActionDialogDescriptor.json'\r\n\r\nexport default defineComponent({\r\n    name: 'etl-card',\r\n    components: {\r\n        DataTable,\r\n        Column\r\n    },\r\n    props: {\r\n        loading: {\r\n            type: Boolean\r\n        },\r\n        files: {\r\n            type: Array as any\r\n        },\r\n        data: {\r\n            type: Object\r\n        }\r\n    },\r\n    created() {\r\n        this.loadData()\r\n    },\r\n    data() {\r\n        return {\r\n            addActionDialogDescriptor,\r\n            selectedFiles: [] as any,\r\n            myData: {} as any,\r\n            filters: {\r\n                global: [filterDefault],\r\n                label: {\r\n                    operator: FilterOperator.AND,\r\n                    constraints: [filterDefault]\r\n                },\r\n                name: {\r\n                    operator: FilterOperator.AND,\r\n                    constraints: [filterDefault]\r\n                }\r\n            } as Object\r\n        }\r\n    },\r\n    methods: {\r\n        loadData() {\r\n            this.myData = this.data as any\r\n            this.selectedFiles = this.myData?.jsonActionParameters?.listDocIdSelected ? [...this.myData.jsonActionParameters.listDocIdSelected] : []\r\n        },\r\n        fileSelected() {\r\n            this.myData.jsonActionParameters.listDocIdSelected = this.selectedFiles.map((doc: any) => {\r\n                return { DOCUMENT_ID: doc.DOCUMENT_ID }\r\n            })\r\n        }\r\n    }\r\n})\r\n</script>\r\n","<template>\r\n    <form class=\"p-fluid \">\r\n        <span class=\"p-field  p-float-label\">\r\n            <InputText id=\"url\" class=\"kn-material-input\" type=\"text\" v-model=\"myData.jsonActionParameters.contextBrokerUrl\" />\r\n            <label for=\"url\" class=\"kn-material-input-label\">{{ $t('kpi.alert.brokerUrl') }} * </label>\r\n        </span>\r\n        <span class=\"p-field  p-float-label\">\r\n            <InputText id=\"type\" class=\"kn-material-input\" type=\"text\" v-model=\"myData.jsonActionParameters.contextBrokerType\" />\r\n            <label for=\"type\" class=\"kn-material-input-label\">{{ $t('kpi.alert.brokerType') }} * </label>\r\n        </span>\r\n    </form>\r\n</template>\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nexport default defineComponent({\r\n    name: 'contex-broker-card',\r\n    data() {\r\n        return {\r\n            myData: {}\r\n        }\r\n    },\r\n    props: {\r\n        data: {\r\n            type: Object\r\n        }\r\n    },\r\n    created() {\r\n        this.loadData()\r\n    },\r\n    methods: {\r\n        loadData() {\r\n            this.myData = this.data as any\r\n        }\r\n    }\r\n})\r\n</script>\r\n","<template>\r\n    <span class=\"p-float-label p-m-4\">\r\n        <AutoComplete id=\"mailTo\" class=\"p-inputtext-sm\" :multiple=\"true\" v-model=\"selectedUsers\" :suggestions=\"filteredUsers\" field=\"name\" @keydown.enter=\"createMailChip\" @complete=\"searchUsers($event)\" @item-select=\"setUser($event.value)\" />\r\n        <label for=\"mailTo\" class=\"kn-material-input-label\"> {{ $t('kpi.alert.mailTo') }}</label>\r\n        <small id=\"chips-help\">{{ $t('common.chipsHint') }}</small>\r\n    </span>\r\n    <span class=\"p-float-label p-m-4\">\r\n        <InputText id=\"mailSubject\" class=\"kn-material-input\" v-model.trim=\"selectedAction.jsonActionParameters.subject\" />\r\n        <label for=\"mailSubject\" class=\"kn-material-input-label\"> {{ $t('kpi.alert.mailSubject') }}</label>\r\n    </span>\r\n    <div class=\"p-field\">\r\n        <span>\r\n            <Editor id=\"html\" v-model=\"selectedAction.jsonActionParameters.body\" :editorStyle=\"sendMailCardDescriptor.editor.style\" />\r\n        </span>\r\n    </div>\r\n</template>\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport AutoComplete from 'primevue/autocomplete'\r\nimport Editor from 'primevue/editor'\r\nimport sendMailCardDescriptor from './AlertDefinitionSendMailCardDescriptor.json'\r\n\r\nexport default defineComponent({\r\n    name: 'send-mail-card',\r\n    components: { AutoComplete, Editor },\r\n    props: {\r\n        action: {\r\n            type: Object\r\n        },\r\n        users: {\r\n            type: Array\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            sendMailCardDescriptor,\r\n            selectedAction: {} as any,\r\n            userList: [] as any[],\r\n            selectedUsers: [] as any[],\r\n            filteredUsers: [] as any[]\r\n        }\r\n    },\r\n    watch: {\r\n        users() {\r\n            this.loadUsers()\r\n        }\r\n        // mailTo: [{ name: 'demo_admin', userId: '', email: 'demo_admin' }],\r\n    },\r\n    created() {\r\n        this.loadAction()\r\n        this.loadUsers()\r\n    },\r\n    methods: {\r\n        loadAction() {\r\n            this.selectedAction = this.action\r\n            this.selectedUsers = this.selectedAction?.jsonActionParameters?.mailTo ? this.selectedAction.jsonActionParameters.mailTo : []\r\n        },\r\n        loadUsers() {\r\n            this.userList = this.users as any[]\r\n        },\r\n        searchUsers(event) {\r\n            setTimeout(() => {\r\n                if (!event.query.trim().length) {\r\n                    this.filteredUsers = [...this.userList] as any[]\r\n                } else {\r\n                    this.filteredUsers = this.userList.filter((user: any) => {\r\n                        return user.name.toLowerCase().startsWith(event.query.toLowerCase()) || user.email.toLowerCase().startsWith(event.query.toLowerCase())\r\n                    })\r\n                }\r\n            }, 250)\r\n        },\r\n        createMailChip(event: any) {\r\n            if (event.target.value) {\r\n                this.selectedUsers.push({ name: event.target.value, userId: '', email: event.target.value })\r\n                this.userList.push({ name: event.target.value, userId: '', email: event.target.value })\r\n                event.target.value = ''\r\n                this.selectedAction.jsonActionParameters.mailTo = this.selectedUsers\r\n            }\r\n        }\r\n    }\r\n})\r\n</script>\r\n","<template>\r\n    <Dialog :header=\"$t('kpi.alert.addAction')\" :breakpoints=\"addActionDialogDescriptor.dialog.breakpoints\" :style=\"addActionDialogDescriptor.dialog.style\" :visible=\"dialogVisible\" :modal=\"true\" :closable=\"false\" class=\"p-fluid kn-dialog--toolbar--primary\" data-test=\"add-action-dialog\">\r\n        <template #header>\r\n            <Toolbar class=\"kn-toolbar kn-toolbar--primary p-col-12\">\r\n                <template #start>\r\n                    {{ $t('kpi.alert.addAction') }}\r\n                </template>\r\n                <template #end>\r\n                    <Button icon=\"pi pi-save\" class=\"p-button-text p-button-rounded p-button-plain\" :disabled=\"actionSaveButtonDisabled\" @click=\"handleSave\" />\r\n                    <Button icon=\"pi pi-times\" class=\"p-button-text p-button-rounded p-button-plain\" @click=\"$emit('close')\" />\r\n                </template>\r\n            </Toolbar>\r\n        </template>\r\n        <div class=\"p-fluid p-formgrid p-grid\">\r\n            <span class=\"p-field p-col-6 p-mt-4 p-float-label\">\r\n                <Dropdown id=\"type\" class=\"kn-material-input\" v-model=\"action.idAction\" dataKey=\"id\" optionLabel=\"name\" optionValue=\"id\" :options=\"actionList\" @change=\"setType\" />\r\n                <label for=\"type\" class=\"kn-material-input-label\"> {{ $t('kpi.alert.type') }} * </label>\r\n            </span>\r\n            <span class=\"p-field p-col-6 p-mt-4 p-float-label\">\r\n                <MultiSelect id=\"threshold\" class=\"kn-material-input\" v-model=\"selectedThresholds\" optionLabel=\"label\" :options=\"kpi.threshold?.thresholdValues\">\r\n                    <template #value=\"slotProps\">\r\n                        <div class=\"selected-options-container\" v-for=\"option of slotProps.value\" :key=\"option.code\">\r\n                            <div class=\"color-box\" :style=\"{ 'background-color': option.color }\" />\r\n                            {{ option.label }}\r\n                        </div>\r\n                    </template>\r\n                    <template #option=\"slotProps\">\r\n                        <div class=\"selected-options-container\">\r\n                            <div class=\"color-box\" :style=\"{ 'background-color': slotProps.option.color }\" />\r\n                            {{ slotProps.option.label }}\r\n                        </div>\r\n                    </template>\r\n                </MultiSelect>\r\n                <label for=\"threshold\" class=\"kn-material-input-label\"> {{ $t('kpi.alert.threshold') }} * </label>\r\n            </span>\r\n        </div>\r\n        <Card style=\"height: 37rem\">\r\n            <template #content>\r\n                <ExectuteEtlCard v-if=\"action && action.className == 'it.eng.knowage.enterprise.tools.alert.action.ExecuteETLDocument'\" :loading=\"loading\" :files=\"etlDocumentList\" :data=\"action\" />\r\n                <ContextBrokerCard v-if=\"action && action.className == 'it.eng.spagobi.tools.alert.action.NotifyContextBroker'\" :data=\"action\" />\r\n                <SendMailCard v-else-if=\"action && action.className == 'it.eng.knowage.enterprise.tools.alert.action.SendMail'\" :action=\"action\" :users=\"formatedUsers\" />\r\n            </template>\r\n        </Card>\r\n    </Dialog>\r\n</template>\r\n<script lang=\"ts\">\r\nimport { defineComponent, PropType } from 'vue'\r\nimport { AxiosResponse } from 'axios'\r\nimport { iAction } from '../AlertDefinition'\r\nimport Dialog from 'primevue/dialog'\r\nimport Dropdown from 'primevue/dropdown'\r\nimport MultiSelect from 'primevue/multiselect'\r\nimport addActionDialogDescriptor from './AlertDefinitionActionDialogDescriptor.json'\r\nimport ExectuteEtlCard from './AlertDefinitionExectuteEtlCard.vue'\r\nimport ContextBrokerCard from './AlertDefinitionContextBrokerCard.vue'\r\nimport SendMailCard from './AlertDefinitionSendMailCard.vue'\r\nimport useValidate from '@vuelidate/core'\r\nimport { createValidations } from '@/helpers/commons/validationHelper'\r\nimport alertValidationDescriptor from '../AlertDefinitionValidationDescriptor.json'\r\n\r\nexport default defineComponent({\r\n    name: 'add-action-dialog',\r\n    components: { Dialog, Dropdown, MultiSelect, ExectuteEtlCard, ContextBrokerCard, SendMailCard },\r\n    props: { actionList: [] as any, dialogVisible: { type: Boolean, default: false }, kpi: { type: Object }, selectedAction: { type: Object as PropType<iAction>, required: true } },\r\n    emits: ['save'],\r\n    data() {\r\n        return {\r\n            v$: useValidate() as any,\r\n            addActionDialogDescriptor,\r\n            type: {} as any,\r\n            action: {} as any,\r\n            selectedThresholds: [],\r\n            data: [] as any[],\r\n            etlDocumentList: [] as any[],\r\n            usersList: [] as any[],\r\n            formatedUsers: [] as any[],\r\n            loading: false\r\n        }\r\n    },\r\n    computed: {\r\n        componentToShow(): string {\r\n            switch (this.action.className) {\r\n                case 'it.eng.knowage.enterprise.tools.alert.action.ExecuteETLDocument': {\r\n                    return 'ExectuteEtlCard'\r\n                }\r\n                case 'it.eng.spagobi.tools.alert.action.NotifyContextBroker': {\r\n                    return 'ContextBrokerCard'\r\n                }\r\n                case 'it.eng.knowage.enterprise.tools.alert.action.SendMail': {\r\n                    return 'SendMailCard'\r\n                }\r\n                default:\r\n                    return ''\r\n            }\r\n        },\r\n        actionSaveButtonDisabled(): any {\r\n            if (!this.action.className || this.selectedThresholds.length == 0) {\r\n                return true\r\n            } else if (this.action.className != 'it.eng.knowage.enterprise.tools.alert.action.SendMail' && this.isObjectEmpty(this.action.jsonActionParameters)) {\r\n                return true\r\n            }\r\n            return false\r\n        }\r\n    },\r\n\r\n    created() {\r\n        this.loadAction()\r\n        this.loadEtlDocuments()\r\n        this.loadUsers()\r\n    },\r\n    watch: {\r\n        selectedAction() {\r\n            this.loadAction()\r\n        }\r\n    },\r\n    validations() {\r\n        return {\r\n            action: createValidations('action', alertValidationDescriptor.validations.action)\r\n        }\r\n    },\r\n    methods: {\r\n        isObjectEmpty(objectToCheck) {\r\n            for (var i in objectToCheck) return false\r\n            return true\r\n        },\r\n        loadAction() {\r\n            this.action = { ...this.selectedAction }\r\n            this.type = this.action.idAction\r\n            this.selectedThresholds = this.selectedAction.thresholdData ? this.selectedAction.thresholdData : []\r\n        },\r\n        async setType(event) {\r\n            this.action.jsonActionParameters = {}\r\n            var actionInList = this.actionList.find((actionInList) => actionInList.id === event.value)\r\n            this.action.className = actionInList.className\r\n            if (this.action.className == 'it.eng.knowage.enterprise.tools.alert.action.SendMail') {\r\n                this.action.className = 'it.eng.knowage.enterprise.tools.alert.action.SendMail'\r\n                this.formatUsers()\r\n            }\r\n        },\r\n        formatUsers() {\r\n            for (let i = 0; i < this.usersList.length; i++) {\r\n                const attributes = this.usersList[i].sbiUserAttributeses\r\n                for (let key in attributes) {\r\n                    if (attributes[key]['email']) {\r\n                        this.formatedUsers.push({ name: this.usersList[i].fullName, userId: this.usersList[i].userId, email: attributes[key].email })\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        async loadEtlDocuments() {\r\n            await this.$http.get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + '2.0/documents/listDocument?includeType=ETL').then((response: AxiosResponse<any>) => {\r\n                this.etlDocumentList = response.data ? response.data.item : []\r\n            })\r\n        },\r\n        async loadUsers() {\r\n            await this.$http.get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + '2.0/users').then((response: AxiosResponse<any>) => {\r\n                this.usersList = response.data\r\n            })\r\n        },\r\n        handleSave() {\r\n            this.action.thresholdValues = this.selectedThresholds.map((threshold: any) => {\r\n                return threshold.id\r\n            })\r\n            this.$emit('save', this.action)\r\n        }\r\n    }\r\n})\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.selected-options-container {\r\n    display: inline-flex;\r\n    margin-right: 0.5rem;\r\n}\r\n.color-box {\r\n    height: 15px;\r\n    width: 15px;\r\n    margin-right: 5px;\r\n}\r\n</style>\r\n","<template>\r\n    <Toolbar class=\"kn-toolbar kn-toolbar--secondary p-m-0\">\r\n        <template #start>{{ selectedAlert.name }} </template>\r\n        <template #end>\r\n            <Button icon=\"pi pi-save\" class=\"p-button-text p-button-rounded p-button-plain\" :disabled=\"buttonDisabled\" @click=\"handleSubmit\" />\r\n            <Button icon=\"pi pi-times\" class=\"p-button-text p-button-rounded p-button-plain\" @click=\"closeTemplateConfirm\" />\r\n        </template>\r\n    </Toolbar>\r\n    <div class=\"p-grid p-m-0 p-jc-center\" style=\"overflow: auto\">\r\n        <Message class=\"p-m-2\" v-if=\"expiredCard\" severity=\"warn\" :closable=\"true\" :style=\"alertDescriptor.styles.message\">\r\n            {{ $t('kpi.alert.expiredWarning') }}\r\n        </Message>\r\n        <NameCard :selectedAlert=\"selectedAlert\" :listeners=\"listeners\" @valueChanged=\"updateAlert\" :vcomp=\"v$.selectedAlert\" />\r\n        <KnCron class=\"p-m-2\" v-if=\"selectedAlert?.frequency\" :frequency=\"selectedAlert.frequency\" @touched=\"touched = true\" @cronValid=\"setCronValid($event)\" />\r\n        <EventsCard :selectedAlert=\"selectedAlert\" @valueChanged=\"updateAlert\" />\r\n        <KpiCard v-if=\"isListenerSelected && actionList?.length > 0\" :selectedAlert=\"selectedAlert\" :kpiList=\"kpiList\" :actionList=\"actionList\" @showDialog=\"onShowActionDialog($event)\" @kpiLoaded=\"updateKpi\" @touched=\"touched = true\" />\r\n    </div>\r\n    <AddActionDialog :dialogVisible=\"isActionDialogVisible\" :kpi=\"kpi\" :selectedAction=\"selectedAction\" :actionList=\"actionList\" @close=\"isActionDialogVisible = false\" @save=\"onActionSave\" />\r\n</template>\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport { iAction, iAlert, iListener } from './AlertDefinition'\r\nimport { createValidations } from '@/helpers/commons/validationHelper'\r\nimport alertValidationDescriptor from './AlertDefinitionValidationDescriptor.json'\r\nimport alertDescriptor from './AlertDefinitionDescriptor.json'\r\nimport { AxiosResponse } from 'axios'\r\nimport useValidate from '@vuelidate/core'\r\nimport Message from 'primevue/message'\r\nimport NameCard from './cards/AlertDefinitionNameCard.vue'\r\nimport KpiCard from './cards/AlertDefinitionKpiCard.vue'\r\nimport EventsCard from './cards/AlertDefinitionEventsCard.vue'\r\nimport KnCron from '@/components/UI/KnCron/KnCron.vue'\r\nimport AddActionDialog from './actions/AlertDefinitionActionDialog.vue'\r\nimport mainStore from '../../../App.store'\r\n\r\nexport default defineComponent({\r\n    name: 'alert-details',\r\n    components: { NameCard, EventsCard, AddActionDialog, KpiCard, Message, KnCron },\r\n    props: { id: { type: String, required: false } },\r\n    watch: {\r\n        async id() {\r\n            await this.checkId()\r\n            if (this.id == undefined)\r\n                this.selectedAlert = {\r\n                    id: null,\r\n                    singleExecution: false,\r\n                    jsonOptions: { actions: [] },\r\n                    frequency: {\r\n                        cron: { type: 'minute', parameter: { numRepetition: '1' } },\r\n                        startDate: new Date().valueOf(),\r\n                        endDate: null,\r\n                        startTime: new Date().valueOf(),\r\n                        endTime: ''\r\n                    }\r\n                }\r\n        }\r\n    },\r\n    computed: {\r\n        isListenerSelected(): any {\r\n            if (!this.selectedAlert.alertListener || this.selectedAlert.alertListener === this.emptyObject) {\r\n                return false\r\n            }\r\n            return true\r\n        },\r\n        buttonDisabled(): any {\r\n            if (this.selectedAlert.jsonOptions?.actions?.length === 0 || !this.selectedAlert.name || !this.selectedAlert.alertListener || this.validCron == false) return true\r\n            return false\r\n        }\r\n    },\r\n    setup() {\r\n        const store = mainStore()\r\n        return { store }\r\n    },\r\n\r\n    created() {\r\n        if (this.id) {\r\n            this.loadAlert()\r\n        } else {\r\n            this.selectedAlert = {\r\n                id: null,\r\n                singleExecution: false,\r\n                jsonOptions: { actions: [] },\r\n                frequency: {\r\n                    cron: { type: 'minute', parameter: { numRepetition: '1' } },\r\n                    startDate: new Date().valueOf(),\r\n                    endDate: null,\r\n                    startTime: new Date().valueOf(),\r\n                    endTime: ''\r\n                }\r\n            }\r\n        }\r\n        this.loadListener()\r\n        this.loadKpiList()\r\n        this.loadActionList()\r\n    },\r\n    data() {\r\n        return {\r\n            v$: useValidate() as any,\r\n            alertValidationDescriptor,\r\n            alertDescriptor,\r\n            kpi: {} as any,\r\n            emptyObject: {} as any,\r\n            jsonOptions: {} as any,\r\n            selectedAlert: {} as iAlert,\r\n            selectedAction: {} as iAction,\r\n            listeners: [] as iListener[],\r\n            actionList: [] as any,\r\n            actions: [] as any[],\r\n            kpiList: [] as any,\r\n            isActionDialogVisible: false,\r\n            expiredCard: false,\r\n            touched: false,\r\n            actionIndexToEdit: -1,\r\n            validCron: true\r\n        }\r\n    },\r\n    validations() {\r\n        return {\r\n            selectedAlert: createValidations('alert', alertValidationDescriptor.validations.alert)\r\n        }\r\n    },\r\n    methods: {\r\n        async loadAlert() {\r\n            await this.$http\r\n                .get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + '1.0/alert/' + this.id + '/load')\r\n                .then((response: AxiosResponse<any>) => {\r\n                    this.selectedAlert = { ...response.data }\r\n                    this.selectedAlert.jsonOptions = JSON.parse(this.selectedAlert.jsonOptions ? this.selectedAlert.jsonOptions : '{}')\r\n                    if (this.selectedAlert.frequency) {\r\n                        this.selectedAlert.frequency.cron = JSON.parse(this.selectedAlert.frequency.cron ? this.selectedAlert.frequency.cron : '{}')\r\n                        this.selectedAlert.frequency.startDate = this.selectedAlert.frequency.startDate ?? new Date()\r\n                    }\r\n\r\n                    if (this.selectedAlert.jsonOptions) {\r\n                        this.selectedAlert.jsonOptions.actions = this.selectedAlert.jsonOptions.actions?.map((action: any) => {\r\n                            return {\r\n                                jsonActionParameters: JSON.parse(action.jsonActionParameters),\r\n                                idAction: action.idAction,\r\n                                thresholdValues: action.thresholdValues\r\n                            }\r\n                        })\r\n                    }\r\n                })\r\n                .finally(() => (this.expiredCard = this.selectedAlert.jobStatus == 'EXPIRED'))\r\n        },\r\n        async loadListener() {\r\n            await this.$http.get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + '1.0/alert/listListener').then((response: AxiosResponse<any>) => {\r\n                this.listeners = response.data\r\n            })\r\n        },\r\n        async loadKpiList() {\r\n            await this.$http.get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + '1.0/kpi/listKpi').then((response: AxiosResponse<any>) => {\r\n                this.kpiList = [...response.data]\r\n            })\r\n        },\r\n        async loadActionList() {\r\n            await this.$http.get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + '1.0/alert/listAction').then((response: AxiosResponse<any>) => {\r\n                this.actionList = [...response.data]\r\n            })\r\n        },\r\n        updateAlert(event) {\r\n            this.touched = true\r\n            if (event.fieldName == 'singleExecution') {\r\n                this.selectedAlert.singleExecution = !this.selectedAlert.singleExecution\r\n            } else {\r\n                this.selectedAlert[event.fieldName] = event.value\r\n            }\r\n        },\r\n        async handleSubmit() {\r\n            let alertToSave = JSON.parse(JSON.stringify(this.selectedAlert))\r\n            if (alertToSave.jsonOptions) {\r\n                alertToSave.jsonOptions.actions = alertToSave.jsonOptions.actions.map((action: any) => {\r\n                    return {\r\n                        jsonActionParameters: JSON.stringify(action.jsonActionParameters),\r\n                        idAction: action.idAction,\r\n                        thresholdValues: action.thresholdValues\r\n                    }\r\n                })\r\n            }\r\n            alertToSave.jsonOptions = JSON.stringify(alertToSave.jsonOptions)\r\n            if (alertToSave.frequency) alertToSave.frequency.cron = JSON.stringify(alertToSave.frequency.cron)\r\n\r\n            let operation = alertToSave.id ? 'update' : 'insert'\r\n\r\n            await this.$http\r\n                .post(import.meta.env.VITE_RESTFUL_SERVICES_PATH + '1.0/alert/save', alertToSave)\r\n                .then((response: AxiosResponse<any>) => {\r\n                    this.touched = false\r\n                    this.store.setInfo({\r\n                        title: this.$t(this.alertDescriptor.operation[operation].toastTitle),\r\n                        msg: this.$t(this.alertDescriptor.operation.success)\r\n                    })\r\n                    this.$emit('saved', response.data.id)\r\n                })\r\n                .catch((error) => {\r\n                    this.store.setError({\r\n                        title: this.$t('kpi.alert.savingError'),\r\n                        msg: error.message\r\n                    })\r\n                })\r\n        },\r\n        async checkId() {\r\n            if (this.id) {\r\n                await this.loadAlert()\r\n            } else {\r\n                this.selectedAlert = {\r\n                    id: null,\r\n                    singleExecution: false,\r\n                    frequency: {\r\n                        cron: { type: 'minute', parameter: { numRepetition: '1' } },\r\n                        startDate: new Date().valueOf(),\r\n                        endDate: null,\r\n                        startTime: new Date().valueOf(),\r\n                        endTime: ''\r\n                    }\r\n                }\r\n            }\r\n            this.v$.$reset()\r\n        },\r\n        closeTemplateConfirm() {\r\n            if (!this.touched) {\r\n                this.closeTemplate()\r\n            } else {\r\n                this.$confirm.require({\r\n                    message: this.$t('common.toast.unsavedChangesMessage'),\r\n                    header: this.$t('common.toast.unsavedChangesHeader'),\r\n                    icon: 'pi pi-exclamation-triangle',\r\n                    accept: () => {\r\n                        this.touched = false\r\n                        this.closeTemplate()\r\n                    }\r\n                })\r\n            }\r\n        },\r\n        closeTemplate() {\r\n            this.$emit('close')\r\n        },\r\n        updateKpi(event) {\r\n            this.kpi = event\r\n        },\r\n        onActionSave(action) {\r\n            this.isActionDialogVisible = false\r\n            this.touched = true\r\n            const actionToSave = { ...action, idAction: +action.idAction, data: this.actionList.find((ac) => action.idAction == ac.id) }\r\n            actionToSave['thresholdData'] = actionToSave.thresholdValues.map((thresholdId) => {\r\n                return this.kpi.threshold.thresholdValues.find((threshold) => threshold.id == thresholdId)\r\n            })\r\n            if (this.actionIndexToEdit === -1) {\r\n                this.selectedAlert.jsonOptions.actions.push(actionToSave)\r\n            } else {\r\n                this.selectedAlert.jsonOptions.actions[this.actionIndexToEdit] = actionToSave\r\n            }\r\n        },\r\n        onShowActionDialog(payload) {\r\n            this.selectedAction = payload && payload.action ? { ...payload.action, idAction: +payload.action.idAction, className: payload.action.data.className } : { jsonActionParameters: {} }\r\n            this.actionIndexToEdit = payload ? payload.index : -1\r\n            this.isActionDialogVisible = true\r\n        },\r\n        setCronValid(value: boolean) {\r\n            this.validCron = value\r\n        }\r\n    }\r\n})\r\n</script>\r\n"],"names":["_sfc_main","Dropdown","_hoisted_1","_hoisted_2","_hoisted_4","_hoisted_5","_hoisted_7","_openBlock","_createBlock","_withCtx","_createElementVNode","_hoisted_3","_createVNode","_mergeProps","_toDisplayString","_hoisted_6","Menu","_pushScopeId","_popScopeId","_normalizeStyle","_createElementBlock","_Fragment","_renderList","_createCommentVNode","InputNumber","Checkbox","DataTable","Column","AutoComplete","Editor","_withKeys","Dialog","MultiSelect","useValidate","Message","mainStore"],"mappings":"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"}