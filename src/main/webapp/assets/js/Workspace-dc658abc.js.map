{"version":3,"file":"Workspace-dc658abc.js","sources":["../../../../modules/workspace/views/repositoryView/dialogs/WorkspaceNewFolderDialog.vue","../../../../modules/workspace/Workspace.vue"],"sourcesContent":["<template>\r\n    <Dialog class=\"p-fluid kn-dialog--toolbar--primary\" :contentStyle=\"workspaceNewFolderDialogDescriptor.dialog.style\" :visible=\"visible\" :modal=\"true\" :closable=\"false\">\r\n        <template #header>\r\n            <Toolbar class=\"kn-toolbar kn-toolbar--primary p-p-0 p-m-0 p-col-12\">\r\n                <template #start>\r\n                    {{ $t('workspace.myRepository.newFolderTitle') }}\r\n                </template>\r\n            </Toolbar>\r\n        </template>\r\n\r\n        <form v-if=\"newFolder\" class=\"p-fluid p-formgrid p-grid\">\r\n            <div class=\"p-field p-col-6  p-mt-5\">\r\n                <span class=\"p-float-label \">\r\n                    <InputText\r\n                        id=\"code\"\r\n                        class=\"kn-material-input\"\r\n                        type=\"text\"\r\n                        maxLength=\"25\"\r\n                        v-model.trim=\"v$.newFolder.code.$model\"\r\n                        :class=\"{\r\n                            'p-invalid': v$.newFolder.code.$invalid && v$.newFolder.code.$dirty\r\n                        }\"\r\n                        @blur=\"v$.newFolder.code.$touch()\"\r\n                    />\r\n                    <label for=\"code\" class=\"kn-material-input-label\">{{ $t('managers.glossary.common.code') }} * </label>\r\n                </span>\r\n                <KnValidationMessages\r\n                    :vComp=\"v$.newFolder.code\"\r\n                    :additionalTranslateParams=\"{\r\n                        fieldName: $t('managers.glossary.common.code')\r\n                    }\"\r\n                />\r\n            </div>\r\n            <div class=\"p-field p-col-6 p-mt-5\">\r\n                <span class=\"p-float-label \">\r\n                    <InputText\r\n                        id=\"name\"\r\n                        class=\"kn-material-input\"\r\n                        type=\"text\"\r\n                        maxLength=\"25\"\r\n                        v-model.trim=\"v$.newFolder.name.$model\"\r\n                        :class=\"{\r\n                            'p-invalid': v$.newFolder.name.$invalid && v$.newFolder.name.$dirty\r\n                        }\"\r\n                        @blur=\"v$.newFolder.name.$touch()\"\r\n                    />\r\n                    <label for=\"name\" class=\"kn-material-input-label\">{{ $t('importExport.catalogFunction.column.name') }} * </label>\r\n                </span>\r\n                <KnValidationMessages\r\n                    :vComp=\"v$.newFolder.name\"\r\n                    :additionalTranslateParams=\"{\r\n                        fieldName: $t('importExport.catalogFunction.column.name')\r\n                    }\"\r\n                />\r\n            </div>\r\n            <div class=\"p-field p-col-12\">\r\n                <span class=\"p-float-label p-mb-2\">\r\n                    <InputText id=\"descr\" class=\"kn-material-input\" type=\"text\" maxLength=\"254\" v-model.trim=\"newFolder.descr\" />\r\n                    <label for=\"descr\" class=\"kn-material-input-label\"> {{ $t('common.description') }} </label>\r\n                </span>\r\n            </div>\r\n        </form>\r\n\r\n        <template #footer>\r\n            <div class=\"p-d-flex p-flex-row p-jc-end\">\r\n                <Button class=\"kn-button kn-button--primary\" @click=\"closeDialog\"> {{ $t('common.cancel') }}</Button>\r\n                <Button class=\"kn-button kn-button--primary\" @click=\"createFolder\" :disabled=\"buttonDisabled\">{{ $t('common.save') }}</Button>\r\n            </div>\r\n        </template>\r\n    </Dialog>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import { defineComponent } from 'vue'\r\n    import { createValidations } from '@/helpers/commons/validationHelper'\r\n    import Dialog from 'primevue/dialog'\r\n    import KnValidationMessages from '@/components/UI/KnValidatonMessages.vue'\r\n    import workspaceNewFolderDialogDescriptor from './WorkspaceNewFolderDialogDescriptor.json'\r\n    import useValidate from '@vuelidate/core'\r\n\r\n    export default defineComponent({\r\n        name: 'workspace-repository-move-dialog',\r\n        components: { Dialog, KnValidationMessages },\r\n        props: { visible: { type: Boolean } },\r\n        emits: ['close', 'create'],\r\n        data() {\r\n            return {\r\n                v$: useValidate() as any,\r\n                workspaceNewFolderDialogDescriptor,\r\n                newFolder: {} as any\r\n            }\r\n        },\r\n        validations() {\r\n            return {\r\n                newFolder: createValidations('newFolder', workspaceNewFolderDialogDescriptor.validations.newFolder)\r\n            }\r\n        },\r\n        computed: {\r\n            buttonDisabled(): any {\r\n                return this.v$.$invalid\r\n            }\r\n        },\r\n        created() {},\r\n        methods: {\r\n            closeDialog() {\r\n                this.newFolder = {} as any\r\n                this.v$.$reset()\r\n                this.$emit('close')\r\n            },\r\n            createFolder() {\r\n                this.$emit('create', this.newFolder)\r\n                this.newFolder = {} as any\r\n                this.v$.$reset()\r\n            }\r\n        }\r\n    })\r\n</script>\r\n","<template>\r\n    <div class=\"kn-page p-d-flex p-flex-row custom-kn-page-width\">\r\n        <div id=\"sideMenu\" class=\"kn-list--column\" :style=\"workspaceDescriptor.style.menuWidth\">\r\n            <Toolbar class=\"kn-toolbar kn-toolbar--primary\">\r\n                <template #start>\r\n                    {{ $t('workspace.menuLabels.menuTitle') }}\r\n                </template>\r\n            </Toolbar>\r\n            <ProgressBar mode=\"indeterminate\" class=\"kn-progress-bar\" v-if=\"loading\" data-test=\"progress-bar\" />\r\n            <Listbox v-if=\"displayMenu && storeFunctionalitiesExist\" :options=\"menuItems\" data-test=\"menu-list\" class=\"kn-list\">\r\n                <template #option=\"slotProps\">\r\n                    <div v-if=\"slotProps.option.value !== 'repository'\" class=\"kn-list-item\" @click=\"setActiveView(`/workspace/${slotProps.option.value}`)\">\r\n                        <i :class=\"slotProps.option.icon\"></i>\r\n                        <div class=\"kn-list-item-text\">\r\n                            <span>{{ $t(slotProps.option.label) }}</span>\r\n                        </div>\r\n                    </div>\r\n                    <div v-else class=\"menu-accordion\" v-show=\"showRepository\">\r\n                        <Accordion>\r\n                            <AccordionTab>\r\n                                <template #header>\r\n                                    <div class=\"p-d-flex p-flex-row\" @click=\"accordionIcon = !accordionIcon\" data-test=\"document-accordion\">\r\n                                        <i class=\"fas fa-folder\"></i>\r\n                                        <span class=\"p-ml-2\">{{ $t('workspace.menuLabels.myRepository') }}</span>\r\n                                        <i v-if=\"accordionIcon\" class=\"pi pi-chevron-right menu-accordion-icon\"></i>\r\n                                        <i v-if=\"!accordionIcon\" class=\"pi pi-chevron-down menu-accordion-icon\"></i>\r\n                                    </div>\r\n                                </template>\r\n                                <WorkspaceDocumentTree :propFolders=\"allFolders\" mode=\"select\" :selectedBreadcrumb=\"selectedBreadcrumb\" @folderSelected=\"setSelectedFolder\" @delete=\"deleteFolder\" @createFolder=\"showCreateFolderDialog\" data-test=\"document-tree\"></WorkspaceDocumentTree>\r\n                            </AccordionTab>\r\n                        </Accordion>\r\n                    </div>\r\n                </template>\r\n            </Listbox>\r\n        </div>\r\n        <div class=\"p-d-flex p-flex-column\" :style=\"workspaceDescriptor.style.maxWidth\">\r\n            <Button id=\"showSidenavIcon\" v-if=\"$router.currentRoute._rawValue.fullPath === '/workspace'\" icon=\"fas fa-bars\" class=\"p-button-text p-button-rounded p-button-plain\" @click=\"sidebarVisible = true\" />\r\n            <router-view\r\n                class=\"kn-router-view\"\r\n                :selectedFolder=\"selectedFolder\"\r\n                :allFolders=\"allFolders\"\r\n                :toggleCardDisplay=\"toggleCardDisplay\"\r\n                :breadcrumbs=\"breadcrumbs\"\r\n                @toggleDisplayView=\"toggleDisplayView\"\r\n                @showMenu=\"sidebarVisible = true\"\r\n                @reloadRepositoryMenu=\"getAllFolders\"\r\n                @breadcrumbClicked=\"setSelectedBreadcrumb($event)\"\r\n                @execute=\"executeDocument($event)\"\r\n                @showQbeDialog=\"prepareDataForQbe\"\r\n            />\r\n        </div>\r\n\r\n        <Dialog class=\"metaweb-dialog remove-padding p-fluid\" :contentStyle=\"workspaceDescriptor.style.flex\" :visible=\"qbeDialogVisible\" :modal=\"false\" :closable=\"false\" position=\"right\" :baseZIndex=\"1\" :autoZIndex=\"true\">\r\n            <template #header>\r\n                <Toolbar class=\"kn-toolbar kn-toolbar--primary p-p-0 p-m-0 p-col-12\">\r\n                    <template #start>\r\n                        {{ qbeDataset.name }}\r\n                    </template>\r\n                    <template #end>\r\n                        <Button icon=\"pi pi-filter\" class=\"p-button-text p-button-rounded p-button-plain\" v-tooltip.bottom=\"$t('common.save')\" @click=\"parameterSidebarVisible = !parameterSidebarVisible\" />\r\n                        <Button icon=\"pi pi-save\" class=\"p-button-text p-button-rounded p-button-plain\" v-tooltip.bottom=\"$t('common.save')\" @click=\"saveQbeDataset\" />\r\n                        <Button icon=\"pi pi-times\" class=\"p-button-text p-button-rounded p-button-plain\" v-tooltip.bottom=\"$t('common.close')\" @click=\"closeQbeIframe\" />\r\n                    </template>\r\n                </Toolbar>\r\n            </template>\r\n            <div id=\"qbe-iframe-container\" class=\"p-d-flex p-flex-row kn-flex\">\r\n                <iframe v-if=\"qbeIframeVisible\" id=\"qbeIframe\" ref=\"qbeIframe\" class=\"kn-width-full kn-height-full\" :src=\"qbeUrl\"></iframe>\r\n                <KnParameterSidebar style=\"position: inherit; margin-left: auto\" v-if=\"parameterSidebarVisible\" :filtersData=\"filtersData\" :propDocument=\"qbeDataset\" :userRole=\"userRole\" :propQBEParameters=\"qbeParameters\" :propMode=\"'qbeView'\" @execute=\"initiateQbeIframe\"></KnParameterSidebar>\r\n            </div>\r\n        </Dialog>\r\n    </div>\r\n\r\n    <Sidebar class=\"mySidebar\" v-model:visible=\"sidebarVisible\" :showCloseIcon=\"false\">\r\n        <Toolbar class=\"kn-toolbar kn-toolbar--primary\">\r\n            <template #start>\r\n                {{ $t('workspace.menuLabels.menuTitle') }}\r\n            </template>\r\n        </Toolbar>\r\n        <ProgressBar mode=\"indeterminate\" class=\"kn-progress-bar\" v-if=\"loading\" />\r\n        <Listbox :options=\"menuItems\">\r\n            <template #option=\"slotProps\">\r\n                <div v-if=\"slotProps.option.value !== 'repository'\" class=\"kn-list-item p-d-flex p-flex-row\" @click=\"setActiveView(`/workspace/${slotProps.option.value}`)\">\r\n                    <i :class=\"slotProps.option.icon\"></i>\r\n                    <div class=\"kn-list-item-text p-ml-2\">\r\n                        <span>{{ $t(slotProps.option.label) }}</span>\r\n                    </div>\r\n                </div>\r\n                <div v-else v-show=\"showRepository\" class=\"menu-accordion-sidebar\">\r\n                    <Accordion>\r\n                        <AccordionTab>\r\n                            <template #header>\r\n                                <div class=\"p-d-flex p-flex-row\" @click=\"accordionIcon = !accordionIcon\" data-test=\"document-accordion\">\r\n                                    <i class=\"fas fa-folder\"></i>\r\n                                    <span class=\"p-ml-2\">{{ $t('workspace.menuLabels.myRepository') }}</span>\r\n                                </div>\r\n                            </template>\r\n                            <WorkspaceDocumentTree :propFolders=\"allFolders\" mode=\"select\" :selectedBreadcrumb=\"selectedBreadcrumb\" @folderSelected=\"setSelectedFolder\" @delete=\"deleteFolder\" @createFolder=\"showCreateFolderDialog\" data-test=\"document-tree\"></WorkspaceDocumentTree>\r\n                        </AccordionTab>\r\n                    </Accordion>\r\n                </div>\r\n            </template>\r\n        </Listbox>\r\n    </Sidebar>\r\n\r\n    <WorkspaceNewFolderDialog :visible=\"displayCreateFolderDialog\" @close=\"displayCreateFolderDialog = false\" @create=\"createNewFolder\"></WorkspaceNewFolderDialog>\r\n</template>\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport { IDocument, IFolder } from '@/modules/workspace/Workspace'\r\nimport { AxiosResponse } from 'axios'\r\nimport Sidebar from 'primevue/sidebar'\r\nimport Accordion from 'primevue/accordion'\r\nimport AccordionTab from 'primevue/accordiontab'\r\nimport Listbox from 'primevue/listbox'\r\nimport WorkspaceDocumentTree from './genericComponents/WorkspaceDocumentTree.vue'\r\nimport workspaceDescriptor from './WorkspaceDescriptor.json'\r\nimport WorkspaceNewFolderDialog from './views/repositoryView/dialogs/WorkspaceNewFolderDialog.vue'\r\nimport Dialog from 'primevue/dialog'\r\nimport KnParameterSidebar from '@/components/UI/KnParameterSidebar/KnParameterSidebar.vue'\r\nimport moment from 'moment'\r\nimport { mapState } from 'pinia'\r\nimport cryptoRandomString from 'crypto-random-string'\r\nimport mainStore from '../../App.store'\r\n\r\nexport default defineComponent({\r\n    name: 'dataset-management',\r\n    components: { Sidebar, Listbox, Accordion, AccordionTab, WorkspaceDocumentTree, WorkspaceNewFolderDialog, Dialog, KnParameterSidebar },\r\n    computed: {\r\n        ...mapState(mainStore, {\r\n            user: 'user'\r\n        }),\r\n        showRepository(): any {\r\n            return this.user.functionalities.includes('SaveIntoFolderFunctionality')\r\n        },\r\n        storeFunctionalitiesExist(): any {\r\n            this.createMenuItems()\r\n            return this.user.functionalities?.length > 0\r\n        },\r\n        userRole(): any {\r\n            return this.user.sessionRole !== this.$t('role.defaultRolePlaceholder') ? this.user.sessionRole : null\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            workspaceDescriptor,\r\n            sidebarVisible: false,\r\n            toggleCardDisplay: false,\r\n            allFolders: [] as IFolder[],\r\n            selectedFolder: {} as any,\r\n            allDocuments: [] as IDocument[],\r\n            items: [] as IFolder[],\r\n            displayMenu: false,\r\n            displayCreateFolderDialog: false,\r\n            breadcrumbs: [] as any[],\r\n            selectedBreadcrumb: null as any,\r\n            accordionIcon: true,\r\n            loading: false,\r\n            qbeIframeVisible: false,\r\n            qbeDialogVisible: false,\r\n            parameterSidebarVisible: false,\r\n            uniqueID: null as any,\r\n            qbeDataset: null as any,\r\n            datasetDrivers: null as any,\r\n            qbeParameters: [] as any,\r\n            menuItems: [] as any,\r\n            filtersData: null as any,\r\n            qbeUrl: ''\r\n        }\r\n    },\r\n    setup() {\r\n        const store = mainStore()\r\n        return { store }\r\n    },\r\n    created() {\r\n        this.uniqueID = cryptoRandomString({ length: 16, type: 'base64' })\r\n        this.getAllRepositoryData()\r\n    },\r\n    mounted() {\r\n        this.createMenuItems()\r\n    },\r\n    methods: {\r\n        closeSidebar() {\r\n            this.sidebarVisible = false\r\n        },\r\n        async getAllRepositoryData() {\r\n            this.loading = true\r\n            await this.getAllFolders()\r\n            await this.getAllDocuments()\r\n            this.loading = false\r\n        },\r\n        async getAllFolders() {\r\n            return this.$http.get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/organizer/folders/`).then((response: AxiosResponse<any>) => {\r\n                this.allFolders = [...response.data]\r\n                this.displayMenu = true\r\n            })\r\n        },\r\n        async getAllDocuments() {\r\n            return this.$http.get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/organizer/documents/`).then((response: AxiosResponse<any>) => {\r\n                this.allDocuments = [...response.data]\r\n            })\r\n        },\r\n        setActiveView(route) {\r\n            this.$router.push(route)\r\n            this.closeSidebar()\r\n        },\r\n        toggleDisplayView() {\r\n            this.toggleCardDisplay = this.toggleCardDisplay ? false : true\r\n        },\r\n        setSelectedFolder(folder: any) {\r\n            this.selectedFolder = folder\r\n            this.createBreadcrumbs()\r\n            this.$router.push(`/workspace/repository/${folder.id}`)\r\n        },\r\n        async deleteFolder(folder: any) {\r\n            this.loading = true\r\n            await this.$http\r\n                .delete(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/organizer/foldersee/${folder.id}`, { headers: { 'X-Disable-Errors': 'true' } })\r\n                .then(() => {\r\n                    this.store.setInfo({\r\n                        title: this.$t('common.toast.deleteTitle'),\r\n                        msg: this.$t('common.toast.success')\r\n                    })\r\n                    this.getAllRepositoryData()\r\n                    this.$router.push('/workspace')\r\n                })\r\n                .catch((response: any) => {\r\n                    this.store.setError({\r\n                        title: this.$t('common.toast.deleteTitle'),\r\n                        msg: response.message === 'sbi.workspace.organizer.folder.error.delete' ? this.$t('workspace.myRepository.folderDeleteError') : response.message\r\n                    })\r\n                })\r\n            this.loading = false\r\n        },\r\n        showCreateFolderDialog(folder: any) {\r\n            this.selectedFolder = folder\r\n            this.displayCreateFolderDialog = true\r\n        },\r\n        async createNewFolder(newFolder: any) {\r\n            newFolder.parentFunct = this.selectedFolder?.id\r\n            newFolder.path = this.selectedFolder?.path + `/` + encodeURIComponent(newFolder.code)\r\n            newFolder.prog = this.selectedFolder?.prog\r\n            await this.$http\r\n                .post(import.meta.env.VITE_RESTFUL_SERVICES_PATH + '2.0/organizer/foldersee/', newFolder, { headers: { 'X-Disable-Errors': 'true' } })\r\n                .then(() => {\r\n                    this.store.setInfo({ title: this.$t('workspace.myRepository.folderCreatedMessage') })\r\n                    this.getAllFolders()\r\n                })\r\n                .catch((response: any) => {\r\n                    this.store.setError({\r\n                        title: this.$t('common.error.generic'),\r\n                        msg: response\r\n                    })\r\n                })\r\n                .finally(() => (this.displayCreateFolderDialog = false))\r\n        },\r\n        createBreadcrumbs() {\r\n            let currentFolder = this.selectedFolder as any\r\n            this.breadcrumbs = [] as any[]\r\n            do {\r\n                this.breadcrumbs.unshift({ label: currentFolder.data.name, node: currentFolder })\r\n                currentFolder = currentFolder.data.parentFolder\r\n            } while (currentFolder)\r\n        },\r\n        async setSelectedBreadcrumb(breadcrumb: any) {\r\n            this.selectedBreadcrumb = breadcrumb\r\n            this.$router.push(`/workspace/repository/${this.selectedBreadcrumb.node.id}`)\r\n        },\r\n        createMenuItems() {\r\n            this.menuItems = []\r\n            this.menuItems.push({ icon: 'fas fa-history', key: '0', label: 'workspace.menuLabels.recent', value: 'recent' }, { icon: 'fas fa-folder', key: '1', label: 'workspace.menuLabels.myRepository', value: 'repository' })\r\n            if (this.user?.functionalities?.includes('SeeMyData')) {\r\n                this.menuItems.push({ icon: 'fas fa-database', key: '2', label: 'workspace.menuLabels.myData', value: 'data' })\r\n            }\r\n            if (this.user?.isSuperadmin || this.user?.functionalities?.includes('BuildQbeQueriesFunctionality')) {\r\n                this.menuItems.push({ icon: 'fas fa-table', key: '3', label: 'workspace.menuLabels.myModels', value: 'models' })\r\n            }\r\n            if (this.user?.functionalities?.includes('CreateDocument')) {\r\n                this.menuItems.push({ icon: 'fas fa-th-large', key: '4', label: 'workspace.menuLabels.myAnalysis', value: 'analysis' })\r\n            }\r\n            if (this.user?.functionalities?.includes('SeeSnapshotsFunctionality') && this.user?.functionalities?.includes('ViewScheduledWorkspace')) {\r\n                this.menuItems.push({\r\n                    icon: 'fas fa-stopwatch',\r\n                    key: '5',\r\n                    label: 'workspace.menuLabels.schedulation',\r\n                    value: 'schedulation'\r\n                })\r\n            }\r\n            if (this.user?.functionalities?.includes('DataPreparation')) {\r\n                this.menuItems.push({ icon: 'fas fa-cogs', key: '6', label: 'workspace.menuLabels.advanced', value: 'advanced' })\r\n            }\r\n        },\r\n        executeDocument(document: any) {\r\n            const routeType = this.getRouteDocumentType(document)\r\n            const label = document.label ? document.label : document.documentLabel\r\n            this.$router.push(`/workspace/${routeType}/${label}`)\r\n        },\r\n        getRouteDocumentType(item: any) {\r\n            let routeDocumentType = ''\r\n\r\n            const type = item.typeCode ? item.typeCode : item.documentType\r\n\r\n            switch (type) {\r\n                case 'DATAMART':\r\n                    routeDocumentType = 'registry'\r\n                    break\r\n                case 'DOCUMENT_COMPOSITE':\r\n                    routeDocumentType = 'document-composite'\r\n                    break\r\n                case 'OFFICE_DOC':\r\n                    routeDocumentType = 'office-doc'\r\n                    break\r\n                case 'OLAP':\r\n                    routeDocumentType = 'olap'\r\n                    break\r\n                case 'MAP':\r\n                    routeDocumentType = 'map'\r\n                    break\r\n                case 'REPORT':\r\n                    routeDocumentType = 'report'\r\n                    break\r\n                case 'KPI':\r\n                    routeDocumentType = 'kpi'\r\n                    break\r\n                case 'DOSSIER':\r\n                    routeDocumentType = 'dossier'\r\n                    break\r\n                case 'ETL':\r\n                    routeDocumentType = 'etl'\r\n                    break\r\n            }\r\n\r\n            return routeDocumentType\r\n        },\r\n        async loadQBEDataset(dataset) {\r\n            await this.$http\r\n                .get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `1.0/datasets/${dataset.label}`)\r\n                .then((response: AxiosResponse<any>) => {\r\n                    this.qbeDataset = response.data\r\n                })\r\n                .catch(() => {})\r\n        },\r\n        async loadDatasetDrivers(dataset) {\r\n            await this.$http\r\n                .post(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `1.0/businessmodel/${dataset.name}/filters`, { name: dataset.name, role: this.userRole })\r\n                .then((response: AxiosResponse<any>) => {\r\n                    this.filtersData = response.data\r\n                    this.formatDrivers()\r\n                    if (response.data.isReadyForExecution) {\r\n                        this.parameterSidebarVisible = false\r\n                        this.initiateQbeIframe()\r\n                    } else {\r\n                        this.parameterSidebarVisible = true\r\n                    }\r\n                })\r\n                .catch(() => {})\r\n        },\r\n        formatDrivers() {\r\n            this.filtersData?.filterStatus?.forEach((el: any) => {\r\n                el.parameterValue = el.multivalue ? [] : [{ value: '', description: '' }]\r\n                if (el.driverDefaultValue?.length > 0) {\r\n                    let valueIndex = '_col0'\r\n                    let descriptionIndex = 'col1'\r\n                    if (el.metadata?.colsMap) {\r\n                        valueIndex = Object.keys(el.metadata?.colsMap).find((key: string) => el.metadata.colsMap[key] === el.metadata.valueColumn) as any\r\n                        descriptionIndex = Object.keys(el.metadata?.colsMap).find((key: string) => el.metadata.colsMap[key] === el.metadata.descriptionColumn) as any\r\n                    }\r\n\r\n                    el.parameterValue = el.driverDefaultValue.map((defaultValue: any) => {\r\n                        return { value: defaultValue.value ?? defaultValue[valueIndex], description: defaultValue.desc ?? defaultValue[descriptionIndex] }\r\n                    })\r\n\r\n                    if (el.type === 'DATE' && !el.selectionType && el.valueSelection === 'man_in' && el.showOnPanel === 'true') {\r\n                        el.parameterValue[0].value = moment(el.parameterValue[0].description?.split('#')[0]).toDate() as any\r\n                    }\r\n                }\r\n                if (el.data) {\r\n                    el.data = el.data.map((data: any) => {\r\n                        return this.formatParameterDataOptions(el, data)\r\n                    })\r\n\r\n                    if (el.data.length === 1) {\r\n                        el.parameterValue = [...el.data]\r\n                    }\r\n                }\r\n                if ((el.selectionType === 'COMBOBOX' || el.selectionType === 'LIST') && el.multivalue && el.mandatory && el.data.length === 1) {\r\n                    el.showOnPanel = 'false'\r\n                }\r\n\r\n                if (!el.parameterValue) {\r\n                    el.parameterValue = [{ value: '', description: '' }]\r\n                }\r\n\r\n                if (el.parameterValue[0] && !el.parameterValue[0].description) {\r\n                    el.parameterValue[0].description = el.parameterDescription ? el.parameterDescription[0] : ''\r\n                }\r\n            })\r\n        },\r\n        formatParameterDataOptions(parameter: any, data: any) {\r\n            const valueColumn = parameter.metadata.valueColumn\r\n            const descriptionColumn = parameter.metadata.descriptionColumn\r\n            const valueIndex = Object.keys(parameter.metadata.colsMap).find((key: string) => parameter.metadata.colsMap[key] === valueColumn)\r\n            const descriptionIndex = Object.keys(parameter.metadata.colsMap).find((key: string) => parameter.metadata.colsMap[key] === descriptionColumn)\r\n\r\n            return { value: valueIndex ? data[valueIndex] : '', description: descriptionIndex ? data[descriptionIndex] : '' }\r\n        },\r\n        async buildQbeUrl(dataset) {\r\n            let initialUrl = ''\r\n            let language = this.user.locale.split('_')[0]\r\n            let country = this.user.locale.split('_')[1]\r\n            let drivers = encodeURI(JSON.stringify(this.datasetDrivers))\r\n            initialUrl = `/knowageqbeengine/servlet/AdapterHTTP?NEW_SESSION=TRUE&SBI_LANGUAGE=${language}&SBI_SCRIPT=&user_id=${this.user.userUniqueIdentifier}&DEFAULT_DATASOURCE_FOR_WRITING_LABEL=CacheDS&SBI_COUNTRY=${country}&SBI_EXECUTION_ID=${this.uniqueID}&ACTION_NAME=QBE_ENGINE_START_ACTION_FROM_BM&MODEL_NAME=${dataset.name}&DATA_SOURCE_LABEL=${dataset.dataSourceLabel}&DATA_SOURCE_ID=${dataset.dataSourceId}&isTechnicalUser=true&DRIVERS=${drivers}`\r\n            this.qbeUrl = import.meta.env.VITE_HOST_URL + initialUrl\r\n        },\r\n        getFormattedParameters(loadedParameters: { filterStatus: any[]; isReadyForExecution: boolean }) {\r\n            let parameters = {} as any\r\n\r\n            Object.keys(loadedParameters.filterStatus).forEach((key: any) => {\r\n                const parameter = loadedParameters.filterStatus[key]\r\n\r\n                if (!parameter.multivalue) {\r\n                    parameters[parameter.urlName] = { value: parameter.parameterValue[0].value, description: parameter.parameterValue[0].description }\r\n                } else {\r\n                    parameters[parameter.urlName] = { value: parameter.parameterValue?.map((el: any) => el.value), description: parameter.parameterDescription }\r\n                }\r\n            })\r\n\r\n            return parameters\r\n        },\r\n        async prepareDataForQbe(dataset) {\r\n            this.qbeDataset = dataset\r\n            this.qbeDialogVisible = true\r\n            await this.loadDatasetDrivers(dataset)\r\n        },\r\n        initiateQbeIframe() {\r\n            this.datasetDrivers = this.getFormattedParameters(this.filtersData)\r\n            this.buildQbeUrl(this.qbeDataset)\r\n            this.qbeIframeVisible = true\r\n            this.parameterSidebarVisible = false\r\n        },\r\n        closeQbeIframe() {\r\n            this.qbeDialogVisible = false\r\n            this.qbeIframeVisible = false\r\n            this.parameterSidebarVisible = false\r\n            this.datasetDrivers = null\r\n            this.qbeUrl = ''\r\n            this.qbeDataset = {}\r\n        },\r\n        saveQbeDataset() {\r\n            let iframe = this.$refs.qbeIframe as any\r\n            iframe.contentWindow.postMessage('saveDS', '*')\r\n        }\r\n    }\r\n})\r\n</script>\r\n<style scoped lang=\"scss\">\r\n#sideMenu {\r\n    width: 33.3333%;\r\n}\r\n.custom-kn-page-width {\r\n    width: calc(100vw - var(--kn-mainmenu-width));\r\n}\r\n@media screen and (max-width: 1024px) {\r\n    #sideMenu {\r\n        -webkit-transition: width 0.3s;\r\n        transition: width 0.3s;\r\n        width: 0%;\r\n    }\r\n    #detailContent {\r\n        width: 100%;\r\n    }\r\n    #showSidenavIcon {\r\n        display: inline;\r\n    }\r\n}\r\n</style>\r\n\r\n<style lang=\"scss\">\r\n.mySidebar .p-listbox-list li:nth-child(2),\r\n.mySidebar.p-sidebar .p-sidebar-header,\r\n.mySidebar.p-sidebar .p-sidebar-content,\r\n.menu-accordion .p-accordion-content,\r\n.menu-accordion .p-tree,\r\n.menu-accordion-sidebar .p-accordion-content,\r\n.menu-accordion-sidebar .p-tree {\r\n    padding: 0 !important;\r\n}\r\n.menu-accordion-sidebar .p-accordion-header {\r\n    margin: -7px !important;\r\n}\r\n.menu-accordion .p-accordion-tab-active {\r\n    margin: 0 !important;\r\n    padding: 0 !important;\r\n}\r\n.menu-accordion .p-accordion-header-link {\r\n    padding: 0.75rem 0.75rem !important;\r\n    border-bottom: 1px solid #f2f2f2 !important;\r\n}\r\n.menu-accordion .p-accordion-toggle-icon {\r\n    display: none;\r\n}\r\n.menu-accordion-icon {\r\n    margin-left: auto;\r\n}\r\n.menu-accordion-sidebar .p-accordion-tab-active {\r\n    margin: 0 !important;\r\n}\r\n\r\n@media screen and (min-width: 1025px) {\r\n    #sideMenu {\r\n        -webkit-transition: width 0.3s;\r\n        transition: width 0.3s;\r\n        width: 100%;\r\n    }\r\n    #showSidenavIcon {\r\n        display: none;\r\n    }\r\n}\r\n\r\n.metaweb-dialog.p-dialog {\r\n    max-height: 100%;\r\n    height: 100vh;\r\n    width: calc(100vw - var(--kn-mainmenu-width));\r\n    margin: 0;\r\n}\r\n.remove-padding.p-dialog .p-dialog-header,\r\n.remove-padding.p-dialog .p-dialog-content {\r\n    padding: 0;\r\n    margin: 0;\r\n    overflow-x: hidden;\r\n}\r\n</style>\r\n"],"names":["_sfc_main","Dialog","useValidate","_hoisted_2","_hoisted_4","_hoisted_5","_hoisted_7","_hoisted_10","_openBlock","_createBlock","_withCtx","_createVNode","_createElementVNode","_hoisted_11","_createElementBlock","_hoisted_1","_hoisted_3","_normalizeClass","_toDisplayString","_hoisted_6","_hoisted_8","_hoisted_9","Sidebar","Listbox","Accordion","AccordionTab","mainStore","workspaceDescriptor","moment","_popScopeId","_Fragment","_normalizeStyle","_createCommentVNode","_withDirectives"],"mappings":"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"}