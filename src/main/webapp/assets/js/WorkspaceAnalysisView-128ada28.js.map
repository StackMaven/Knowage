{"version":3,"file":"WorkspaceAnalysisView-128ada28.js","sources":["../../../../modules/workspace/views/analysisView/dialogs/WorkspaceAnalysisViewEditDialog.vue","../../../../modules/workspace/views/analysisView/tree/WorkspaceAnalysisFolderTree.vue","../../../../modules/workspace/views/analysisView/dialogs/WorkspaceAnalysisViewShareDialog.vue","../../../../modules/workspace/views/analysisView/dialogs/WorkspaceCockpitDialog.vue","../../../../modules/workspace/views/analysisView/WorkspaceAnalysisView.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <Dialog :header=\"$t('workspace.myAnalysis.editAnalysis')\" :style=\"workspaceAnalysisViewEditDialogDescriptor.dialog.style\" :visible=\"visible\" :modal=\"true\" class=\"p-fluid kn-dialog--toolbar--primary\" :closable=\"false\">\r\n            <div v-if=\"analysis\">\r\n                <div class=\"p-m-4\">\r\n                    <span>\r\n                        <label class=\"kn-material-input-label\">{{ $t('common.label') }} *</label>\r\n                        <InputText\r\n                            class=\"kn-material-input p-inputtext-sm\"\r\n                            v-model=\"analysis.label\"\r\n                            :class=\"{\r\n                                'p-invalid': labelDirty && (!analysis.label || analysis.label.length === 0)\r\n                            }\"\r\n                            :maxLength=\"workspaceAnalysisViewEditDialogDescriptor.labelMaxLength\"\r\n                            @input=\"labelDirty = true\"\r\n                            @blur=\"labelDirty = true\"\r\n                        />\r\n                    </span>\r\n\r\n                    <div class=\"p-d-flex p-flex-row p-jc-between\">\r\n                        <div>\r\n                            <div v-show=\"labelDirty && (!analysis.label || analysis.label.length === 0)\" class=\"p-error p-grid p-m-2\">\r\n                                {{ $t('common.validation.required', { fieldName: $t('common.label') }) }}\r\n                            </div>\r\n                        </div>\r\n                        <p class=\"input-help p-m-0\">{{ labelHelp }}</p>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"p-m-4\">\r\n                    <span>\r\n                        <label class=\"kn-material-input-label\">{{ $t('common.name') }} *</label>\r\n                        <InputText\r\n                            class=\"kn-material-input p-inputtext-sm\"\r\n                            v-model=\"analysis.name\"\r\n                            :class=\"{\r\n                                'p-invalid': nameDirty && (!analysis.name || analysis.name.length === 0)\r\n                            }\"\r\n                            :maxLength=\"workspaceAnalysisViewEditDialogDescriptor.nameMaxLength\"\r\n                            @input=\"nameDirty = true\"\r\n                            @blur=\"nameDirty = true\"\r\n                        />\r\n                    </span>\r\n\r\n                    <div class=\"p-d-flex p-flex-row p-jc-between\">\r\n                        <div>\r\n                            <div v-show=\"nameDirty && (!analysis.name || analysis.name.length === 0)\" class=\"p-error p-grid p-m-2\">\r\n                                {{ $t('common.validation.required', { fieldName: $t('common.name') }) }}\r\n                            </div>\r\n                        </div>\r\n                        <p class=\"input-help p-m-0\">{{ nameHelp }}</p>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"p-m-4\">\r\n                    <span>\r\n                        <label class=\"kn-material-input-label\">{{ $t('common.description') }}</label>\r\n                        <InputText class=\"kn-material-input p-inputtext-sm\" v-model=\"analysis.description\" :maxLength=\"workspaceAnalysisViewEditDialogDescriptor.descriptionMaxLength\" />\r\n                    </span>\r\n\r\n                    <div class=\"p-d-flex p-flex-row p-jc-between\">\r\n                        <div></div>\r\n                        <p class=\"input-help p-m-0\">{{ descriptionHelp }}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <template #footer>\r\n                <Button class=\"kn-button kn-button--primary\" @click=\"closeDialog\"> {{ $t('common.close') }}</Button>\r\n                <Button class=\"kn-button kn-button--primary\" :disabled=\"saveButtonDisabled\" @click=\"saveAnalysis\"> {{ $t('common.save') }}</Button>\r\n            </template>\r\n        </Dialog>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport Dialog from 'primevue/dialog'\r\nimport workspaceAnalysisViewEditDialogDescriptor from './WorkspaceAnalysisViewEditDialogDescriptor.json'\r\n\r\nexport default defineComponent({\r\n    name: 'workspace-analysis-edit-dialog',\r\n    components: { Dialog },\r\n    emits: ['close', 'save'],\r\n    props: { visible: { type: Boolean }, propAnalysis: { type: Object } },\r\n    data() {\r\n        return {\r\n            workspaceAnalysisViewEditDialogDescriptor,\r\n            analysis: null as any,\r\n            labelDirty: false\r\n        }\r\n    },\r\n    computed: {\r\n        labelHelp(): string {\r\n            return (this.analysis.label?.length ?? '0') + ' / ' + workspaceAnalysisViewEditDialogDescriptor.labelMaxLength\r\n        },\r\n        nameHelp(): string {\r\n            return (this.analysis.name?.length ?? '0') + ' / ' + workspaceAnalysisViewEditDialogDescriptor.nameMaxLength\r\n        },\r\n        descriptionHelp(): string {\r\n            return (this.analysis.description?.length ?? '0') + ' / ' + workspaceAnalysisViewEditDialogDescriptor.descriptionMaxLength\r\n        },\r\n        saveButtonDisabled(): boolean {\r\n            return this.analysis.label.length === 0 || this.analysis.name.length === 0\r\n        }\r\n    },\r\n    watch: {\r\n        propAnalysis() {\r\n            this.loadAnalysis()\r\n        }\r\n    },\r\n    created() {\r\n        this.loadAnalysis()\r\n    },\r\n    methods: {\r\n        loadAnalysis() {\r\n            this.analysis = this.propAnalysis ? { ...this.propAnalysis } : {}\r\n        },\r\n        closeDialog() {\r\n            this.analysis = { ...this.propAnalysis }\r\n            this.$emit('close')\r\n        },\r\n        saveAnalysis() {\r\n            this.$emit('save', this.analysis)\r\n        }\r\n    }\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.input-help {\r\n    font-size: smaller;\r\n}\r\n</style>\r\n","<template>\r\n    <Tree id=\"folders-tree\" :value=\"nodes\" @node-expand=\"setOpenFolderIcon($event)\" @node-collapse=\"setClosedFolderIcon($event)\">\r\n        <template #default=\"slotProps\">\r\n            <Checkbox name=\"folders\" v-model=\"selectedFolders\" :value=\"slotProps.node.id\" @change=\"emitSelectedFolders\" />\r\n            <i :class=\"slotProps.node.customIcon\" class=\"p-mx-2\"></i>\r\n            <b>{{ slotProps.node.label }}</b>\r\n        </template>\r\n    </Tree>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport { INode } from '../../../Workspace'\r\nimport Checkbox from 'primevue/checkbox'\r\nimport Tree from 'primevue/tree'\r\nimport workspaceAnalysisFolderTreeDescriptor from './WorkspaceAnalysisFolderTreeDescriptor.json'\r\n\r\nexport default defineComponent({\r\n    name: 'workspace-document-tree',\r\n    components: { Checkbox, Tree },\r\n    props: { propFolders: { type: Array } },\r\n    emits: ['foldersSelected'],\r\n    data() {\r\n        return {\r\n            workspaceAnalysisFolderTreeDescriptor,\r\n            folders: [] as any[],\r\n            nodes: [] as INode[],\r\n            selectedFolders: [] as any[]\r\n        }\r\n    },\r\n    watch: {\r\n        propFolders() {\r\n            this.loadTree()\r\n        }\r\n    },\r\n    created() {\r\n        this.loadTree()\r\n    },\r\n    methods: {\r\n        loadTree() {\r\n            this.loadFolders()\r\n            this.createNodeTree()\r\n        },\r\n        loadFolders() {\r\n            this.folders = this.propFolders as any[]\r\n        },\r\n        createNodeTree() {\r\n            this.nodes = []\r\n            const foldersWithMissingParent = [] as INode[]\r\n            this.folders.forEach((folder: any) => {\r\n                const node = {\r\n                    key: folder.id,\r\n                    id: folder.id,\r\n                    parentId: folder.parentId,\r\n                    label: folder.name,\r\n                    children: [] as INode[],\r\n                    data: folder,\r\n                    style: this.workspaceAnalysisFolderTreeDescriptor.node.style,\r\n                    customIcon: 'pi pi-folder'\r\n                }\r\n                const temp = foldersWithMissingParent.filter((folder: INode) => node.id === folder.parentId)\r\n                temp.forEach((el: any) => node.children.push(el))\r\n                this.attachFolderToTree(node, foldersWithMissingParent)\r\n            })\r\n        },\r\n        attachFolderToTree(folder: INode, foldersWithMissingParent: INode[]) {\r\n            if (folder.parentId) {\r\n                let parentFolder = null as INode | null\r\n                for (let i = 0; i < foldersWithMissingParent.length; i++) {\r\n                    if (folder.parentId === foldersWithMissingParent[i].id) {\r\n                        foldersWithMissingParent[i].children?.push(folder)\r\n                        break\r\n                    }\r\n                }\r\n                for (let i = 0; i < this.nodes.length; i++) {\r\n                    parentFolder = this.findParentFolder(folder, this.nodes[i])\r\n                    if (parentFolder) {\r\n                        parentFolder.children?.push(folder)\r\n                        break\r\n                    }\r\n                }\r\n                if (!parentFolder) {\r\n                    foldersWithMissingParent.push(folder)\r\n                }\r\n            } else {\r\n                this.nodes.push(folder)\r\n            }\r\n        },\r\n        findParentFolder(folderToAdd: INode, folderToSearch: INode) {\r\n            if (folderToAdd.parentId === folderToSearch.id) {\r\n                return folderToSearch\r\n            } else {\r\n                let tempFolder = null as INode | null\r\n                if (folderToSearch.children) {\r\n                    for (let i = 0; i < folderToSearch.children.length; i++) {\r\n                        tempFolder = this.findParentFolder(folderToAdd, folderToSearch.children[i])\r\n                        if (tempFolder) {\r\n                            break\r\n                        }\r\n                    }\r\n                }\r\n                return tempFolder\r\n            }\r\n        },\r\n        setOpenFolderIcon(node: INode) {\r\n            node.customIcon = 'pi pi-folder-open'\r\n        },\r\n        setClosedFolderIcon(node: INode) {\r\n            node.customIcon = 'pi pi-folder'\r\n        },\r\n        emitSelectedFolders() {\r\n            this.$emit('foldersSelected', this.selectedFolders)\r\n        }\r\n    }\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n#folders-tree {\r\n    border: none;\r\n}\r\n</style>\r\n","<template>\r\n    <Dialog class=\"p-fluid kn-dialog--toolbar--primary\" :contentStyle=\"workspaceAnalysisViewShareDialogDescriptor.dialog.style\" :visible=\"visible\" :modal=\"true\" :closable=\"false\">\r\n        <template #header>\r\n            <Toolbar class=\"kn-toolbar kn-toolbar--primary p-p-0 p-m-0 p-col-12\">\r\n                <template #start>\r\n                    {{ $t('workspace.myRepository.destinationFolder') }}\r\n                </template>\r\n            </Toolbar>\r\n        </template>\r\n\r\n        <WorkspaceAnalysisFolderTree :propFolders=\"folders\" @foldersSelected=\"setSelectedFolders\"></WorkspaceAnalysisFolderTree>\r\n\r\n        <template #footer>\r\n            <div class=\"p-d-flex p-flex-row p-jc-end\">\r\n                <Button class=\"kn-button kn-button--primary\" @click=\"closeDialog\"> {{ $t('common.cancel') }}</Button>\r\n                <Button class=\"kn-button kn-button--primary\" @click=\"shareDocument\">{{ $t('common.share') }}</Button>\r\n            </div>\r\n        </template>\r\n    </Dialog>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import { defineComponent } from 'vue'\r\n    import { INode } from '../../../Workspace'\r\n    import Dialog from 'primevue/dialog'\r\n    import workspaceAnalysisViewShareDialogDescriptor from './WorkspaceAnalysisViewShareDialogDescriptor.json'\r\n    import WorkspaceAnalysisFolderTree from '../tree/WorkspaceAnalysisFolderTree.vue'\r\n\r\n    export default defineComponent({\r\n        name: 'workspace-analysis-view-share-dialog',\r\n        components: { Dialog, WorkspaceAnalysisFolderTree },\r\n        props: { visible: { type: Boolean }, propFolders: { type: Array } },\r\n        emits: ['close', 'share'],\r\n        data() {\r\n            return {\r\n                workspaceAnalysisViewShareDialogDescriptor,\r\n                folders: [] as any[],\r\n                selectedFoldersKeys: {} as any\r\n            }\r\n        },\r\n        watch: {\r\n            propFolders() {\r\n                this.loadFolders()\r\n            }\r\n        },\r\n        created() {\r\n            this.loadFolders()\r\n        },\r\n        methods: {\r\n            loadFolders() {\r\n                this.folders = this.propFolders as any[]\r\n            },\r\n            closeDialog() {\r\n                this.folders = []\r\n                this.$emit('close')\r\n            },\r\n            shareDocument() {\r\n                this.$emit('share', this.selectedFoldersKeys)\r\n            },\r\n            setSelectedFolders(folders: INode[]) {\r\n                this.selectedFoldersKeys = folders\r\n            }\r\n        }\r\n    })\r\n</script>\r\n","<template>\r\n    <Dialog class=\"workspace-cockpit-dialog remove-padding p-fluid kn-dialog--toolbar--primary\" :contentStyle=\"workspaceCockpitDialogDescriptor.style.flex\" :visible=\"visible\" :modal=\"false\" :closable=\"false\" position=\"right\" :baseZIndex=\"1\" :autoZIndex=\"true\">\r\n        <template #header>\r\n            <Toolbar class=\"kn-toolbar kn-toolbar--primary p-p-0 p-m-0 p-col-12\">\r\n                <template #start></template>\r\n                <template #end>\r\n                    <Button icon=\"pi pi-times\" class=\"p-button-text p-button-rounded p-button-plain\" v-tooltip.bottom=\"$t('common.close')\" @click=\"close\" />\r\n                </template>\r\n            </Toolbar>\r\n        </template>\r\n\r\n        <iframe ref=\"iframe\" class=\"workspace-cockpit-iframe\" :src=\"url\"></iframe>\r\n    </Dialog>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport Dialog from 'primevue/dialog'\r\nimport workspaceCockpitDialogDescriptor from './WorkspaceCockpitDialogDescriptor.json'\r\nimport mainStore from '../../../../../App.store'\r\n\r\nexport default defineComponent({\r\n    name: 'workspace-cockpit-dialog',\r\n    components: { Dialog },\r\n    props: { visible: { type: Boolean } },\r\n    emits: ['close'],\r\n    data() {\r\n        return {\r\n            workspaceCockpitDialogDescriptor,\r\n            url: ''\r\n        }\r\n    },\r\n    computed: {},\r\n    watch: {},\r\n    setup() {\r\n        const store = mainStore()\r\n        return { store }\r\n    },\r\n    created() {\r\n        this.createUrl()\r\n    },\r\n    methods: {\r\n        createUrl() {\r\n            const user = (this.store.$state as any).user\r\n            const language = user.locale.split('_')[0]\r\n            const uniqueID = user.userUniqueIdentifier\r\n            const country = user.locale.split('_')[1]\r\n\r\n            this.url = import.meta.env.VITE_HOST_URL + `/knowagecockpitengine/api/1.0/pages/edit?NEW_SESSION=TRUE&SBI_LANGUAGE=${language}&SBI_SCRIPT=&user_id=${uniqueID}&SBI_COUNTRY=${country}&SBI_ENVIRONMENT=WORKSPACE&IS_TECHNICAL_USER=true&documentMode=EDIT`\r\n        },\r\n        close() {\r\n            this.$emit('close')\r\n        }\r\n    }\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.workspace-cockpit-dialog.p-dialog {\r\n    max-height: 100%;\r\n    height: 100vh;\r\n    width: calc(100vw - var(--kn-mainmenu-width));\r\n    margin: 0;\r\n}\r\n.remove-padding.p-dialog .p-dialog-header,\r\n.remove-padding.p-dialog .p-dialog-content {\r\n    padding: 0;\r\n    margin: 0;\r\n    overflow-x: hidden;\r\n}\r\n\r\n.workspace-cockpit-iframe {\r\n    width: 100%;\r\n    height: calc(100% - 39px);\r\n    border: none;\r\n}\r\n</style>\r\n","<template>\r\n    <Toolbar class=\"kn-toolbar kn-toolbar--secondary\">\r\n        <template #start>\r\n            <Button id=\"showSidenavIcon\" icon=\"fas fa-bars\" class=\"p-button-text p-button-rounded p-button-plain\" @click=\"$emit('showMenu')\" />\r\n            {{ $t('workspace.menuLabels.myAnalysis') }}\r\n        </template>\r\n        <template #end>\r\n            <Button v-if=\"toggleCardDisplay\" icon=\"fas fa-list\" class=\"p-button-text p-button-rounded p-button-plain\" @click=\"$emit('toggleDisplayView')\" />\r\n            <Button v-if=\"!toggleCardDisplay\" icon=\"fas fa-th-large\" class=\"p-button-text p-button-rounded p-button-plain\" @click=\"$emit('toggleDisplayView')\" />\r\n            <KnFabButton icon=\"fas fa-plus\" data-test=\"new-folder-button\" @click=\"showCreationMenu\" />\r\n        </template>\r\n    </Toolbar>\r\n    <ProgressBar mode=\"indeterminate\" class=\"kn-progress-bar\" v-if=\"loading\" />\r\n\r\n    <InputText class=\"kn-material-input p-m-2\" :style=\"mainDescriptor.style.filterInput\" v-model=\"searchWord\" type=\"text\" :placeholder=\"$t('common.search')\" @input=\"searchItems\" data-test=\"search-input\" />\r\n\r\n    <div class=\"p-m-2 kn-overflow\">\r\n        <DataTable v-if=\"!toggleCardDisplay\" class=\"p-datatable-sm kn-table p-mx-2\" :value=\"filteredAnalysisDocuments\" :loading=\"loading\" dataKey=\"id\" responsiveLayout=\"stack\" breakpoint=\"600px\" data-test=\"analysis-table\">\r\n            <template #empty>\r\n                {{ $t('common.info.noDataFound') }}\r\n            </template>\r\n            <template #filter=\"{ filterModel }\">\r\n                <InputText type=\"text\" v-model=\"filterModel.value\" class=\"p-column-filter\"></InputText>\r\n            </template>\r\n            <Column field=\"name\" :header=\"$t('importExport.gallery.column.name')\" :sortable=\"true\" />\r\n            <Column field=\"creationUser\" :header=\"$t('kpi.targetDefinition.kpiAuthor')\" :sortable=\"true\" />\r\n            <Column field=\"creationDate\" :header=\"$t('kpi.targetDefinition.kpiDate')\" :sortable=\"true\">\r\n                <template #body=\"{ data }\">\r\n                    {{ formatDate(data.creationDate) }}\r\n                </template>\r\n            </Column>\r\n            <Column :style=\"mainDescriptor.style.iconColumn\">\r\n                <template #body=\"slotProps\">\r\n                    <Button icon=\"fas fa-ellipsis-v\" class=\"p-button-link\" @click=\"showMenu($event, slotProps.data)\" />\r\n                    <Button icon=\"fas fa-info-circle\" class=\"p-button-link\" v-tooltip.left=\"$t('workspace.myModels.showInfo')\" @click=\"showSidebar(slotProps.data)\" :data-test=\"'info-button-' + slotProps.data.name\" />\r\n                    <Button icon=\"fas fa-play-circle\" class=\"p-button-link\" @click=\"executeAnalysisDocument(slotProps.data)\" />\r\n                </template>\r\n            </Column>\r\n        </DataTable>\r\n        <div v-if=\"toggleCardDisplay\" class=\"p-grid p-m-2\" data-test=\"card-container\">\r\n            <Message v-if=\"filteredAnalysisDocuments.length === 0\" class=\"kn-flex p-m-2\" severity=\"info\" :closable=\"false\" :style=\"mainDescriptor.style.message\">\r\n                {{ $t('common.info.noDataFound') }}\r\n            </Message>\r\n            <template v-else>\r\n                <WorkspaceCard\r\n                    v-for=\"(document, index) of filteredAnalysisDocuments\"\r\n                    :key=\"index\"\r\n                    :viewType=\"'analysis'\"\r\n                    :document=\"document\"\r\n                    @executeAnalysisDocument=\"executeAnalysisDocument\"\r\n                    @editAnalysisDocument=\"openKpiDesigner\"\r\n                    @shareAnalysisDocument=\"shareAnalysisDocument\"\r\n                    @cloneAnalysisDocument=\"cloneAnalysisDocument\"\r\n                    @deleteAnalysisDocument=\"deleteAnalysisDocumentConfirm\"\r\n                    @uploadAnalysisPreviewFile=\"uploadAnalysisPreviewFile\"\r\n                    @openSidebar=\"showSidebar\"\r\n                />\r\n            </template>\r\n        </div>\r\n    </div>\r\n    <DetailSidebar\r\n        :visible=\"showDetailSidebar\"\r\n        :viewType=\"'analysis'\"\r\n        :document=\"selectedAnalysis\"\r\n        @executeAnalysisDocument=\"executeAnalysisDocument\"\r\n        @editAnalysisDocument=\"editAnalysisDocument\"\r\n        @shareAnalysisDocument=\"shareAnalysisDocument\"\r\n        @cloneAnalysisDocument=\"cloneAnalysisDocumentConfirm\"\r\n        @deleteAnalysisDocument=\"deleteAnalysisDocumentConfirm\"\r\n        @uploadAnalysisPreviewFile=\"uploadAnalysisPreviewFile\"\r\n        @close=\"showDetailSidebar = false\"\r\n        data-test=\"detail-sidebar\"\r\n    />\r\n    <Menu id=\"optionsMenu\" ref=\"optionsMenu\" :model=\"menuButtons\" />\r\n    <Menu id=\"creationMenu\" ref=\"creationMenu\" :model=\"creationMenuButtons\" />\r\n\r\n    <WorkspaceAnalysisViewShareDialog :visible=\"shareDialogVisible\" :propFolders=\"folders\" @close=\"shareDialogVisible = false\" @share=\"handleAnalysShared($event, false)\"></WorkspaceAnalysisViewShareDialog>\r\n    <WorkspaceAnalysisViewEditDialog :visible=\"editDialogVisible\" :propAnalysis=\"selectedAnalysis\" @close=\"editDialogVisible = false\" @save=\"handleEditAnalysis\"></WorkspaceAnalysisViewEditDialog>\r\n    <WorkspaceWarningDialog :visible=\"warningDialogVisbile\" :title=\"$t('workspace.menuLabels.myAnalysis')\" :warningMessage=\"warningMessage\" @close=\"closeWarningDialog\"></WorkspaceWarningDialog>\r\n\r\n    <KnInputFile v-if=\"!uploading\" :changeFunction=\"uploadAnalysisFile\" accept=\"image/*\" :triggerInput=\"triggerUpload\" />\r\n    <WorkspaceCockpitDialog :visible=\"cockpitDialogVisible\" @close=\"closeCockpitDialog\"></WorkspaceCockpitDialog>\r\n</template>\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport mainDescriptor from '@/modules/workspace/WorkspaceDescriptor.json'\r\nimport DetailSidebar from '@/modules/workspace/genericComponents/DetailSidebar.vue'\r\nimport WorkspaceCard from '@/modules/workspace/genericComponents/WorkspaceCard.vue'\r\nimport KnFabButton from '@/components/UI/KnFabButton.vue'\r\nimport DataTable from 'primevue/datatable'\r\nimport Menu from 'primevue/contextmenu'\r\nimport Message from 'primevue/message'\r\nimport Column from 'primevue/column'\r\nimport KnInputFile from '@/components/UI/KnInputFile.vue'\r\nimport WorkspaceAnalysisViewEditDialog from './dialogs/WorkspaceAnalysisViewEditDialog.vue'\r\nimport WorkspaceWarningDialog from '../../genericComponents/WorkspaceWarningDialog.vue'\r\nimport WorkspaceAnalysisViewShareDialog from './dialogs/WorkspaceAnalysisViewShareDialog.vue'\r\nimport { AxiosResponse } from 'axios'\r\nimport { formatDateWithLocale } from '@/helpers/commons/localeHelper'\r\nimport WorkspaceCockpitDialog from './dialogs/WorkspaceCockpitDialog.vue'\r\nimport mainStore from '../../../../App.store'\r\n\r\nexport default defineComponent({\r\n    name: 'workspace-analysis-view',\r\n    components: { DataTable, Column, DetailSidebar, WorkspaceCard, KnFabButton, Menu, Message, KnInputFile, WorkspaceAnalysisViewEditDialog, WorkspaceWarningDialog, WorkspaceAnalysisViewShareDialog, WorkspaceCockpitDialog },\r\n    emits: ['showMenu', 'toggleDisplayView', 'execute'],\r\n    props: { toggleCardDisplay: { type: Boolean } },\r\n    computed: {\r\n        isOwner(): any {\r\n            return (this.store.$state as any).user.userId === this.selectedAnalysis.creationUser\r\n        },\r\n        isShared(): any {\r\n            return this.selectedAnalysis.functionalities.length > 1\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            mainDescriptor,\r\n            loading: false,\r\n            showDetailSidebar: false,\r\n            analysisDocuments: [] as any,\r\n            filteredAnalysisDocuments: [] as any[],\r\n            selectedAnalysis: {} as any,\r\n            menuButtons: [] as any,\r\n            folders: [] as any[],\r\n            searchWord: '' as string,\r\n            editDialogVisible: false,\r\n            warningDialogVisbile: false,\r\n            warningMessage: '',\r\n            triggerUpload: false,\r\n            uploading: false,\r\n            shareDialogVisible: false,\r\n            creationMenuButtons: [] as any,\r\n            cockpitDialogVisible: false\r\n        }\r\n    },\r\n    setup() {\r\n        const store = mainStore()\r\n        return { store }\r\n    },\r\n    created() {\r\n        this.getAnalysisDocs()\r\n    },\r\n    methods: {\r\n        getAnalysisDocs() {\r\n            this.loading = true\r\n            return this.$http\r\n                .get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `documents/myAnalysisDocsList`)\r\n                .then((response: AxiosResponse<any>) => {\r\n                    this.analysisDocuments = [...response.data.root]\r\n                    this.filteredAnalysisDocuments = [...this.analysisDocuments]\r\n                })\r\n                .finally(() => (this.loading = false))\r\n        },\r\n        formatDate(date) {\r\n            return formatDateWithLocale(date, { dateStyle: 'short', timeStyle: 'short' })\r\n        },\r\n        showSidebar(clickedDocument) {\r\n            this.selectedAnalysis = clickedDocument\r\n            this.showDetailSidebar = true\r\n        },\r\n        showMenu(event, clickedDocument) {\r\n            this.selectedAnalysis = clickedDocument\r\n            this.createMenuItems()\r\n            // eslint-disable-next-line\r\n            // @ts-ignore\r\n            this.$refs.optionsMenu.toggle(event)\r\n        },\r\n        // prettier-ignore\r\n        createMenuItems() {\r\n        this.menuButtons = []\r\n        this.menuButtons.push(\r\n            { key: '0', label: this.$t('workspace.myAnalysis.menuItems.edit'), icon: 'fas fa-edit', command: () => { this.editAnalysisDocument(this.selectedAnalysis) }, visible: this.isOwner},\r\n            { key: '1', label: this.$t('workspace.myAnalysis.menuItems.share'), icon: 'fas fa-share-alt', command: () => { this.shareAnalysisDocument(this.selectedAnalysis) }, visible: !this.isShared},\r\n            { key: '1', label: this.$t('workspace.myAnalysis.menuItems.unshare'), icon: 'fas fa-times-circle', command: () => { this.shareAnalysisDocument(this.selectedAnalysis) }, visible: this.isShared},\r\n            { key: '2', label: this.$t('workspace.myAnalysis.menuItems.clone'), icon: 'fas fa-clone', command: () => { this.cloneAnalysisDocument(this.selectedAnalysis) }},\r\n            { key: '3', label: this.$t('workspace.myAnalysis.menuItems.delete'), icon: 'fas fa-trash', command: () => { this.deleteAnalysisDocumentConfirm(this.selectedAnalysis) }},\r\n            { key: '4', label: this.$t('workspace.myAnalysis.menuItems.upload'), icon: 'fas fa-upload', command: () => { this.uploadAnalysisPreviewFile(this.selectedAnalysis) }}\r\n        )\r\n    },\r\n        executeAnalysisDocument(document: any) {\r\n            this.$emit('execute', document)\r\n        },\r\n        openKpiDesigner(analysis: any) {\r\n            this.$router.push(`/kpi-edit/${analysis?.id}?from=Workspace`)\r\n        },\r\n        editAnalysisDocument(analysis: any) {\r\n            this.selectedAnalysis = analysis\r\n            this.editDialogVisible = true\r\n        },\r\n        async handleEditAnalysis(analysis: any) {\r\n            const formatedAnalysis = {\r\n                document: {\r\n                    name: analysis.label,\r\n                    label: analysis.name,\r\n                    description: analysis.description,\r\n                    id: analysis.id\r\n                },\r\n                updateFromWorkspace: true\r\n            }\r\n            await this.$http\r\n                .post(import.meta.env.VITE_RESTFUL_SERVICES_PATH + '2.0/saveDocument/', formatedAnalysis, { headers: { 'X-Disable-Errors': 'true' } })\r\n                .then(() => {\r\n                    this.store.setInfo({\r\n                        title: this.$t('common.toast.updateTitle'),\r\n                        msg: this.$t('common.toast.success')\r\n                    })\r\n                    this.editDialogVisible = false\r\n                    this.showDetailSidebar = false\r\n                    this.getAnalysisDocs()\r\n                })\r\n                .catch((response: any) => {\r\n                    this.warningMessage = response\r\n                    this.warningDialogVisbile = true\r\n                })\r\n        },\r\n        async shareAnalysisDocument(analysis: any) {\r\n            this.selectedAnalysis = analysis\r\n            this.loading = true\r\n            const shared = this.selectedAnalysis.functionalities.length > 1\r\n            if (!shared) {\r\n                await this.$http.get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/functionalities/forsharing/${analysis.id}`).then((response: AxiosResponse<any>) => {\r\n                    this.folders = response.data\r\n                    this.shareDialogVisible = true\r\n                })\r\n            } else {\r\n                await this.handleAnalysShared(null, shared)\r\n            }\r\n            this.loading = false\r\n        },\r\n        async handleAnalysShared(selectedFolders: any, shared: boolean) {\r\n            this.loading = true\r\n\r\n            let url = import.meta.env.VITE_RESTFUL_SERVICES_PATH + `documents/share?docId=${this.selectedAnalysis.id}&`\r\n            if (!shared) {\r\n                Object.keys(selectedFolders).forEach((id: any) => (url += `functs=${selectedFolders[id]}&`))\r\n            }\r\n            url += `isShare=${!shared}`\r\n\r\n            await this.$http\r\n                .post(url)\r\n                .then(() => {\r\n                    this.store.setInfo({\r\n                        title: this.$t('common.toast.updateTitle'),\r\n                        msg: this.$t('common.toast.success')\r\n                    })\r\n                    this.shareDialogVisible = false\r\n                    this.showDetailSidebar = false\r\n                    this.getAnalysisDocs()\r\n                })\r\n                .catch(() => {})\r\n\r\n            this.loading = false\r\n        },\r\n        async cloneAnalysisDocumentConfirm(analysis: any) {\r\n            this.$confirm.require({\r\n                header: this.$t('common.toast.cloneConfirmTitle'),\r\n                accept: async () => await this.cloneAnalysisDocument(analysis)\r\n            })\r\n        },\r\n        async cloneAnalysisDocument(analysis: any) {\r\n            this.loading = true\r\n            await this.$http\r\n                .post(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `documents/clone?docId=${analysis.id}`)\r\n                .then(() => {\r\n                    this.store.setInfo({\r\n                        title: this.$t('common.toast.createTitle'),\r\n                        msg: this.$t('common.toast.success')\r\n                    })\r\n                    this.showDetailSidebar = false\r\n                    this.getAnalysisDocs()\r\n                })\r\n                .catch(() => {})\r\n            this.loading = true\r\n        },\r\n        deleteAnalysisDocumentConfirm(analysis: any) {\r\n            this.$confirm.require({\r\n                message: this.$t('common.toast.deleteMessage'),\r\n                header: this.$t('common.toast.deleteTitle'),\r\n                icon: 'pi pi-exclamation-triangle',\r\n                accept: () => this.deleteAnalysis(analysis)\r\n            })\r\n        },\r\n        deleteAnalysis(analysis: any) {\r\n            this.loading = true\r\n            this.$http\r\n                .delete(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `1.0/documents/${analysis.label}`)\r\n                .then(() => {\r\n                    this.store.setInfo({\r\n                        title: this.$t('common.toast.deleteTitle'),\r\n                        msg: this.$t('common.toast.success')\r\n                    })\r\n                    this.showDetailSidebar = false\r\n                    this.getAnalysisDocs()\r\n                })\r\n                .catch(() => {})\r\n            this.loading = false\r\n        },\r\n        uploadAnalysisPreviewFile(analysis: any) {\r\n            this.selectedAnalysis = analysis\r\n            this.triggerUpload = false\r\n            setTimeout(() => (this.triggerUpload = true), 200)\r\n        },\r\n        uploadAnalysisFile(event: any) {\r\n            this.uploading = true\r\n            let uploadedFile = event.target.files[0]\r\n\r\n            this.startUpload(uploadedFile)\r\n\r\n            this.triggerUpload = false\r\n            setTimeout(() => (this.uploading = false), 200)\r\n        },\r\n        startUpload(uploadedFile: any) {\r\n            var formData = new FormData()\r\n            formData.append('file', uploadedFile)\r\n            this.$http\r\n                .post(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/analysis/${this.selectedAnalysis.id}`, formData, {\r\n                    headers: {\r\n                        'Content-Type': 'multipart/form-data'\r\n                    }\r\n                })\r\n                .then(() => {\r\n                    this.store.setInfo({\r\n                        title: this.$t('common.uploading'),\r\n                        msg: this.$t('common.toast.uploadSuccess')\r\n                    })\r\n                    this.showDetailSidebar = false\r\n                    this.getAnalysisDocs()\r\n                })\r\n                .catch()\r\n                .finally(() => {\r\n                    this.triggerUpload = false\r\n                })\r\n        },\r\n        closeWarningDialog() {\r\n            this.warningMessage = ''\r\n            this.warningDialogVisbile = false\r\n        },\r\n        searchItems() {\r\n            setTimeout(() => {\r\n                if (!this.searchWord.trim().length) {\r\n                    this.filteredAnalysisDocuments = [...this.analysisDocuments] as any[]\r\n                } else {\r\n                    this.filteredAnalysisDocuments = this.analysisDocuments.filter((el: any) => {\r\n                        return el.name?.toLowerCase().includes(this.searchWord.toLowerCase()) || el.creationUser?.toLowerCase().includes(this.searchWord.toLowerCase())\r\n                    })\r\n                }\r\n            }, 250)\r\n        },\r\n        showCreationMenu(event) {\r\n            this.createCreationMenuButtons()\r\n            // eslint-disable-next-line\r\n            // @ts-ignore\r\n            this.$refs.creationMenu.toggle(event)\r\n        },\r\n        createCreationMenuButtons() {\r\n            this.creationMenuButtons = []\r\n            this.creationMenuButtons.push(\r\n                { key: '0', label: this.$t('common.cockpit'), command: this.openCockpitDialog, visible: true },\r\n                { key: '1', label: this.$t('workspace.myAnalysis.geoRef'), command: this.openGeoRefCreation, visible: true },\r\n                { key: '2', label: this.$t('common.kpi'), command: this.openKpiDocumentDesigner, visible: true }\r\n            )\r\n        },\r\n        openCockpitDialog() {\r\n            this.cockpitDialogVisible = true\r\n        },\r\n        closeCockpitDialog() {\r\n            this.cockpitDialogVisible = false\r\n            this.getAnalysisDocs()\r\n        },\r\n        openKpiDocumentDesigner() {\r\n            this.$router.push('/kpi-edit/new-kpi?from=Workspace')\r\n        },\r\n        openGeoRefCreation() {\r\n            this.$router.push('/gis/new')\r\n        }\r\n    }\r\n})\r\n</script>\r\n"],"names":["_sfc_main","Dialog","_hoisted_1","_createElementVNode","_openBlock","_createElementBlock","_createVNode","_normalizeStyle","_withCtx","_hoisted_2","_toDisplayString","_normalizeClass","_withDirectives","_vShow","Checkbox","Tree","_createBlock","mainStore","DataTable","Column","Menu","Message","_Fragment","_createCommentVNode","_renderList"],"mappings":"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"}