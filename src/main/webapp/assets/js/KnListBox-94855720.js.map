{"version":3,"file":"KnListBox-94855720.js","sources":["../../../../components/UI/KnListBox/KnListButtonRenderer.vue","../../../../components/UI/KnListBox/KnListBox.vue"],"sourcesContent":["<template>\r\n    <template v-if=\"filteredButtons.length > 2\">\r\n        <Button icon=\"fas fa-ellipsis-v\" class=\"p-button-text p-button-rounded p-button-plain\" @click=\"toggleMenu\" />\r\n        <Menu id=\"buttons_menu\" ref=\"buttons_menu\" :model=\"filteredButtons\" :popup=\"true\">\r\n            <template #item=\"{item}\">\r\n                <a class=\"p-menuitem-link\" role=\"menuitem\" tabindex=\"0\" @click=\"clickedButton($event, item)\">\r\n                    <span class=\"p-menuitem-icon\" :class=\"item.icon\"></span>\r\n                    <span class=\"p-menuitem-text\">{{ $t(item.label) }}</span>\r\n                </a>\r\n            </template>\r\n        </Menu>\r\n    </template>\r\n    <template v-else>\r\n        <Button v-for=\"(button, index) in filteredButtons\" :key=\"index\" :icon=\"button.icon\" class=\"p-button-text p-button-rounded p-button-plain\" @click=\"clickedButton($event, button)\" v-tooltip.bottom=\"$t(button.label)\" :data-test=\"'delete-button-' + index\" />\r\n    </template>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { PropType, defineComponent } from 'vue'\r\nimport Menu from 'primevue/menu'\r\nimport { IKnListBoxOptions, Ibutton } from './KnListBox'\r\n\r\nexport default defineComponent({\r\n    name: 'kn-list-button-renderer',\r\n    components: { Menu },\r\n    props: {\r\n        buttons: Array as PropType<Array<Ibutton>>,\r\n        selectedItem: Object as PropType<IKnListBoxOptions>\r\n    },\r\n    data() {\r\n        return {\r\n            filteredButtons: [] as Array<Ibutton>\r\n        }\r\n    },\r\n    emits: ['click'],\r\n    mounted() {\r\n        this.filteredButtons = this.buttons!.filter((x) => {\r\n            return !x.condition || this.selectedItem?.[x.condition]\r\n        })\r\n    },\r\n    methods: {\r\n        clickedButton(e, item) {\r\n            e.item = item\r\n            this.$emit('click', e)\r\n        },\r\n        toggleMenu(e) {\r\n            // eslint-disable-next-line\r\n            // @ts-ignore\r\n            this.$refs.buttons_menu.toggle(e)\r\n        }\r\n    }\r\n})\r\n</script>\r\n","<template>\r\n    <Listbox\r\n        class=\"kn-list knListBox\"\r\n        :options=\"sortedOptions\"\r\n        :class=\"{ noSorting: !settings.sortFields }\"\r\n        listStyle=\"max-height:calc(100% - 62px)\"\r\n        :filter=\"true\"\r\n        :filterPlaceholder=\"$t('common.search')\"\r\n        filterMatchMode=\"contains\"\r\n        :filterFields=\"settings.filterFields\"\r\n        :emptyFilterMessage=\"$t('common.info.noDataFound')\"\r\n        data-test=\"list\"\r\n    >\r\n        <template #header v-if=\"settings.sortFields\">\r\n            <Button icon=\"fas fa-sort-amount-down-alt\" class=\"p-button-text p-button-rounded p-button-plain headerButton\" @click=\"toggleSort\" v-tooltip.bottom=\"$t('common.sort')\" />\r\n            <Menu id=\"sortMenu\" ref=\"sortMenu\" :model=\"settings.sortFields\" :popup=\"true\">\r\n                <template #item=\"{item}\">\r\n                    <a class=\"p-menuitem-link\" role=\"menuitem\" tabindex=\"0\" @click=\"sort($event, item.name || item)\">\r\n                        <span v-if=\"selectedDirection === 'asc'\" class=\"p-menuitem-icon fas\" :class=\"{ 'fa-sort-amount-up-alt': selectedSort === (item.name || item) }\"></span>\r\n                        <span v-else class=\"p-menuitem-icon fas\" :class=\"{ 'fa-sort-amount-down-alt': selectedSort === (item.name || item) }\"></span>\r\n                        <span class=\"p-menuitem-text\">{{ $t(item.label || item) }}</span>\r\n                    </a>\r\n                </template>\r\n            </Menu>\r\n        </template>\r\n        <template #option=\"slotProps\">\r\n            <router-link class=\"kn-decoration-none\" :to=\"{ name: settings.interaction.path, params: { id: slotProps.option.id } }\" exact v-if=\"settings.interaction.type === 'router'\">\r\n                <div class=\"kn-list-item\" v-tooltip=\"slotProps.option[settings.tooltipField || 'description']\" :class=\"getBorderClass(slotProps.option)\" data-test=\"list-item\">\r\n                    <Avatar v-if=\"settings.avatar && settings.avatar.values[slotProps.option[settings.avatar.property]]\" :icon=\"settings.avatar.values[slotProps.option[settings.avatar.property]].icon\" shape=\"circle\" :style=\"settings.avatar.values[slotProps.option[settings.avatar.property]].style\" />\r\n                    <div class=\"kn-list-item-text\">\r\n                        <span v-if=\"settings.titleField !== false\">{{ slotProps.option[settings.titleField || 'label'] }}</span>\r\n                        <span class=\"kn-list-item-text-secondary kn-truncated\" v-if=\"settings.textField !== false\">{{ slotProps.option[settings.textField || 'name'] }}</span>\r\n                    </div>\r\n                    <Badge v-if=\"settings.badgeField\" :value=\"slotProps.option[settings.badgeField]\" :severity=\"settings.badgeSeverity || 'info'\"></Badge>\r\n                    <Badge v-if=\"settings.badgeIcon && slotProps.option[settings.badgeIcon] === true\" :severity=\"settings.badgeSeverity || 'info'\">\r\n                        <i class=\"fas fa-check\"></i>\r\n                    </Badge>\r\n                    <KnListButtonRenderer :buttons=\"settings.buttons\" @click=\"clickedButton($event, slotProps.option)\" />\r\n                </div>\r\n            </router-link>\r\n            <div\r\n                class=\"kn-list-item\"\r\n                v-tooltip=\"slotProps.option[settings.tooltipField || 'description']\"\r\n                v-if=\"!settings.interaction || settings.interaction.type === 'event'\"\r\n                @click=\"clickedButton($event, slotProps.option)\"\r\n                :class=\"[{ 'router-link-active': isItemSelected(slotProps.option) }, getBorderClass(slotProps.option)]\"\r\n                data-test=\"list-item\"\r\n            >\r\n                <Avatar v-if=\"settings.avatar && settings.avatar.values[slotProps.option[settings.avatar.property]]\" :icon=\"settings.avatar.values[slotProps.option[settings.avatar.property]].icon\" shape=\"circle\" :style=\"settings.avatar.values[slotProps.option[settings.avatar.property]].style\" />\r\n                <div class=\"kn-list-item-text\">\r\n                    <span v-if=\"settings.titleField !== false\">{{ slotProps.option[settings.titleField || 'label'] }}</span>\r\n                    <span v-if=\"settings.textField !== false && !settings.textFieldType\" class=\"kn-list-item-text-secondary kn-truncated\">{{ slotProps.option[settings.textField || 'name'] }}</span>\r\n                    <span v-if=\"settings.textField !== false && settings.textFieldType && settings.textFieldType === 'date'\" class=\"kn-list-item-text-secondary kn-truncated\">{{ getTime(slotProps.option[settings.textField || 'name']) }}</span>\r\n                </div>\r\n                <Badge v-if=\"settings.badgeField && slotProps.option[settings.badgeField]\" :value=\"slotProps.option[settings.badgeField]\" :severity=\"settings.badgeSeverity || 'info'\"></Badge>\r\n                <Badge v-if=\"settings.badgeIcon && slotProps.option[settings.badgeIcon] === true\" :severity=\"settings.badgeSeverity || 'info'\">\r\n                    <i class=\"fas fa-check\"></i>\r\n                </Badge>\r\n                <KnListButtonRenderer :buttons=\"settings.buttons\" :selectedItem=\"slotProps.option\" @click=\"clickedButton($event, slotProps.option)\" />\r\n            </div>\r\n        </template>\r\n    </Listbox>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport Avatar from 'primevue/avatar'\r\nimport Badge from 'primevue/badge'\r\nimport Listbox from 'primevue/listbox'\r\nimport KnListButtonRenderer from './KnListButtonRenderer.vue'\r\nimport Menu from 'primevue/menu'\r\nimport { formatDateWithLocale } from '@/helpers/commons/localeHelper'\r\n\r\nexport default defineComponent({\r\n    name: 'kn-list-box',\r\n    components: {\r\n        Avatar,\r\n        Badge,\r\n        KnListButtonRenderer,\r\n        Listbox,\r\n        Menu\r\n    },\r\n    props: {\r\n        settings: {\r\n            type: Object,\r\n            required: true\r\n        },\r\n        options: Array,\r\n        selected: Object\r\n    },\r\n    data() {\r\n        return {\r\n            selectedSort: 'label',\r\n            selectedDirection: '',\r\n            sortedOptions: [] as Array<any>\r\n        }\r\n    },\r\n    emits: ['click'],\r\n    created() {\r\n        this.selectedSort = this.settings.defaultSortField || 'label'\r\n        this.sort(null, this.selectedSort, true)\r\n    },\r\n    updated() {\r\n        this.sort(null, this.selectedSort, true)\r\n    },\r\n    computed: {},\r\n    methods: {\r\n        clickedButton(e, item) {\r\n            const emits = e.item && e.item.emits\r\n            e.item = item\r\n            this.$emit(emits || 'click', e)\r\n        },\r\n        getBorderClass(item): string {\r\n            if (this.settings.statusBorder) {\r\n                return 'kn-list-item-' + this.settings.statusBorder.values[item[this.settings.statusBorder.property]]\r\n            } else return ''\r\n        },\r\n        isItemSelected(option) {\r\n            if (this.selected) {\r\n                if (this.settings.selectProperty && this.selected[this.settings.selectProperty]) {\r\n                    return this.selected[this.settings.selectProperty] == option[this.settings.selectProperty]\r\n                } else {\r\n                    return this.selected == option\r\n                }\r\n            } else return false\r\n        },\r\n        toggleSort(e) {\r\n            // eslint-disable-next-line\r\n            // @ts-ignore\r\n            this.$refs.sortMenu.toggle(e)\r\n        },\r\n        sort(e, item, desc?) {\r\n            this.sortedOptions = this.options ? this.options : []\r\n            if (this.selectedSort === item) this.selectedDirection = this.selectedDirection === 'desc' ? 'asc' : 'desc'\r\n            else {\r\n                this.selectedSort = item\r\n                this.selectedDirection = 'desc'\r\n            }\r\n\r\n            if (e || (!e && this.selectedDirection === '')) {\r\n                if (this.selectedDirection === '') this.selectedDirection = 'desc'\r\n                if (desc || this.selectedDirection === 'desc') this.sortedOptions.sort((a: any, b: any) => (a[this.selectedSort] > b[this.selectedSort] ? 1 : -1))\r\n                else this.sortedOptions.sort((a: any, b: any) => (a[this.selectedSort] > b[this.selectedSort] ? -1 : 1))\r\n            }\r\n        },\r\n        getTime(ms) {\r\n            return formatDateWithLocale(ms)\r\n        }\r\n    }\r\n})\r\n</script>\r\n<style lang=\"scss\">\r\n.knListBox {\r\n    position: relative;\r\n    flex: 1;\r\n    overflow-y: auto;\r\n\r\n    .headerButton {\r\n        position: absolute;\r\n        right: 8px;\r\n        top: 16px;\r\n    }\r\n    &.noSorting {\r\n        .p-listbox-header {\r\n            .p-listbox-filter-container {\r\n                width: 100%;\r\n            }\r\n        }\r\n    }\r\n    .p-listbox-header {\r\n        .p-listbox-filter-container {\r\n            width: calc(100% - 36px);\r\n        }\r\n    }\r\n}\r\n</style>\r\n"],"names":["_sfc_main","Menu","_hoisted_1","_openBlock","_createElementBlock","_Fragment","_createVNode","_withCtx","_createElementVNode","_normalizeClass","_hoisted_2","_toDisplayString","_renderList","_withDirectives","_createBlock","Avatar","Badge","Listbox","_createSlots","_normalizeStyle","_createCommentVNode"],"mappings":"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"}