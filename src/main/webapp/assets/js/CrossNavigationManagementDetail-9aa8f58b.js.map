{"version":3,"file":"CrossNavigationManagementDetail-9aa8f58b.js","sources":["../../../../modules/managers/crossNavigationManagement/dialogs/CrossNavigationManagementDocDialog.vue","../../../../modules/managers/crossNavigationManagement/dialogs/CrossNavigationManagementHintDialog.vue","../../../../modules/managers/crossNavigationManagement/dialogs/CrossNavigationManagementDocParameters.vue","../../../../modules/managers/crossNavigationManagement/CrossNavigationManagementDetail.vue"],"sourcesContent":["<template>\r\n    <Dialog\r\n        :header=\"$t('managers.crossNavigationManagement.selectDocument')\"\r\n        :breakpoints=\"dialogDescriptor.dialog.breakpoints\"\r\n        :style=\"dialogDescriptor.dialog.style\"\r\n        :contentStyle=\"dialogDescriptor.dialog.contentStyle\"\r\n        :visible=\"dialogVisible\"\r\n        :modal=\"true\"\r\n        :closable=\"false\"\r\n        class=\"p-fluid kn-dialog--toolbar--primary\"\r\n    >\r\n        <template #header>\r\n            <Toolbar class=\"kn-toolbar kn-toolbar--primary p-p-0 p-m-0 p-col-12\">\r\n                <template #start>\r\n                    {{ $t('managers.crossNavigationManagement.selectDocument') }}\r\n                </template>\r\n                <template #end>\r\n                    <Button icon=\"pi pi-times\" class=\"kn-button p-button-text p-button-rounded\" @click=\"closeDialog\" />\r\n                </template>\r\n            </Toolbar>\r\n        </template>\r\n        <DataTable\r\n            :paginator=\"true\"\r\n            :rows=\"15\"\r\n            :rowsPerPageOptions=\"[10, 15, 20]\"\r\n            v-model:selection=\"selected\"\r\n            :value=\"documents.item\"\r\n            class=\"p-datatable-sm kn-table\"\r\n            dataKey=\"DOCUMENT_ID\"\r\n            responsiveLayout=\"stack\"\r\n            selectionMode=\"single\"\r\n            :loading=\"loading\"\r\n            @row-select=\"hadleSelect\"\r\n            v-model:filters=\"filters\"\r\n            filterDisplay=\"menu\"\r\n            :scrollable=\"true\"\r\n            :scrollHeight=\"dialogDescriptor.dialog.scrollHeight\"\r\n            :globalFilterFields=\"dialogDescriptor.globalFilterFields\"\r\n        >\r\n            <template #header>\r\n                <div class=\"table-header\">\r\n                    <span class=\"p-input-icon-left\">\r\n                        <i class=\"pi pi-search\" />\r\n                        <InputText class=\"kn-material-input\" type=\"text\" v-model=\"filters['global'].value\" :placeholder=\"$t('common.search')\" badge=\"0\" data-test=\"search-input\" />\r\n                    </span>\r\n                </div>\r\n            </template>\r\n            <template #empty>\r\n                {{ $t('common.info.noDataFound') }}\r\n            </template>\r\n            <template #loading>\r\n                {{ $t('common.info.dataLoading') }}\r\n            </template>\r\n\r\n            <Column v-for=\"col of dialogDescriptor.columnsDoc\" :field=\"col.field\" :header=\"$t(col.header)\" :key=\"col.field\" :sortable=\"true\" class=\"kn-truncated\">\r\n                <template #body=\"slotProps\">\r\n                    <span>{{ slotProps.data[slotProps.column.props.field] }}</span>\r\n                </template>\r\n            </Column>\r\n        </DataTable>\r\n    </Dialog>\r\n</template>\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport { AxiosResponse } from 'axios'\r\nimport Column from 'primevue/column'\r\nimport DataTable from 'primevue/datatable'\r\nimport Dialog from 'primevue/dialog'\r\nimport { filterDefault } from '@/helpers/commons/filterHelper'\r\nimport { FilterOperator } from 'primevue/api'\r\nimport dialogDescriptor from './CrossNavigationManagementDialogDescriptor.json'\r\nexport default defineComponent({\r\n    name: 'doc-dialog',\r\n    components: {\r\n        DataTable,\r\n        Column,\r\n        Dialog\r\n    },\r\n    props: {\r\n        dialogVisible: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        selectedDoc: {\r\n            type: Object,\r\n            required: false\r\n        }\r\n    },\r\n    emits: ['close', 'apply'],\r\n    data() {\r\n        return {\r\n            dialogDescriptor,\r\n            loading: false,\r\n            selected: {} as any,\r\n            documents: [] as any,\r\n            filters: {\r\n                global: [filterDefault],\r\n                DOCUMENT_LABEL: {\r\n                    operator: FilterOperator.AND,\r\n                    constraints: [filterDefault]\r\n                },\r\n                DOCUMENT_NAME: {\r\n                    operator: FilterOperator.AND,\r\n                    constraints: [filterDefault]\r\n                }\r\n            } as Object\r\n        }\r\n    },\r\n    watch: {\r\n        async selectedDoc() {\r\n            await this.loadAllDoc()\r\n            this.selected = this.documents.item.find((doc) => doc.DOCUMENT_ID === this.selectedDoc)\r\n        }\r\n    },\r\n    methods: {\r\n        closeDialog() {\r\n            this.$emit('close')\r\n        },\r\n        async loadAllDoc() {\r\n            this.loading = true\r\n            await this.$http\r\n                .get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + '2.0/documents/listDocument')\r\n                .then((response: AxiosResponse<any>) => (this.documents = response.data))\r\n                .finally(() => (this.loading = false))\r\n        },\r\n        hadleSelect() {\r\n            this.$emit('apply', this.selected)\r\n            this.selected = null\r\n        }\r\n    }\r\n})\r\n</script>\r\n","<template>\r\n    <Dialog :header=\"title\" :breakpoints=\"dialogDescriptor.dialog.breakpoints\" :style=\"dialogDescriptor.dialog.style\" :visible=\"dialogVisible\" :modal=\"true\" :closable=\"false\" class=\"p-fluid kn-dialog--toolbar--primary\">\r\n        <template #header>\r\n            <Toolbar class=\"kn-toolbar kn-toolbar--primary p-p-0 p-m-0 p-col-12\">\r\n                <template #start>\r\n                    {{ title }}\r\n                </template>\r\n            </Toolbar>\r\n        </template>\r\n        {{ message }}\r\n        <template #footer>\r\n            <Button :label=\"$t('common.close')\" @click=\"closeDialog\" class=\"kn-button kn-button--primary\" />\r\n        </template>\r\n    </Dialog>\r\n</template>\r\n<script lang=\"ts\">\r\n    import { defineComponent } from 'vue'\r\n    import Dialog from 'primevue/dialog'\r\n    import dialogDescriptor from './CrossNavigationManagementDialogDescriptor.json'\r\n    export default defineComponent({\r\n        name: 'doc-dialog',\r\n        components: {\r\n            Dialog\r\n        },\r\n        props: {\r\n            dialogVisible: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            title: {\r\n                type: String,\r\n                required: true\r\n            },\r\n            message: {\r\n                type: String,\r\n                required: true\r\n            }\r\n        },\r\n        emits: ['close', 'apply'],\r\n        data() {\r\n            return {\r\n                dialogDescriptor\r\n            }\r\n        },\r\n        watch: {},\r\n        methods: {\r\n            closeDialog() {\r\n                this.$emit('close')\r\n            }\r\n        }\r\n    })\r\n</script>\r\n","<template>\r\n    <Message class=\"p-col-12 p-mb-3\">{{ $t('managers.crossNavigationManagement.hintDrag') }}</Message>\r\n    <div class=\"p-field p-col-6 p-mb-3\">\r\n        <Toolbar class=\"kn-toolbar kn-toolbar--secondary\">\r\n            <template #start>\r\n                {{ $t('managers.crossNavigationManagement.availableIO') }}\r\n            </template>\r\n        </Toolbar>\r\n        <div class=\"p-inputgroup p-mt-3\" v-if=\"navigation.fromPars\">\r\n            <span class=\"p-float-label\">\r\n                <InputText class=\"kn-material-input\" type=\"text\" v-model.trim=\"fixedValue\" maxlength=\"100\" />\r\n                <label class=\"kn-material-input-label\">{{ $t('managers.crossNavigationManagement.fixedValue') }} </label>\r\n            </span>\r\n            <Button :label=\"$t('common.add')\" @click=\"addFixedValue\" class=\"kn-button p-button-text\" />\r\n        </div>\r\n        <Listbox :options=\"navigation.fromPars\" v-if=\"navigation.fromPars\">\r\n            <template #empty>{{ $t('common.info.noDataFound') }}</template>\r\n            <template #option=\"slotProps\">\r\n                <div class=\"p-d-flex card p-p-3 kn-draggable\" draggable=\"true\" @dragstart=\"onDragStart($event, slotProps.option)\">\r\n                    <i class=\"pi pi-bars p-mr-2\"> </i>\r\n                    <div>{{ slotProps.option.name }}</div>\r\n                    <div class=\"p-ml-auto\">{{ $t(dialogDescriptor.parType[slotProps.option.type].label) }}</div>\r\n                </div>\r\n            </template>\r\n        </Listbox>\r\n    </div>\r\n    <div class=\"p-field p-col-6 p-mb-3\">\r\n        <Toolbar class=\"kn-toolbar kn-toolbar--secondary\">\r\n            <template #start>\r\n                {{ $t('managers.crossNavigationManagement.availableInput') }}\r\n            </template>\r\n        </Toolbar>\r\n        <Listbox :options=\"navigation.toPars\" v-if=\"navigation.toPars\">\r\n            <template #empty>{{ $t('common.info.noDataFound') }}</template>\r\n            <template #option=\"slotProps\">\r\n                <div class=\"p-d-flex p-p-3 card\" v-if=\"slotProps.option.links && slotProps.option.links.length > 0\">\r\n                    <div>{{ slotProps.option.links[0].name }} <i class=\"fa fa-link\"> </i> {{ slotProps.option.name }}</div>\r\n                    <i class=\"fa fa-times-circle p-mr-2 p-ml-auto\" @click=\"removeLink(slotProps.option.id)\" data-test=\"remove\"> </i>\r\n                </div>\r\n                <div\r\n                    class=\"p-d-flex p-p-3 card\"\r\n                    :class=\"{ dropzone: dropzoneActive[slotProps.option.id] }\"\r\n                    @drop=\"link($event, slotProps.option)\"\r\n                    @dragenter.prevent\r\n                    @dragleave.prevent=\"setDropzoneClass(false, slotProps.option.id)\"\r\n                    @dragover.prevent=\"setDropzoneClass(true, slotProps.option.id)\"\r\n                    v-else\r\n                >\r\n                    <div>{{ slotProps.option.name }}</div>\r\n                    <div class=\"p-ml-auto\">{{ $t(dialogDescriptor.parType[slotProps.option.type].label) }}</div>\r\n                </div>\r\n            </template>\r\n        </Listbox>\r\n    </div>\r\n</template>\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport Listbox from 'primevue/listbox'\r\nimport Message from 'primevue/message'\r\nimport dialogDescriptor from './CrossNavigationManagementDialogDescriptor.json'\r\nimport mainStore from '../../../../App.store'\r\n\r\nexport default defineComponent({\r\n    name: 'cross-navigation-detail',\r\n    components: { Listbox, Message },\r\n    props: {\r\n        selectedNavigation: {\r\n            type: Object\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            navigation: {} as any,\r\n            dialogDescriptor,\r\n            fixedValue: '',\r\n            dropzoneActive: [] as boolean[]\r\n        }\r\n    },\r\n    setup() {\r\n        const store = mainStore()\r\n        return { store }\r\n    },\r\n    created() {\r\n        if (this.selectedNavigation) {\r\n            this.navigation = this.selectedNavigation\r\n            this.dropzoneActive = []\r\n        }\r\n    },\r\n    watch: {\r\n        selectedNavigation() {\r\n            if (this.selectedNavigation) {\r\n                this.navigation = this.selectedNavigation\r\n                this.dropzoneActive = []\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        addFixedValue() {\r\n            if (this.fixedValue != '') {\r\n                if (!this.navigation.fromPars) this.navigation.fromPars = []\r\n                this.navigation.fromPars.push({ id: this.navigation.simpleNavigation.fromDocId, name: this.fixedValue, type: 2, fixedValue: this.fixedValue })\r\n                this.fixedValue = ''\r\n            }\r\n        },\r\n        onDragStart(event: any, param: any) {\r\n            event.dataTransfer.setData('text/plain', JSON.stringify(param))\r\n            event.dataTransfer.dropEffect = 'move'\r\n            event.dataTransfer.effectAllowed = 'move'\r\n        },\r\n        link(event: any, item: any) {\r\n            const param = JSON.parse(event.dataTransfer.getData('text/plain'))\r\n            if (param.type === 2 || param.parType === item.parType) {\r\n                item.links = [param]\r\n                this.$emit('touched')\r\n            } else {\r\n                this.store.setInfo({\r\n                    title: this.$t('managers.crossNavigationManagement.incompatibleTypes'),\r\n                    msg: this.$t('managers.crossNavigationManagement.incompatibleTypesMessage', { originParam: param.name, targetParam: item.name })\r\n                })\r\n            }\r\n        },\r\n        removeLink(id) {\r\n            this.navigation.toPars.forEach((param) => {\r\n                if (param.id === id) {\r\n                    param.links = []\r\n                    this.$emit('touched')\r\n                    this.setDropzoneClass(false, id)\r\n                }\r\n            })\r\n        },\r\n        setDropzoneClass(value: boolean, paramId: any) {\r\n            if (paramId) {\r\n                this.dropzoneActive[paramId] = value\r\n            }\r\n        }\r\n    }\r\n})\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n::v-deep(.p-listbox) {\r\n    .p-listbox-item {\r\n        padding: 0;\r\n    }\r\n}\r\n.dropzone {\r\n    background-color: #c2c2c2;\r\n    color: white;\r\n    border: 1px dashed;\r\n}\r\n</style>\r\n","<template>\r\n    <Toolbar class=\"kn-toolbar kn-toolbar--secondary p-p-0 p-m-0\">\r\n        <template #end>\r\n            <Button icon=\"pi pi-save\" class=\"p-button-text p-button-rounded p-button-plain\" :disabled=\"buttonDisabled\" @click=\"hadleSave\" />\r\n            <Button class=\"p-button-text p-button-rounded p-button-plain\" icon=\"pi pi-times\" @click=\"closeTemplate\" />\r\n        </template>\r\n    </Toolbar>\r\n    <ProgressBar mode=\"indeterminate\" class=\"kn-progress-bar\" v-if=\"loading\" />\r\n    <div class=\"p-grid p-m-0 p-fluid p-jc-center\" style=\"overflow: auto\">\r\n        <Card class=\"p-m-2\">\r\n            <template #content>\r\n                <form class=\"p-fluid p-formgrid p-grid\">\r\n                    <div class=\"p-field p-col-6 p-mb-3\">\r\n                        <span class=\"p-float-label\">\r\n                            <InputText\r\n                                id=\"name\"\r\n                                class=\"kn-material-input\"\r\n                                type=\"text\"\r\n                                v-model.trim=\"v$.simpleNavigation.name.$model\"\r\n                                maxLength=\"40\"\r\n                                :class=\"{\r\n                                    'p-invalid': v$.simpleNavigation.name.$invalid && v$.simpleNavigation.name.$dirty\r\n                                }\"\r\n                                @blur=\"v$.simpleNavigation.name.$touch()\"\r\n                                @input=\"setDirty\"\r\n                            />\r\n                            <label for=\"name\" class=\"kn-material-input-label\">{{ $t('common.name') }} * </label>\r\n                        </span>\r\n                        <KnValidationMessages class=\"p-mt-1\" :vComp=\"v$.simpleNavigation.name\" :additionalTranslateParams=\"{ fieldName: $t('common.name') }\"></KnValidationMessages>\r\n                    </div>\r\n                    <div :class=\"simpleNavigation.type === 2 ? 'p-field p-col-2 p-mb-3' : 'p-field p-col-6 p-mb-3'\">\r\n                        <span class=\"p-float-label\">\r\n                            <Dropdown id=\"type\" class=\"kn-material-input\" v-model=\"simpleNavigation.type\" :options=\"crossModes\" optionValue=\"value\" optionLabel=\"name\" @change=\"handleDropdown\" />\r\n                            <label for=\"type\" class=\"kn-material-input-label\"> {{ $t('managers.crossNavigationManagement.modality') }} </label>\r\n                        </span>\r\n                    </div>\r\n                    <div class=\"p-field p-col-2 p-mb-3\" v-if=\"simpleNavigation.type === 2\">\r\n                        <span class=\"p-float-label\">\r\n                            <InputNumber id=\"width\" inputClass=\"kn-material-input\" v-model=\"simpleNavigation.popupOptions.width\" :min=\"0\" :useGrouping=\"false\" @input=\"setDirty\" />\r\n                            <label for=\"width\" class=\"kn-material-input-label\">{{ $t('managers.crossNavigationManagement.width') }} </label>\r\n                        </span>\r\n                        <small id=\"width-help\">{{ $t('managers.crossNavigationManagement.widthHelp') }}</small>\r\n                    </div>\r\n                    <div class=\"p-field p-col-2 p-mb-3\" v-if=\"simpleNavigation.type === 2\">\r\n                        <span class=\"p-float-label\">\r\n                            <InputNumber id=\"height\" inputClass=\"kn-material-input\" v-model=\"simpleNavigation.popupOptions.height\" :min=\"0\" :useGrouping=\"false\" @input=\"setDirty\" />\r\n                            <label for=\"height\" class=\"kn-material-input-label\">{{ $t('managers.crossNavigationManagement.height') }} </label>\r\n                        </span>\r\n                        <small id=\"height-help\">{{ $t('managers.crossNavigationManagement.heightHelp') }}</small>\r\n                    </div>\r\n                    <div class=\"p-field p-col-6 p-mb-3\">\r\n                        <span class=\"p-input-icon-right\">\r\n                            <span class=\"p-float-label\">\r\n                                <InputText id=\"description\" class=\"kn-material-input\" type=\"text\" v-model.trim=\"simpleNavigation.description\" maxLength=\"200\" @input=\"setDirty\" />\r\n                                <label for=\"description\" class=\"kn-material-input-label\">{{ $t('common.description') }} </label>\r\n                            </span>\r\n                            <i class=\"pi pi-info-circle\" @click=\"hintDialog('desc')\" />\r\n                        </span>\r\n                    </div>\r\n                    <div class=\"p-field p-col-6 p-mb-3\">\r\n                        <span class=\"p-input-icon-right\">\r\n                            <span class=\"p-float-label\">\r\n                                <InputText id=\"breadcrumb\" class=\"kn-material-input\" type=\"text\" v-model.trim=\"simpleNavigation.breadcrumb\" maxLength=\"200\" @input=\"setDirty\" />\r\n                                <label for=\"breadcrumb\" class=\"kn-material-input-label\">{{ $t('managers.crossNavigationManagement.breadCrumbs') }} </label>\r\n                            </span>\r\n                            <i class=\"pi pi-info-circle\" @click=\"hintDialog('bread')\" />\r\n                        </span>\r\n                    </div>\r\n                    <div class=\"p-field p-col-4 p-mb-3\">\r\n                        <span class=\"p-float-label\">\r\n                            <InputText id=\"origin\" class=\"kn-material-input\" type=\"text\" v-model.trim=\"simpleNavigation.fromDoc\" disabled />\r\n                            <label for=\"origin\" class=\"kn-material-input-label\">{{ $t('managers.crossNavigationManagement.originDoc') }} </label>\r\n                        </span>\r\n                    </div>\r\n                    <div class=\"p-field p-col-2 p-mb-3\">\r\n                        <Button :label=\"$t('common.select')\" @click=\"selectDoc('origin')\" class=\"kn-button kn-button--primary\" />\r\n                    </div>\r\n                    <div class=\"p-field p-col-4 p-mb-3\">\r\n                        <span class=\"p-float-label\">\r\n                            <InputText id=\"target\" class=\"kn-material-input\" type=\"text\" v-model.trim=\"simpleNavigation.toDoc\" disabled />\r\n                            <label for=\"target\" class=\"kn-material-input-label\">{{ $t('managers.crossNavigationManagement.targetDoc') }} </label>\r\n                        </span>\r\n                    </div>\r\n                    <div class=\"p-field p-col-2 p-mb-3\">\r\n                        <Button :label=\"$t('common.select')\" @click=\"selectDoc('target')\" class=\"kn-button kn-button--primary\" />\r\n                    </div>\r\n                    <DocParameters :selectedNavigation=\"navigation\" @touched=\"setDirty\"></DocParameters>\r\n                </form>\r\n            </template>\r\n        </Card>\r\n        <DocDialog :dialogVisible=\"dialogVisible\" :selectedDoc=\"docId\" @close=\"dialogVisible = false\" @apply=\"hadleDoc\"></DocDialog>\r\n        <HintDialog :dialogVisible=\"hintDialogVisiable\" :message=\"hintDialogMessage\" :title=\"hintDialogTitle\" @close=\"hintDialogVisiable = false\"></HintDialog>\r\n    </div>\r\n</template>\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport { createValidations } from '@/helpers/commons/validationHelper'\r\nimport { AxiosResponse } from 'axios'\r\nimport Dropdown from 'primevue/dropdown'\r\nimport InputNumber from 'primevue/inputnumber'\r\nimport useValidate from '@vuelidate/core'\r\nimport KnValidationMessages from '@/components/UI/KnValidatonMessages.vue'\r\nimport DocDialog from './dialogs/CrossNavigationManagementDocDialog.vue'\r\nimport HintDialog from './dialogs/CrossNavigationManagementHintDialog.vue'\r\nimport DocParameters from './dialogs/CrossNavigationManagementDocParameters.vue'\r\nimport crossNavigationManagementValidator from './CrossNavigationManagementValidator.json'\r\nimport crossNavigationDescriptor from './CrossNavigationManagementDescriptor.json'\r\nimport mainStore from '../../../App.store'\r\n\r\nexport default defineComponent({\r\n    name: 'cross-navigation-detail',\r\n    components: { Dropdown, DocDialog, DocParameters, HintDialog, KnValidationMessages, InputNumber },\r\n    props: {\r\n        id: {\r\n            type: String\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            navigation: {} as any,\r\n            simpleNavigation: {} as any,\r\n            loading: false,\r\n            dialogVisible: false,\r\n            hintDialogVisiable: false,\r\n            hintDialogTitle: '',\r\n            hintDialogMessage: '',\r\n            docType: 'origin',\r\n            docId: null,\r\n            operation: 'insert',\r\n            originParams: [] as any[],\r\n            crossNavigationDescriptor,\r\n            crossModes: [\r\n                { name: this.$t('managers.crossNavigationManagement.normal'), value: 3 },\r\n                { name: this.$t('managers.crossNavigationManagement.popUp'), value: 1 },\r\n                { name: this.$t('managers.crossNavigationManagement.popUpWindow'), value: 2 }\r\n            ],\r\n            v$: useValidate() as any\r\n        }\r\n    },\r\n    computed: {\r\n        buttonDisabled(): any {\r\n            return this.v$.$invalid\r\n        }\r\n    },\r\n    setup() {\r\n        const store = mainStore()\r\n        return { store }\r\n    },\r\n    created() {\r\n        if (this.id) {\r\n            this.loadNavigation()\r\n        } else this.initNew()\r\n    },\r\n    watch: {\r\n        async id() {\r\n            if (this.id) {\r\n                await this.loadNavigation()\r\n                if (this.originParams.length > 0) {\r\n                    this.navigation.fromPars = this.originParams\r\n                    this.originParams = []\r\n                }\r\n            } else this.initNew()\r\n        }\r\n    },\r\n    validations() {\r\n        const validationObject = {\r\n            simpleNavigation: createValidations('simpleNavigation', crossNavigationManagementValidator.validations.simpleNavigation)\r\n        }\r\n        return validationObject\r\n    },\r\n    methods: {\r\n        closeTemplate() {\r\n            this.$emit('close')\r\n        },\r\n        setDirty(): void {\r\n            this.$emit('touched')\r\n        },\r\n        initNew() {\r\n            this.navigation = {}\r\n            this.simpleNavigation = { type: 3 }\r\n        },\r\n        async loadNavigation() {\r\n            this.loading = true\r\n            await this.$http\r\n                .get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + '1.0/crossNavigation/' + this.id + '/load/')\r\n                .then((response: AxiosResponse<any>) => {\r\n                    this.navigation = response.data\r\n                    if (this.navigation.simpleNavigation.type === 0) this.navigation.simpleNavigation.type = 3\r\n                    this.simpleNavigation = this.navigation.simpleNavigation\r\n                    if (this.simpleNavigation.popupOptions) {\r\n                        this.simpleNavigation.popupOptions = JSON.parse(this.simpleNavigation.popupOptions)\r\n                    }\r\n                })\r\n                .finally(() => (this.loading = false))\r\n        },\r\n        hadleSave() {\r\n            this.navigation.simpleNavigation = this.simpleNavigation\r\n            if (this.navigation.simpleNavigation.id === undefined) {\r\n                this.operation = 'insert'\r\n                this.navigation.newRecord = true\r\n                this.originParams = this.navigation.fromPars\r\n            } else {\r\n                this.operation = 'update'\r\n                this.originParams = []\r\n            }\r\n            if (this.navigation.simpleNavigation.type === 2) {\r\n                this.navigation.simpleNavigation.popupOptions = JSON.stringify(this.navigation.simpleNavigation.popupOptions)\r\n            } else delete this.navigation.simpleNavigation.popupOptions\r\n\r\n            if (this.navigation.simpleNavigation.type === 3) {\r\n                this.navigation.simpleNavigation.type = 0\r\n            }\r\n            this.$http\r\n                .post(import.meta.env.VITE_RESTFUL_SERVICES_PATH + '1.0/crossNavigation/save/', this.navigation, { headers: { 'X-Disable-Errors': 'true' } })\r\n                .then(() => {\r\n                    this.store.setInfo({\r\n                        title: this.$t(this.crossNavigationDescriptor.operation[this.operation].toastTitle),\r\n                        msg: this.$t(this.crossNavigationDescriptor.operation.success)\r\n                    })\r\n                    this.$emit('saved', this.operation, this.navigation.simpleNavigation.name)\r\n                })\r\n                .catch((error) => {\r\n                    this.store.setError({\r\n                        title: this.$t('common.error.saving'),\r\n                        msg: error.message\r\n                    })\r\n                })\r\n                .finally(() => {\r\n                    if (this.navigation.simpleNavigation.type === 2) {\r\n                        this.navigation.simpleNavigation.popupOptions = JSON.parse(this.navigation.simpleNavigation.popupOptions)\r\n                    }\r\n                    if (this.navigation.simpleNavigation.type === 0) {\r\n                        this.navigation.simpleNavigation.type = 3\r\n                    }\r\n                })\r\n        },\r\n        handleDropdown() {\r\n            if (!this.simpleNavigation.popupOptions) this.simpleNavigation.popupOptions = {}\r\n        },\r\n        selectDoc(type) {\r\n            this.docType = type\r\n            switch (type) {\r\n                case 'origin':\r\n                    this.docId = this.simpleNavigation.fromDocId\r\n                    break\r\n                case 'target':\r\n                    this.docId = this.simpleNavigation.toDocId\r\n                    break\r\n            }\r\n            this.dialogVisible = true\r\n        },\r\n        async hadleDoc(doc) {\r\n            this.dialogVisible = false\r\n            switch (this.docType) {\r\n                case 'origin':\r\n                    this.simpleNavigation.fromDocId = doc.DOCUMENT_ID\r\n                    this.simpleNavigation.fromDoc = doc.DOCUMENT_LABEL\r\n                    this.navigation.simpleNavigation = this.simpleNavigation\r\n                    await this.loadInputParams(doc.DOCUMENT_LABEL).then((response) => (this.navigation.fromPars = response))\r\n                    await this.loadOutputParams(doc.DOCUMENT_ID).then((response) => (this.navigation.fromPars = this.navigation.fromPars.concat(response)))\r\n                    this.removeAllLink()\r\n                    break\r\n                case 'target':\r\n                    this.simpleNavigation.toDocId = doc.DOCUMENT_ID\r\n                    this.simpleNavigation.toDoc = doc.DOCUMENT_LABEL\r\n                    this.navigation.simpleNavigation = this.simpleNavigation\r\n                    await this.loadInputParams(doc.DOCUMENT_LABEL).then((response) => (this.navigation.toPars = response))\r\n                    break\r\n            }\r\n            this.setDirty()\r\n        },\r\n        async loadInputParams(label) {\r\n            let params = []\r\n            await this.$http.get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + '1.0/documents/' + label + '/parameters').then(\r\n                (response: AxiosResponse<any>) =>\r\n                    (params = response.data.results.map((param: any) => {\r\n                        return { id: param.id, name: param.label, type: 1, parType: param.parType }\r\n                    }))\r\n            )\r\n            return params\r\n        },\r\n        async loadOutputParams(id) {\r\n            let params = []\r\n            await this.$http.get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + '2.0/documents/' + id + '/listOutParams').then(\r\n                (response: AxiosResponse<any>) =>\r\n                    (params = response.data.map((param: any) => {\r\n                        return { id: param.id, name: param.name, type: 0, parType: param.type.valueCd }\r\n                    }))\r\n            )\r\n            return params\r\n        },\r\n        removeAllLink() {\r\n            this.navigation.toPars?.forEach((param) => {\r\n                param.links = []\r\n            })\r\n        },\r\n        hintDialog(type: string) {\r\n            switch (type) {\r\n                case 'desc':\r\n                    this.hintDialogTitle = this.$t('managers.crossNavigationManagement.hindDesc')\r\n                    this.hintDialogMessage = this.$t('managers.crossNavigationManagement.hindDescMessage')\r\n                    break\r\n                case 'bread':\r\n                    this.hintDialogTitle = this.$t('managers.crossNavigationManagement.hindBread')\r\n                    this.hintDialogMessage = this.$t('managers.crossNavigationManagement.hindBreadMessage')\r\n            }\r\n            this.hintDialogVisiable = true\r\n        }\r\n    }\r\n})\r\n</script>\r\n"],"names":["_sfc_main","DataTable","Column","Dialog","_hoisted_2","_openBlock","_createBlock","_normalizeStyle","_withCtx","_createVNode","_createElementVNode","_hoisted_1","_hoisted_3","_createElementBlock","_Fragment","_renderList","_toDisplayString","_createTextVNode","Listbox","Message","mainStore","_popScopeId","_hoisted_4","_createCommentVNode","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_normalizeClass","_withModifiers","_hoisted_13","Dropdown","InputNumber","useValidate"],"mappings":"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"}