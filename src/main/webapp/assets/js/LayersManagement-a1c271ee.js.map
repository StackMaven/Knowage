{"version":3,"file":"LayersManagement-a1c271ee.js","sources":["../../../../modules/managers/layersManagement/detailView/layerTab/LayersManagementLayerTab.vue","../../../../modules/managers/layersManagement/detailView/filterTab/LayersManagementFilterTab.vue","../../../../modules/managers/layersManagement/detailView/LayersManagementDetailView.vue","../../../../modules/managers/layersManagement/LayersManagementHint.vue","../../../../modules/managers/layersManagement/downloadDialog/LayersManagementDownloadDialog.vue","../../../../modules/managers/layersManagement/LayersManagement.vue"],"sourcesContent":["<template>\r\n    <Card id=\"basic-info-card\">\r\n        <template #content>\r\n            <form class=\"p-fluid p-formgrid p-grid\">\r\n                <div class=\"p-field p-col-12 p-lg-6\">\r\n                    <span class=\"p-float-label\">\r\n                        <InputText\r\n                            id=\"label\"\r\n                            class=\"kn-material-input\"\r\n                            type=\"text\"\r\n                            maxLength=\"100\"\r\n                            v-model=\"v$.layer.label.$model\"\r\n                            :class=\"{\r\n                                'p-invalid': v$.layer.label.$invalid && v$.layer.label.$dirty\r\n                            }\"\r\n                            @blur=\"v$.layer.label.$touch()\"\r\n                            @change=\"$emit('touched')\"\r\n                        />\r\n                        <label for=\"label\" class=\"kn-material-input-label\"> {{ $t('common.label') }} * </label>\r\n                    </span>\r\n                    <KnValidationMessages class=\"p-mt-1\" :vComp=\"v$.layer.label\" :additionalTranslateParams=\"{ fieldName: $t('common.label') }\" />\r\n                </div>\r\n                <div class=\"p-field p-col-12 p-lg-6\">\r\n                    <span class=\"p-float-label\">\r\n                        <InputText\r\n                            id=\"name\"\r\n                            class=\"kn-material-input\"\r\n                            type=\"text\"\r\n                            maxLength=\"100\"\r\n                            v-model=\"v$.layer.name.$model\"\r\n                            :class=\"{\r\n                                'p-invalid': v$.layer.name.$invalid && v$.layer.name.$dirty\r\n                            }\"\r\n                            @blur=\"v$.layer.name.$touch()\"\r\n                            @change=\"$emit('touched')\"\r\n                        />\r\n                        <label for=\"name\" class=\"kn-material-input-label\"> {{ $t('common.name') }} * </label>\r\n                    </span>\r\n                    <KnValidationMessages class=\"p-mt-1\" :vComp=\"v$.layer.name\" :additionalTranslateParams=\"{ fieldName: $t('common.name') }\" />\r\n                </div>\r\n                <div class=\"p-field p-col-12 p-lg-6\">\r\n                    <span class=\"p-float-label\">\r\n                        <Textarea id=\"descr\" class=\"kn-material-input\" rows=\"1\" maxLength=\"100\" :autoResize=\"true\" v-model=\"layer.descr\" @change=\"$emit('touched')\" />\r\n                        <label for=\"descr\" class=\"kn-material-input-label\"> {{ $t('common.description') }} </label>\r\n                    </span>\r\n                </div>\r\n                <div class=\"p-field p-col-12 p-lg-6\">\r\n                    <span class=\"p-float-label\">\r\n                        <Dropdown id=\"category\" class=\"kn-material-input\" v-model=\"layer.category_id\" :options=\"allCategories\" optionLabel=\"VALUE_NM\" optionValue=\"VALUE_ID\" :showClear=\"true\" @change=\"onTypeChange\" />\r\n                        <label for=\"category\" class=\"kn-material-input-label\"> {{ $t('common.category') }}</label>\r\n                    </span>\r\n                </div>\r\n            </form>\r\n        </template>\r\n    </Card>\r\n    <Card id=\"basic-layer-options-card\" class=\"p-mt-3\">\r\n        <template #content>\r\n            <form class=\"p-fluid p-formgrid p-grid\">\r\n                <div class=\"p-field p-col-12 p-lg-6\">\r\n                    <span class=\"p-float-label\">\r\n                        <InputText\r\n                            id=\"label\"\r\n                            class=\"kn-material-input\"\r\n                            type=\"text\"\r\n                            maxLength=\"100\"\r\n                            v-model=\"v$.layer.layerLabel.$model\"\r\n                            :class=\"{\r\n                                'p-invalid': v$.layer.layerLabel.$invalid && v$.layer.layerLabel.$dirty\r\n                            }\"\r\n                            @blur=\"v$.layer.layerLabel.$touch()\"\r\n                            @change=\"$emit('touched')\"\r\n                        />\r\n                        <label for=\"label\" class=\"kn-material-input-label\"> {{ $t('managers.layersManagement.layerLabel') }} * </label>\r\n                    </span>\r\n                    <KnValidationMessages class=\"p-mt-1\" :vComp=\"v$.layer.layerLabel\" :additionalTranslateParams=\"{ fieldName: $t('managers.layersManagement.layerLabel') }\" />\r\n                </div>\r\n                <div class=\"p-field p-col-12 p-lg-6\">\r\n                    <span class=\"p-float-label\">\r\n                        <InputText\r\n                            id=\"name\"\r\n                            class=\"kn-material-input\"\r\n                            type=\"text\"\r\n                            maxLength=\"100\"\r\n                            v-model=\"v$.layer.layerName.$model\"\r\n                            :class=\"{\r\n                                'p-invalid': v$.layer.layerName.$invalid && v$.layer.layerName.$dirty\r\n                            }\"\r\n                            @blur=\"v$.layer.layerName.$touch()\"\r\n                            @change=\"$emit('touched')\"\r\n                        />\r\n                        <label for=\"name\" class=\"kn-material-input-label\"> {{ $t('managers.layersManagement.layerName') }} * </label>\r\n                    </span>\r\n                    <KnValidationMessages class=\"p-mt-1\" :vComp=\"v$.layer.layerName\" :additionalTranslateParams=\"{ fieldName: $t('managers.layersManagement.layerName') }\" />\r\n                </div>\r\n                <div class=\"p-col-12 p-lg-4 p-mt-3\">\r\n                    <span class=\"p-as-center\">\r\n                        <InputSwitch id=\"baseLayer\" v-model=\"layer.baseLayer\" />\r\n                        <label for=\"baseLayer\" class=\"kn-material-input-label p-ml-2\"> {{ $t('managers.layersManagement.baseLayer') }}</label>\r\n                    </span>\r\n                </div>\r\n                <div class=\"p-field p-col-12 p-lg-4\">\r\n                    <span class=\"p-float-label\">\r\n                        <InputText\r\n                            id=\"name\"\r\n                            class=\"kn-material-input\"\r\n                            type=\"text\"\r\n                            maxLength=\"100\"\r\n                            v-model=\"v$.layer.layerIdentify.$model\"\r\n                            :class=\"{\r\n                                'p-invalid': v$.layer.layerIdentify.$invalid && v$.layer.layerIdentify.$dirty\r\n                            }\"\r\n                            @blur=\"v$.layer.layerIdentify.$touch()\"\r\n                            @change=\"$emit('touched')\"\r\n                        />\r\n                        <label for=\"name\" class=\"kn-material-input-label\"> {{ $t('managers.layersManagement.layerIdentify') }} * </label>\r\n                    </span>\r\n                    <KnValidationMessages class=\"p-mt-1\" :vComp=\"v$.layer.layerIdentify\" :additionalTranslateParams=\"{ fieldName: $t('managers.layersManagement.layerIdentify') }\" />\r\n                </div>\r\n                <div class=\"p-field p-col-12 p-lg-4\">\r\n                    <span class=\"p-float-label\">\r\n                        <InputText\r\n                            id=\"name\"\r\n                            class=\"kn-material-input\"\r\n                            type=\"number\"\r\n                            min=\"0\"\r\n                            v-model=\"v$.layer.layerOrder.$model\"\r\n                            :class=\"{\r\n                                'p-invalid': v$.layer.layerOrder.$invalid && v$.layer.layerOrder.$dirty\r\n                            }\"\r\n                            @blur=\"v$.layer.layerOrder.$touch()\"\r\n                            @change=\"$emit('touched')\"\r\n                        />\r\n                        <label for=\"name\" class=\"kn-material-input-label\"> {{ $t('managers.layersManagement.layerOrder') }} * </label>\r\n                    </span>\r\n                    <KnValidationMessages class=\"p-mt-1\" :vComp=\"v$.layer.layerOrder\" :additionalTranslateParams=\"{ fieldName: $t('managers.layersManagement.layerOrder') }\" />\r\n                </div>\r\n                <div class=\"p-col-12\">\r\n                    <span class=\"p-float-label\">\r\n                        <MultiSelect id=\"layerRoles\" class=\"kn-material-input\" v-model=\"layer.roles\" :options=\"allRoles\" optionLabel=\"name\" display=\"chip\" :filter=\"true\" />\r\n                        <label for=\"layerRoles\" class=\"kn-material-input-label\"> {{ $t('common.roles') }} </label>\r\n                    </span>\r\n                </div>\r\n            </form>\r\n        </template>\r\n    </Card>\r\n    <Card id=\"layer-type-card\" class=\"p-mt-3\">\r\n        <template #content>\r\n            <form class=\"p-fluid p-formgrid p-grid\">\r\n                <div class=\"p-field p-col-12\">\r\n                    <span class=\"p-float-label\">\r\n                        <Dropdown\r\n                            id=\"layerType\"\r\n                            class=\"kn-material-input\"\r\n                            v-model=\"v$.layer.type.$model\"\r\n                            :options=\"layerTypes\"\r\n                            optionLabel=\"label\"\r\n                            optionValue=\"value\"\r\n                            :class=\"{\r\n                                'p-invalid': v$.layer.type.$invalid && v$.layer.type.$dirty\r\n                            }\"\r\n                            :disabled=\"layer.layerId\"\r\n                            @blur=\"v$.layer.type.$touch()\"\r\n                            @change=\"$emit('touched')\"\r\n                        />\r\n                        <label for=\"layerType\" class=\"kn-material-input-label\"> {{ $t('common.type') }} *</label>\r\n                    </span>\r\n                    <KnValidationMessages class=\"p-mt-1\" :vComp=\"v$.layer.type\" :additionalTranslateParams=\"{ fieldName: $t('common.type') }\" />\r\n                </div>\r\n                <div v-if=\"layer.type == 'File'\" class=\"p-field p-col-12 p-d-flex\">\r\n                    <div class=\"kn-flex\">\r\n                        <span class=\"p-float-label\">\r\n                            <InputText id=\"fileName\" class=\"kn-material-input\" v-model=\"layer.pathFile\" :disabled=\"true\" />\r\n                            <label for=\"fileName\" class=\"kn-material-input-label\"> {{ $t('managers.layersManagement.fileLocation') }} </label>\r\n                        </span>\r\n                    </div>\r\n                    <Button icon=\"fas fa-upload\" class=\"p-button-text p-button-plain p-ml-2\" @click=\"setUploadType\" />\r\n                    <KnInputFile v-if=\"!uploading\" :changeFunction=\"uploadLayerFile\" accept=\".json\" :triggerInput=\"triggerUpload\" />\r\n                </div>\r\n                <div v-if=\"layer.type == 'WFS' || layer.type == 'WMS' || layer.type == 'TMS'\" class=\"p-field p-col-12\">\r\n                    <span class=\"p-float-label\">\r\n                        <InputText\r\n                            id=\"label\"\r\n                            class=\"kn-material-input\"\r\n                            type=\"text\"\r\n                            maxLength=\"100\"\r\n                            v-model=\"v$.layer.layerURL.$model\"\r\n                            :class=\"{\r\n                                'p-invalid': v$.layer.layerURL.$invalid && v$.layer.layerURL.$dirty\r\n                            }\"\r\n                            @blur=\"v$.layer.layerURL.$touch()\"\r\n                            @change=\"$emit('touched')\"\r\n                        />\r\n                        <label for=\"label\" class=\"kn-material-input-label\"> {{ $t('managers.layersManagement.layerURL') }} * </label>\r\n                    </span>\r\n                    <KnValidationMessages class=\"p-mt-1\" :vComp=\"v$.layer.layerURL\" :additionalTranslateParams=\"{ fieldName: $t('managers.layersManagement.layerURL') }\" />\r\n                </div>\r\n                <div v-if=\"layer.type == 'Google' || layer.type == 'WMS' || layer.type == 'TMS'\" :class=\"{ 'p-lg-6': layer.type == 'WMS', 'p-lg-12': layer.type != 'WMS' }\" class=\"p-field p-col-12 p-lg-6\">\r\n                    <span class=\"p-float-label\">\r\n                        <InputText id=\"label\" class=\"kn-material-input\" type=\"text\" maxLength=\"100\" v-model=\"layer.layerOptions\" @change=\"$emit('touched')\" />\r\n                        <label for=\"label\" class=\"kn-material-input-label\"> {{ $t('managers.layersManagement.layerOptions') }} </label>\r\n                    </span>\r\n                </div>\r\n                <div v-if=\"layer.type == 'WMS'\" class=\"p-field p-col-12 p-lg-6\">\r\n                    <span class=\"p-float-label\">\r\n                        <InputText id=\"label\" class=\"kn-material-input\" type=\"text\" maxLength=\"100\" v-model=\"layer.layerParams\" @change=\"$emit('touched')\" />\r\n                        <label for=\"label\" class=\"kn-material-input-label\"> {{ $t('managers.layersManagement.layerParams') }} </label>\r\n                    </span>\r\n                </div>\r\n            </form>\r\n        </template>\r\n    </Card>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport { createValidations, ICustomValidatorMap } from '@/helpers/commons/validationHelper'\r\nimport useValidate from '@vuelidate/core'\r\nimport descriptor from './LayersManagementLayerTabDescriptor.json'\r\nimport KnValidationMessages from '@/components/UI/KnValidatonMessages.vue'\r\nimport Textarea from 'primevue/textarea'\r\nimport MultiSelect from 'primevue/multiselect'\r\nimport Dropdown from 'primevue/dropdown'\r\nimport KnInputFile from '@/components/UI/KnInputFile.vue'\r\nimport InputSwitch from 'primevue/inputswitch'\r\n\r\nexport default defineComponent({\r\n    components: { KnValidationMessages, Textarea, MultiSelect, Dropdown, KnInputFile, InputSwitch },\r\n    props: { selectedLayer: { type: Object, required: true }, allRoles: { type: Array, required: true }, allCategories: { type: Array, required: true } },\r\n    computed: {},\r\n    emits: [],\r\n    data() {\r\n        return {\r\n            v$: useValidate() as any,\r\n            descriptor,\r\n            layer: {} as any,\r\n            triggerUpload: false,\r\n            uploading: false,\r\n            layerTypes: [\r\n                {\r\n                    label: this.$t('common.file'),\r\n                    value: 'File'\r\n                },\r\n                {\r\n                    label: this.$t('managers.layersManagement.layerTypes.wfs'),\r\n                    value: 'WFS'\r\n                },\r\n                {\r\n                    label: this.$t('managers.layersManagement.layerTypes.wms'),\r\n                    value: 'WMS'\r\n                },\r\n                {\r\n                    label: this.$t('managers.layersManagement.layerTypes.tms'),\r\n                    value: 'TMS'\r\n                },\r\n                {\r\n                    label: this.$t('managers.layersManagement.layerTypes.google'),\r\n                    value: 'Google'\r\n                },\r\n                {\r\n                    label: this.$t('managers.layersManagement.layerTypes.osm'),\r\n                    value: 'OSM'\r\n                }\r\n            ]\r\n        }\r\n    },\r\n    async created() {\r\n        this.layer = this.selectedLayer\r\n    },\r\n    watch: {\r\n        selectedLayer() {\r\n            this.layer = this.selectedLayer\r\n        }\r\n    },\r\n    validations() {\r\n        const urlRequried = (value) => {\r\n            let types = ['WFS', 'WMS', 'TMS']\r\n            return !types.includes(this.layer.type) || value\r\n        }\r\n        const customValidators: ICustomValidatorMap = { 'url-required': urlRequried }\r\n        const validationObject = { layer: createValidations('layer', this.descriptor.validations.layer as any, customValidators) }\r\n        return validationObject\r\n    },\r\n    methods: {\r\n        setUploadType() {\r\n            this.triggerUpload = false\r\n            setTimeout(() => (this.triggerUpload = true), 200)\r\n        },\r\n        uploadLayerFile(event) {\r\n            this.uploading = true\r\n            let uploadedFile = event.target.files[0]\r\n            this.layer.layerFile = { file: uploadedFile, fileName: uploadedFile.name }\r\n            this.triggerUpload = false\r\n            setTimeout(() => (this.uploading = false), 200)\r\n        }\r\n    }\r\n})\r\n</script>\r\n","<template>\r\n    <div class=\"layers-management-filters\">\r\n        <div v-if=\"layer\" class=\"p-grid\">\r\n            <div class=\"p-col\">\r\n                <Toolbar class=\"kn-toolbar kn-toolbar--secondary\">\r\n                    <template #start>\r\n                        {{ $t('managers.layersManagement.layerFilter') }}\r\n                    </template>\r\n                </Toolbar>\r\n                <Listbox\r\n                    class=\"kn-list layers-management-property-container\"\r\n                    :options=\"filters\"\r\n                    :filter=\"true\"\r\n                    :filterPlaceholder=\"$t('common.search')\"\r\n                    optionLabel=\"property\"\r\n                    filterMatchMode=\"contains\"\r\n                    :filterFields=\"layersManagementFilterTabDescriptor.filterFields\"\r\n                    :emptyFilterMessage=\"$t('common.info.noDataFound')\"\r\n                    data-test=\"available-properties-list\"\r\n                >\r\n                    <template #empty>{{ $t('common.info.noDataFound') }}</template>\r\n                    <template #option=\"slotProps\">\r\n                        <div class=\"kn-list-item\" @click=\"addProperty(slotProps.option)\">\r\n                            <div class=\"kn-list-item-text\">\r\n                                <span :data-test=\"'available-property-' + slotProps.option.property\">{{ slotProps.option.property }}</span>\r\n                            </div>\r\n                        </div>\r\n                    </template>\r\n                </Listbox>\r\n            </div>\r\n            <div class=\"p-col\">\r\n                <Toolbar class=\"kn-toolbar kn-toolbar--secondary\">\r\n                    <template #start>\r\n                        {{ $t('managers.layersManagement.layerFilterAdded') }}\r\n                    </template>\r\n                </Toolbar>\r\n                <Listbox\r\n                    class=\"kn-list layers-management-property-container\"\r\n                    :options=\"layer.properties\"\r\n                    :filter=\"true\"\r\n                    :filterPlaceholder=\"$t('common.search')\"\r\n                    optionLabel=\"property\"\r\n                    filterMatchMode=\"contains\"\r\n                    :filterFields=\"layersManagementFilterTabDescriptor.filterFields\"\r\n                    :emptyFilterMessage=\"$t('common.info.noDataFound')\"\r\n                    data-test=\"selected-properties-list\"\r\n                >\r\n                    <template #empty>{{ $t('managers.layersManagement.noFilterSelected') }}</template>\r\n                    <template #option=\"slotProps\">\r\n                        <div class=\"kn-list-item\" @click=\"removeProperty(slotProps.option)\">\r\n                            <div class=\"kn-list-item-text\">\r\n                                <span>{{ slotProps.option.property }}</span>\r\n                            </div>\r\n                        </div>\r\n                    </template>\r\n                </Listbox>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent, PropType } from 'vue'\r\nimport { iFilter, iLayer } from '../../LayersManagement'\r\nimport layersManagementFilterTabDescriptor from './LayersManagementFilterTabDescriptor.json'\r\nimport Listbox from 'primevue/listbox'\r\n\r\nexport default defineComponent({\r\n    name: 'layers-management-filter-tab',\r\n    components: { Listbox },\r\n    props: { selectedLayer: { type: Object as PropType<iLayer>, required: true }, propFilters: { type: Array as PropType<iFilter[]> } },\r\n    emits: ['touched'],\r\n    data() {\r\n        return {\r\n            layersManagementFilterTabDescriptor,\r\n            layer: null as iLayer | null,\r\n            filters: [] as iFilter[]\r\n        }\r\n    },\r\n    watch: {\r\n        selectedLayer() {\r\n            this.loadLayer()\r\n            this.loadFilters()\r\n        },\r\n        propFilters() {\r\n            this.loadFilters()\r\n        }\r\n    },\r\n    created() {\r\n        this.loadLayer()\r\n        this.loadFilters()\r\n    },\r\n    methods: {\r\n        loadLayer() {\r\n            this.layer = this.selectedLayer\r\n        },\r\n        loadFilters() {\r\n            this.filters = []\r\n            this.propFilters?.forEach((filter: iFilter) => {\r\n                const index = this.layer?.properties.findIndex((property: iFilter) => property.property === filter.property)\r\n                if (index === -1) this.filters.push(filter)\r\n            })\r\n        },\r\n        addProperty(filter: iFilter) {\r\n            this.moveProperty(filter, this.filters, this.layer?.properties)\r\n        },\r\n        removeProperty(filter: iFilter) {\r\n            this.moveProperty(filter, this.layer?.properties, this.filters)\r\n        },\r\n        moveProperty(filter: iFilter, sourceList, targetList) {\r\n            const index = sourceList.findIndex((tempFilter: iFilter) => tempFilter.property === filter.property)\r\n            if (index !== -1) {\r\n                targetList.push(filter)\r\n                sourceList.splice(index, 1)\r\n                this.$emit('touched')\r\n            }\r\n        }\r\n    }\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.layers-management-filters {\r\n    :deep(.p-card-body) {\r\n        padding: 0;\r\n        .p-card-content {\r\n            padding: 0;\r\n        }\r\n    }\r\n    .layers-management-property-container {\r\n        border: 1px solid var(--kn-color-borders);\r\n        border-top: none;\r\n    }\r\n}\r\n</style>\r\n","<template>\r\n    <Toolbar class=\"kn-toolbar kn-toolbar--secondary p-m-0\">\r\n        <template #start>{{ selectedLayer.label }}</template>\r\n        <template #end>\r\n            <Button icon=\"pi pi-save\" class=\"p-button-text p-button-rounded p-button-plain\" :disabled=\"buttonDisabled\" @click=\"saveLayer\" />\r\n            <Button icon=\"pi pi-times\" class=\"p-button-text p-button-rounded p-button-plain\" @click=\"closeTemplateConfirm\" />\r\n        </template>\r\n    </Toolbar>\r\n\r\n    <ProgressBar mode=\"indeterminate\" class=\"kn-progress-bar\" v-if=\"loading\" />\r\n    <TabView v-model:activeIndex=\"activeIndex\" @tab-change=\"onTabChange\" class=\"kn-overflow\">\r\n        <TabPanel>\r\n            <template #header>\r\n                <span>{{ $t('managers.layersManagement.layerTitle') }}</span>\r\n            </template>\r\n            <LayerTab :selectedLayer=\"selectedLayer\" :allRoles=\"allRoles\" :allCategories=\"allCategories\" @touched=\"$emit('touched')\" />\r\n        </TabPanel>\r\n\r\n        <TabPanel v-if=\"layer.layerId\">\r\n            <template #header>\r\n                <span>{{ $t('managers.layersManagement.filterTitle') }}</span>\r\n            </template>\r\n            <FilterTab :selectedLayer=\"selectedLayer\" :propFilters=\"filters\" />\r\n        </TabPanel>\r\n    </TabView>\r\n    <Toast position=\"top-left\" group=\"tl\" />\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport { AxiosResponse } from 'axios'\r\nimport { iFilter } from '../LayersManagement'\r\nimport useValidate from '@vuelidate/core'\r\nimport TabView from 'primevue/tabview'\r\nimport TabPanel from 'primevue/tabpanel'\r\nimport LayerTab from './layerTab/LayersManagementLayerTab.vue'\r\nimport FilterTab from './filterTab/LayersManagementFilterTab.vue'\r\nimport Toast from 'primevue/toast'\r\nimport mainStore from '../../../../App.store'\r\n\r\nexport default defineComponent({\r\n    components: { TabView, TabPanel, LayerTab, FilterTab, Toast },\r\n    props: { selectedLayer: { type: Object, required: true }, allRoles: { type: Array, required: true }, allCategories: { type: Array, required: true } },\r\n    computed: {\r\n        buttonDisabled(): boolean {\r\n            return this.v$.$invalid\r\n        }\r\n    },\r\n    emits: ['touched', 'closed', 'saved'],\r\n    data() {\r\n        return {\r\n            v$: useValidate() as any,\r\n            touched: false,\r\n            layer: {} as any,\r\n            loading: false,\r\n            activeIndex: 0,\r\n            filters: [] as iFilter[]\r\n        }\r\n    },\r\n    setup() {\r\n        const store = mainStore()\r\n        return { store }\r\n    },\r\n    async created() {\r\n        this.loadLayer()\r\n        this.getRolesForLayer()\r\n    },\r\n    watch: {\r\n        selectedLayer() {\r\n            this.loadLayer()\r\n            this.getRolesForLayer()\r\n        }\r\n    },\r\n    methods: {\r\n        loadLayer() {\r\n            this.layer = this.selectedLayer\r\n            this.layer.properties = this.layer.properties\r\n                ? this.layer.properties.map((property: string) => {\r\n                      return {\r\n                          property: property\r\n                      }\r\n                  })\r\n                : []\r\n        },\r\n        async getRolesForLayer() {\r\n            if (this.layer.layerId) {\r\n                await this.$http.post(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `layers/postitem`, this.selectedLayer).then((response: AxiosResponse<any>) => (this.layer.roles = response.data))\r\n            }\r\n        },\r\n        closeTemplateConfirm() {\r\n            if (!this.touched) {\r\n                this.closeTemplate()\r\n            } else {\r\n                this.$confirm.require({\r\n                    message: this.$t('common.toast.unsavedChangesMessage'),\r\n                    header: this.$t('common.toast.unsavedChangesHeader'),\r\n                    icon: 'pi pi-exclamation-triangle',\r\n                    accept: () => {\r\n                        this.touched = false\r\n                        this.closeTemplate()\r\n                    }\r\n                })\r\n            }\r\n        },\r\n        closeTemplate() {\r\n            this.$router.push('/layers-management')\r\n            this.$emit('closed')\r\n        },\r\n        onTabChange() {\r\n            if (this.activeIndex === 1) {\r\n                this.loadFilters()\r\n            }\r\n        },\r\n        async loadFilters() {\r\n            if (this.layer) {\r\n                this.loading = true\r\n                await this.$http.get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `layers/getFilter?id=${this.layer.layerId}`).then((response: AxiosResponse<any>) => (this.filters = response.data))\r\n                this.loading = false\r\n            }\r\n        },\r\n        saveOrUpdateMessage(layer) {\r\n            let toSend = layer\r\n            let url = import.meta.env.VITE_RESTFUL_SERVICES_PATH + 'layers'\r\n            if (this.layer.layerFile) {\r\n                let formData = new FormData()\r\n                formData.append('data', JSON.stringify(this.layer))\r\n                formData.append('layerFile', this.layer.layerFile.file)\r\n                if (layer.layerId) {\r\n                    url = import.meta.env.VITE_RESTFUL_SERVICES_PATH + 'layers/updateData'\r\n                } else url = import.meta.env.VITE_RESTFUL_SERVICES_PATH + 'layers/addData'\r\n                toSend = formData\r\n            }\r\n            if (layer.layerId) {\r\n                return this.$http.put(url, toSend, { headers: { Accept: 'application/json, text/plain, */*', 'Content-Type': 'multipart/form-data', 'X-Disable-Errors': 'true' } })\r\n            } else return this.$http.post(url, toSend, { headers: { Accept: 'application/json, text/plain, */*', 'Content-Type': 'multipart/form-data', 'X-Disable-Errors': 'true' } })\r\n        },\r\n        async saveLayer() {\r\n            this.layer.roles === null ? (this.layer.roles = []) : ''\r\n            await this.saveOrUpdateMessage(this.layer)\r\n                .then((response: AxiosResponse<any>) => {\r\n                    this.store.setInfo({\r\n                        title: this.$t('common.toast.success'),\r\n                        msg: this.$t('common.toast.success')\r\n                    })\r\n                    let id = this.layer.layerId ? this.layer.layerId : response.data.id\r\n                    this.$emit('saved', id)\r\n                })\r\n                .catch((response) => {\r\n                    this.$toast.add({ severity: 'error', summary: this.$t('common.error.generic'), detail: response.message, life: 3000 })\r\n                })\r\n        }\r\n    }\r\n})\r\n</script>\r\n","<template>\r\n    <KnHint :title=\"$t('managers.layersManagement.title')\" :hint=\"$t('managers.layersManagement.hint')\"></KnHint>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport KnHint from '@/components/UI/KnHint.vue'\r\n\r\nexport default defineComponent({\r\n    name: 'layers-management-hint',\r\n    components: { KnHint }\r\n})\r\n</script>\r\n","<template>\r\n    <Dialog id=\"qbe-join-definition-dialog\" class=\"p-fluid kn-dialog--toolbar--primary\" :visible=\"visible\" :modal=\"true\" :closable=\"false\">\r\n        <template #header>\r\n            <Toolbar class=\"kn-toolbar kn-toolbar--primary p-p-0 p-m-2 p-col-12\">\r\n                <template #start>\r\n                    {{ $t('managers.layersManagement.downloadDialogTitle') }}\r\n                </template>\r\n            </Toolbar>\r\n        </template>\r\n\r\n        <div v-if=\"layer\" class=\"p-m-5\">\r\n            <div class=\"p-field-radiobutton p-d-flex p-flex-row\" v-for=\"(mode, index) in modes\" :key=\"index\">\r\n                <RadioButton name=\"downloadMode\" :value=\"mode\" v-model=\"downloadMode\" />\r\n                <label>{{ $t(`managers.layersManagement.downloadTypes.${mode}`) }}</label>\r\n            </div>\r\n        </div>\r\n\r\n        <template #footer>\r\n            <Button class=\"kn-button kn-button--secondary\" @click=\"closeDialog\"> {{ $t('common.cancel') }}</Button>\r\n            <Button class=\"kn-button kn-button--primary\" @click=\"download\"> {{ $t('common.download') }}</Button>\r\n        </template>\r\n    </Dialog>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent, PropType } from 'vue'\r\nimport { iLayer } from '../LayersManagement.d'\r\nimport { AxiosResponse } from 'axios'\r\nimport { downloadDirect } from '@/helpers/commons/fileHelper'\r\nimport Dialog from 'primevue/dialog'\r\nimport layersManagementDownloadDialogDescriptor from './LayersManagementDownloadDialogDescriptor.json'\r\nimport RadioButton from 'primevue/radiobutton'\r\n\r\nexport default defineComponent({\r\n    name: 'qbe-join-definition-dialog',\r\n    components: { Dialog, RadioButton },\r\n    props: { visible: { type: Boolean }, layer: { type: Object as PropType<iLayer>, required: true } },\r\n    emits: ['close'],\r\n    data() {\r\n        return {\r\n            layersManagementDownloadDialogDescriptor,\r\n            downloadMode: 'geojson'\r\n        }\r\n    },\r\n    computed: {\r\n        modes(): string[] {\r\n            return this.layer.type === 'WFS' ? this.layersManagementDownloadDialogDescriptor.downloadModesWFS : this.layersManagementDownloadDialogDescriptor.downloadModes\r\n        }\r\n    },\r\n    created() {},\r\n    methods: {\r\n        closeDialog() {\r\n            this.$emit('close')\r\n        },\r\n        async download() {\r\n            await this.$http\r\n                .get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `layers/getDownload?id=${this.layer.layerId}%2CtypeWFS=${this.downloadMode}`, { headers: { Accept: 'application/json, text/plain, */*' } })\r\n                .then((response: AxiosResponse<any>) => {\r\n                    if (this.downloadMode === 'geojson') {\r\n                        downloadDirect(JSON.stringify(response.data), this.layer.name, 'application/json')\r\n                    } else {\r\n                        window.open(response.data.url)\r\n                    }\r\n                    this.$emit('close')\r\n                })\r\n                .catch(() => {})\r\n        }\r\n    }\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n#qbe-join-definition-dialog .p-dialog-header,\r\n#qbe-join-definition-dialog .p-dialog-content {\r\n    padding: 0;\r\n}\r\n#qbe-join-definition-dialog .p-dialog-content {\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex: 1;\r\n}\r\n.qbe-advanced-filter-button {\r\n    max-width: 150px;\r\n}\r\n</style>\r\n","<template>\r\n    <div class=\"kn-page\">\r\n        <div class=\"kn-page-content p-grid p-m-0\">\r\n            <div class=\"kn-list--column p-col-4 p-sm-4 p-md-3 p-p-0\">\r\n                <Toolbar class=\"kn-toolbar kn-toolbar--primary\">\r\n                    <template #start>\r\n                        {{ $t('managers.layersManagement.title') }}\r\n                    </template>\r\n                    <template #end>\r\n                        <FabButton icon=\"fas fa-plus\" @click=\"showDetail\" data-test=\"open-form-button\" />\r\n                    </template>\r\n                </Toolbar>\r\n                <ProgressBar mode=\"indeterminate\" class=\"kn-progress-bar\" v-if=\"loading\" data-test=\"progress-bar\" />\r\n                <KnListBox :options=\"allLayers\" :settings=\"descriptor.knListSettings\" @click=\"showDetail\" @delete.stop=\"deleteLayerConfirm\" @download.stop=\"downloadLayerFile\" />\r\n            </div>\r\n\r\n            <div class=\"p-col-8 p-sm-8 p-md-9 p-p-0 p-m-0 kn-router-view\">\r\n                <LayersManagementDetailView v-if=\"selectedLayer\" :selectedLayer=\"selectedLayer\" :allRoles=\"allRoles\" :allCategories=\"allCategories\" @closed=\"onDetailClose\" @saved=\"reloadPageOnSave\" @touched=\"touched = true\"></LayersManagementDetailView>\r\n                <LayersManagementHint v-else></LayersManagementHint>\r\n            </div>\r\n\r\n            <LayersManagementDownloadDialog :visible=\"downloadDialogVisible\" :layer=\"selectedLayerForDownload\" @close=\"downloadDialogVisible = false\"></LayersManagementDownloadDialog>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport { AxiosResponse } from 'axios'\r\nimport { iLayer } from './LayersManagement'\r\nimport FabButton from '@/components/UI/KnFabButton.vue'\r\nimport descriptor from './LayersManagementDescriptor.json'\r\nimport KnListBox from '@/components/UI/KnListBox/KnListBox.vue'\r\nimport LayersManagementDetailView from './detailView/LayersManagementDetailView.vue'\r\nimport LayersManagementHint from './LayersManagementHint.vue'\r\nimport LayersManagementDownloadDialog from './downloadDialog/LayersManagementDownloadDialog.vue'\r\nimport mainStore from '../../../App.store'\r\nimport deepcopy from 'deepcopy'\r\n\r\nexport default defineComponent({\r\n    name: 'roles-management',\r\n    components: { FabButton, KnListBox, LayersManagementDetailView, LayersManagementHint, LayersManagementDownloadDialog },\r\n    data() {\r\n        return {\r\n            descriptor,\r\n            allLayers: [] as iLayer[],\r\n            allRoles: [] as any,\r\n            allCategories: [] as any,\r\n            selectedLayer: null as iLayer | null,\r\n            touched: false,\r\n            loading: false,\r\n            downloadDialogVisible: false,\r\n            selectedLayerForDownload: null\r\n        }\r\n    },\r\n    setup() {\r\n        const store = mainStore()\r\n        return { store }\r\n    },\r\n    async created() {\r\n        this.loadPage()\r\n    },\r\n    methods: {\r\n        async loadPage() {\r\n            this.loading = true\r\n            this.touched = false\r\n            await Promise.all([await this.getAllLayers(), await this.getAllRoles(), await this.getAllCategories()])\r\n            this.loading = false\r\n        },\r\n        async getAllLayers() {\r\n            await this.$http.get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `layers`).then((response: AxiosResponse<any>) => (this.allLayers = response.data.root))\r\n        },\r\n        async getAllRoles() {\r\n            await this.$http.get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `layers/getroles?`).then((response: AxiosResponse<any>) => (this.allRoles = response.data))\r\n        },\r\n        async getAllCategories() {\r\n            await this.$http.get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `domains/listValueDescriptionByType?DOMAIN_TYPE=GEO_CATEGORY`).then((response: AxiosResponse<any>) => (this.allCategories = response.data))\r\n        },\r\n        showDetail(event) {\r\n            if (!this.touched) {\r\n                this.selectedLayer = event.item ? (deepcopy(event.item) as iLayer) : (deepcopy(this.descriptor.newLayer) as iLayer)\r\n            } else {\r\n                this.$confirm.require({\r\n                    message: this.$t('common.toast.unsavedChangesMessage'),\r\n                    header: this.$t('common.toast.unsavedChangesHeader'),\r\n                    icon: 'pi pi-exclamation-triangle',\r\n                    accept: () => {\r\n                        this.touched = false\r\n                        this.selectedLayer = event.item ? (deepcopy(event.item) as iLayer) : (deepcopy(this.descriptor.newLayer) as iLayer)\r\n                    }\r\n                })\r\n            }\r\n        },\r\n        deleteLayerConfirm(event) {\r\n            this.$confirm.require({\r\n                message: this.$t('common.toast.deleteMessage'),\r\n                header: this.$t('common.toast.deleteTitle'),\r\n                icon: 'pi pi-exclamation-triangle',\r\n                accept: () => this.deleteLayer(event.item.layerId)\r\n            })\r\n        },\r\n        async deleteLayer(layerId: number) {\r\n            await this.$http.post(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `layers/deleteLayer?id=${layerId}`).then(() => {\r\n                this.store.setInfo({\r\n                    title: this.$t('common.toast.deleteTitle'),\r\n                    msg: this.$t('common.toast.deleteSuccess')\r\n                })\r\n                layerId == this.selectedLayer?.layerId ? this.onDetailClose() : ''\r\n                this.getAllLayers()\r\n            })\r\n        },\r\n        onDetailClose() {\r\n            this.touched = false\r\n            this.selectedLayer = null\r\n        },\r\n        downloadLayerFile(event: any) {\r\n            console.log('DOWNLOAD layer: ', event.item)\r\n            this.selectedLayerForDownload = event.item\r\n            this.downloadDialogVisible = true\r\n        },\r\n        async reloadPageOnSave(id) {\r\n            await this.loadPage()\r\n            let layerToReload = this.allLayers.find((layer) => layer.layerId === id) as any\r\n            this.selectedLayer = deepcopy(layerToReload) as iLayer\r\n        }\r\n    }\r\n})\r\n</script>\r\n"],"names":["_sfc_main","Textarea","MultiSelect","Dropdown","InputSwitch","useValidate","_hoisted_1","_hoisted_2","_hoisted_4","_hoisted_5","_hoisted_7","_hoisted_8","_openBlock","_Fragment","_createVNode","_withCtx","_createElementVNode","_hoisted_3","_normalizeClass","_toDisplayString","_hoisted_6","_hoisted_9","_createElementBlock","_createBlock","_createCommentVNode","Listbox","TabView","TabPanel","Toast","mainStore","Dialog","RadioButton","_renderList","FabButton","descriptor","_withModifiers"],"mappings":"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"}