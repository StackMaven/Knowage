{"version":3,"file":"auto.esm-0afac146.js","sources":["../../../../../node_modules/chart.js/dist/chunks/helpers.segment.js","../../../../../node_modules/chart.js/dist/chart.esm.js","../../../../../node_modules/chart.js/auto/auto.esm.js"],"sourcesContent":["/*!\n * Chart.js v3.3.2\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\nconst requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\nfunction throttled(fn, thisArg, updateFn) {\n  const updateArgs = updateFn || ((args) => Array.prototype.slice.call(args));\n  let ticking = false;\n  let args = [];\n  return function(...rest) {\n    args = updateArgs(rest);\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n}\nfunction debounce(fn, delay) {\n  let timeout;\n  return function() {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay);\n    } else {\n      fn();\n    }\n    return delay;\n  };\n}\nconst _toLeftRightCenter = (align) => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\nconst _alignStartEnd = (align, start, end) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\nconst _textX = (align, left, right) => align === 'right' ? right : align === 'center' ? (left + right) / 2 : left;\n\nfunction noop() {}\nconst uid = (function() {\n  let id = 0;\n  return function() {\n    return id++;\n  };\n}());\nfunction isNullOrUndef(value) {\n  return value === null || typeof value === 'undefined';\n}\nfunction isArray(value) {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\nfunction isObject(value) {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\nconst isNumberFinite = (value) => (typeof value === 'number' || value instanceof Number) && isFinite(+value);\nfunction finiteOrDefault(value, defaultValue) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\nfunction valueOrDefault(value, defaultValue) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : value / dimension;\nconst toDimension = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\nfunction callback(fn, args, thisArg) {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n  let i, len, keys;\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\nfunction _elementsEqual(a0, a1) {\n  let i, ilen, v0, v1;\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction clone$1(source) {\n  if (isArray(source)) {\n    return source.map(clone$1);\n  }\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone$1(source[keys[k]]);\n    }\n    return target;\n  }\n  return source;\n}\nfunction isValidKey(key) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\nfunction _merger(key, target, source, options) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone$1(sval);\n  }\n}\nfunction merge(target, source, options) {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n  if (!isObject(target)) {\n    return target;\n  }\n  options = options || {};\n  const merger = options.merger || _merger;\n  for (let i = 0; i < ilen; ++i) {\n    source = sources[i];\n    if (!isObject(source)) {\n      continue;\n    }\n    const keys = Object.keys(source);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, source, options);\n    }\n  }\n  return target;\n}\nfunction mergeIf(target, source) {\n  return merge(target, source, {merger: _mergerIf});\n}\nfunction _mergerIf(key, target, source) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone$1(sval);\n  }\n}\nfunction _deprecated(scope, value, previous, current) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n\t\t\t'\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\nconst emptyString = '';\nconst dot = '.';\nfunction indexOfDotOrLength(key, start) {\n  const idx = key.indexOf(dot, start);\n  return idx === -1 ? key.length : idx;\n}\nfunction resolveObjectKey(obj, key) {\n  if (key === emptyString) {\n    return obj;\n  }\n  let pos = 0;\n  let idx = indexOfDotOrLength(key, pos);\n  while (obj && idx > pos) {\n    obj = obj[key.substr(pos, idx - pos)];\n    pos = idx + 1;\n    idx = indexOfDotOrLength(key, pos);\n  }\n  return obj;\n}\nfunction _capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value) => typeof value !== 'undefined';\nconst isFunction = (value) => typeof value === 'function';\nconst setsEqual = (a, b) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n  return true;\n};\n\nconst PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction niceNum(range) {\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\nfunction _factorize(value) {\n  const result = [];\n  const sqrt = Math.sqrt(value);\n  let i;\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) {\n    result.push(sqrt);\n  }\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\nfunction isNumber(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostEquals(x, y, epsilon) {\n  return Math.abs(x - y) < epsilon;\n}\nfunction almostWhole(x, epsilon) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\nfunction _setMinAndMaxByKey(array, target, property) {\n  let i, ilen, value;\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\nfunction toRadians(degrees) {\n  return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n  return radians * (180 / PI);\n}\nfunction _decimalPlaces(x) {\n  if (!isNumberFinite(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n  if (angle < (-0.5 * PI)) {\n    angle += TAU;\n  }\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\nfunction _angleDiff(a, b) {\n  return (a - b + PITAU) % TAU - PI;\n}\nfunction _normalizeAngle(a) {\n  return (a % TAU + TAU) % TAU;\n}\nfunction _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\nfunction _limitValue(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\nfunction _int16Range(value) {\n  return _limitValue(value, -32768, 32767);\n}\n\nconst atEdge = (t) => t === 0 || t === 1;\nconst elasticIn = (t, s, p) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\nconst effects = {\n  linear: t => t,\n  easeInQuad: t => t * t,\n  easeOutQuad: t => -t * (t - 2),\n  easeInOutQuad: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n  easeInCubic: t => t * t * t,\n  easeOutCubic: t => (t -= 1) * t * t + 1,\n  easeInOutCubic: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n  easeInQuart: t => t * t * t * t,\n  easeOutQuart: t => -((t -= 1) * t * t * t - 1),\n  easeInOutQuart: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n  easeInQuint: t => t * t * t * t * t,\n  easeOutQuint: t => (t -= 1) * t * t * t * t + 1,\n  easeInOutQuint: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n  easeInSine: t => -Math.cos(t * HALF_PI) + 1,\n  easeOutSine: t => Math.sin(t * HALF_PI),\n  easeInOutSine: t => -0.5 * (Math.cos(PI * t) - 1),\n  easeInExpo: t => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n  easeOutExpo: t => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n  easeInOutExpo: t => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n  easeInCirc: t => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n  easeOutCirc: t => Math.sqrt(1 - (t -= 1) * t),\n  easeInOutCirc: t => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n  easeInElastic: t => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n  easeOutElastic: t => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n  easeInOutElastic(t) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n  easeInBack(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n  easeOutBack(t) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n  easeInOutBack(t) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n  easeInBounce: t => 1 - effects.easeOutBounce(1 - t),\n  easeOutBounce(t) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n  easeInOutBounce: t => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n};\n\n/*!\n * @kurkle/color v0.1.9\n * https://github.com/kurkle/color#readme\n * (c) 2020 Jukka Kurkela\n * Released under the MIT License\n */\nconst map = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = '0123456789ABCDEF';\nconst h1 = (b) => hex[b & 0xF];\nconst h2 = (b) => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = (b) => (((b & 0xF0) >> 4) === (b & 0xF));\nfunction isShort(v) {\n\treturn eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\n}\nfunction hexParse(str) {\n\tvar len = str.length;\n\tvar ret;\n\tif (str[0] === '#') {\n\t\tif (len === 4 || len === 5) {\n\t\t\tret = {\n\t\t\t\tr: 255 & map[str[1]] * 17,\n\t\t\t\tg: 255 & map[str[2]] * 17,\n\t\t\t\tb: 255 & map[str[3]] * 17,\n\t\t\t\ta: len === 5 ? map[str[4]] * 17 : 255\n\t\t\t};\n\t\t} else if (len === 7 || len === 9) {\n\t\t\tret = {\n\t\t\t\tr: map[str[1]] << 4 | map[str[2]],\n\t\t\t\tg: map[str[3]] << 4 | map[str[4]],\n\t\t\t\tb: map[str[5]] << 4 | map[str[6]],\n\t\t\t\ta: len === 9 ? (map[str[7]] << 4 | map[str[8]]) : 255\n\t\t\t};\n\t\t}\n\t}\n\treturn ret;\n}\nfunction hexString(v) {\n\tvar f = isShort(v) ? h1 : h2;\n\treturn v\n\t\t? '#' + f(v.r) + f(v.g) + f(v.b) + (v.a < 255 ? f(v.a) : '')\n\t\t: v;\n}\nfunction round(v) {\n\treturn v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n\treturn lim(round(v * 2.55), 0, 255);\n}\nfunction n2b(v) {\n\treturn lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n\treturn lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n\treturn lim(round(v * 100), 0, 100);\n}\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n\tconst m = RGB_RE.exec(str);\n\tlet a = 255;\n\tlet r, g, b;\n\tif (!m) {\n\t\treturn;\n\t}\n\tif (m[7] !== r) {\n\t\tconst v = +m[7];\n\t\ta = 255 & (m[8] ? p2b(v) : v * 255);\n\t}\n\tr = +m[1];\n\tg = +m[3];\n\tb = +m[5];\n\tr = 255 & (m[2] ? p2b(r) : r);\n\tg = 255 & (m[4] ? p2b(g) : g);\n\tb = 255 & (m[6] ? p2b(b) : b);\n\treturn {\n\t\tr: r,\n\t\tg: g,\n\t\tb: b,\n\t\ta: a\n\t};\n}\nfunction rgbString(v) {\n\treturn v && (\n\t\tv.a < 255\n\t\t\t? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n\t\t\t: `rgb(${v.r}, ${v.g}, ${v.b})`\n\t);\n}\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n\tconst a = s * Math.min(l, 1 - l);\n\tconst f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n\treturn [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n\tconst f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n\treturn [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n\tconst rgb = hsl2rgbn(h, 1, 0.5);\n\tlet i;\n\tif (w + b > 1) {\n\t\ti = 1 / (w + b);\n\t\tw *= i;\n\t\tb *= i;\n\t}\n\tfor (i = 0; i < 3; i++) {\n\t\trgb[i] *= 1 - w - b;\n\t\trgb[i] += w;\n\t}\n\treturn rgb;\n}\nfunction rgb2hsl(v) {\n\tconst range = 255;\n\tconst r = v.r / range;\n\tconst g = v.g / range;\n\tconst b = v.b / range;\n\tconst max = Math.max(r, g, b);\n\tconst min = Math.min(r, g, b);\n\tconst l = (max + min) / 2;\n\tlet h, s, d;\n\tif (max !== min) {\n\t\td = max - min;\n\t\ts = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n\t\th = max === r\n\t\t\t? ((g - b) / d) + (g < b ? 6 : 0)\n\t\t\t: max === g\n\t\t\t\t? (b - r) / d + 2\n\t\t\t\t: (r - g) / d + 4;\n\t\th = h * 60 + 0.5;\n\t}\n\treturn [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n\treturn (\n\t\tArray.isArray(a)\n\t\t\t? f(a[0], a[1], a[2])\n\t\t\t: f(a, b, c)\n\t).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n\treturn calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n\treturn calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n\treturn calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n\treturn (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n\tconst m = HUE_RE.exec(str);\n\tlet a = 255;\n\tlet v;\n\tif (!m) {\n\t\treturn;\n\t}\n\tif (m[5] !== v) {\n\t\ta = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n\t}\n\tconst h = hue(+m[2]);\n\tconst p1 = +m[3] / 100;\n\tconst p2 = +m[4] / 100;\n\tif (m[1] === 'hwb') {\n\t\tv = hwb2rgb(h, p1, p2);\n\t} else if (m[1] === 'hsv') {\n\t\tv = hsv2rgb(h, p1, p2);\n\t} else {\n\t\tv = hsl2rgb(h, p1, p2);\n\t}\n\treturn {\n\t\tr: v[0],\n\t\tg: v[1],\n\t\tb: v[2],\n\t\ta: a\n\t};\n}\nfunction rotate(v, deg) {\n\tvar h = rgb2hsl(v);\n\th[0] = hue(h[0] + deg);\n\th = hsl2rgb(h);\n\tv.r = h[0];\n\tv.g = h[1];\n\tv.b = h[2];\n}\nfunction hslString(v) {\n\tif (!v) {\n\t\treturn;\n\t}\n\tconst a = rgb2hsl(v);\n\tconst h = a[0];\n\tconst s = n2p(a[1]);\n\tconst l = n2p(a[2]);\n\treturn v.a < 255\n\t\t? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n\t\t: `hsl(${h}, ${s}%, ${l}%)`;\n}\nconst map$1 = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n\tconst unpacked = {};\n\tconst keys = Object.keys(names);\n\tconst tkeys = Object.keys(map$1);\n\tlet i, j, k, ok, nk;\n\tfor (i = 0; i < keys.length; i++) {\n\t\tok = nk = keys[i];\n\t\tfor (j = 0; j < tkeys.length; j++) {\n\t\t\tk = tkeys[j];\n\t\t\tnk = nk.replace(k, map$1[k]);\n\t\t}\n\t\tk = parseInt(names[ok], 16);\n\t\tunpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n\t}\n\treturn unpacked;\n}\nlet names$1;\nfunction nameParse(str) {\n\tif (!names$1) {\n\t\tnames$1 = unpack();\n\t\tnames$1.transparent = [0, 0, 0, 0];\n\t}\n\tconst a = names$1[str.toLowerCase()];\n\treturn a && {\n\t\tr: a[0],\n\t\tg: a[1],\n\t\tb: a[2],\n\t\ta: a.length === 4 ? a[3] : 255\n\t};\n}\nfunction modHSL(v, i, ratio) {\n\tif (v) {\n\t\tlet tmp = rgb2hsl(v);\n\t\ttmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n\t\ttmp = hsl2rgb(tmp);\n\t\tv.r = tmp[0];\n\t\tv.g = tmp[1];\n\t\tv.b = tmp[2];\n\t}\n}\nfunction clone(v, proto) {\n\treturn v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n\tvar v = {r: 0, g: 0, b: 0, a: 255};\n\tif (Array.isArray(input)) {\n\t\tif (input.length >= 3) {\n\t\t\tv = {r: input[0], g: input[1], b: input[2], a: 255};\n\t\t\tif (input.length > 3) {\n\t\t\t\tv.a = n2b(input[3]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\tv = clone(input, {r: 0, g: 0, b: 0, a: 1});\n\t\tv.a = n2b(v.a);\n\t}\n\treturn v;\n}\nfunction functionParse(str) {\n\tif (str.charAt(0) === 'r') {\n\t\treturn rgbParse(str);\n\t}\n\treturn hueParse(str);\n}\nclass Color {\n\tconstructor(input) {\n\t\tif (input instanceof Color) {\n\t\t\treturn input;\n\t\t}\n\t\tconst type = typeof input;\n\t\tlet v;\n\t\tif (type === 'object') {\n\t\t\tv = fromObject(input);\n\t\t} else if (type === 'string') {\n\t\t\tv = hexParse(input) || nameParse(input) || functionParse(input);\n\t\t}\n\t\tthis._rgb = v;\n\t\tthis._valid = !!v;\n\t}\n\tget valid() {\n\t\treturn this._valid;\n\t}\n\tget rgb() {\n\t\tvar v = clone(this._rgb);\n\t\tif (v) {\n\t\t\tv.a = b2n(v.a);\n\t\t}\n\t\treturn v;\n\t}\n\tset rgb(obj) {\n\t\tthis._rgb = fromObject(obj);\n\t}\n\trgbString() {\n\t\treturn this._valid ? rgbString(this._rgb) : this._rgb;\n\t}\n\thexString() {\n\t\treturn this._valid ? hexString(this._rgb) : this._rgb;\n\t}\n\thslString() {\n\t\treturn this._valid ? hslString(this._rgb) : this._rgb;\n\t}\n\tmix(color, weight) {\n\t\tconst me = this;\n\t\tif (color) {\n\t\t\tconst c1 = me.rgb;\n\t\t\tconst c2 = color.rgb;\n\t\t\tlet w2;\n\t\t\tconst p = weight === w2 ? 0.5 : weight;\n\t\t\tconst w = 2 * p - 1;\n\t\t\tconst a = c1.a - c2.a;\n\t\t\tconst w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\t\tw2 = 1 - w1;\n\t\t\tc1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n\t\t\tc1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n\t\t\tc1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n\t\t\tc1.a = p * c1.a + (1 - p) * c2.a;\n\t\t\tme.rgb = c1;\n\t\t}\n\t\treturn me;\n\t}\n\tclone() {\n\t\treturn new Color(this.rgb);\n\t}\n\talpha(a) {\n\t\tthis._rgb.a = n2b(a);\n\t\treturn this;\n\t}\n\tclearer(ratio) {\n\t\tconst rgb = this._rgb;\n\t\trgb.a *= 1 - ratio;\n\t\treturn this;\n\t}\n\tgreyscale() {\n\t\tconst rgb = this._rgb;\n\t\tconst val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n\t\trgb.r = rgb.g = rgb.b = val;\n\t\treturn this;\n\t}\n\topaquer(ratio) {\n\t\tconst rgb = this._rgb;\n\t\trgb.a *= 1 + ratio;\n\t\treturn this;\n\t}\n\tnegate() {\n\t\tconst v = this._rgb;\n\t\tv.r = 255 - v.r;\n\t\tv.g = 255 - v.g;\n\t\tv.b = 255 - v.b;\n\t\treturn this;\n\t}\n\tlighten(ratio) {\n\t\tmodHSL(this._rgb, 2, ratio);\n\t\treturn this;\n\t}\n\tdarken(ratio) {\n\t\tmodHSL(this._rgb, 2, -ratio);\n\t\treturn this;\n\t}\n\tsaturate(ratio) {\n\t\tmodHSL(this._rgb, 1, ratio);\n\t\treturn this;\n\t}\n\tdesaturate(ratio) {\n\t\tmodHSL(this._rgb, 1, -ratio);\n\t\treturn this;\n\t}\n\trotate(deg) {\n\t\trotate(this._rgb, deg);\n\t\treturn this;\n\t}\n}\nfunction index_esm(input) {\n\treturn new Color(input);\n}\n\nconst isPatternOrGradient = (value) => value instanceof CanvasGradient || value instanceof CanvasPattern;\nfunction color(value) {\n  return isPatternOrGradient(value) ? value : index_esm(value);\n}\nfunction getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : index_esm(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\nfunction getScope$1(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope$1(root, scope), values);\n  }\n  return merge(getScope$1(root, ''), scope);\n}\nclass Defaults {\n  constructor(_descriptors) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.describe(_descriptors);\n  }\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n  get(scope) {\n    return getScope$1(this, scope);\n  }\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope$1(this, scope);\n    const targetScopeObject = getScope$1(this, targetScope);\n    const privateName = '_' + name;\n    Object.defineProperties(scopeObject, {\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n}\nvar defaults = new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n});\n\nfunction toFontString(font) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\nfunction _measureText(ctx, data, gc, longest, string) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n  ctx.save();\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i, j, jlen, thing, nestedThing;\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n  ctx.restore();\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\nfunction _alignPixel(chart, pixel, width) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\nfunction clearCanvas(canvas, ctx) {\n  ctx = ctx || canvas.getContext('2d');\n  ctx.save();\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n  let type, xOffset, yOffset, size, cornerRadius;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n  ctx.beginPath();\n  switch (style) {\n  default:\n    ctx.arc(x, y, radius, 0, TAU);\n    ctx.closePath();\n    break;\n  case 'triangle':\n    ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      ctx.rect(x - size, y - size, 2 * size, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n  case 'rectRot':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n  case 'cross':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'star':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    rad += QUARTER_PI;\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'line':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n    break;\n  }\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\nfunction _isPointInArea(point, area, margin) {\n  margin = margin || 0.5;\n  return point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\nfunction unclipArea(ctx) {\n  ctx.restore();\n}\nfunction _steppedLineTo(ctx, previous, target, flip, mode) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\nfunction _bezierCurveTo(ctx, previous, target, flip) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\nfunction renderText(ctx, text, x, y, font, opts = {}) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i, line;\n  ctx.save();\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n  ctx.font = font.string;\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n    ctx.fillText(line, x, y, opts.maxWidth);\n    if (opts.strikethrough || opts.underline) {\n      const metrics = ctx.measureText(line);\n      const left = x - metrics.actualBoundingBoxLeft;\n      const right = x + metrics.actualBoundingBoxRight;\n      const top = y - metrics.actualBoundingBoxAscent;\n      const bottom = y + metrics.actualBoundingBoxDescent;\n      const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n      ctx.strokeStyle = ctx.fillStyle;\n      ctx.beginPath();\n      ctx.lineWidth = opts.decorationWidth || 2;\n      ctx.moveTo(left, yDecoration);\n      ctx.lineTo(right, yDecoration);\n      ctx.stroke();\n    }\n    y += font.lineHeight;\n  }\n  ctx.restore();\n}\nfunction addRoundedRectPath(ctx, rect) {\n  const {x, y, w, h, radius} = rect;\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n  ctx.lineTo(x + w, y + radius.topRight);\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n  ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = new RegExp(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\nconst FONT_STYLE = new RegExp(/^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/);\nfunction toLineHeight(value, size) {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n  value = +matches[2];\n  switch (matches[3]) {\n  case 'px':\n    return value;\n  case '%':\n    value /= 100;\n    break;\n  }\n  return size * value;\n}\nconst numberOrZero = v => +v || 0;\nfunction _readValueToProps(value, props) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\nfunction toTRBL(value) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\nfunction toTRBLCorners(value) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\nfunction toPadding(value) {\n  const obj = toTRBL(value);\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n  return obj;\n}\nfunction toFont(options, fallback) {\n  options = options || {};\n  fallback = fallback || defaults.font;\n  let size = valueOrDefault(options.size, fallback.size);\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = '';\n  }\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n  font.string = toFontString(font);\n  return font;\n}\nfunction resolve(inputs, context, index, info) {\n  let cacheable = true;\n  let i, ilen, value;\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\nfunction _addGrace(minmax, grace) {\n  const {min, max} = minmax;\n  return {\n    min: min - Math.abs(toDimension(grace, min)),\n    max: max + toDimension(grace, max)\n  };\n}\n\nfunction _lookup(table, value, cmp) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid;\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n  return {lo, hi};\n}\nconst _lookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] < value);\nconst _rlookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] >= value);\nfunction _filterBetween(values, min, max) {\n  let start = 0;\n  let end = values.length;\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\nfunction listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n        return res;\n      }\n    });\n  });\n}\nfunction unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n  if (listeners.length > 0) {\n    return;\n  }\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n  delete array._chartjs;\n}\nfunction _arrayUnique(items) {\n  const set = new Set();\n  let i, ilen;\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    set.add(items[i]);\n  }\n  if (set.size === ilen) {\n    return items;\n  }\n  const result = [];\n  set.forEach(item => {\n    result.push(item);\n  });\n  return result;\n}\n\nfunction _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\n  if (!defined(fallback)) {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: rootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope) => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete target._keys;\n      delete scopes[0][prop];\n      return true;\n    },\n    get(target, prop) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n    has(target, prop) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n    set(target, prop, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      storage[prop] = value;\n      delete target[prop];\n      delete target._keys;\n      return true;\n    }\n  });\n}\nfunction _attachContext(proxy, context, subProxy, descriptorDefaults) {\n  const cache = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete proxy[prop];\n      return true;\n    },\n    get(target, prop, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n    set(target, prop, value) {\n      proxy[prop] = value;\n      delete target[prop];\n      return true;\n    }\n  });\n}\nfunction _descriptors(proxy, defaults = {scriptable: true, indexable: true}) {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\nconst readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters';\nfunction _cached(target, prop, resolve) {\n  let value = target[prop];\n  if (defined(value)) {\n    return value;\n  }\n  value = resolve();\n  if (defined(value)) {\n    target[prop] = value;\n  }\n  return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop];\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\nfunction _resolveScriptable(prop, value, target, receiver) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + [..._stack].join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  value = value(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (isObject(value)) {\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  if (defined(_context.index) && isIndexable(prop)) {\n    value = value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, scope);\n      if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n        return fallback;\n      }\n    } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n      return null;\n    }\n  }\n  return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop);\n  if (key === null) {\n    return false;\n  }\n  if (defined(fallback) && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver([...set], [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback);\n  }\n  return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    return value;\n  }\n  return target;\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n  let value;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (defined(value)) {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\nfunction _resolve(key, scopes) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (defined(value)) {\n      return value;\n    }\n  }\n}\nfunction getKeysFromAllScopes(target) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n  const set = new Set();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return [...set];\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i) => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis) => indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n  const fa = t * s01;\n  const fb = t * s12;\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\nfunction monotoneAdjust(points, deltaK, mK) {\n  const pointsLen = points.length;\n  let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\nfunction splineCurveMonotone(points, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK = Array(pointsLen).fill(0);\n  const mK = Array(pointsLen);\n  let i, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n      : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n      : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n  monotoneAdjust(points, deltaK, mK);\n  monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n  return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\nfunction _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n  let i, ilen, point, controlPoints;\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n\nfunction _getParentNode(domNode) {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = parent.host;\n  }\n  return parent;\n}\nfunction parseMaxStyle(styleValue, node, parentProperty) {\n  let valueInPixels;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n    if (styleValue.indexOf('%') !== -1) {\n      valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n  return valueInPixels;\n}\nconst getComputedStyle = (element) => window.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n  return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles, style, suffix) {\n  const result = {};\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\nconst useOffsetPos = (x, y, target) => (x > 0 || y > 0) && (!target || !target.shadowRoot);\nfunction getCanvasPosition(evt, canvas) {\n  const e = evt.native || evt;\n  const touches = e.touches;\n  const source = touches && touches.length ? touches[0] : e;\n  const {offsetX, offsetY} = source;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\nfunction getRelativePosition(evt, chart) {\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(evt, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\nfunction getContainerSize(canvas, width, height) {\n  let maxWidth, maxHeight;\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect();\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\nconst round1 = v => Math.round(v * 10) / 10;\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    height = round1(width / 2);\n  }\n  return {\n    width,\n    height\n  };\n}\nfunction retinaScale(chart, forceRatio, forceStyle) {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n  chart.height = deviceHeight / pixelRatio;\n  chart.width = deviceWidth / pixelRatio;\n  const canvas = chart.canvas;\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\nconst supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() {\n        passiveSupported = true;\n        return false;\n      }\n    };\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n  }\n  return passiveSupported;\n}());\nfunction readUsedSize(element, property) {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n\nfunction _pointInLine(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\nfunction _steppedInterpolation(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n    : mode === 'after' ? t < 1 ? p1.y : p2.y\n    : t > 0 ? p2.y : p1.y\n  };\n}\nfunction _bezierInterpolation(p1, p2, t, mode) {\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\nfunction formatNumber(num, locale, options) {\n  return getNumberFormat(locale, options).format(num);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\nconst getLeftToRightAdapter = function() {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) {\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) {\n      return x;\n    },\n  };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n  let style, original;\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n    style.setProperty('direction', direction, 'important');\n    ctx.prevTextDirection = original;\n  }\n}\nfunction restoreTextDirection(ctx, original) {\n  if (original !== undefined) {\n    delete ctx.prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: (n, s, e) => n >= Math.min(s, e) && n <= Math.max(e, s),\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  let {start, end, loop} = segment;\n  let i, ilen;\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\nfunction _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n    if (point.skip) {\n      continue;\n    }\n    value = normalize(point[property]);\n    if (value === prevValue) {\n      continue;\n    }\n    inside = between(value, startBound, endBound);\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n  return result;\n}\nfunction _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n  if (loop && !spanGaps) {\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n  while (start < count && points[start].skip) {\n    start++;\n  }\n  start %= count;\n  if (loop) {\n    end += start;\n  }\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n  end %= count;\n  return {start, end};\n}\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n  return result;\n}\nfunction _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n  if (!count) {\n    return [];\n  }\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n  if (spanGaps === true) {\n    return splitByStyles([{start, end, loop}], points, segmentOptions);\n  }\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\nfunction splitByStyles(segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(segments, points, segmentOptions);\n}\nfunction doSplitByStyles(segments, points, segmentOptions) {\n  const count = points.length;\n  const result = [];\n  let start = segments[0].start;\n  let i = start;\n  for (const segment of segments) {\n    let prevStyle, style;\n    let prev = points[start % count];\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext({type: 'segment', p0: prev, p1: pt}));\n      if (styleChanged(style, prevStyle)) {\n        result.push({start: start, end: i - 1, loop: segment.loop, style: prevStyle});\n        prevStyle = style;\n        start = i - 1;\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      result.push({start, end: i - 1, loop: segment.loop, style});\n      start = i - 1;\n    }\n  }\n  return result;\n}\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\nfunction styleChanged(style, prevStyle) {\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n\nexport { merge as $, _isPointInArea as A, _rlookupByKey as B, toPadding as C, each as D, getMaximumSize as E, _getParentNode as F, readUsedSize as G, HALF_PI as H, throttled as I, supportsEventListenerOptions as J, log10 as K, _factorize as L, finiteOrDefault as M, callback as N, _addGrace as O, PI as P, toDegrees as Q, _measureText as R, _int16Range as S, TAU as T, _alignPixel as U, renderText as V, toFont as W, _toLeftRightCenter as X, _alignStartEnd as Y, overrides as Z, _arrayUnique as _, resolve as a, _capitalize as a0, descriptors as a1, isFunction as a2, _attachContext as a3, _createResolver as a4, _descriptors as a5, mergeIf as a6, uid as a7, debounce as a8, retinaScale as a9, niceNum as aA, almostWhole as aB, almostEquals as aC, _decimalPlaces as aD, _longestText as aE, _filterBetween as aF, _lookup as aG, getHoverColor as aH, clone$1 as aI, _merger as aJ, _mergerIf as aK, _deprecated as aL, toFontString as aM, splineCurve as aN, splineCurveMonotone as aO, getStyle as aP, fontString as aQ, toLineHeight as aR, PITAU as aS, INFINITY as aT, RAD_PER_DEG as aU, QUARTER_PI as aV, TWO_THIRDS_PI as aW, _angleDiff as aX, clearCanvas as aa, setsEqual as ab, _elementsEqual as ac, getAngleFromPoint as ad, _readValueToProps as ae, _updateBezierControlPoints as af, _computeSegments as ag, _boundSegments as ah, _steppedInterpolation as ai, _bezierInterpolation as aj, _pointInLine as ak, _steppedLineTo as al, _bezierCurveTo as am, drawPoint as an, addRoundedRectPath as ao, toTRBL as ap, toTRBLCorners as aq, _boundSegment as ar, _normalizeAngle as as, getRtlAdapter as at, overrideTextDirection as au, _textX as av, restoreTextDirection as aw, noop as ax, distanceBetweenPoints as ay, _setMinAndMaxByKey as az, isArray as b, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, isNullOrUndef as j, clipArea as k, listenArrayEvents as l, unclipArea as m, toPercentage as n, toDimension as o, formatNumber as p, _angleBetween as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, isNumber as w, _limitValue as x, _lookupByKey as y, getRelativePosition as z };\n","/*!\n * Chart.js v3.3.2\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, b as isArray, d as defaults, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as isNullOrUndef, k as clipArea, m as unclipArea, _ as _arrayUnique, t as toRadians, n as toPercentage, o as toDimension, T as TAU, p as formatNumber, q as _angleBetween, H as HALF_PI, P as PI, w as isNumber, x as _limitValue, y as _lookupByKey, z as getRelativePosition$1, A as _isPointInArea, B as _rlookupByKey, C as toPadding, D as each, E as getMaximumSize, F as _getParentNode, G as readUsedSize, I as throttled, J as supportsEventListenerOptions, K as log10, L as _factorize, M as finiteOrDefault, N as callback, O as _addGrace, Q as toDegrees, R as _measureText, S as _int16Range, U as _alignPixel, V as renderText, W as toFont, X as _toLeftRightCenter, Y as _alignStartEnd, Z as overrides, $ as merge, a0 as _capitalize, a1 as descriptors, a2 as isFunction, a3 as _attachContext, a4 as _createResolver, a5 as _descriptors, a6 as mergeIf, a7 as uid, a8 as debounce, a9 as retinaScale, aa as clearCanvas, ab as setsEqual, ac as _elementsEqual, ad as getAngleFromPoint, ae as _readValueToProps, af as _updateBezierControlPoints, ag as _computeSegments, ah as _boundSegments, ai as _steppedInterpolation, aj as _bezierInterpolation, ak as _pointInLine, al as _steppedLineTo, am as _bezierCurveTo, an as drawPoint, ao as addRoundedRectPath, ap as toTRBL, aq as toTRBLCorners, ar as _boundSegment, as as _normalizeAngle, at as getRtlAdapter, au as overrideTextDirection, av as _textX, aw as restoreTextDirection, ax as noop, ay as distanceBetweenPoints, az as _setMinAndMaxByKey, aA as niceNum, aB as almostWhole, aC as almostEquals, aD as _decimalPlaces, aE as _longestText, aF as _filterBetween, aG as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    const me = this;\n    if (me._request) {\n      return;\n    }\n    me._running = true;\n    me._request = requestAnimFrame.call(window, () => {\n      me._update();\n      me._request = null;\n      if (me._running) {\n        me._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    const me = this;\n    let remaining = 0;\n    me._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        me._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        me._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    me._lastDate = date;\n    if (remaining === 0) {\n      me._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    const me = this;\n    if (me._active) {\n      me._notify(false);\n      const currentValue = me._target[me._prop];\n      const elapsed = date - me._start;\n      const remain = me._duration - elapsed;\n      me._start = date;\n      me._duration = Math.floor(Math.max(remain, cfg.duration));\n      me._total += elapsed;\n      me._loop = !!cfg.loop;\n      me._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      me._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    const me = this;\n    if (me._active) {\n      me.tick(Date.now());\n      me._active = false;\n      me._notify(false);\n    }\n  }\n  tick(date) {\n    const me = this;\n    const elapsed = date - me._start;\n    const duration = me._duration;\n    const prop = me._prop;\n    const from = me._from;\n    const loop = me._loop;\n    const to = me._to;\n    let factor;\n    me._active = from !== to && (loop || (elapsed < duration));\n    if (!me._active) {\n      me._target[prop] = to;\n      me._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      me._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = me._easing(Math.min(1, Math.max(0, factor)));\n    me._target[prop] = me._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive) {\n  for (const meta of vScale.getMatchingVisibleMetas('bar').reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true);\n    stack._bottom = getLastIndexInStack(stack, vScale, false);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return Object.assign(Object.create(parent),\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return Object.assign(Object.create(parent), {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][meta.index] === undefined) {\n      return;\n    }\n    delete stacks[axis][meta.index];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    me.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const me = this;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = me.getScaleForId(xid);\n    meta.yScale = me.getScaleForId(yid);\n    meta.rScale = me.getScaleForId(rid);\n    meta.iScale = me.getScaleForId(iid);\n    meta.vScale = me.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const me = this;\n    const dataset = me.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = me._data;\n    if (isObject(data)) {\n      me._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, me);\n        const meta = me._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, me);\n      }\n      me._syncList = [];\n      me._data = data;\n    }\n  }\n  addElements() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me._dataCheck();\n    if (me.datasetElementType) {\n      meta.dataset = new me.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    let stackChanged = false;\n    me._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    me._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(me, meta._parsed);\n    }\n  }\n  configure() {\n    const me = this;\n    const config = me.chart.config;\n    const scopeKeys = config.datasetScopeKeys(me._type);\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys, true);\n    me.options = config.createResolver(scopes, me.getContext());\n    me._parsing = me.options.parsing;\n  }\n  parse(start, count) {\n    const me = this;\n    const {_cachedMeta: meta, _data: data} = me;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (me._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = me.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = me.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = me.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(me, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      range.min = Math.min(range.min, value);\n      range.max = Math.max(range.max, value);\n      value = applyStack(stack, parsedValue, this._cachedMeta.index, {all: true});\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = me._getOtherScale(scale);\n    const stack = canStack && meta._stacked && {keys: getSortedDatasetIndices(me.chart, true), values: null};\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, value, parsed, otherValue;\n    function _skip() {\n      parsed = _parsed[i];\n      value = parsed[scale.axis];\n      otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(value) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      me.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        me.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me._cachedDataOpts = {};\n    me.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(me.options.clip, defaultClip(meta.xScale, meta.yScale, me.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const me = this;\n    const ctx = me._ctx;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = me._drawStart || 0;\n    const count = me._drawCount || (elements.length - start);\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.active) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    let context;\n    if (index >= 0 && index < me._cachedMeta.data.length) {\n      const element = me._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(me.getContext(), index, element));\n      context.parsed = me.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = me.$context ||\n        (me.$context = createDatasetContext(me.chart.getContext(), me.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = me.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const me = this;\n    const active = mode === 'active';\n    const cache = me._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = me.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = me.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(me._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => me.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const me = this;\n    const chart = me.chart;\n    const cache = me._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = me.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(me._type, transition);\n      const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, me.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const me = this;\n    const data = me._data;\n    const elements = me._cachedMeta.data;\n    for (const [method, arg1, arg2] of me._syncList) {\n      me[method](arg1, arg2);\n    }\n    me._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      me.parse(0, count);\n    }\n    if (numData > numMeta) {\n      me._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      me._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new me.dataElementType();\n    }\n    if (me._parsing) {\n      move(meta._parsed);\n    }\n    me.parse(start, count);\n    if (resetNewElements) {\n      me.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const me = this;\n    const meta = me._cachedMeta;\n    if (me._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._syncList.push(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._syncList.push(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._syncList.push(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    this._syncList.push(['_removeElements', start, count]);\n    this._syncList.push(['_insertElements', start, arguments.length - 2]);\n  }\n  _onDataUnshift() {\n    this._syncList.push(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale) {\n  if (!scale._cache.$bar) {\n    const metas = scale.getMatchingVisibleMetas('bar');\n    let values = [];\n    for (let i = 0, ilen = metas.length; i < ilen; i++) {\n      values = values.concat(metas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(scale) {\n  const values = getAllScaleValues(scale);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    const me = this;\n    me.enableOptionSharing = true;\n    super.initialize();\n    const meta = me._cachedMeta;\n    meta.stack = me.getDataset().stack;\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const vScale = me._cachedMeta.vScale;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = me._getRuler();\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const parsed = me.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : me._calculateBarValuePixels(i);\n      const ipixels = me._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (me.index === stack._top || me.index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : undefined,\n        width: horizontal ? undefined : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n      }\n      me.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(me._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[\n          item.controller._cachedMeta.vScale.axis\n        ];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 ||\n\t\t\t\t(stacked === undefined && item.stack === undefined)) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(me.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(iScale);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: me._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const me = this;\n    const {vScale, _stacked} = me._cachedMeta;\n    const {base: baseValue, minBarLength} = me.options;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? me.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n      size = size < 0 ? -minBarLength : minBarLength;\n      if (value === 0) {\n        base -= size / 2;\n      }\n      head = base + size;\n    }\n    const actualBase = baseValue || 0;\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = vScale.getLineWidthForValue(actualBase) / 2;\n      if (size > 0) {\n        base += halfGrid;\n        size -= halfGrid;\n      } else if (size < 0) {\n        base -= halfGrid;\n        size += halfGrid;\n      }\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const me = this;\n    const scale = ruler.scale;\n    const options = me.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? me._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = me._getStackIndex(me.index, me._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(me.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const me = this;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    clipArea(chart.ctx, chart.chartArea);\n    for (; i < ilen; ++i) {\n      if (me.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(me._ctx);\n      }\n    }\n    unclipArea(chart.ctx);\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  interaction: {\n    mode: 'index'\n  },\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = [];\n    let i, ilen, item;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      item = data[i];\n      parsed.push({\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), i),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), i),\n        _custom: item && item.r && +item.r\n      });\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const {data, _parsed} = this._cachedMeta;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size() / 2, _parsed[i]._custom);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = me.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const me = this;\n    const points = me._cachedMeta.data;\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {iScale, vScale} = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && me.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = me.resolveDataElementOptions(i, mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      me.updateElement(point, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    let i, ilen;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      meta._parsed[i] = +data[i];\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    const me = this;\n    for (let i = 0; i < me.chart.data.datasets.length; ++i) {\n      if (me.chart.isDatasetVisible(i)) {\n        const controller = me.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const me = this;\n    const chart = me.chart;\n    const {chartArea} = chart;\n    const meta = me._cachedMeta;\n    const arcs = meta.data;\n    const spacing = me.getMaxBorderWidth() + me.getMaxOffset(arcs);\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(me.options.cutout, maxSize), 1);\n    const chartWeight = me._getRingWeight(me.index);\n    const {circumference, rotation} = me._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(me.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / me._getVisibleDatasetWeightTotal();\n    me.offsetX = offsetX * outerRadius;\n    me.offsetY = offsetY * outerRadius;\n    meta.total = me.calculateTotal();\n    me.outerRadius = outerRadius - radiusLength * me._getRingWeightOffset(me.index);\n    me.innerRadius = Math.max(me.outerRadius - radiusLength * chartWeight, 0);\n    me.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const circumference = me._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null) {\n      return 0;\n    }\n    return me.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : me.innerRadius;\n    const outerRadius = animateScale ? 0 : me.outerRadius;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    let startAngle = me._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += me._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = me._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + me.offsetX,\n        y: centerY + me.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n      }\n      startAngle += circumference;\n      me.updateElement(arc, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i)) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    const me = this;\n    let max = 0;\n    const chart = me.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          if (controller !== me) {\n            controller.configure();\n          }\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  indexAxis: 'r',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = me.chart._animationsDisabled;\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    me._drawStart = start;\n    me._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = me.resolveDatasetElementOptions(mode);\n    if (!me.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = me.options.segment;\n    me.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    me.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked} = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const spanGaps = me.options.spanGaps;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = me.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && me.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = me.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? me.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n      properties.parsed = parsed;\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n      }\n      if (!directUpdate) {\n        me.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(me.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(me.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _updateRadius() {\n    const me = this;\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    me.outerRadius = outerRadius - (radiusLength * me.index);\n    me.innerRadius = me.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const dataset = me.getDataset();\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = me._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / me.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += me._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + me._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: me.resolveDataElementOptions(i, mode)\n      };\n      me.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const dataset = this.getDataset();\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const me = this;\n    const vScale = me._cachedMeta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = me.resolveDatasetElementOptions(mode);\n      if (!me.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      me.updateElement(line, undefined, properties, mode);\n    }\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    const scale = me._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = me.resolveDataElementOptions(i, mode);\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      me.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass ScatterController extends LineController {\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n  return getRelativePosition$1(e, chart);\n}\nfunction evaluateAllVisibleItems(chart, handler) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  let index, data, element;\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    ({index, data} = metasets[i]);\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  const items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  let items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (intersect && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    if (!_isPointInArea(center, chart.chartArea, chart._minPadding)) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  const position = getRelativePosition(e, chart);\n  const items = [];\n  const axis = options.axis;\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition)\n        : getNearestItems(chart, position, axis, false, useFinalPosition);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition) :\n        getNearestItems(chart, position, axis, false, useFinalPosition);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n    x(chart, e, options, useFinalPosition) {\n      options.axis = 'x';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      options.axis = 'y';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos: box.position,\n      horizontal: box.isHorizontal(),\n      weight: box.weight\n    });\n  }\n  return layoutBoxes;\n}\nfunction setLayoutDims(layouts, params) {\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    if (layout.horizontal) {\n      layout.width = layout.box.fullSize && params.availableWidth;\n      layout.height = params.hBoxMaxHeight;\n    } else {\n      layout.width = params.vBoxMaxWidth;\n      layout.height = layout.box.fullSize && params.availableHeight;\n    }\n  }\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout) {\n  const box = layout.box;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(layout.pos)) {\n    if (layout.size) {\n      chartArea[layout.pos] -= layout.size;\n    }\n    layout.size = layout.horizontal ? box.height : box.width;\n    chartArea[layout.pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params) || changed;\n}\nfunction placeBoxes(boxes, chartArea, params) {\n  const userPadding = params.padding;\n  let x = chartArea.x;\n  let y = chartArea.y;\n  let i, ilen, layout, box;\n  for (i = 0, ilen = boxes.length; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    if (layout.horizontal) {\n      box.left = box.fullSize ? userPadding.left : chartArea.left;\n      box.right = box.fullSize ? params.outerWidth - userPadding.right : chartArea.left + chartArea.w;\n      box.top = y;\n      box.bottom = y + box.height;\n      box.width = box.right - box.left;\n      y = box.bottom;\n    } else {\n      box.left = x;\n      box.right = x + box.width;\n      box.top = box.fullSize ? userPadding.top : chartArea.top;\n      box.bottom = box.fullSize ? params.outerHeight - userPadding.right : chartArea.top + chartArea.h;\n      box.height = box.bottom - box.top;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params);\n    fitBoxes(verticalBoxes, chartArea, params);\n    if (fitBoxes(horizontalBoxes, chartArea, params)) {\n      fitBoxes(verticalBoxes, chartArea, params);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h);\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition$1(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  const element = container || canvas;\n  const observer = new MutationObserver(entries => {\n    const parent = _getParentNode(element);\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.addedNodes.length; i++) {\n        const added = entry.addedNodes[i];\n        if (added === element || added === parent) {\n          listener(entry.target);\n        }\n      }\n    });\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const observer = new MutationObserver(entries => {\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.removedNodes.length; i++) {\n        if (entry.removedNodes[i] === canvas) {\n          listener();\n          break;\n        }\n      }\n    });\n  });\n  observer.observe(container, {childList: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && _getParentNode(container));\n  }\n}\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const me = this;\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return me;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : me[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return Object.assign(Object.create(parent), {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return Object.assign(Object.create(parent), {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right} = scale;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    titleY = offsetFromEdge(scale, position, offset);\n    maxWidth = right - left;\n  } else {\n    titleX = offsetFromEdge(scale, position, offset);\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    const me = this;\n    me.options = options.setContext(me.getContext());\n    me.axis = options.axis;\n    me._userMin = me.parse(options.min);\n    me._userMax = me.parse(options.max);\n    me._suggestedMin = me.parse(options.suggestedMin);\n    me._suggestedMax = me.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    const me = this;\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = me.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(me, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    const me = this;\n    return {\n      left: me.paddingLeft || 0,\n      top: me.paddingTop || 0,\n      right: me.paddingRight || 0,\n      bottom: me.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    const sampleSize = tickOpts.sampleSize;\n    me.beforeUpdate();\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    me.ticks = null;\n    me._labelSizes = null;\n    me._gridLineItems = null;\n    me._labelItems = null;\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions();\n    me._maxLength = me.isHorizontal()\n      ? me.width + margins.left + margins.right\n      : me.height + margins.top + margins.bottom;\n    if (!me._dataLimitsCached) {\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits();\n      me._range = _addGrace(me, me.options.grace);\n      me._dataLimitsCached = true;\n    }\n    me.beforeBuildTicks();\n    me.ticks = me.buildTicks() || [];\n    me.afterBuildTicks();\n    const samplingEnabled = sampleSize < me.ticks.length;\n    me._convertTicksToLabels(samplingEnabled ? sample(me.ticks, sampleSize) : me.ticks);\n    me.configure();\n    me.beforeCalculateLabelRotation();\n    me.calculateLabelRotation();\n    me.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      me.ticks = autoSkip(me, me.ticks);\n      me._labelSizes = null;\n    }\n    if (samplingEnabled) {\n      me._convertTicksToLabels(me.ticks);\n    }\n    me.beforeFit();\n    me.fit();\n    me.afterFit();\n    me.afterUpdate();\n  }\n  configure() {\n    const me = this;\n    let reversePixels = me.options.reverse;\n    let startPixel, endPixel;\n    if (me.isHorizontal()) {\n      startPixel = me.left;\n      endPixel = me.right;\n    } else {\n      startPixel = me.top;\n      endPixel = me.bottom;\n      reversePixels = !reversePixels;\n    }\n    me._startPixel = startPixel;\n    me._endPixel = endPixel;\n    me._reversePixels = reversePixels;\n    me._length = endPixel - startPixel;\n    me._alignToPixels = me.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = 0;\n      me.bottom = me.height;\n    }\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    const me = this;\n    me.chart.notifyPlugins(name, me.getContext());\n    callback(me.options[name], [me]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], me);\n    }\n    for (i = 0; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const me = this;\n    const options = me.options;\n    const tickOpts = options.ticks;\n    const numTicks = me.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!me._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !me.isHorizontal()) {\n      me.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = me._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(me.chart.width - maxLabelWidth, 0, me.maxWidth);\n    tickWidth = options.offset ? me.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = me.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, me.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(Math.min((labelSizes.highest.height + 6) / tickWidth, 1)),\n        Math.asin(Math.min(maxHeight / maxLabelDiagonal, 1)) - Math.asin(maxLabelHeight / maxLabelDiagonal)\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    me.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const me = this;\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = me;\n    const display = me._isVisible();\n    const isHorizontal = me.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = me.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = me.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && me.ticks.length) {\n        const {first, last, widest, highest} = me._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(me.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(me.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        me._calculatePadding(first, last, sin, cos);\n      }\n    }\n    me._handleMargins();\n    if (isHorizontal) {\n      me.width = me._length = chart.width - me._margins.left - me._margins.right;\n      me.height = minSize.height;\n    } else {\n      me.width = minSize.width;\n      me.height = me._length = chart.height - me._margins.top - me._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const me = this;\n    const {ticks: {align, padding}, position} = me.options;\n    const isRotated = me.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && me.axis === 'x';\n    if (me.isHorizontal()) {\n      const offsetLeft = me.getPixelForTick(0) - me.left;\n      const offsetRight = me.right - me.getPixelForTick(me.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      me.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * me.width / (me.width - offsetLeft), 0);\n      me.paddingRight = Math.max((paddingRight - offsetRight + padding) * me.width / (me.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      me.paddingTop = paddingTop + padding;\n      me.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    const me = this;\n    if (me._margins) {\n      me._margins.left = Math.max(me.paddingLeft, me._margins.left);\n      me._margins.top = Math.max(me.paddingTop, me._margins.top);\n      me._margins.right = Math.max(me.paddingRight, me._margins.right);\n      me._margins.bottom = Math.max(me.paddingBottom, me._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    const me = this;\n    me.beforeTickToLabelConversion();\n    me.generateTickLabels(ticks);\n    me.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    const me = this;\n    let labelSizes = me._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = me.options.ticks.sampleSize;\n      let ticks = me.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      me._labelSizes = labelSizes = me._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    const me = this;\n    if (me._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = me._startPixel + decimal * me._length;\n    return _int16Range(me._alignToPixels ? _alignPixel(me.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const me = this;\n    const ticks = me.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(me.getContext(), index, tick));\n    }\n    return me.$context ||\n\t\t\t(me.$context = createScaleContext(me.chart.getContext(), me));\n  }\n  _tickSize() {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    const rot = toRadians(me.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = me._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return me.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const chart = me.chart;\n    const options = me.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(me.bottom);\n      ty1 = me.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(me.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = me.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(me.right);\n      tx1 = me.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(me.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = me.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    for (i = 0; i < ticksLength; ++i) {\n      const optsAtIndex = grid.setContext(me.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(me, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    me._ticksLength = ticksLength;\n    me._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const options = me.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(me.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = me.bottom - hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = me.top + hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = me._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = me._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = me.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = me.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = me._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = me._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(me.getContext(i));\n      pixel = me.getPixelForTick(i) + optionTicks.labelOffset;\n      font = me._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      if (isHorizontal) {\n        x = pixel;\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const me = this;\n    const {position, ticks} = me.options;\n    const rotation = -toRadians(me.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const me = this;\n    const {position, ticks: {crossAlign, mirror, padding}} = me.options;\n    const labelSizes = me._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        textAlign = 'left';\n        x = me.right + padding;\n      } else {\n        x = me.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = me.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        textAlign = 'right';\n        x = me.left + padding;\n      } else {\n        x = me.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = me.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    const me = this;\n    if (me.options.ticks.mirror) {\n      return;\n    }\n    const chart = me.chart;\n    const position = me.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: me.left, bottom: chart.height, right: me.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: me.top, left: 0, bottom: me.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const me = this;\n    const grid = me.options.grid;\n    if (!me._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = me.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(me.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const me = this;\n    const grid = me.options.grid;\n    const ctx = me.ctx;\n    const items = me._gridLineItems || (me._gridLineItems = me._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const me = this;\n    const {chart, ctx, options: {grid}} = me;\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(me.getContext(0)).lineWidth;\n    const borderValue = me._borderValue;\n    let x1, x2, y1, y2;\n    if (me.isHorizontal()) {\n      x1 = _alignPixel(chart, me.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, me.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = me.ctx;\n    const area = me._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = me._labelItems || (me._labelItems = me._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom') {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    const me = this;\n    if (!me._isVisible()) {\n      return;\n    }\n    me.drawBackground();\n    me.drawGrid(chartArea);\n    me.drawBorder();\n    me.drawTitle();\n    me.drawLabels(chartArea);\n  }\n  _layers() {\n    const me = this;\n    const opts = me.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = opts.grid && opts.grid.z || 0;\n    if (!me._isVisible() || me.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw(chartArea) {\n          me.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw(chartArea) {\n        me.drawBackground();\n        me.drawGrid(chartArea);\n        me.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw() {\n        me.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw(chartArea) {\n        me.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const me = this;\n    const metas = me.chart.getSortedVisibleDatasetMetas();\n    const axisID = me.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === me.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const me = this;\n    const fontSize = me._resolveTickFontOptions(0).lineHeight;\n    return (me.isHorizontal() ? me.width : me.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const me = this;\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = me.register(proto);\n    }\n    const items = me.items;\n    const id = item.id;\n    const scope = me.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (me.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    const me = this;\n    [...args].forEach(arg => {\n      const reg = typedRegistry || me._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === me.plugins && arg.id)) {\n        me._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || me._getRegistryForType(item);\n          me._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    const me = this;\n    if (hook === 'beforeInit') {\n      me._init = me._createDescriptors(chart, true);\n      me._notify(me._init, chart, 'install');\n    }\n    const descriptors = filter ? me._descriptors(chart).filter(filter) : me._descriptors(chart);\n    const result = me._notify(descriptors, chart, hook, args);\n    if (hook === 'destroy') {\n      me._notify(descriptors, chart, 'stop');\n      me._notify(me._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {scriptable: false, indexable: false, allKeys: true});\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = [...scopes];\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    if ((isScriptable(prop) && isFunction(proxy[prop]))\n      || (isIndexable(prop) && isArray(proxy[prop]))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.3.2\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\nfunction getCanvas(item) {\n  if (isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nclass Chart {\n  constructor(item, config) {\n    const me = this;\n    this.config = config = new Config(config);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    this.platform = me._initializePlatform(initialCanvas, config);\n    const context = me.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this.scale = undefined;\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(() => this.update('resize'), options.resizeDelay || 0);\n    instances[me.id] = me;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(me, 'complete', onAnimationsComplete);\n    animator.listen(me, 'progress', onAnimationProgress);\n    me._initialize();\n    if (me.attached) {\n      me.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    const me = this;\n    me.notifyPlugins('beforeInit');\n    if (me.options.responsive) {\n      me.resize();\n    } else {\n      retinaScale(me, me.options.devicePixelRatio);\n    }\n    me.bindEvents();\n    me.notifyPlugins('afterInit');\n    return me;\n  }\n  _initializePlatform(canvas, config) {\n    if (config.platform) {\n      return new config.platform();\n    } else if (!isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n      return new BasicPlatform();\n    }\n    return new DomPlatform();\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const me = this;\n    const options = me.options;\n    const canvas = me.canvas;\n    const aspectRatio = options.maintainAspectRatio && me.aspectRatio;\n    const newSize = me.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || me.platform.getDevicePixelRatio();\n    me.width = newSize.width;\n    me.height = newSize.height;\n    me._aspectRatio = me.aspectRatio;\n    if (!retinaScale(me, newRatio, true)) {\n      return;\n    }\n    me.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [me, newSize], me);\n    if (me.attached) {\n      if (me._doResize()) {\n        me.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const me = this;\n    const options = me.options;\n    const scaleOpts = options.scales;\n    const scales = me.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: me.ctx,\n          chart: me\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(me, scale, scale.options);\n      layouts.addBox(me, scale);\n    });\n  }\n  _updateMetasets() {\n    const me = this;\n    const metasets = me._metasets;\n    const numData = me.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        me._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    me._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const me = this;\n    const {_metasets: metasets, data: {datasets}} = me;\n    if (metasets.length > datasets.length) {\n      delete me._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        me._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const me = this;\n    const newControllers = [];\n    const datasets = me.data.datasets;\n    let i, ilen;\n    me._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = me.getDatasetMeta(i);\n      const type = dataset.type || me.config.type;\n      if (meta.type && meta.type !== type) {\n        me._destroyDatasetMeta(i);\n        meta = me.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, me.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = me.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(me, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    me._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    const me = this;\n    each(me.data.datasets, (dataset, datasetIndex) => {\n      me.getDatasetMeta(datasetIndex).controller.reset();\n    }, me);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const me = this;\n    const config = me.config;\n    config.update();\n    me._options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    each(me.scales, (scale) => {\n      layouts.removeBox(me, scale);\n    });\n    const animsDisabled = me._animationsDisabled = !me.options.animation;\n    me.ensureScalesHaveIDs();\n    me.buildOrUpdateScales();\n    const existingEvents = new Set(Object.keys(me._listeners));\n    const newEvents = new Set(me.options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== me.options.responsive) {\n      me.unbindEvents();\n      me.bindEvents();\n    }\n    me._plugins.invalidate();\n    if (me.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = me.buildOrUpdateControllers();\n    me.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; i++) {\n      const {controller} = me.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    me._minPadding = minPadding;\n    me._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    me._updateDatasets(mode);\n    me.notifyPlugins('afterUpdate', {mode});\n    me._layers.sort(compare2Level('z', '_idx'));\n    if (me._lastEvent) {\n      me._eventHandler(me._lastEvent, true);\n    }\n    me.render();\n  }\n  _updateLayout(minPadding) {\n    const me = this;\n    if (me.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(me, me.width, me.height, minPadding);\n    const area = me.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    me._layers = [];\n    each(me.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      me._layers.push(...box._layers());\n    }, me);\n    me._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    me.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    const me = this;\n    const isFunction = typeof mode === 'function';\n    if (me.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._updateDataset(i, isFunction ? mode({datasetIndex: i}) : mode);\n    }\n    me.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const me = this;\n    const meta = me.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (me.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    const me = this;\n    if (me.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(me)) {\n      if (me.attached && !animator.running(me)) {\n        animator.start(me);\n      }\n    } else {\n      me.draw();\n      onAnimationsComplete({chart: me});\n    }\n  }\n  draw() {\n    const me = this;\n    let i;\n    if (me._resizeBeforeDraw) {\n      const {width, height} = me._resizeBeforeDraw;\n      me._resize(width, height);\n      me._resizeBeforeDraw = null;\n    }\n    me.clear();\n    if (me.width <= 0 || me.height <= 0) {\n      return;\n    }\n    if (me.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = me._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const me = this;\n    const metasets = me._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    const me = this;\n    if (me.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = me.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      me._drawDataset(metasets[i]);\n    }\n    me.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const me = this;\n    const ctx = me.ctx;\n    const clip = meta._clip;\n    const area = me.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (me.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    clipArea(ctx, {\n      left: clip.left === false ? 0 : area.left - clip.left,\n      right: clip.right === false ? me.width : area.right + clip.right,\n      top: clip.top === false ? 0 : area.top - clip.top,\n      bottom: clip.bottom === false ? me.height : area.bottom + clip.bottom\n    });\n    meta.controller.draw();\n    unclipArea(ctx);\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetDraw', args);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const me = this;\n    const dataset = me.data.datasets[datasetIndex];\n    const metasets = me._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = {chart: this, type: 'chart'});\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateDatasetVisibility(datasetIndex, visible) {\n    const me = this;\n    const mode = visible ? 'show' : 'hide';\n    const meta = me.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    me.setDatasetVisibility(datasetIndex, visible);\n    anims.update(meta, {visible});\n    me.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n  }\n  hide(datasetIndex) {\n    this._updateDatasetVisibility(datasetIndex, false);\n  }\n  show(datasetIndex) {\n    this._updateDatasetVisibility(datasetIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const me = this;\n    const meta = me._metasets && me._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n      delete me._metasets[datasetIndex];\n    }\n  }\n  destroy() {\n    const me = this;\n    const {canvas, ctx} = me;\n    let i, ilen;\n    me.stop();\n    animator.remove(me);\n    for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._destroyDatasetMeta(i);\n    }\n    me.config.clearCache();\n    if (canvas) {\n      me.unbindEvents();\n      clearCanvas(canvas, ctx);\n      me.platform.releaseContext(ctx);\n      me.canvas = null;\n      me.ctx = null;\n    }\n    me.notifyPlugins('destroy');\n    delete instances[me.id];\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const me = this;\n    const listeners = me._listeners;\n    const platform = me.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = function(e, x, y) {\n      e.offsetX = x;\n      e.offsetY = y;\n      me._eventHandler(e);\n    };\n    each(me.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    const me = this;\n    if (!me._responsiveListeners) {\n      me._responsiveListeners = {};\n    }\n    const listeners = me._responsiveListeners;\n    const platform = me.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(me, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (me.canvas) {\n        me.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      me.attached = true;\n      me.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      me.attached = false;\n      _remove('resize', listener);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(me.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    const me = this;\n    each(me._listeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n    me._listeners = {};\n    each(me._responsiveListeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n    me._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const me = this;\n    const lastActive = me._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = me.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const me = this;\n    const hoverOptions = me.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      me.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      me.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const me = this;\n    const args = {event: e, replay, cancelable: true};\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.type);\n    if (me.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = me._handleEvent(e, replay);\n    args.cancelable = false;\n    me.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      me.render();\n    }\n    return me;\n  }\n  _handleEvent(e, replay) {\n    const me = this;\n    const {_active: lastActive = [], options} = me;\n    const hoverOptions = options.hover;\n    const useFinalPosition = replay;\n    let active = [];\n    let changed = false;\n    let lastEvent = null;\n    if (e.type !== 'mouseout') {\n      active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n      lastEvent = e.type === 'click' ? me._lastEvent : e;\n    }\n    me._lastEvent = null;\n    if (_isPointInArea(e, me.chartArea, me._minPadding)) {\n      callback(options.onHover, [e, active, me], me);\n      if (e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu') {\n        callback(options.onClick, [e, active, me], me);\n      }\n    }\n    changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive, replay);\n    }\n    me._lastEvent = lastEvent;\n    return changed;\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, end) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + offset + pixelMargin : 0;\n  const alpha = end - start;\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset;\n  const endAngle = end - angleOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, startAngle + TAU);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, endAngle);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, endAngle) {\n  const {options} = element;\n  const inner = options.borderAlign === 'inner';\n  if (!options.borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = options.borderWidth * 2;\n    ctx.lineJoin = 'round';\n  } else {\n    ctx.lineWidth = options.borderWidth;\n    ctx.lineJoin = 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, endAngle);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const betweenAngles = circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = (distance >= innerRadius && distance <= outerRadius);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const me = this;\n    const {options, circumference} = me;\n    const offset = (options.offset || 0) / 2;\n    me.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    me.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || me.innerRadius < 0 || me.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (me.startAngle + me.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (me.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, me, radiusOffset);\n    drawBorder(ctx, me, radiusOffset, endAngle);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  angle: undefined,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && line.segments.length === 1) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const me = this;\n    const options = me.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !me._pointsUpdated) {\n      const loop = options.spanGaps ? me._loop : me._fullLoop;\n      _updateBezierControlPoints(me._points, options, chartArea, loop, indexAxis);\n      me._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    const me = this;\n    me._points = points;\n    delete me._segments;\n    delete me._path;\n    me._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const me = this;\n    const options = me.options;\n    const value = point[property];\n    const points = me.points;\n    const segments = _boundSegments(me, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const me = this;\n    const segments = me.segments;\n    const segmentMethod = _getSegmentMethod(me);\n    let loop = me._loop;\n    start = start || 0;\n    count = count || (me.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, me, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const me = this;\n    const options = me.options || {};\n    const points = me.points || [];\n    if (!points.length || !options.borderWidth) {\n      return;\n    }\n    ctx.save();\n    draw(ctx, me, start, count);\n    ctx.restore();\n    if (me.animated) {\n      me._pointsUpdated = false;\n      me._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options;\n    if (me.skip || options.radius < 0.1) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, me.x, me.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction parseBorderSkipped(bar) {\n  let edge = bar.options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    return res;\n  }\n  edge = bar.horizontal\n    ? parseEdge(edge, 'left', 'right', bar.base > bar.x)\n    : parseEdge(edge, 'bottom', 'top', bar.base < bar.y);\n  res[edge] = true;\n  return res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : Math.max(Math.min(value, max), min);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = parseBorderSkipped(bar);\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = parseBorderSkipped(bar);\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || x >= bounds.left && x <= bounds.right)\n\t\t&& (skipY || y >= bounds.top && y <= bounds.bottom);\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const options = this.options;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, outer);\n      ctx.clip();\n      addRectPath(ctx, inner);\n      ctx.fillStyle = options.borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inner);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  enableBorderRadius: true,\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (meta.type !== 'line') {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      if (count <= 4 * availableWidth) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n    return target;\n  }\n  return ['origin', 'start', 'end', 'stack'].indexOf(fill) >= 0 && fill;\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  let target = null;\n  let horizontal;\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n  return null;\n}\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const target = [];\n  const start = options.reverse ? scale.max : scale.min;\n  const end = options.reverse ? scale.min : scale.max;\n  let i, center, value;\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach((segment) => {\n    const first = linePoints[segment.start];\n    const last = linePoints[segment.end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction buildStackLine(source) {\n  const {chart, scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(chart, index);\n  linesBelow.push(createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nconst isLineAndNotInHideAnimation = (meta) => meta.type === 'line' && !meta.hidden;\nfunction getLinesBelow(chart, index) {\n  const below = [];\n  const metas = chart.getSortedVisibleDatasetMetas();\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (isLineAndNotInHideAnimation(meta)) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (pointValue >= firstValue && pointValue <= lastValue) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\nfunction getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return createBoundaryLine(boundary, line);\n}\nfunction createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _clip(ctx, target, clipY) {\n  ctx.beginPath();\n  target.path(ctx);\n  ctx.lineTo(target.last().x, clipY);\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    const bounds = getBounds(property, points[segment.start], points[segment.end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[segment.start],\n        end: points[segment.end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nfunction _fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      interpolatedLineTo(ctx, target, end, property);\n    }\n    const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n    const loop = lineLoop && targetLoop;\n    if (!loop) {\n      interpolatedLineTo(ctx, target, start, property);\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n    _fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    _clip(ctx, target, area.bottom);\n  }\n  _fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction drawfill(ctx, source, area) {\n  const target = getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nvar plugin_filler = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw) {\n        drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (source) {\n        drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins;\n    me.setDimensions();\n    me.buildLabels();\n    me.fit();\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = 0;\n      me.bottom = me.height;\n    }\n  }\n  buildLabels() {\n    const me = this;\n    const labelOpts = me.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [me.chart], me) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, me.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, me.chart.data));\n    }\n    if (me.options.reverse) {\n      legendItems.reverse();\n    }\n    me.legendItems = legendItems;\n  }\n  fit() {\n    const me = this;\n    const {options, ctx} = me;\n    if (!options.display) {\n      me.width = me.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = me._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (me.isHorizontal()) {\n      width = me.maxWidth;\n      height = me._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = me.maxHeight;\n      width = me._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    me.width = Math.min(width, options.maxWidth || me.maxWidth);\n    me.height = Math.min(height, options.maxHeight || me.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {ctx, maxWidth, options: {labels: {padding}}} = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const lineWidths = me.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {ctx, maxHeight, options: {labels: {padding}}} = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const columnSizes = me.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let top = 0;\n    let col = 0;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + fontSize + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        top = 0;\n        currentColWidth = currentColHeight = 0;\n      }\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += fontSize + padding;\n      hitboxes[i] = {left, top, col, width: itemWidth, height: itemHeight};\n      top += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    const me = this;\n    if (!me.options.display) {\n      return;\n    }\n    const titleHeight = me._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}}} = me;\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n        }\n        hitbox.top += me.top + titleHeight + padding;\n        hitbox.left = left;\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += me.left + padding;\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    const me = this;\n    if (me.options.display) {\n      const ctx = me.ctx;\n      clipArea(ctx, me);\n      me._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const me = this;\n    const {options: opts, columnSizes, lineWidths, ctx} = me;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    me.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: legendItem.textAlign\n      });\n    };\n    const isHorizontal = me.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, me.left + padding, me.right - lineWidths[0]),\n        y: me.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: me.left + padding,\n        y: _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(me.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    me.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + (fontSize / 2) + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(me.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > me.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, me.left + padding, me.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > me.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, me.right);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(me.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const me = this;\n    const opts = me.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const ctx = me.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = me.left;\n    let maxWidth = me.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...me.lineWidths);\n      y = me.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, me.right - maxWidth);\n    } else {\n      const maxHeight = me.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, me.top, me.bottom - maxHeight - opts.labels.padding - me._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    const me = this;\n    let i, hitBox, lh;\n    if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n      lh = me.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n          return me.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const me = this;\n    const opts = me.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = me._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove') {\n      const previous = me._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, me], me);\n      }\n      me._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, me], me);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, me], me);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const me = this;\n    const opts = me.options;\n    me.left = 0;\n    me.top = 0;\n    if (!opts.display) {\n      me.width = me.height = me.right = me.bottom = 0;\n      return;\n    }\n    me.width = me.right = maxWidth;\n    me.height = me.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    me._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + me._padding.height;\n    if (me.isHorizontal()) {\n      me.height = textSize;\n    } else {\n      me.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + me._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = me._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip._chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const radiusAndPadding = cornerRadius + caretPadding;\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= radiusAndPadding;\n  } else if (xAlign === 'right') {\n    x += radiusAndPadding;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return Object.assign(Object.create(parent), {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._chart = config._chart;\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const me = this;\n    const cached = me._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = me._chart;\n    const options = me.options.setContext(me.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(me._chart, opts);\n    if (opts._cacheable) {\n      me._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    const me = this;\n    return me.$context ||\n\t\t\t(me.$context = createTooltipContext(me._chart.getContext(), me, me._tooltipItems));\n  }\n  getTitle(context, options) {\n    const me = this;\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(me, [context]);\n    const title = callbacks.title.apply(me, [context]);\n    const afterTitle = callbacks.afterTitle.apply(me, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const me = this;\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(me, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(me, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(me, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const me = this;\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(me, [tooltipItems]);\n    const footer = callbacks.footer.apply(me, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(me, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const me = this;\n    const active = me._active;\n    const data = me._chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(me._chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(me, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(me, context));\n      labelTextColors.push(scoped.labelTextColor.call(me, context));\n    });\n    me.labelColors = labelColors;\n    me.labelPointStyles = labelPointStyles;\n    me.labelTextColors = labelTextColors;\n    me.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    const active = me._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (me.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(me, active, me._eventPosition);\n      tooltipItems = me._createItems(options);\n      me.title = me.getTitle(tooltipItems, options);\n      me.beforeBody = me.getBeforeBody(tooltipItems, options);\n      me.body = me.getBody(tooltipItems, options);\n      me.afterBody = me.getAfterBody(tooltipItems, options);\n      me.footer = me.getFooter(tooltipItems, options);\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(me._chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, me._chart);\n      me.xAlign = alignment.xAlign;\n      me.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    me._tooltipItems = tooltipItems;\n    me.$context = undefined;\n    if (properties) {\n      me._resolveAnimations().update(me, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(me, {chart: me._chart, tooltip: me, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {cornerRadius, caretSize} = options;\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + cornerRadius + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - cornerRadius - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const me = this;\n    const title = me.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const me = this;\n    const labelColors = me.labelColors[i];\n    const labelPointStyle = me.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(me, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = me.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const me = this;\n    const {body} = me;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(me, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(me.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + 1) : (boxWidth + 2)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = me.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        me._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(me.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const me = this;\n    const footer = me.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const radius = options.cornerRadius;\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const me = this;\n    const chart = me._chart;\n    const anims = me.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(me, me._active, me._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, me._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        me.xAlign = alignment.xAlign;\n        me.yAlign = alignment.yAlign;\n        me.width = size.width;\n        me.height = size.height;\n        me.caretX = position.x;\n        me.caretY = position.y;\n        me._resolveAnimations().update(me, point);\n      }\n    }\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    let opacity = me.opacity;\n    if (!opacity) {\n      return;\n    }\n    me._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: me.width,\n      height: me.height\n    };\n    const pt = {\n      x: me.x,\n      y: me.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = me.title.length || me.beforeBody.length || me.body.length || me.afterBody.length || me.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      me.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      me.drawTitle(pt, ctx, options);\n      me.drawBody(pt, ctx, options);\n      me.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const me = this;\n    const lastActive = me._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = me._chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = me._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      me._active = active;\n      me._eventPosition = eventPosition;\n      me.update(true);\n    }\n  }\n  handleEvent(e, replay) {\n    const me = this;\n    const options = me.options;\n    const lastActive = me._active || [];\n    let changed = false;\n    let active = [];\n    if (e.type !== 'mouseout') {\n      active = me._chart.getElementsAtEventForMode(e, options.mode, options, replay);\n      if (options.reverse) {\n        active.reverse();\n      }\n    }\n    const positionChanged = me._positionChanged(active, e);\n    changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      me._active = active;\n      if (options.enabled || options.external) {\n        me._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        me.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({_chart: chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    const args = {\n      tooltip\n    };\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: plugin_filler,\nLegend: plugin_legend,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index) => typeof raw === 'string'\n  ? labels.push(raw) - 1\n  : isNaN(raw) ? null : index;\nfunction findOrAddLabel(labels, raw, index) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw));\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const me = this;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let {min, max} = me.getMinMax(true);\n    if (me.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = me.getLabels().length - 1;\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const min = me.min;\n    const max = me.max;\n    const offset = me.options.offset;\n    const ticks = [];\n    let labels = me.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    me._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    me._startValue = me.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const labels = me.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    const me = this;\n    super.configure();\n    if (!me.isHorizontal()) {\n      me._reversePixels = !me._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (typeof value !== 'number') {\n      value = me.parse(value);\n    }\n    return value === null ? NaN : me.getPixelForDecimal((value - me._startValue) / me._valueRange);\n  }\n  getPixelForTick(index) {\n    const me = this;\n    const ticks = me.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return me.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    return Math.round(me._startValue + me.getDecimalForPixel(pixel) * me._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.min((max - min) / spacing, maxTicks);\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin),\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {beginAtZero} = me.options;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let {min, max} = me;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      setMax(max + 1);\n      if (!beginAtZero) {\n        setMin(min - 1);\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  getTickLimit() {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n    } else {\n      maxTicks = me.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = me.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: me._maxDigits(),\n      horizontal: me.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = me._range || me;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const me = this;\n    const ticks = me.ticks;\n    let start = me.min;\n    let end = me.max;\n    super.configure();\n    if (me.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    me._startValue = start;\n    me._endValue = end;\n    me._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? min : 0;\n    me.max = isNumberFinite(max) ? max : 1;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const me = this;\n    const horizontal = me.isHorizontal();\n    const length = horizontal ? me.width : me.height;\n    const minRotation = toRadians(me.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = me._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    me.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (me.options.beginAtZero) {\n      me._zero = true;\n    }\n    me.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let min = me.min;\n    let max = me.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (me._zero && me.min !== me._suggestedMin && min === exp(me.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const generationOptions = {\n      min: me._userMin,\n      max: me._userMax\n    };\n    const ticks = generateTicks(generationOptions, me);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined ? '0' : formatNumber(value, this.chart.options.locale);\n  }\n  configure() {\n    const me = this;\n    const start = me.min;\n    super.configure();\n    me._startValue = log10(start);\n    me._valueRange = log10(me.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (value === undefined || value === 0) {\n      value = me.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return me.getPixelForDecimal(value === me.min\n      ? 0\n      : (log10(value) - me._startValue) / me._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const decimal = me.getDecimalForPixel(pixel);\n    return Math.pow(10, me._startValue + decimal * me._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, lineHeight, label) {\n  if (isArray(label)) {\n    return {\n      w: _longestText(ctx, ctx.font, label),\n      h: label.length * lineHeight\n    };\n  }\n  return {\n    w: ctx.measureText(label).width,\n    h: lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const furthestLimits = {\n    l: 0,\n    r: scale.width,\n    t: 0,\n    b: scale.height - scale.paddingTop\n  };\n  const furthestAngles = {};\n  let i, textSize, pointPosition;\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale.getLabels().length;\n  for (i = 0; i < valueCount; i++) {\n    const opts = scale.options.pointLabels.setContext(scale.getContext(i));\n    padding[i] = opts.padding;\n    pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i]);\n    const plFont = toFont(opts.font);\n    scale.ctx.font = plFont.string;\n    textSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = scale.getIndexAngle(i);\n    const angle = toDegrees(angleRadians);\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    if (hLimits.start < furthestLimits.l) {\n      furthestLimits.l = hLimits.start;\n      furthestAngles.l = angleRadians;\n    }\n    if (hLimits.end > furthestLimits.r) {\n      furthestLimits.r = hLimits.end;\n      furthestAngles.r = angleRadians;\n    }\n    if (vLimits.start < furthestLimits.t) {\n      furthestLimits.t = vLimits.start;\n      furthestAngles.t = angleRadians;\n    }\n    if (vLimits.end > furthestLimits.b) {\n      furthestLimits.b = vLimits.end;\n      furthestAngles.b = angleRadians;\n    }\n  }\n  scale._setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  scale._pointLabelItems = [];\n  const opts = scale.options;\n  const tickBackdropHeight = getTickBackdropHeight(opts);\n  const outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n  for (i = 0; i < valueCount; i++) {\n    const extra = (i === 0 ? tickBackdropHeight / 2 : 0);\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i]);\n    const angle = toDegrees(scale.getIndexAngle(i));\n    const size = labelSizes[i];\n    adjustPointPositionForLabelHeight(angle, size, pointLabelPosition);\n    const textAlign = getTextAlignForAngle(angle);\n    let left;\n    if (textAlign === 'left') {\n      left = pointLabelPosition.x;\n    } else if (textAlign === 'center') {\n      left = pointLabelPosition.x - (size.w / 2);\n    } else {\n      left = pointLabelPosition.x - size.w;\n    }\n    const right = left + size.w;\n    scale._pointLabelItems[i] = {\n      x: pointLabelPosition.x,\n      y: pointLabelPosition.y,\n      textAlign,\n      left,\n      top: pointLabelPosition.y,\n      right,\n      bottom: pointLabelPosition.y + size.h,\n    };\n  }\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction adjustPointPositionForLabelHeight(angle, textSize, position) {\n  if (angle === 90 || angle === 270) {\n    position.y -= (textSize.h / 2);\n  } else if (angle > 270 || angle < 90) {\n    position.y -= textSize.h;\n  }\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction numberOrZero(param) {\n  return isNumber(param) ? param : 0;\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const me = this;\n    me.width = me.maxWidth;\n    me.height = me.maxHeight;\n    me.paddingTop = getTickBackdropHeight(me.options) / 2;\n    me.xCenter = Math.floor(me.width / 2);\n    me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n    me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(false);\n    me.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    me.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    LinearScaleBase.prototype.generateTickLabels.call(me, ticks);\n    me._pointLabels = me.getLabels().map((value, index) => {\n      const label = callback(me.options.pointLabels.callback, [value, index], me);\n      return label || label === 0 ? label : '';\n    });\n  }\n  fit() {\n    const me = this;\n    const opts = me.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(me);\n    } else {\n      me.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  _setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n    const me = this;\n    let radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n    let radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n    let radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n    let radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n    radiusReductionLeft = numberOrZero(radiusReductionLeft);\n    radiusReductionRight = numberOrZero(radiusReductionRight);\n    radiusReductionTop = numberOrZero(radiusReductionTop);\n    radiusReductionBottom = numberOrZero(radiusReductionBottom);\n    me.drawingArea = Math.max(largestPossibleRadius / 2, Math.min(\n      Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n      Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2)));\n    me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    const me = this;\n    const maxRight = me.width - rightMovement - me.drawingArea;\n    const maxLeft = leftMovement + me.drawingArea;\n    const maxTop = topMovement + me.drawingArea;\n    const maxBottom = (me.height - me.paddingTop) - bottomMovement - me.drawingArea;\n    me.xCenter = Math.floor(((maxLeft + maxRight) / 2) + me.left);\n    me.yCenter = Math.floor(((maxTop + maxBottom) / 2) + me.top + me.paddingTop);\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / this.getLabels().length;\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    const me = this;\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = me.drawingArea / (me.max - me.min);\n    if (me.options.reverse) {\n      return (me.max - value) * scalingFactor;\n    }\n    return (value - me.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const me = this;\n    const scaledDistance = distance / (me.drawingArea / (me.max - me.min));\n    return me.options.reverse ? me.max - scaledDistance : me.min + scaledDistance;\n  }\n  getPointPosition(index, distanceFromCenter) {\n    const me = this;\n    const angle = me.getIndexAngle(index) - HALF_PI;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + me.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + me.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const me = this;\n    const {backgroundColor, grid: {circular}} = me.options;\n    if (backgroundColor) {\n      const ctx = me.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(me, me.getDistanceFromCenterForValue(me._endValue), circular, me.getLabels().length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const {angleLines, grid} = opts;\n    const labelCount = me.getLabels().length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(me, labelCount);\n    }\n    if (grid.display) {\n      me.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = me.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(me.getContext(index - 1));\n          drawRadiusLine(me, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = me.getLabels().length - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(me.getContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = me.getDistanceFromCenterForValue(opts.ticks.reverse ? me.min : me.max);\n        position = me.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(me.xCenter, me.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = me.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(me.xCenter, me.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    me.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(me.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = me.getDistanceFromCenterForValue(me.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const me = this;\n    const options = me.options;\n    const adapter = me._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(me._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(me.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    me.min = Math.min(min, max - 1);\n    me.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const me = this;\n    const options = me.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? me.getLabelTimestamps() : me._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      me.min = me._userMin || timestamps[0];\n      me.max = me._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = me.min;\n    const max = me.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    me._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, me.min, me.max, me._getLabelCapacity(min))\n      : determineUnitForFormatting(me, ticks.length, timeOpts.minUnit, me.min, me.max));\n    me._majorUnit = !tickOpts.major.enabled || me._unit === 'year' ? undefined\n      : determineMajorUnit(me._unit);\n    me.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(me, ticks, me._majorUnit);\n  }\n  initOffsets(timestamps) {\n    const me = this;\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (me.options.offset && timestamps.length) {\n      first = me.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (me.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = me.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - me.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    me._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const me = this;\n    const adapter = me._adapter;\n    const min = me.min;\n    const max = me.max;\n    const options = me.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, me._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && me.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const adapter = me._adapter;\n    const timeOpts = me.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const me = this;\n    const options = me.options;\n    const formats = options.time.displayFormats;\n    const unit = me._unit;\n    const majorUnit = me._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = me._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], me) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    const me = this;\n    return value === null ? NaN : (value - me.min) / (me.max - me.min);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForValue(value);\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return me.min + pos * (me.max - me.min);\n  }\n  _getLabelSize(label) {\n    const me = this;\n    const ticksOpts = me.options.ticks;\n    const tickLabelWidth = me.ctx.measureText(label).width;\n    const angle = toRadians(me.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = me._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const me = this;\n    const timeOpts = me.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = me._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(me, [exampleTime], me._majorUnit), format);\n    const size = me._getLabelSize(exampleLabel);\n    const capacity = Math.floor(me.isHorizontal() ? me.width / size.w : me.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    const me = this;\n    let timestamps = me._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = me.getMatchingVisibleMetas();\n    if (me._normalized && metas.length) {\n      return (me._cache.data = metas[0].controller.getAllParsedValues(me));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(me));\n    }\n    return (me._cache.data = me.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const me = this;\n    const timestamps = me._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = me.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(me, labels[i]));\n    }\n    return (me._cache.labels = me._normalized ? timestamps : me.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    prevSource = Math.floor(val);\n    nextSource = Math.ceil(val);\n    prevTarget = table[prevSource];\n    nextTarget = table[nextSource];\n  } else {\n    const result = _lookup(table, val);\n    prevTarget = result.lo;\n    nextTarget = result.hi;\n    prevSource = table[prevTarget];\n    nextSource = table[nextTarget];\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._maxIndex = undefined;\n  }\n  initOffsets() {\n    const me = this;\n    const timestamps = me._getTimestampsForTable();\n    me._table = me.buildLookupTable(timestamps);\n    me._maxIndex = me._table.length - 1;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const me = this;\n    const {min, max} = me;\n    if (!timestamps.length) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    const items = [min];\n    let i, ilen, curr;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr > min && curr < max) {\n        items.push(curr);\n      }\n    }\n    items.push(max);\n    return items;\n  }\n  _getTimestampsForTable() {\n    const me = this;\n    let timestamps = me._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = me.getDataTimestamps();\n    const label = me.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = me.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = me._cache.all = timestamps;\n    return timestamps;\n  }\n  getPixelForValue(value, index) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me._normalized && me._maxIndex > 0 && !isNullOrUndef(index)\n      ? index / me._maxIndex : me.getDecimalForValue(value);\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getDecimalForValue(value) {\n    return interpolate(this._table, value) / this._maxIndex;\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const decimal = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(me._table, decimal * this._maxIndex, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, plugin_filler as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n","import {Chart, registerables} from '../dist/chart.esm';\n\nChart.register(...registerables);\n\nexport default Chart;\n"],"names":["numberOrZero"],"mappings":"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"}