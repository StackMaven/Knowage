{"version":3,"file":"WorkspaceDataPreviewDialog-5099e5c1.js","sources":["../../../../modules/workspace/dataPreparation/DataPreparationMonitoring/DataPreparationMonitoringDialog.vue","../../../../modules/workspace/views/dataView/tables/DatasetPreviewTable.vue","../../../../modules/workspace/views/dataView/dialogs/WorkspaceDataPreviewDialog.vue"],"sourcesContent":["<template>\r\n    <Dialog class=\"p-fluid kn-dialog--toolbar--primary schedulerDialog\" v-bind:visible=\"visibility\" footer=\"footer\" :header=\"$t('workspace.myData.monitoring')\" modal :breakpoints=\"{ '960px': '75vw', '640px': '100vw' }\" :closable=\"false\" :baseZIndex=\"1\" :autoZIndex=\"true\">\r\n        <KnScheduler\r\n            class=\"p-m-1\"\r\n            :cronExpression=\"currentCronExpression\"\r\n            :cronExpressionType=\"cronExpressionType\"\r\n            :descriptor=\"schedulerDescriptor\"\r\n            @touched=\"touched = true\"\r\n            :readOnly=\"false\"\r\n            :logs=\"logs\"\r\n            :schedulationEnabled=\"schedulationEnabled\"\r\n            :schedulationPaused=\"schedulationPaused\"\r\n            @update:schedulationPaused=\"updateSchedulationPaused\"\r\n            @update:schedulationEnabled=\"updateSchedulationEnabled\"\r\n            @update:currentCronExpression=\"updateCurrentCronExpression\"\r\n            @update:cronExpressionType=\"updateCronExpressionType\"\r\n            :loadingLogs=\"loadingLogs\"\r\n        />\r\n        <template #footer>\r\n            <Button v-bind:visible=\"visibility\" class=\"kn-button--secondary\" :label=\"$t('common.cancel')\" @click=\"cancel\" />\r\n\r\n            <Button v-bind:visible=\"visibility\" class=\"kn-button--primary\" v-t=\"'common.save'\" @click=\"saveSchedulation\" :disabled=\"!touched\" />\r\n        </template>\r\n    </Dialog>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport Dialog from 'primevue/dialog'\r\nimport dataPreparationMonitoringDescriptor from '@/modules/workspace/dataPreparation/DataPreparationMonitoring/DataPreparationMonitoringDescriptor.json'\r\nimport KnScheduler from '@/components/UI/KnScheduler/KnScheduler.vue'\r\nimport { IDataPrepLog } from '@/modules/workspace/dataPreparation/DataPreparationMonitoring/DataPreparationMonitoring'\r\nimport { AxiosResponse } from 'axios'\r\nimport { filterDefault } from '@/helpers/commons/filterHelper'\r\nimport mainStore from '../../../../App.store'\r\n\r\nexport default defineComponent({\r\n    name: 'data-preparation-monitoring-dialog',\r\n    components: { Dialog, KnScheduler },\r\n    props: { visibility: Boolean, dataset: Object },\r\n    emits: ['close', 'save', 'update:loading'],\r\n    data() {\r\n        return {\r\n            schedulerDescriptor: dataPreparationMonitoringDescriptor,\r\n            logs: Array<IDataPrepLog>(),\r\n            filters: { global: [filterDefault] } as Object,\r\n            validSchedulation: Boolean,\r\n            showHint: false,\r\n            currentCronExpression: '',\r\n            cronExpressionType: '',\r\n            touched: false,\r\n            schedulationPaused: false,\r\n            schedulationEnabled: false,\r\n            instanceId: '',\r\n            loadingLogs: false\r\n        }\r\n    },\r\n    watch: {\r\n        async visibility(newVisibility) {\r\n            this.store.setLoading(true)\r\n            this.logs = []\r\n            this.loadingLogs = true\r\n            if (newVisibility) await this.loadLogs()\r\n            this.store.setLoading(false)\r\n            this.loadingLogs = false\r\n        }\r\n    },\r\n    setup() {\r\n        const store = mainStore()\r\n        return { store }\r\n    },\r\n    methods: {\r\n        async loadLogs() {\r\n            if (this.dataset && this.dataset.id) {\r\n                await this.$http.get(import.meta.env.VITE_DATA_PREPARATION_PATH + '1.0/process/by-destination-data-set/' + this.dataset.id).then((response: AxiosResponse<any>) => {\r\n                    let instance = response.data.instance\r\n                    if (instance) {\r\n                        this.instanceId = instance.id\r\n                        this.currentCronExpression = instance.config.cron\r\n                        if (!this.currentCronExpression) this.showHint\r\n                        this.cronExpressionType = instance.config.type\r\n                        this.schedulationPaused = instance.config.paused || false\r\n                        this.schedulationEnabled = this.currentCronExpression ? true : false\r\n                        this.$http.get(import.meta.env.VITE_DATA_PREPARATION_PATH + '1.0/process/logs/' + instance.id).then((response: AxiosResponse<any>) => {\r\n                            this.logs = response.data\r\n                        })\r\n                    }\r\n                })\r\n            }\r\n        },\r\n        cancel() {\r\n            if (this.touched) {\r\n                this.$confirm.require({\r\n                    message: this.$t('common.toast.unsavedChangesHeader'),\r\n                    header: this.$t('common.toast.unsavedChangesMessage'),\r\n                    icon: 'pi pi-exclamation-triangle',\r\n                    accept: () => this.resetAndClose()\r\n                })\r\n            } else {\r\n                this.resetAndClose()\r\n            }\r\n        },\r\n        resetAndClose() {\r\n            this.currentCronExpression = ''\r\n            this.cronExpressionType = ''\r\n            this.touched = false\r\n            this.showHint = false\r\n            this.$emit('close')\r\n            this.store.setLoading(false)\r\n        },\r\n        setCronValid(event) {\r\n            this.validSchedulation = event.item\r\n        },\r\n        saveSchedulation() {\r\n            let obj = { instanceId: this.instanceId, config: {} }\r\n            if (this.schedulationEnabled) {\r\n                obj['config']['cron'] = this.currentCronExpression\r\n                obj['config']['paused'] = this.schedulationPaused\r\n                obj['config']['type'] = this.cronExpressionType\r\n            }\r\n            this.$emit('save', obj)\r\n            this.resetAndClose()\r\n        },\r\n        updateSchedulationPaused(newSchedulationPaused) {\r\n            this.schedulationPaused = newSchedulationPaused\r\n        },\r\n        updateSchedulationEnabled(newSchedulationEnabled) {\r\n            this.schedulationEnabled = newSchedulationEnabled\r\n        },\r\n        updateCurrentCronExpression(newCronExpression) {\r\n            this.currentCronExpression = newCronExpression\r\n        },\r\n        updateCronExpressionType(cronExpressionType) {\r\n            this.cronExpressionType = cronExpressionType\r\n        }\r\n    }\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.schedulerDialog {\r\n    min-width: 600px;\r\n    width: 1200px;\r\n    max-width: 1400px;\r\n    .p-datatable.p-datatable-sm.data-prep-table {\r\n        min-height: 300px;\r\n    }\r\n}\r\n</style>\r\n","<template>\r\n    <DataTable\r\n        id=\"preview-datatable\"\r\n        v-model:first=\"first\"\r\n        :value=\"rows\"\r\n        :lazy=\"true\"\r\n        :paginator=\"lazyParams.size > 15\"\r\n        :rows=\"15\"\r\n        :totalRecords=\"lazyParams.size\"\r\n        paginatorTemplate=\"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink\"\r\n        class=\"p-datatable-sm kn-table kn-flex\"\r\n        v-model:filters=\"filters\"\r\n        filterDisplay=\"menu\"\r\n        :currentPageReportTemplate=\"$t('common.table.footer.paginated', { first: '{first}', last: '{last}', totalRecords: '{totalRecords}' })\"\r\n        stripedRows\r\n        responsiveLayout=\"stack\"\r\n        breakpoint=\"960px\"\r\n        @page=\"onPage($event)\"\r\n        @sort=\"onSort\"\r\n    >\r\n        <template #empty>\r\n            <div id=\"noFunctionsFound\">\r\n                {{ $t('common.info.noDataFound') }}\r\n            </div>\r\n        </template>\r\n        <Column class=\"kn-truncated\" :style=\"datasetPreviewTableDescriptor.columnStyle\" v-for=\"col of columns\" :field=\"col.field\" :key=\"col.field\" :sortable=\"previewType === 'dataset' ? false : true\">\r\n            <template #header>\r\n                <div class=\"dropdown\">\r\n                    <div clas=\"p-d-flex p-flex-column\">\r\n                        <p class=\"p-m-0\">{{ col.header }}</p>\r\n                        <small>{{ col.type }}</small>\r\n                    </div>\r\n                    <div v-if=\"previewType !== 'dataset'\" class=\"dropdown-icon-container\">\r\n                        <i class=\"pi pi-filter-icon pi-filter p-ml-5\" :class=\"{ 'filter-icon-active': searchInput[col.field] }\" @click=\"searchVisible[col.field] = !searchVisible[col.field]\" />\r\n                        <div class=\"dropdown-content\" v-if=\"searchVisible[col.field]\">\r\n                            <InputText v-model=\"searchInput[col.field]\" class=\"p-inputtext-sm p-column-filter\" @input=\"onFilter(col)\"></InputText>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </template>\r\n            <template #body=\"slotProps\">\r\n                <span v-tooltip.top=\"slotProps.data[col.field]\">{{ slotProps.data[col.field] }}</span>\r\n            </template>\r\n        </Column>\r\n    </DataTable>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport { FilterOperator } from 'primevue/api'\r\nimport { filterDefault } from '@/helpers/commons/filterHelper'\r\nimport Column from 'primevue/column'\r\nimport DataTable from 'primevue/datatable'\r\nimport datasetPreviewTableDescriptor from './DatasetPreviewTableDescriptor.json'\r\n\r\nexport default defineComponent({\r\n    name: 'function-catalog-preview-table',\r\n    components: { Column, DataTable },\r\n    props: { previewColumns: { type: Array }, previewRows: { type: Array }, pagination: { type: Object }, previewType: String },\r\n    emits: ['pageChanged', 'sort', 'filter'],\r\n    data() {\r\n        return {\r\n            datasetPreviewTableDescriptor,\r\n            columns: [] as any[],\r\n            rows: [] as any[],\r\n            filters: { global: [filterDefault] } as Object,\r\n            globalFilterFields: [] as string[],\r\n            lazyParams: {} as any,\r\n            sorted: 'ASC',\r\n            timer: null as any,\r\n            searchInput: {} as any,\r\n            searchVisible: {} as any,\r\n            customFilters: [] as any,\r\n            first: 0\r\n        }\r\n    },\r\n    watch: {\r\n        previewColumns() {\r\n            this.loadColumns()\r\n        },\r\n        previewRows() {\r\n            this.loadRows()\r\n        },\r\n        pagination() {\r\n            this.loadPagination()\r\n        }\r\n    },\r\n    created() {\r\n        this.loadColumns()\r\n        this.loadRows()\r\n        this.loadPagination()\r\n    },\r\n    methods: {\r\n        loadColumns() {\r\n            this.columns = []\r\n            this.previewColumns?.forEach((el: any) => {\r\n                this.columns.push(el)\r\n                this.globalFilterFields.push(el.field)\r\n                this.filters[el.field] = { operator: FilterOperator.AND, constraints: [filterDefault] }\r\n            })\r\n        },\r\n        loadRows() {\r\n            this.rows = this.previewRows as any[]\r\n        },\r\n        loadPagination() {\r\n            this.lazyParams = this.pagination as any\r\n        },\r\n        onPage(event: any) {\r\n            this.lazyParams = { paginationStart: event.first, paginationLimit: event.rows, paginationEnd: event.first + event.rows, size: this.lazyParams.size }\r\n            this.$emit('pageChanged', this.lazyParams)\r\n        },\r\n        onSort(event: any) {\r\n            let column = ''\r\n            const index = this.columns.findIndex((el: any) => el.field === event.sortField)\r\n            if (index !== -1) {\r\n                column = this.columns[index].header\r\n            }\r\n            const order = event.sortOrder === 1 ? 'asc' : 'desc'\r\n            this.$emit('sort', { column: column, order: order })\r\n        },\r\n        onFilter(column: any) {\r\n            if (this.timer) {\r\n                clearTimeout(this.timer)\r\n                this.timer = null\r\n            }\r\n\r\n            this.timer = setTimeout(() => {\r\n                const filter = { column: column.header, value: this.searchInput[column.field] }\r\n                const index = this.customFilters.findIndex((el: any) => el.column === column.header)\r\n\r\n                if (index !== -1) {\r\n                    if (!filter.value) {\r\n                        this.customFilters.splice(index, 1)\r\n                    } else {\r\n                        this.customFilters[index] = filter\r\n                    }\r\n                } else {\r\n                    this.customFilters.push(filter)\r\n                }\r\n                this.$emit('filter', this.customFilters)\r\n            }, 1000)\r\n        }\r\n    }\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n#preview-datatable .p-datatable-wrapper {\r\n    height: auto;\r\n}\r\n\r\n.dropdown {\r\n    position: relative;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    font-size: 0.9rem;\r\n    small {\r\n        color: var(--kn-color-default);\r\n        border-top: 1px solid var(--kn-color-borders);\r\n    }\r\n}\r\n\r\n.dropdown-icon-container {\r\n    position: relative;\r\n}\r\n\r\n.dropdown-content {\r\n    display: block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 50px;\r\n    min-width: 160px;\r\n    box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);\r\n    z-index: 5000;\r\n}\r\n\r\n.filter-icon-active {\r\n    color: var(--kn-color-primary);\r\n}\r\n</style>\r\n","<template>\r\n    <Dialog :style=\"workspaceDataPreviewDialogDescriptor.dialog.style\" :contentStyle=\"workspaceDataPreviewDialogDescriptor.dialog.contentStyle\" :visible=\"visible\" :modal=\"true\" class=\"p-fluid kn-dialog--toolbar--primary\" :closable=\"false\">\r\n        <template #header>\r\n            <Toolbar class=\"kn-toolbar kn-toolbar--primary p-col-12\" :style=\"mainDescriptor.style.maxWidth\">\r\n                <template #start>\r\n                    <span>{{ dataset?.label }}</span>\r\n                </template>\r\n                <template #end>\r\n                    <Button v-if=\"isParameterSidebarVisible\" icon=\"pi pi-filter\" class=\"p-button-text p-button-rounded p-button-plain\" v-tooltip.bottom=\"$t('common.filter')\" @click=\"parameterSidebarVisible = !parameterSidebarVisible\" />\r\n                    <Button class=\"kn-button p-button-text p-button-plain\" :label=\"$t('common.close')\" @click=\"closeDialog\"></Button>\r\n                </template>\r\n            </Toolbar>\r\n        </template>\r\n\r\n        <ProgressBar mode=\"indeterminate\" class=\"kn-progress-bar p-ml-2\" v-if=\"loading\" data-test=\"progress-bar\" />\r\n\r\n        <div class=\"p-d-flex p-flex-column kn-flex workspace-scrollable-table\">\r\n            <Message v-if=\"errorMessageVisible\" class=\"p-m-2\" severity=\"warn\" :closable=\"false\" :style=\"mainDescriptor.style.message\">\r\n                {{ errorMessage }}\r\n            </Message>\r\n\r\n            <DatasetPreviewTable v-else class=\"p-d-flex p-flex-column kn-flex p-m-2\" :previewColumns=\"columns\" :previewRows=\"rows\" :pagination=\"pagination\" :previewType=\"previewType\" @pageChanged=\"updatePagination($event)\" @sort=\"onSort\" @filter=\"onFilter\"></DatasetPreviewTable>\r\n            <KnParameterSidebar\r\n                v-if=\"parameterSidebarVisible && dataset\"\r\n                style=\"height: calc(100% - 35px)\"\r\n                class=\"workspace-parameter-sidebar kn-overflow-y\"\r\n                :filtersData=\"filtersData\"\r\n                :propDocument=\"dataset\"\r\n                :propMode=\"sidebarMode\"\r\n                :propQBEParameters=\"dataset.pars\"\r\n                :userRole=\"userRole\"\r\n                :dataset=\"dataset\"\r\n                @execute=\"onExecute\"\r\n                @roleChanged=\"onRoleChange\"\r\n            ></KnParameterSidebar>\r\n        </div>\r\n    </Dialog>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport { AxiosResponse } from 'axios'\r\nimport Dialog from 'primevue/dialog'\r\nimport DatasetPreviewTable from '../tables/DatasetPreviewTable.vue'\r\nimport Message from 'primevue/message'\r\nimport mainDescriptor from '@/modules/workspace/WorkspaceDescriptor.json'\r\nimport workspaceDataPreviewDialogDescriptor from './WorkspaceDataPreviewDialogDescriptor.json'\r\nimport KnParameterSidebar from '@/components/UI/KnParameterSidebar/KnParameterSidebar.vue'\r\nimport moment from 'moment'\r\nimport mainStore from '../../../../../App.store'\r\n\r\nexport default defineComponent({\r\n    name: 'kpi-scheduler-save-dialog',\r\n    components: { Dialog, DatasetPreviewTable, Message, KnParameterSidebar },\r\n    props: { visible: { type: Boolean }, propDataset: { type: Object }, previewType: String, loadFromDatasetManagement: Boolean },\r\n    emits: ['close'],\r\n    data() {\r\n        return {\r\n            mainDescriptor,\r\n            workspaceDataPreviewDialogDescriptor,\r\n            dataset: null as any,\r\n            columns: [] as any[],\r\n            rows: [] as any[],\r\n            pagination: { start: 0, limit: 15 } as any,\r\n            sort: null as any,\r\n            filter: null as any,\r\n            errorMessageVisible: false,\r\n            errorMessage: '',\r\n            parameterSidebarVisible: false,\r\n            loading: false,\r\n            filtersData: {} as any,\r\n            userRole: null,\r\n            sidebarMode: 'workspaceView'\r\n        }\r\n    },\r\n    computed: {\r\n        isParameterSidebarVisible(): boolean {\r\n            let parameterVisible = false\r\n            for (let i = 0; i < this.filtersData?.filterStatus?.length; i++) {\r\n                const tempFilter = this.filtersData.filterStatus[i]\r\n                if (tempFilter.showOnPanel === 'true') {\r\n                    parameterVisible = true\r\n                    break\r\n                }\r\n            }\r\n            let pars = false\r\n            if (this.dataset && this.dataset.pars) {\r\n                if (this.dataset.pars.length !== 0) {\r\n                    pars = this.dataset.pars.length !== 0\r\n                }\r\n            }\r\n            return parameterVisible || pars\r\n        }\r\n    },\r\n    watch: {\r\n        async propDataset() {\r\n            if (this.visible) {\r\n                await this.loadPreview()\r\n            }\r\n        },\r\n        async visible(value) {\r\n            if (value) {\r\n                await this.loadPreview()\r\n            }\r\n        },\r\n        previewType() {\r\n            this.setSidebarMode()\r\n        }\r\n    },\r\n    setup() {\r\n        const store = mainStore()\r\n        return { store }\r\n    },\r\n    async created() {\r\n        this.userRole = (this.store.$state as any).user.sessionRole !== this.$t('role.defaultRolePlaceholder') ? (this.store.$state as any).user.sessionRole : null\r\n        await this.loadPreview()\r\n        this.setSidebarMode()\r\n    },\r\n    methods: {\r\n        async loadPreview() {\r\n            this.loadDataset()\r\n\r\n            if (this.dataset.drivers && this.dataset.drivers.length > 0) {\r\n                if (this.userRole) {\r\n                    await this.loadDatasetDrivers()\r\n                } else {\r\n                    this.parameterSidebarVisible = true\r\n                    return\r\n                }\r\n            }\r\n\r\n            if (this.dataset.label && this.dataset.pars.length === 0 && (this.filtersData.isReadyForExecution === undefined || this.filtersData.isReadyForExecution)) {\r\n                this.loadFromDatasetManagement ? await this.loadPreSavePreview() : await this.loadPreviewData()\r\n                this.parameterSidebarVisible = false\r\n            } else {\r\n                this.parameterSidebarVisible = true\r\n            }\r\n        },\r\n        loadDataset() {\r\n            this.dataset = this.propDataset as any\r\n        },\r\n        async loadPreSavePreview() {\r\n            this.loading = true\r\n            const postData = { ...this.dataset }\r\n            postData.start = this.pagination.start\r\n            if (this.filtersData.filterStatus?.length > 0) {\r\n                postData.DRIVERS = this.formatDriversForPreviewData()\r\n            }\r\n            await this.$http\r\n                .post(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `1.0/datasets/preview`, postData, { headers: { 'X-Disable-Errors': 'true' } })\r\n                .then((response: AxiosResponse<any>) => {\r\n                    this.setPreviewColumns(response.data)\r\n                    this.rows = response.data.rows\r\n                    this.pagination.size = response.data.results\r\n                })\r\n                .catch((error) => {\r\n                    this.errorMessage = error.message\r\n                    this.errorMessageVisible = true\r\n                })\r\n            this.loading = false\r\n        },\r\n        async loadPreviewData() {\r\n            this.loading = true\r\n            const postData = { ...this.pagination }\r\n            if (this.sort) {\r\n                postData.sorting = this.sort\r\n            }\r\n            if (this.filter) {\r\n                postData.filters = this.filter\r\n            }\r\n            if (this.dataset.pars.length > 0) {\r\n                postData.pars = [...this.dataset.pars]\r\n            }\r\n            if (this.filtersData.filterStatus?.length > 0) {\r\n                postData.drivers = this.formatDriversForPreviewData()\r\n            }\r\n            await this.$http\r\n                .post(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/datasets/${this.dataset.label}/preview`, postData, { headers: { 'X-Disable-Errors': 'true' } })\r\n                .then((response: AxiosResponse<any>) => {\r\n                    this.setPreviewColumns(response.data)\r\n                    this.rows = response.data.rows\r\n                    this.pagination.size = response.data.results\r\n                })\r\n                .catch((error) => {\r\n                    this.errorMessage = error.message\r\n                    this.errorMessageVisible = true\r\n                })\r\n            this.loading = false\r\n        },\r\n        async loadDatasetDrivers() {\r\n            let hasError = false\r\n            if (this.dataset.label && this.dataset.id && this.dataset.dsTypeCd !== 'Prepared') {\r\n                await this.$http\r\n                    .post(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `3.0/datasets/${this.dataset.label}/filters`, { role: this.userRole })\r\n                    .then((response: AxiosResponse<any>) => {\r\n                        this.filtersData = response.data\r\n                        if (this.filtersData.filterStatus) {\r\n                            this.filtersData.filterStatus = this.filtersData.filterStatus.filter((filter: any) => filter.id)\r\n                        }\r\n                    })\r\n                    .catch(() => {\r\n                        hasError = true\r\n                    })\r\n                this.formatDrivers()\r\n            }\r\n            return hasError\r\n        },\r\n        formatDrivers() {\r\n            this.filtersData?.filterStatus?.forEach((el: any) => {\r\n                el.parameterValue = el.multivalue ? [] : [{ value: '', description: '' }]\r\n                if (el.driverDefaultValue?.length > 0) {\r\n                    let valueIndex = '_col0'\r\n                    let descriptionIndex = 'col1'\r\n                    if (el.metadata?.colsMap) {\r\n                        valueIndex = Object.keys(el.metadata?.colsMap).find((key: string) => el.metadata.colsMap[key] === el.metadata.valueColumn) as any\r\n                        descriptionIndex = Object.keys(el.metadata?.colsMap).find((key: string) => el.metadata.colsMap[key] === el.metadata.descriptionColumn) as any\r\n                    }\r\n                    el.parameterValue = el.driverDefaultValue.map((defaultValue: any) => {\r\n                        return { value: defaultValue.value ?? defaultValue[valueIndex], description: defaultValue.desc ?? defaultValue[descriptionIndex] }\r\n                    })\r\n                    if (el.type === 'DATE' && !el.selectionType && el.valueSelection === 'man_in' && el.showOnPanel === 'true') {\r\n                        el.parameterValue[0].value = moment(el.parameterValue[0].description?.split('#')[0]).toDate() as any\r\n                    }\r\n                }\r\n                if (el.data) {\r\n                    el.data = el.data.map((data: any) => {\r\n                        return this.formatParameterDataOptions(el, data)\r\n                    })\r\n                    if (el.data.length === 1) {\r\n                        el.parameterValue = [...el.data]\r\n                    }\r\n                }\r\n                if ((el.selectionType === 'COMBOBOX' || el.selectionType === 'LIST') && el.multivalue && el.mandatory && el.data.length === 1) {\r\n                    el.showOnPanel = 'false'\r\n                }\r\n                if (!el.parameterValue) {\r\n                    el.parameterValue = [{ value: '', description: '' }]\r\n                }\r\n                if (el.parameterValue[0] && !el.parameterValue[0].description) {\r\n                    el.parameterValue[0].description = el.parameterDescription ? el.parameterDescription[0] : ''\r\n                }\r\n            })\r\n        },\r\n        formatParameterDataOptions(parameter: any, data: any) {\r\n            const valueColumn = parameter.metadata.valueColumn\r\n            const descriptionColumn = parameter.metadata.descriptionColumn\r\n            const valueIndex = Object.keys(parameter.metadata.colsMap).find((key: string) => parameter.metadata.colsMap[key] === valueColumn)\r\n            const descriptionIndex = Object.keys(parameter.metadata.colsMap).find((key: string) => parameter.metadata.colsMap[key] === descriptionColumn)\r\n            return { value: valueIndex ? data[valueIndex] : '', description: descriptionIndex ? data[descriptionIndex] : '' }\r\n        },\r\n        formatDriversForPreviewData() {\r\n            let formattedDrivers = {}\r\n            this.filtersData?.filterStatus.forEach((filter: any) => {\r\n                formattedDrivers[filter.urlName] = filter.parameterValue\r\n            })\r\n            return formattedDrivers\r\n        },\r\n        async updatePagination(lazyParams: any) {\r\n            this.pagination.start = lazyParams.paginationStart\r\n            this.pagination.limit = lazyParams.paginationLimit\r\n            this.loadFromDatasetManagement ? await this.loadPreSavePreview() : await this.loadPreviewData()\r\n            this.parameterSidebarVisible = false\r\n        },\r\n        async onSort(event: any) {\r\n            this.sort = event\r\n            this.loadFromDatasetManagement ? await this.loadPreSavePreview() : await this.loadPreviewData()\r\n        },\r\n        async onFilter(event: any) {\r\n            this.filter = event\r\n            this.loadFromDatasetManagement ? await this.loadPreSavePreview() : await this.loadPreviewData()\r\n        },\r\n        setPreviewColumns(data: any) {\r\n            this.columns = []\r\n            for (let i = 1; i < data.metaData.fields.length; i++) {\r\n                this.columns.push({ header: data.metaData.fields[i].header, field: data.metaData.fields[i].name, type: data.metaData.fields[i].type })\r\n            }\r\n        },\r\n        closeDialog() {\r\n            this.dataset = null\r\n            this.rows = []\r\n            this.columns = []\r\n            this.pagination = { start: 0, limit: 15 }\r\n            this.sort = null\r\n            this.filter = null\r\n            this.errorMessageVisible = false\r\n            this.errorMessage = ''\r\n            this.parameterSidebarVisible = false\r\n            this.$emit('close')\r\n        },\r\n        async onExecute(datasetParameters: any[]) {\r\n            if (!this.dataset.pars) this.dataset.pars = []\r\n            this.dataset.pars = datasetParameters\r\n\r\n            this.loadFromDatasetManagement ? await this.loadPreSavePreview() : await this.loadPreviewData()\r\n            this.parameterSidebarVisible = false\r\n        },\r\n        setSidebarMode() {\r\n            this.sidebarMode = this.loadFromDatasetManagement ? 'datasetManagement' : 'workspaceView'\r\n        },\r\n        async onRoleChange(role: string) {\r\n            this.userRole = role as any\r\n            this.filtersData = {}\r\n            let hasError = false\r\n            if (this.dataset.drivers && this.dataset.drivers.length > 0) hasError = await this.loadDatasetDrivers()\r\n            if (!hasError && this.dataset.label && this.dataset.pars.length === 0 && (this.filtersData.isReadyForExecution === undefined || this.filtersData.isReadyForExecution)) {\r\n                this.loadFromDatasetManagement ? await this.loadPreSavePreview() : await this.loadPreviewData()\r\n                this.parameterSidebarVisible = false\r\n            } else {\r\n                this.parameterSidebarVisible = true\r\n            }\r\n        }\r\n    }\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.workspace-full-screen-dialog.p-dialog {\r\n    max-height: 100%;\r\n}\r\n.workspace-full-screen-dialog .p-dialog .p-dialog-content {\r\n    padding: 0;\r\n}\r\n.workspace-scrollable-table {\r\n    height: 100%;\r\n    .p-datatable-wrapper {\r\n        position: relative;\r\n        flex: 1;\r\n        max-width: 96vw;\r\n        overflow-x: auto;\r\n    }\r\n    .p-datatable {\r\n        max-width: 96vw;\r\n    }\r\n}\r\n\r\n.workspace-parameter-sidebar {\r\n    top: 35px !important;\r\n}\r\n.workspace-parameter-sidebar .kn-parameter-sidebar-buttons {\r\n    margin-bottom: 45px !important;\r\n}\r\n</style>\r\n"],"names":["_sfc_main","Dialog","mainStore","_openBlock","_createBlock","_withCtx","_createVNode","_withDirectives","Column","DataTable","_createElementVNode","_hoisted_1","_toDisplayString","_createElementBlock","_Fragment","_renderList","_normalizeStyle","_normalizeClass","_createTextVNode","Message","moment","_createCommentVNode"],"mappings":"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"}