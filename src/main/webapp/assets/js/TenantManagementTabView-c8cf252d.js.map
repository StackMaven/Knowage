{"version":3,"file":"TenantManagementTabView-c8cf252d.js","sources":["../../../../modules/managers/tenantManagement/TenantManagementTabView/DetailTab/TenantDetail.vue","../../../../modules/managers/tenantManagement/TenantManagementTabView/SelectionTableTab/SelectionTable.vue","../../../../modules/managers/tenantManagement/TenantManagementTabView/TenantManagementTabView.vue"],"sourcesContent":["<template>\r\n    <Card :style=\"tabViewDescriptor.card.style\">\r\n        <template #content>\r\n            <form class=\"p-fluid p-m-5\">\r\n                <div class=\"p-field\" :style=\"tabViewDescriptor.pField.style\">\r\n                    <span class=\"p-float-label\">\r\n                        <InputText\r\n                            id=\"MULTITENANT_NAME\"\r\n                            class=\"kn-material-input\"\r\n                            type=\"text\"\r\n                            :disabled=\"disableField\"\r\n                            v-model.trim=\"v$.tenant.MULTITENANT_NAME.$model\"\r\n                            :class=\"{\r\n                                'p-invalid': v$.tenant.MULTITENANT_NAME.$invalid && v$.tenant.MULTITENANT_NAME.$dirty\r\n                            }\"\r\n                            maxLength=\"20\"\r\n                            @blur=\"v$.tenant.MULTITENANT_NAME.$touch()\"\r\n                            @input=\"onFieldChange('MULTITENANT_NAME', $event.target.value)\"\r\n                            data-test=\"name-input\"\r\n                        />\r\n                        <label for=\"MULTITENANT_NAME\" class=\"kn-material-input-label\"> {{ $t('common.name') }} * </label>\r\n                    </span>\r\n                    <KnValidationMessages\r\n                        :vComp=\"v$.tenant.MULTITENANT_NAME\"\r\n                        :additionalTranslateParams=\"{\r\n                            fieldName: $t('common.name')\r\n                        }\"\r\n                    />\r\n                </div>\r\n                <div class=\"p-col-3 kn-height-full\">\r\n                    <input id=\"organizationImage\" type=\"file\" @change=\"uploadFile\" accept=\"image/png, image/jpeg\" />\r\n                    <label for=\"organizationImage\" v-tooltip.bottom=\"$t('common.upload')\">\r\n                        <i class=\"pi pi-upload\" />\r\n                    </label>\r\n                    <div class=\"imageContainer p-d-flex p-jc-center p-ai-center\">\r\n                        <i class=\"far fa-image fa-5x icon\" v-if=\"!tenant.MULTITENANT_IMAGE\" />\r\n                        <img :src=\"tenant.MULTITENANT_IMAGE\" v-if=\"tenant.MULTITENANT_IMAGE\" class=\"kn-no-select\" />\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </template>\r\n    </Card>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport { createValidations } from '@/helpers/commons/validationHelper'\r\nimport Card from 'primevue/card'\r\nimport useValidate from '@vuelidate/core'\r\nimport tabViewDescriptor from '../TenantManagementTabViewDescriptor.json'\r\nimport KnValidationMessages from '@/components/UI/KnValidatonMessages.vue'\r\nimport tenantDetailValidationDescriptor from './TenantDetailValidationDescriptor.json'\r\nimport { iMultitenant } from '../../TenantManagement'\r\nimport { AxiosResponse } from 'axios'\r\nimport mainStore from '../../../../../App.store'\r\n\r\nexport default defineComponent({\r\n    name: 'detail-tab',\r\n    components: {\r\n        Card,\r\n        KnValidationMessages\r\n    },\r\n    props: {\r\n        selectedTenant: {\r\n            type: Object,\r\n            required: false\r\n        },\r\n        listOfThemes: Array\r\n    },\r\n    computed: {\r\n        disableField() {\r\n            if (this.tenant.MULTITENANT_ID) return true\r\n            return false\r\n        }\r\n    },\r\n    emits: ['fieldChanged', 'roleTypeChanged'],\r\n    data() {\r\n        return {\r\n            tabViewDescriptor,\r\n            tenantDetailValidationDescriptor,\r\n            v$: useValidate() as any,\r\n            tenant: {} as iMultitenant,\r\n            themes: [] as any\r\n        }\r\n    },\r\n    validations() {\r\n        return {\r\n            tenant: createValidations('tenant', tenantDetailValidationDescriptor.validations.tenant)\r\n        }\r\n    },\r\n    setup() {\r\n        const store = mainStore()\r\n        return { store }\r\n    },\r\n    created() {\r\n        if (this.selectedTenant && Object.keys(this.selectedTenant).length > 0) {\r\n            this.tenant = { ...this.selectedTenant } as iMultitenant\r\n        } else {\r\n            this.tenant = {} as iMultitenant\r\n            this.tenant.MULTITENANT_THEME = 'sbi_default'\r\n        }\r\n        if (this.listOfThemes) this.themes = [...this.listOfThemes] as any\r\n    },\r\n    watch: {\r\n        async selectedTenant() {\r\n            this.v$.$reset()\r\n            this.tenant = { ...this.selectedTenant } as iMultitenant\r\n            await this.$http.get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `multitenant/image?TENANT=${this.tenant.MULTITENANT_NAME}`).then((response: AxiosResponse<any>) => {\r\n                this.tenant.MULTITENANT_IMAGE = response.data\r\n            })\r\n        },\r\n        listOfThemes() {\r\n            this.themes = [...(this.listOfThemes as any[])]\r\n        }\r\n    },\r\n    methods: {\r\n        onFieldChange(fieldName: string, value: any) {\r\n            this.$emit('fieldChanged', { fieldName, value })\r\n        },\r\n        uploadFile(event): void {\r\n            const reader = new FileReader()\r\n            reader.addEventListener(\r\n                'load',\r\n                () => {\r\n                    this.tenant.MULTITENANT_IMAGE = reader.result || ''\r\n                    this.onFieldChange('MULTITENANT_IMAGE', this.tenant.MULTITENANT_IMAGE)\r\n                },\r\n                false\r\n            )\r\n            if (event.srcElement.files[0] && event.srcElement.files[0].size < import.meta.env.VITE_MAX_UPLOAD_IMAGE_SIZE) {\r\n                reader.readAsDataURL(event.srcElement.files[0])\r\n                this.v$.$touch()\r\n            } else this.store.setError({ title: this.$t('common.error.uploading'), msg: this.$t('common.error.exceededSize', { size: '(200KB)' }) })\r\n        }\r\n    }\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n#organizationImage {\r\n    display: none;\r\n}\r\nlabel[for='organizationImage'] {\r\n    float: right;\r\n    transition: background-color 0.3s linear;\r\n    border-radius: 50%;\r\n    width: 2.25rem;\r\n    line-height: 1rem;\r\n    top: -5px;\r\n    height: 2.25rem;\r\n    padding: 0.571rem;\r\n    position: relative;\r\n    cursor: pointer;\r\n    user-select: none;\r\n    &:hover {\r\n        background-color: var(--kn-color-secondary);\r\n    }\r\n}\r\n.imageUploader {\r\n    .p-fileupload {\r\n        display: inline-block;\r\n        float: right;\r\n        .p-button {\r\n            background-color: transparent;\r\n            color: black;\r\n        }\r\n    }\r\n}\r\n.imageContainer {\r\n    height: 100%;\r\n    .icon {\r\n        color: var(--kn-color-secondary);\r\n    }\r\n    img {\r\n        height: auto;\r\n        max-height: 80px;\r\n        max-width: 80px;\r\n        border-radius: 50%;\r\n    }\r\n}\r\n</style>\r\n","<template>\r\n    <Card :style=\"tabViewDescriptor.card.style\">\r\n        <template #header>\r\n            <Toolbar class=\"kn-toolbar kn-toolbar--secondary\">\r\n                <template #start>\r\n                    {{ title }}\r\n                </template>\r\n            </Toolbar>\r\n        </template>\r\n        <template #content>\r\n            <DataTable\r\n                :value=\"dataList\"\r\n                v-model:selection=\"selectedCategories\"\r\n                class=\"p-datatable-sm kn-table\"\r\n                dataKey=\"ID\"\r\n                responsiveLayout=\"stack\"\r\n                breakpoint=\"960px\"\r\n                @rowSelect=\"setDirty\"\r\n                @rowUnselect=\"setDirty\"\r\n                @rowSelectAll=\"onSelectAll\"\r\n                @rowUnselectAll=\"onUnselectAll\"\r\n                :scrollable=\"true\"\r\n                data-test=\"data-table\"\r\n            >\r\n                <template #empty>\r\n                    {{ $t('common.info.noDataFound') }}\r\n                </template>\r\n                <Column selectionMode=\"multiple\" :style=\"tabViewDescriptor.column.style\" dataKey=\"ID\"></Column>\r\n                <Column field=\"LABEL\" :header=\"$t('common.name')\"></Column>\r\n                <Column v-if=\"dataList && dataList.length > 0 && dataList[0].DESCRIPTION\" field=\"DESCRIPTION\" :header=\"$t('common.description')\"></Column>\r\n            </DataTable>\r\n        </template>\r\n    </Card>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport Card from 'primevue/card'\r\nimport Column from 'primevue/column'\r\nimport DataTable from 'primevue/datatable'\r\nimport tabViewDescriptor from '../TenantManagementTabViewDescriptor.json'\r\n\r\nexport default defineComponent({\r\n    name: 'selection-table',\r\n    components: {\r\n        Card,\r\n        Column,\r\n        DataTable\r\n    },\r\n    props: {\r\n        title: String,\r\n        dataList: Array,\r\n        selectedData: Array\r\n    },\r\n    emits: ['changed'],\r\n    data() {\r\n        return {\r\n            tabViewDescriptor,\r\n            selectedCategories: [] as any\r\n        }\r\n    },\r\n    watch: {\r\n        selectedData() {\r\n            this.selectedCategories = this.selectedData\r\n        }\r\n    },\r\n    created() {\r\n        this.selectedCategories = this.selectedData\r\n    },\r\n    methods: {\r\n        setDirty() {\r\n            this.$emit('changed', this.selectedCategories)\r\n        },\r\n        onSelectAll(event) {\r\n            this.selectedCategories = event.data\r\n            this.$emit('changed', this.selectedCategories)\r\n        },\r\n        onUnselectAll() {\r\n            this.selectedCategories = []\r\n            this.$emit('changed', this.selectedCategories)\r\n        }\r\n    }\r\n})\r\n</script>\r\n","<template>\r\n    <Toolbar class=\"kn-toolbar kn-toolbar--secondary p-m-0\">\r\n        <template #start>{{ tenant.MULTITENANT_NAME }}</template>\r\n        <template #end>\r\n            <Button icon=\"pi pi-save\" class=\"p-button-text p-button-rounded p-button-plain\" @click=\"handleSubmit\" :disabled=\"buttonDisabled\" />\r\n            <Button icon=\"pi pi-times\" class=\"p-button-text p-button-rounded p-button-plain\" @click=\"closeTemplateConfirm\" />\r\n        </template>\r\n    </Toolbar>\r\n    <ProgressBar mode=\"indeterminate\" class=\"kn-progress-bar\" v-if=\"loading\" />\r\n    <div class=\"card\">\r\n        <TabView class=\"tabview-custom\" data-test=\"tab-view\">\r\n            <TabPanel>\r\n                <template #header>\r\n                    <span>{{ $t('managers.tenantManagement.detail.title') }}</span>\r\n                </template>\r\n\r\n                <TenantDetail :selectedTenant=\"tenant\" :listOfThemes=\"listOfThemes\" @fieldChanged=\"onFieldChange\" />\r\n            </TabPanel>\r\n\r\n            <TabPanel>\r\n                <template #header>\r\n                    <span>{{ $t('managers.tenantManagement.productTypes.title') }}</span>\r\n                </template>\r\n\r\n                <ProductTypes :title=\"$t('managers.tenantManagement.productTypes.title')\" :dataList=\"listOfProductTypes\" :selectedData=\"listOfSelectedProducts\" @changed=\"setSelectedProducts($event)\" />\r\n            </TabPanel>\r\n\r\n            <TabPanel>\r\n                <template #header>\r\n                    <span>{{ $t('managers.tenantManagement.dataSource.title') }}</span>\r\n                </template>\r\n\r\n                <ProductTypes :title=\"$t('managers.tenantManagement.dataSource.title')\" :dataList=\"listOfDataSources\" :selectedData=\"listOfSelectedDataSources\" @changed=\"setSelectedDataSources($event)\" />\r\n            </TabPanel>\r\n        </TabView>\r\n    </div>\r\n</template>\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport { iMultitenant, iTenantToSave } from '../TenantManagement'\r\nimport { AxiosResponse } from 'axios'\r\nimport TabView from 'primevue/tabview'\r\nimport TabPanel from 'primevue/tabpanel'\r\nimport tabViewDescriptor from './TenantManagementTabViewDescriptor.json'\r\nimport TenantDetail from './DetailTab/TenantDetail.vue'\r\nimport ProductTypes from './SelectionTableTab/SelectionTable.vue'\r\nimport useValidate from '@vuelidate/core'\r\nimport mainStore from '../../../../App.store'\r\n\r\nexport default defineComponent({\r\n    components: {\r\n        TabView,\r\n        TabPanel,\r\n        TenantDetail,\r\n        ProductTypes\r\n    },\r\n    props: {\r\n        selectedTenant: {\r\n            type: Object,\r\n            required: false\r\n        },\r\n        licenses: Array\r\n    },\r\n    emits: ['touched', 'closed', 'inserted'],\r\n    data() {\r\n        return {\r\n            tabViewDescriptor,\r\n            loading: false,\r\n            touched: false,\r\n            operation: 'insert',\r\n            v$: useValidate() as any,\r\n            tenant: {} as iMultitenant,\r\n            listOfThemes: [] as any,\r\n            availableLicenses: [] as any,\r\n            listOfProductTypes: [] as any,\r\n            listOfSelectedProducts: [] as any,\r\n            listOfDataSources: [] as any,\r\n            listOfSelectedDataSources: [] as any\r\n        }\r\n    },\r\n    computed: {\r\n        buttonDisabled(): any {\r\n            if ((this.listOfSelectedProducts && this.listOfSelectedProducts.length === 0) || (this.listOfSelectedDataSources && this.listOfSelectedDataSources.length === 0) || this.v$.$invalid) {\r\n                return true\r\n            }\r\n            return false\r\n        }\r\n    },\r\n    setup() {\r\n        const store = mainStore()\r\n        return { store }\r\n    },\r\n    mounted() {\r\n        if (this.selectedTenant) {\r\n            this.tenant = { ...this.selectedTenant } as iMultitenant\r\n        }\r\n        this.availableLicenses = this.licenses\r\n        this.loadAllData()\r\n        this.getTenantData()\r\n    },\r\n    watch: {\r\n        selectedTenant() {\r\n            this.tenant = { ...this.selectedTenant } as iMultitenant\r\n            this.getTenantData()\r\n        },\r\n        licenses() {\r\n            this.availableLicenses = this.licenses\r\n        }\r\n    },\r\n    methods: {\r\n        loadData(dataType: string) {\r\n            return this.$http.get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `multitenant${dataType}`)\r\n        },\r\n\r\n        async loadAllData() {\r\n            this.loading = true\r\n            await this.loadData('/themes').then((response: AxiosResponse<any>) => {\r\n                this.listOfThemes = response.data.root\r\n            })\r\n            await this.loadData('/datasources').then((response: AxiosResponse<any>) => {\r\n                this.listOfDataSources = response.data.root\r\n            })\r\n            await this.loadData('/producttypes').then((response: AxiosResponse<any>) => {\r\n                this.listOfProductTypes = response.data.root\r\n                this.filterArrayByTargetArr(this.listOfProductTypes, this.availableLicenses)\r\n            })\r\n            this.loading = false\r\n        },\r\n\r\n        filterArrayByTargetArr(sourceArr, targetArr) {\r\n            var newArr = sourceArr.filter((elem) => targetArr.find((target) => elem.LABEL == target.product))\r\n            this.listOfProductTypes = newArr\r\n        },\r\n\r\n        async getTenantData() {\r\n            this.loading = true\r\n            this.listOfSelectedProducts = null\r\n            this.listOfSelectedDataSources = null\r\n            this.touched = false\r\n\r\n            await this.loadData(`/producttypes?TENANT=${this.tenant.MULTITENANT_NAME}`).then((response: AxiosResponse<any>) => {\r\n                var productTypes = response.data.root\r\n\r\n                this.listOfSelectedProducts = []\r\n                this.copySelectedElement(productTypes, this.listOfSelectedProducts)\r\n            })\r\n            await this.loadData(`/datasources?TENANT=${this.tenant.MULTITENANT_NAME}`).then((response: AxiosResponse<any>) => {\r\n                var dataSources = response.data.root\r\n\r\n                this.listOfSelectedDataSources = []\r\n                this.copySelectedElement(dataSources, this.listOfSelectedDataSources)\r\n            })\r\n            this.loading = false\r\n        },\r\n        copySelectedElement(source, selected) {\r\n            for (var i = 0; i < source.length; i++) {\r\n                if (source[i].CHECKED == true) {\r\n                    selected.push(source[i])\r\n                }\r\n            }\r\n        },\r\n\r\n        async handleSubmit() {\r\n            if (this.v$.$invalid) {\r\n                return\r\n            }\r\n            let url = import.meta.env.VITE_RESTFUL_SERVICES_PATH + 'multitenant/save'\r\n\r\n            await this.$http.post(url, this.createTenantToSave()).then((response: AxiosResponse<any>) => {\r\n                if (this.selectedTenant) {\r\n                    this.store.setInfo({\r\n                        title: this.$t(this.tabViewDescriptor.operation[this.operation].toastTitle),\r\n                        msg: this.$t(this.tabViewDescriptor.operation.success)\r\n                    })\r\n                } else {\r\n                    this.store.setInfo({\r\n                        title: this.$t(this.tabViewDescriptor.operation[this.operation].toastTitle),\r\n                        msg: this.$t(this.tabViewDescriptor.operation.success) + response.data.NEW_USER,\r\n                        duration: 0\r\n                    })\r\n                }\r\n\r\n                this.$emit('inserted')\r\n                this.$router.replace('/tenants-management')\r\n            })\r\n        },\r\n\r\n        createTenantToSave() {\r\n            let tenantToSave = {} as iTenantToSave\r\n            tenantToSave.MULTITENANT_ID = this.tenant.MULTITENANT_ID ? '' + this.tenant.MULTITENANT_ID : ''\r\n            tenantToSave.MULTITENANT_NAME = this.tenant.MULTITENANT_NAME\r\n            this.tenant.MULTITENANT_THEME ? (tenantToSave.MULTITENANT_THEME = this.tenant.MULTITENANT_THEME) : ''\r\n            tenantToSave.MULTITENANT_IMAGE = this.tenant.MULTITENANT_IMAGE\r\n            tenantToSave.DS_LIST = this.listOfSelectedDataSources.map((dataSource) => {\r\n                delete dataSource.CHECKED\r\n                return dataSource\r\n            })\r\n            tenantToSave.PRODUCT_TYPE_LIST = this.listOfSelectedProducts.map((productType) => {\r\n                delete productType.CHECKED\r\n                return productType\r\n            })\r\n            return tenantToSave\r\n        },\r\n\r\n        closeTemplate() {\r\n            this.$router.push('/tenants-management')\r\n            this.$emit('closed')\r\n        },\r\n\r\n        onFieldChange(event) {\r\n            this.tenant[event.fieldName] = event.value\r\n            this.touched = true\r\n            this.$emit('touched')\r\n        },\r\n\r\n        setSelectedProducts(categories: any[]) {\r\n            this.listOfSelectedProducts = categories\r\n            this.touched = true\r\n            this.$emit('touched')\r\n        },\r\n\r\n        setSelectedDataSources(categories: any[]) {\r\n            this.listOfSelectedDataSources = categories\r\n            this.touched = true\r\n            this.$emit('touched')\r\n        },\r\n\r\n        closeTemplateConfirm() {\r\n            if (!this.touched) {\r\n                this.closeTemplate()\r\n            } else {\r\n                this.$confirm.require({\r\n                    message: this.$t('common.toast.unsavedChangesMessage'),\r\n                    header: this.$t('common.toast.unsavedChangesHeader'),\r\n                    icon: 'pi pi-exclamation-triangle',\r\n                    accept: () => {\r\n                        this.touched = false\r\n                        this.closeTemplate()\r\n                    }\r\n                })\r\n            }\r\n        }\r\n    }\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n::v-deep(.p-toolbar-group-right) {\r\n    height: 100%;\r\n}\r\n</style>\r\n"],"names":["_sfc_main","Card","useValidate","mainStore","_popScopeId","_hoisted_1","_openBlock","_createBlock","_normalizeStyle","_withCtx","_createElementVNode","_createVNode","_normalizeClass","_toDisplayString","_createCommentVNode","_createElementBlock","Column","DataTable","TabView","TabPanel","_Fragment"],"mappings":"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"}