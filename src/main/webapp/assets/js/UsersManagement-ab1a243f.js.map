{"version":3,"file":"UsersManagement-ab1a243f.js","sources":["../../../../modules/managers/usersManagement/UserRolesTab/RolesTab.vue","../../../../modules/managers/usersManagement/UserDetailTab/DetailFormTab.vue","../../../../modules/managers/usersManagement/UsersListBox.vue","../../../../modules/managers/usersManagement/UserAttributesTab/UserAttributesLovValueDialog.vue","../../../../modules/managers/usersManagement/UserAttributesTab/UserAttributesForm.vue","../../../../modules/managers/usersManagement/UsersManagement.vue"],"sourcesContent":["<template>\r\n    <div class=\"p-fluid p-jc-center kn-height-full\">\r\n        <div class=\"p-col-12\">\r\n            <Card>\r\n                <template #header>\r\n                    <Toolbar class=\"kn-toolbar kn-toolbar--secondary\">\r\n                        <template #start>\r\n                            {{ $t('managers.usersManagement.roles') }}\r\n                        </template>\r\n                    </Toolbar>\r\n                </template>\r\n                <template #content>\r\n                    <div v-if=\"selectedRoles.length > 1\">\r\n                        <div class=\"p-inputgroup\">\r\n                            <span class=\"p-float-label\">\r\n                                <Dropdown v-model=\"defaultRole\" showClear=\"true\" :options=\"selectedRolesWithEmpty()\" @change=\"onSelectDefaultRole($event)\" optionLabel=\"name\" class=\"p-inputtext p-component kn-material-input\">\r\n                                    <template #value=\"slotProps\">\r\n                                        <span>{{ slotProps.value?.name }}</span>\r\n                                    </template>\r\n                                    <template #option=\"slotProps\">\r\n                                        <span>{{ slotProps.option.name }}</span>\r\n                                    </template>\r\n                                </Dropdown>\r\n                                <label for=\"defaultRole\"> {{ $t('managers.usersManagement.form.defaultRole') }}</label>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    <p>\r\n                        <Message severity=\"info\" v-if=\"selectedRoles.length > 1\">{{ $t('managers.usersManagement.defaultRoleInfo') }}</Message>\r\n                    </p>\r\n                    <DataTable\r\n                        :value=\"rolesList\"\r\n                        @row-select-all=\"onRowSelect\"\r\n                        @row-unselect-all=\"onRowUnselect\"\r\n                        v-model:selection=\"selectedRoles\"\r\n                        class=\"p-datatable-sm kn-table\"\r\n                        dataKey=\"id\"\r\n                        :paginator=\"true\"\r\n                        :rows=\"20\"\r\n                        responsiveLayout=\"stack\"\r\n                        breakpoint=\"960px\"\r\n                        @rowSelect=\"onRowSelect\"\r\n                        @rowUnselect=\"onRowUnselect\"\r\n                    >\r\n                        <template #empty>\r\n                            {{ $t('common.info.noDataFound') }}\r\n                        </template>\r\n                        <Column selectionMode=\"multiple\" dataKey=\"id\" style=\"width:50px\"></Column>\r\n                        <Column field=\"name\" :header=\"$t('common.name')\"></Column>\r\n                    </DataTable>\r\n                </template>\r\n            </Card>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport Card from 'primevue/card'\r\nimport Dropdown from 'primevue/dropdown'\r\nimport Column from 'primevue/column'\r\nimport DataTable from 'primevue/datatable'\r\nimport Message from 'primevue/message'\r\nimport rolesTabDescriptor from './RolesTabDescriptor.json'\r\nimport { iRole } from '../UsersManagement'\r\n\r\nexport default defineComponent({\r\n    name: 'roles-tab',\r\n    components: {\r\n        Card,\r\n        Column,\r\n        DataTable,\r\n        Dropdown,\r\n        Message\r\n    },\r\n    props: {\r\n        defRole: Number,\r\n        rolesList: Array,\r\n        selected: Array\r\n    },\r\n    emits: ['changed', 'setDefaultRole'],\r\n    data() {\r\n        return {\r\n            defaultRole: null as null | iRole,\r\n            rolesTabDescriptor,\r\n            selectedRoles: [] as iRole[],\r\n            emptyOption: { id: null, name: this.$t('managers.usersManagement.emptyRolesOption'), value: '' }\r\n        }\r\n    },\r\n    mounted() {},\r\n    watch: {\r\n        selected: {\r\n            handler: function(selected: iRole[]) {\r\n                this.selectedRoles = selected\r\n                this.setDefaultRole(this.defRole)\r\n            }\r\n        },\r\n        defRole: {\r\n            handler: function(defRole) {\r\n                this.setDefaultRole(defRole)\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        setDefaultRole(defRole) {\r\n            if (this.selectedRoles) {\r\n                const defaultRoleObj = this.selectedRoles.find((role) => role.id === defRole)\r\n                this.defaultRole = defaultRoleObj ? defaultRoleObj : this.emptyOption\r\n            }\r\n        },\r\n        onRowSelect() {\r\n            this.$emit('changed', this.selectedRoles)\r\n        },\r\n        onRowUnselect() {\r\n            this.$emit('changed', this.selectedRoles)\r\n            if (this.selectedRoles?.length <= 1) {\r\n                this.defaultRole = null\r\n                this.onSelectDefaultRole()\r\n            }\r\n        },\r\n        onSelectDefaultRole() {\r\n            this.$emit('setDefaultRole', this.defaultRole ? this.defaultRole.id : null)\r\n        },\r\n        onSelectAll() {\r\n            this.$emit('changed', this.selectedRoles)\r\n            if (this.selectedRoles?.length <= 1) {\r\n                this.defaultRole = null\r\n                this.onSelectDefaultRole()\r\n            }\r\n        },\r\n        selectedRolesWithEmpty() {\r\n            const selecteRolesArray: iRole[] = this.selectedRoles ? [...this.selectedRoles] : []\r\n            selecteRolesArray.unshift(this.emptyOption)\r\n            return selecteRolesArray\r\n        }\r\n    }\r\n})\r\n</script>\r\n","<template>\r\n    <div class=\"p-fluid p-jc-center kn-height-full\">\r\n        <div class=\"p-col-12\">\r\n            <Card>\r\n                <template #header>\r\n                    <Toolbar class=\"kn-toolbar kn-toolbar--secondary\">\r\n                        <template #start> {{ $t('managers.usersManagement.detail') }} </template>\r\n                    </Toolbar>\r\n                </template>\r\n                <template #content>\r\n                    <div class=\"p-grid p-offset-1\" v-if=\"userDetailsForm.failedLoginAttempts >= 3\">\r\n                        <div class=\"p-col-9 p-md-9\">\r\n                            <InlineMessage severity=\"warn\">{{ $t('managers.usersManagement.blockedUserInfo') }}</InlineMessage>\r\n                        </div>\r\n                        <div class=\"p-col-3 p-md-3\">\r\n                            <Button @click=\"unlockUser\" icon=\"pi pi-lock-open\" :label=\"$t('managers.usersManagement.unlockUser')\" />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <form ref=\"detail-form\" class=\"p-m-5\">\r\n                        <div class=\"p-field\">\r\n                            <div class=\"p-inputgroup\">\r\n                                <span class=\"p-float-label\">\r\n                                    <InputText id=\"userId\" maxlength=\"100\" type=\"text\" :disabled=\"!formInsert\" v-model.trim=\"userDetailsForm.userId\" @change=\"onDataChange(vobj.userDetailsForm.userId)\" class=\"p-inputtext p-component kn-material-input\" />\r\n                                    <label for=\"userId\">{{ $t('managers.usersManagement.form.userId') }} *</label>\r\n                                </span>\r\n                            </div>\r\n                            <KnValidationMessages :vComp=\"vobj.userDetailsForm.userId\" :additionalTranslateParams=\"{ fieldName: $t('managers.usersManagement.form.userId') }\"></KnValidationMessages>\r\n                        </div>\r\n\r\n                        <div class=\"p-field\">\r\n                            <div class=\"p-inputgroup\">\r\n                                <span class=\"p-float-label\">\r\n                                    <InputText id=\"fullName\" maxlength=\"250\" type=\"text\" v-model.trim=\"userDetailsForm.fullName\" @change=\"onDataChange(vobj.userDetailsForm.fullName)\" class=\"p-inputtext p-component kn-material-input\" />\r\n                                    <label for=\"fullName\">{{ $t('managers.usersManagement.fullName') }} *</label>\r\n                                </span>\r\n                            </div>\r\n                            <KnValidationMessages :vComp=\"vobj.userDetailsForm.fullName\" :additionalTranslateParams=\"{ fieldName: $t('managers.usersManagement.fullName') }\"></KnValidationMessages>\r\n                        </div>\r\n\r\n                        <div class=\"p-field\">\r\n                            <div class=\"p-inputgroup\">\r\n                                <span class=\"p-float-label\">\r\n                                    <InputText id=\"password\" type=\"password\" v-model.trim=\"userDetailsForm.password\" @change=\"onDataChange(vobj.userDetailsForm.password)\" class=\"p-inputtext p-component kn-material-input\" />\r\n                                    <label for=\"password\">{{ $t('managers.usersManagement.form.password') }} *</label>\r\n                                </span>\r\n                            </div>\r\n                            <KnValidationMessages :vComp=\"vobj.userDetailsForm.password\" :additionalTranslateParams=\"{ fieldName: $t('managers.usersManagement.form.password') }\"></KnValidationMessages>\r\n                        </div>\r\n\r\n                        <div class=\"p-field\">\r\n                            <div class=\"p-inputgroup\">\r\n                                <span class=\"p-float-label\">\r\n                                    <InputText id=\"passwordConfirm\" type=\"password\" v-model.trim=\"userDetailsForm.passwordConfirm\" @change=\"onDataChange(vobj.userDetailsForm.passwordConfirm)\" class=\"p-inputtext p-component kn-material-input\" />\r\n                                    <label for=\"passwordConfirm\">{{ $t('managers.usersManagement.form.passwordConfirm') }} *</label>\r\n                                </span>\r\n                            </div>\r\n                            <KnValidationMessages\r\n                                :vComp=\"vobj.userDetailsForm.passwordConfirm\"\r\n                                :additionalTranslateParams=\"{ fieldName: $t('managers.usersManagement.form.passwordConfirm') }\"\r\n                                :specificTranslateKeys=\"{ sameAsPassword: 'managers.usersManagement.validation.sameAsPassword' }\"\r\n                            ></KnValidationMessages>\r\n                        </div>\r\n                    </form>\r\n                </template>\r\n            </Card>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import { defineComponent } from 'vue'\r\n    import useValidate from '@vuelidate/core'\r\n    import Card from 'primevue/card'\r\n    import InlineMessage from 'primevue/inlinemessage'\r\n    import KnValidationMessages from '@/components/UI/KnValidatonMessages.vue'\r\n\r\n    export default defineComponent({\r\n        name: 'roles-tab',\r\n        components: {\r\n            InlineMessage,\r\n            Card,\r\n            KnValidationMessages\r\n        },\r\n        emits: ['unlock', 'dataChanged'],\r\n        props: {\r\n            formValues: Object,\r\n            disabledUID: Boolean,\r\n            vobj: Object,\r\n            formInsert: {\r\n                type: Boolean,\r\n                default: false\r\n            }\r\n        },\r\n        watch: {\r\n            formValues: {\r\n                handler: function(values) {\r\n                    this.userDetailsForm = values\r\n                }\r\n            },\r\n            disabledUID: {\r\n                handler: function(value) {\r\n                    this.disableUsername = value\r\n                }\r\n            }\r\n        },\r\n        data() {\r\n            return {\r\n                v$: useValidate() as any,\r\n                userDetailsForm: {} as any,\r\n                defaultRole: null,\r\n                hiddenForm: true as Boolean,\r\n                disableUsername: true as Boolean,\r\n                loading: false as Boolean\r\n            }\r\n        },\r\n        created() {\r\n            this.userDetailsForm = this.formValues\r\n            this.disableUsername = this.disabledUID\r\n        },\r\n        methods: {\r\n            unlockUser() {\r\n                this.$emit('unlock')\r\n            },\r\n            onDataChange(v$Comp) {\r\n                v$Comp.$touch()\r\n                this.$emit('dataChanged')\r\n            }\r\n        }\r\n    })\r\n</script>\r\n","<template>\r\n    <Listbox\r\n        v-if=\"!load\"\r\n        class=\"kn-list--column\"\r\n        :options=\"users\"\r\n        :filter=\"true\"\r\n        :filterPlaceholder=\"$t('common.search')\"\r\n        optionLabel=\"userId\"\r\n        filterMatchMode=\"contains\"\r\n        :filterFields=\"usersManagementDescriptor.globalFilterFields\"\r\n        :emptyFilterMessage=\"$t('managers.widgetGallery.noResults')\"\r\n        @change=\"onUserSelect\"\r\n        data-test=\"users-list\"\r\n    >\r\n        <template #empty>{{ $t('common.info.noDataFound') }}</template>\r\n        <template #option=\"slotProps\">\r\n            <div class=\"kn-list-item\" data-test=\"list-item\">\r\n                <div class=\"kn-list-item-text\">\r\n                    <span>{{ slotProps.option.userId }}</span>\r\n                    <span class=\"kn-list-item-text-secondary\">{{ slotProps.option.fullName }}</span>\r\n                </div>\r\n                <Button v-if=\"slotProps.option.failedLoginAttempts >= 3\" icon=\"pi pi-lock\" class=\"p-button-text p-button-rounded p-button-plain\" />\r\n                <Button icon=\"pi pi-trash\" class=\"p-button-text p-button-rounded p-button-plain\" @click=\"onUserDelete(slotProps.option.id)\" :data-test=\"'deleteBtn'\" />\r\n            </div>\r\n        </template>\r\n    </Listbox>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport { iUser } from './UsersManagement'\r\n\r\nimport Listbox from 'primevue/listbox'\r\n\r\nimport usersManagementDescriptor from './UsersManagementDescriptor.json'\r\n\r\nexport default defineComponent({\r\n    name: 'users-list-box',\r\n    components: {\r\n        Listbox\r\n    },\r\n    emits: ['selectedUser', 'deleteUser'],\r\n    props: {\r\n        users: Array,\r\n        loading: Boolean\r\n    },\r\n    watch: {\r\n        users: {\r\n            handler: function(u) {\r\n                this.listUsers = u\r\n            }\r\n        },\r\n        loading: {\r\n            handler: function(l) {\r\n                this.load = l\r\n            }\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            listUsers: [] as iUser[],\r\n            load: false as Boolean,\r\n            selectedUser: null as iUser | null,\r\n            usersManagementDescriptor: usersManagementDescriptor\r\n        }\r\n    },\r\n    methods: {\r\n        onUserSelect(event: any) {\r\n            this.$emit('selectedUser', event.value)\r\n        },\r\n        async onUserDelete(id: number) {\r\n            this.$confirm.require({\r\n                message: this.$t('common.toast.deleteMessage', {\r\n                    item: 'user'\r\n                }),\r\n                header: this.$t('common.toast.deleteConfirmTitle'),\r\n                icon: 'pi pi-exclamation-triangle',\r\n                accept: async () => {\r\n                    this.$emit('deleteUser', id)\r\n                }\r\n            })\r\n        }\r\n    }\r\n})\r\n</script>\r\n","<template>\r\n    <Dialog :visible=\"dialogVisible\" :modal=\"true\" class=\"kn-dialog--toolbar--primary\" :closable=\"false\" :style=\"userAttributesLovValueDialogDescriptor.style\">\r\n        <template #header>\r\n            <Toolbar class=\"kn-toolbar kn-toolbar--primary p-col\">\r\n                <template #start>\r\n                    {{ attribute.attributeName }}\r\n                </template>\r\n                <template #end>\r\n                    <Button icon=\"pi pi-save\" class=\"p-button-text p-button-rounded p-button-plain\" :disabled=\"buttonDisabled\" @click=\"handleSubmit\" data-test=\"submit-button\" />\r\n                    <Button icon=\"pi pi-times\" class=\"p-button-text p-button-rounded p-button-plain\" @click=\"closeDialog\" />\r\n                </template>\r\n            </Toolbar>\r\n        </template>\r\n        <DataTable :value=\"lovValues\" v-model:selection=\"selectedLovValues\" dataKey=\"id\" responsiveLayout=\"scroll\" v-model:filters=\"filters\" filterDisplay=\"row\" :globalFilterFields=\"userAttributesLovValueDialogDescriptor.globalFilterFields\">\r\n            <template #header>\r\n                <div class=\"p-col-8 p-input-icon-left\">\r\n                    <i class=\"pi pi-search\" />\r\n                    <InputText class=\"kn-material-input p-col-12\" type=\"text\" v-model=\"filters['global'].value\" :placeholder=\"$t('common.search')\" badge=\"0\" data-test=\"search-input\" />\r\n                </div>\r\n            </template>\r\n            <Column :selectionMode=\"selectionMode\" dataKey=\"id\" :exportable=\"false\"></Column>\r\n            <Column field=\"value\" header=\"Value\" :sortable=\"true\"> </Column>\r\n        </DataTable>\r\n    </Dialog>\r\n</template>\r\n<script lang=\"ts\">\r\nimport { defineComponent, PropType } from 'vue'\r\nimport Dialog from 'primevue/dialog'\r\nimport DataTable from 'primevue/datatable'\r\nimport Column from 'primevue/column'\r\nimport { FilterOperator } from 'primevue/api'\r\nimport { filterDefault } from '@/helpers/commons/filterHelper'\r\nimport { iAttribute } from '../UsersManagement'\r\nimport userAttributesLovValueDialogDescriptor from './UserAttributesLovValueDialogDescriptor.json'\r\nimport { AxiosResponse } from 'axios'\r\n\r\nexport default defineComponent({\r\n    name: 'lovs-value-dialog',\r\n    components: { Dialog, DataTable, Column },\r\n    emits: ['closeDialog', 'saveLovValues'],\r\n    props: {\r\n        attribute: {\r\n            type: Object as PropType<iAttribute>,\r\n            required: true\r\n        },\r\n        dialogVisible: Boolean,\r\n        selection: Object as PropType<any>\r\n    },\r\n    watch: {\r\n        attribute() {\r\n            if (!this.attribute) return\r\n            this.loadAttributeValue()\r\n            this.selectionMode = this.attribute.multivalue ? 'multiple' : 'single'\r\n            this.selectedLovValues = this.attribute.multivalue ? [] : {}\r\n        }\r\n    },\r\n    created() {\r\n        this.loadAttributeValue()\r\n    },\r\n    data() {\r\n        return {\r\n            selectedLovValues: [] as Array<any> | Object,\r\n            lovValues: [\r\n                { id: 1, value: 'Bla bla' },\r\n                { id: 2, value: 'ohoooo' }\r\n            ],\r\n            userAttributesLovValueDialogDescriptor: userAttributesLovValueDialogDescriptor,\r\n            selectionMode: 'multiple',\r\n            filters: {\r\n                global: [filterDefault],\r\n                value: {\r\n                    operator: FilterOperator.AND,\r\n                    constraints: [filterDefault]\r\n                }\r\n            } as Object\r\n        }\r\n    },\r\n    methods: {\r\n        async loadAttributeValue() {\r\n            if (this.attribute?.lovId) {\r\n                await this.$http.get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/lovs/${this.attribute.lovId}/preview`).then((response: AxiosResponse<any>) => {\r\n                    this.lovValues = response.data.map((lovValue, index) => {\r\n                        return { value: lovValue, id: index }\r\n                    })\r\n                    this.loadSelectedValues()\r\n                })\r\n            }\r\n        },\r\n        loadSelectedValues() {\r\n            if (this.attribute.multivalue) {\r\n                this.selectedLovValues = []\r\n                if (Array.isArray(this.selection)) {\r\n                    const values = [] as Array<any>\r\n                    this.selection.forEach((selValue) => {\r\n                        const ind = this.lovValues.findIndex((lovValue) => lovValue.value == selValue)\r\n                        if (ind >= 0) {\r\n                            values.push(this.lovValues[ind])\r\n                        }\r\n                    })\r\n                    this.selectedLovValues = values\r\n                }\r\n            } else {\r\n                this.selectedLovValues = {}\r\n                const ind = this.lovValues.findIndex((lovValue) => lovValue.value == this.selection)\r\n                if (ind >= 0) {\r\n                    this.selectedLovValues = this.lovValues[ind]\r\n                }\r\n            }\r\n        },\r\n        closeDialog() {\r\n            this.$emit('closeDialog')\r\n        },\r\n        handleSubmit() {\r\n            this.$emit('saveLovValues', this.selectedLovValues)\r\n        }\r\n    }\r\n})\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.kn-toolbar button {\r\n    color: white;\r\n}\r\n</style>\r\n","<template>\r\n    <div class=\"p-fluid p-jc-center kn-height-full\">\r\n        <div class=\"p-col-12\">\r\n            <Card style=\"width: 100%; margin-bottom: 2em\">\r\n                <template #header>\r\n                    <Toolbar class=\"kn-toolbar kn-toolbar--secondary\">\r\n                        <template #start>\r\n                            {{ $t('managers.usersManagement.attributes') }}\r\n                        </template>\r\n                    </Toolbar>\r\n                </template>\r\n                <template #content>\r\n                    <div class=\"p-m-5\">\r\n                        <div class=\"p-field\" v-for=\"attribute in attributes\" :key=\"attribute.attributeId\">\r\n                            <div class=\"p-inputgroup\" v-if=\"modelValue[attribute.attributeId]\">\r\n                                <span class=\"p-float-label\">\r\n                                    <InputText :disabled=\"attribute.lovId\" class=\"p-inputtext p-component kn-material-input\" :id=\"attribute.attributeId\" @input=\"onInputChange(attribute, $event.target.value)\" type=\"text\" v-model=\"userAttributesForm[attribute.attributeId][attribute.attributeName]\" />\r\n                                    <label :for=\"attribute.attributeName\">{{ attribute.attributeName }}</label>\r\n                                </span>\r\n                                <Button v-if=\"attribute.lovId\" icon=\"pi pi-pencil\" class=\"p-button-text p-button-rounded p-button-plain\" @click=\"openLovValuesDialog(attribute)\" />\r\n                                <Button icon=\"pi pi-times-circle\" class=\"p-button-text p-button-rounded p-button-plain\" @click=\"eraseAttribute(attribute)\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </template>\r\n            </Card>\r\n        </div>\r\n    </div>\r\n    <UserAttributesLovValueDialog :attribute=\"selectedAttribute\" :selection=\"initialSelection\" :dialogVisible=\"lovDialogVisible\" @saveLovValues=\"onSaveLovValues\" @closeDialog=\";(lovDialogVisible = false), (selectedAttribute = null)\"> </UserAttributesLovValueDialog>\r\n</template>\r\n<script lang=\"ts\">\r\n    import { defineComponent, PropType } from 'vue'\r\n    import { iAttribute } from '../UsersManagement'\r\n    import UserAttributesLovValueDialog from './UserAttributesLovValueDialog.vue'\r\n\r\n    export default defineComponent({\r\n        components: { UserAttributesLovValueDialog },\r\n        props: {\r\n            attributes: {\r\n                type: Object as PropType<iAttribute[]>,\r\n                required: true\r\n            },\r\n            modelValue: {\r\n                type: Object as any,\r\n                required: true\r\n            }\r\n        },\r\n        data() {\r\n            return {\r\n                selectedAttribute: null as iAttribute | null,\r\n                lovDialogVisible: false,\r\n                userAttributesForm: {},\r\n                initialSelection: null as any\r\n            }\r\n        },\r\n        watch: {\r\n            modelValue: function(model) {\r\n                this.userAttributesForm = { ...model }\r\n            }\r\n        },\r\n        methods: {\r\n            onInputChange(attribute: iAttribute, value) {\r\n                const newObj = {}\r\n                newObj[attribute.attributeName] = value\r\n                const newValue = this.modelValue ? { ...this.modelValue } : {}\r\n                newValue[attribute.attributeId] = newObj\r\n                this.$emit('update:modelValue', newValue)\r\n                this.$emit('formDirty')\r\n            },\r\n            eraseAttribute(attr: iAttribute) {\r\n                this.onInputChange(attr, '')\r\n            },\r\n            openLovValuesDialog(attribute: iAttribute) {\r\n                // const path_matcher = /\\{;\\{[A-Za-z0-9;_]*\\}*/g\r\n\r\n                this.selectedAttribute = attribute\r\n                let value: any = null\r\n                value = this.userAttributesForm[attribute.attributeId][attribute.attributeName] as String\r\n\r\n                this.initialSelection = []\r\n                if (value) {\r\n                    if (this.selectedAttribute.multivalue) {\r\n                        if (this.selectedAttribute.syntax) {\r\n                            const match = /(?<=\\{;\\{)[A-Za-z0-9;_]*(?!\\}\\})/\r\n                            if (match.test(value)) {\r\n                                const ind = value.indexOf('{;{')\r\n                                const indEnd = value.indexOf('}}')\r\n                                this.initialSelection = value.substring(ind + 3, indEnd).split(';')\r\n                            }\r\n                        } else {\r\n                            this.initialSelection = value.split(',')?.map((val) => val.substring(1, val.length - 1))\r\n                        }\r\n                    }\r\n                }\r\n\r\n                this.lovDialogVisible = true\r\n            },\r\n            onSaveLovValues(selectedLovValues) {\r\n                let newValue = ''\r\n                if (this.selectedAttribute && Array.isArray(selectedLovValues)) {\r\n                    if (this.selectedAttribute.syntax) {\r\n                        newValue = selectedLovValues.reduce((prev, curr, ind) => {\r\n                            prev += ind > 0 ? ';' : ''\r\n                            prev += curr.value\r\n                            return prev\r\n                        }, '')\r\n                        newValue = `{;{${newValue}}}`\r\n                    } else {\r\n                        newValue = selectedLovValues.reduce((prev, curr, ind) => {\r\n                            prev += ind > 0 ? ',' : ''\r\n                            prev += `'${curr.value}'`\r\n                            return prev\r\n                        }, '')\r\n                    }\r\n                } else {\r\n                    newValue = selectedLovValues.value\r\n                }\r\n                if (this.selectedAttribute) {\r\n                    this.onInputChange(this.selectedAttribute, newValue)\r\n                }\r\n                this.lovDialogVisible = false\r\n                this.selectedAttribute = null\r\n            }\r\n        }\r\n    })\r\n</script>\r\n","<template>\r\n    <div class=\"kn-page kn-width-full-with-menu\">\r\n        <div class=\"kn-page-content p-grid p-m-0\">\r\n            <div class=\"kn-list--column p-col-4 p-sm-4 p-md-3 p-p-0\">\r\n                <Toolbar class=\"kn-toolbar kn-toolbar--primary\">\r\n                    <template #start>\r\n                        {{ $t('managers.usersManagement.title') }}\r\n                    </template>\r\n                    <template #end>\r\n                        <KnFabButton icon=\"fas fa-plus\" @click=\"showForm()\" data-test=\"open-form-button\"></KnFabButton>\r\n                    </template>\r\n                </Toolbar>\r\n                <ProgressBar mode=\"indeterminate\" class=\"kn-progress-bar\" v-if=\"loading\" data-test=\"progress-bar\" />\r\n                <div v-if=\"!loading\">\r\n                    <UsersListBox :users=\"users\" :loading=\"loading\" @selectedUser=\"onUserSelect\" @deleteUser=\"onUserDelete\" data-test=\"users-list\"></UsersListBox>\r\n                </div>\r\n            </div>\r\n\r\n            <KnHint :title=\"'managers.usersManagement.title'\" :hint=\"'managers.usersManagement.hint'\" v-if=\"hiddenForm\"></KnHint>\r\n            <div v-show=\"!hiddenForm\" class=\"p-col-8 p-sm-8 p-md-9 p-p-0 p-m-0 kn-page\">\r\n                <Toolbar class=\"kn-toolbar kn-toolbar--secondary\">\r\n                    <template #start>\r\n                        {{ userDetailsForm.userId }}\r\n                    </template>\r\n                    <template #end>\r\n                        <Button icon=\"pi pi-save\" class=\"p-button-text p-button-rounded p-button-plain\" :disabled=\"v$.userDetailsForm.$invalid\" @click=\"saveUser\" />\r\n                        <Button class=\"p-button-text p-button-rounded p-button-plain\" icon=\"pi pi-times\" @click=\"closeForm\" />\r\n                    </template>\r\n                </Toolbar>\r\n                <ProgressBar mode=\"indeterminate\" class=\"kn-progress-bar\" v-if=\"loading\" data-test=\"progress-bar\" />\r\n                <div class=\"kn-page-content\">\r\n                    <TabView class=\"tabview-custom kn-tab\" ref=\"usersFormTab\">\r\n                        <TabPanel>\r\n                            <template #header>\r\n                                <span>{{ $t('managers.usersManagement.detail') }}</span>\r\n                            </template>\r\n                            <DetailFormTab v-if=\"!hiddenForm\" :formInsert=\"formInsert\" :formValues=\"userDetailsForm\" :vobj=\"v$\" :disabledUID=\"disableUsername\" @dataChanged=\"onDataChange\" @unlock=\"unlockUser($event)\"></DetailFormTab>\r\n                        </TabPanel>\r\n\r\n                        <TabPanel>\r\n                            <template #header>\r\n                                <span>{{ $t('managers.usersManagement.roles') }}</span>\r\n                            </template>\r\n                            <RolesTab :defRole=\"defaultRole\" :rolesList=\"roles\" :selected=\"selectedRoles\" @changed=\"setSelectedRoles($event)\" @setDefaultRole=\"setDefaultRoleValue($event)\"></RolesTab>\r\n                        </TabPanel>\r\n\r\n                        <TabPanel>\r\n                            <template #header>\r\n                                <span>{{ $t('managers.usersManagement.attributes') }}</span>\r\n                            </template>\r\n                            <UserAttributesForm :attributes=\"attributes\" v-model=\"attributesForm\" @formDirty=\"onFormDirty\"></UserAttributesForm>\r\n                        </TabPanel>\r\n                    </TabView>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport { createValidations, ICustomValidatorMap } from '@/helpers/commons/validationHelper'\r\nimport { iUser, iRole, iAttribute } from './UsersManagement'\r\nimport useValidate from '@vuelidate/core'\r\nimport { AxiosResponse } from 'axios'\r\nimport TabView from 'primevue/tabview'\r\nimport TabPanel from 'primevue/tabpanel'\r\nimport KnFabButton from '@/components/UI/KnFabButton.vue'\r\nimport KnHint from '@/components/UI/KnHint.vue'\r\nimport RolesTab from './UserRolesTab/RolesTab.vue'\r\nimport DetailFormTab from './UserDetailTab/DetailFormTab.vue'\r\nimport UsersListBox from './UsersListBox.vue'\r\nimport UserAttributesForm from './UserAttributesTab/UserAttributesForm.vue'\r\nimport detailFormTabValidationDescriptor from './UserDetailTab/DetailFormTabValidationDescriptor.json'\r\nimport { sameAs } from '@vuelidate/validators'\r\nimport mainStore from '../../../App.store'\r\n\r\nexport default defineComponent({\r\n    name: 'user-management',\r\n    components: { UsersListBox, TabView, TabPanel, KnFabButton, KnHint, RolesTab, DetailFormTab, UserAttributesForm },\r\n    data() {\r\n        return {\r\n            v$: useValidate() as any,\r\n            apiUrl: import.meta.env.VITE_RESTFUL_SERVICES_PATH + '2.0/',\r\n            users: [] as iUser[],\r\n            roles: [] as iRole[],\r\n            detailFormTabValidationDescriptor: detailFormTabValidationDescriptor,\r\n            attributes: [],\r\n            userDetailsForm: {} as any,\r\n            dirty: false,\r\n            formInsert: true,\r\n            attributesForm: {},\r\n            tempAttributes: {},\r\n            defaultRole: null,\r\n            hiddenForm: true,\r\n            disableUsername: true,\r\n            loading: false,\r\n            selectedRoles: [] as iRole[]\r\n        }\r\n    },\r\n    validations() {\r\n        const customValidators: ICustomValidatorMap = {\r\n            'custom-required': (value) => {\r\n                return !this.formInsert || value\r\n            },\r\n            'custom-sameAs': sameAs(this.userDetailsForm.password)\r\n        }\r\n        const validationObject = {\r\n            userDetailsForm: createValidations('userDetailsForm', detailFormTabValidationDescriptor.validations.userDetailsForm, customValidators)\r\n        }\r\n\r\n        return validationObject\r\n    },\r\n    setup() {\r\n        const store = mainStore()\r\n        return { store }\r\n    },\r\n    async created() {\r\n        await this.loadAllUsers()\r\n        await this.loadAllRoles()\r\n        await this.loadAllAttributes()\r\n    },\r\n    methods: {\r\n        async loadAllUsers() {\r\n            this.loading = true\r\n            await this.$http\r\n                .get(this.apiUrl + 'users')\r\n                .then((response: AxiosResponse<any>) => {\r\n                    this.users = response.data\r\n                })\r\n                .finally(() => (this.loading = false))\r\n        },\r\n        async loadAllRoles() {\r\n            this.loading = true\r\n            await this.$http\r\n                .get(this.apiUrl + 'roles')\r\n                .then((response: AxiosResponse<any>) => {\r\n                    this.roles = response.data\r\n                })\r\n                .finally(() => (this.loading = false))\r\n        },\r\n        async loadAllAttributes() {\r\n            this.loading = true\r\n            await this.$http\r\n                .get(this.apiUrl + 'attributes')\r\n                .then((response: AxiosResponse<any>) => {\r\n                    this.attributes = response.data\r\n                })\r\n                .finally(() => (this.loading = false))\r\n        },\r\n        setDefaultRoleValue(defaultRole: any) {\r\n            this.defaultRole = defaultRole\r\n            this.dirty = true\r\n        },\r\n        setSelectedRoles(roles: iRole[]) {\r\n            this.selectedRoles = roles\r\n            this.dirty = true\r\n        },\r\n        async showForm() {\r\n            this.tempAttributes = {}\r\n            this.attributesForm = {}\r\n            this.disableUsername = false\r\n            this.hiddenForm = false\r\n            this.selectedRoles = []\r\n            this.userDetailsForm.id = null\r\n            this.userDetailsForm.userId = ''\r\n            this.userDetailsForm.fullName = ''\r\n            this.userDetailsForm.failedLoginAttempts = 0\r\n            this.userDetailsForm.sbiExtUserRoleses = []\r\n            this.userDetailsForm.sbiUserAttributeses = {}\r\n\r\n            this.formInsert = true\r\n            this.dirty = false\r\n            this.v$.$reset()\r\n\r\n            this.populateForms(this.userDetailsForm)\r\n        },\r\n        formatUserObject() {\r\n            const userToSave = { ...this.userDetailsForm }\r\n            delete userToSave.passwordConfirm\r\n            userToSave['defaultRoleId'] = this.defaultRole\r\n            for (var key in this.attributesForm) {\r\n                for (var key2 in this.attributesForm[key]) {\r\n                    this.attributesForm[key][key2] === '' ? delete this.attributesForm[key] : ''\r\n                }\r\n            }\r\n            userToSave['sbiUserAttributeses'] = { ...this.attributesForm }\r\n            userToSave['sbiExtUserRoleses'] = this.selectedRoles ? [...this.selectedRoles.map((selRole) => selRole.id)] : []\r\n            return userToSave\r\n        },\r\n        onFormDirty() {\r\n            this.dirty = true\r\n        },\r\n        saveOrUpdateUser(user: iUser) {\r\n            const endpointPath = `${import.meta.env.VITE_RESTFUL_SERVICES_PATH}2.0/users`\r\n            return this.userDetailsForm.id ? this.$http.put<any>(`${endpointPath}/${user.id}`, user) : this.$http.post<any>(endpointPath, user)\r\n        },\r\n        async saveUser() {\r\n            this.loading = true\r\n            if (!this.selectedRoles || this.selectedRoles.length == 0) {\r\n                this.store.setError({\r\n                    title: this.userDetailsForm.id ? this.$t('common.toast.updateTitle') : this.$t('managers.usersManagement.info.createTitle'),\r\n                    msg: this.$t('managers.usersManagement.error.noRolesSelected')\r\n                })\r\n                this.loading = false\r\n            } else {\r\n                const userToSave = this.formatUserObject()\r\n                this.saveOrUpdateUser(userToSave)\r\n                    .then((response: AxiosResponse<any>) => {\r\n                        this.afterSaveOrUpdate(response)\r\n                    })\r\n                    .catch((error) => {\r\n                        this.store.setError({\r\n                            title: error.title,\r\n                            msg: error.msg\r\n                        })\r\n                    })\r\n                    .finally(() => {\r\n                        this.loading = false\r\n                    })\r\n            }\r\n        },\r\n        async afterSaveOrUpdate(response: AxiosResponse<any>) {\r\n            this.dirty = false\r\n            await this.loadAllUsers()\r\n            this.formInsert = false\r\n            const id: number | null = response.data\r\n            const selectedUser = this.users.find((user) => {\r\n                return user.id === id\r\n            })\r\n            if (selectedUser) {\r\n                this.onUserSelect(selectedUser)\r\n            }\r\n            this.store.setInfo({\r\n                title: this.userDetailsForm.id ? this.$t('common.toast.updateTitle') : this.$t('managers.usersManagement.info.createTitle'),\r\n                msg: this.userDetailsForm.id ? this.$t('common.toast.updateSuccess') : this.$t('managers.usersManagement.info.createMessage')\r\n            })\r\n        },\r\n        onUserDelete(id: number) {\r\n            this.loading = true\r\n            this.$http\r\n                .delete(`${import.meta.env.VITE_RESTFUL_SERVICES_PATH}2.0/users/${id}`)\r\n                .then(() => {\r\n                    this.loadAllUsers()\r\n                    this.store.setInfo({\r\n                        title: this.$t('managers.usersManagement.info.deleteTitle'),\r\n                        msg: this.$t('managers.usersManagement.info.deleteMessage')\r\n                    })\r\n                })\r\n                .catch((error) => {\r\n                    this.store.setError({\r\n                        title: error.title,\r\n                        msg: error.msg\r\n                    })\r\n                })\r\n                .finally(() => {\r\n                    this.hiddenForm = true\r\n                    this.loading = false\r\n                })\r\n        },\r\n        async unlockUser() {\r\n            this.userDetailsForm.failedLoginAttempts = 0\r\n            await this.saveUser()\r\n        },\r\n        async onUserSelect(userSelected: any) {\r\n            this.formInsert = false\r\n            if (this.dirty) {\r\n                this.$confirm.require({\r\n                    message: this.$t('common.toast.unsavedChangesMessage'),\r\n                    header: this.$t('common.toast.unsavedChangesHeader'),\r\n                    icon: 'pi pi-exclamation-triangle',\r\n                    accept: () => {\r\n                        this.populateForms(userSelected)\r\n                        this.dirty = false\r\n                    },\r\n                    reject: () => {}\r\n                })\r\n            } else {\r\n                this.populateForms(userSelected)\r\n            }\r\n        },\r\n        populateForms(userObj: any) {\r\n            this.dirty = false\r\n            this.attributesForm = {}\r\n            this.hiddenForm = false\r\n            this.disableUsername = true\r\n            this.defaultRole = userObj.defaultRoleId\r\n            this.selectedRoles = this.getSelectedUserRoles(userObj.sbiExtUserRoleses)\r\n            this.userDetailsForm = { ...userObj }\r\n            this.populateAttributesForm(userObj.sbiUserAttributeses)\r\n        },\r\n        populateAttributesForm(userAttributeValues: any) {\r\n            const tmp = {}\r\n            this.attributes.forEach((attribute: iAttribute) => {\r\n                let obj = {}\r\n                obj[attribute.attributeName] = userAttributeValues && userAttributeValues[attribute.attributeId] ? userAttributeValues[attribute.attributeId][attribute.attributeName] : null\r\n                tmp[attribute.attributeId] = obj\r\n            })\r\n            this.attributesForm = { ...tmp }\r\n        },\r\n        getSelectedUserRoles(userRoles: number[]) {\r\n            return this.roles ? [...this.roles.filter((role) => userRoles && userRoles.find((userRoleId) => role.id === userRoleId))] : []\r\n        },\r\n        closeForm() {\r\n            if (this.dirty) {\r\n                this.$confirm.require({\r\n                    message: this.$t('common.toast.unsavedChangesMessage'),\r\n                    header: this.$t('common.toast.unsavedChangesHeader'),\r\n                    icon: 'pi pi-exclamation-triangle',\r\n                    accept: () => {\r\n                        this.hiddenForm = true\r\n                        this.dirty = false\r\n                    },\r\n                    reject: () => {}\r\n                })\r\n            } else {\r\n                this.hiddenForm = true\r\n            }\r\n        },\r\n        onDataChange() {\r\n            this.dirty = true\r\n        }\r\n    }\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.table-header {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n\r\n    @media screen and (max-width: 960px) {\r\n        align-items: start;\r\n    }\r\n}\r\n\r\n.record-image {\r\n    width: 50px;\r\n    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\r\n}\r\n\r\n.p-dialog .record-image {\r\n    width: 50px;\r\n    margin: 0 auto 2rem auto;\r\n    display: block;\r\n}\r\n\r\n.confirmation-content {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n}\r\n@media screen and (max-width: 960px) {\r\n    ::v-deep(.p-toolbar) {\r\n        flex-wrap: wrap;\r\n\r\n        .p-button {\r\n            margin-bottom: 0.25rem;\r\n        }\r\n    }\r\n}\r\n</style>\r\n"],"names":["_sfc_main","Card","Column","DataTable","Dropdown","Message","_hoisted_1","_hoisted_3","_hoisted_4","_hoisted_5","_openBlock","_createElementBlock","_createElementVNode","_hoisted_2","_createVNode","_withCtx","_toDisplayString","_hoisted_6","_createCommentVNode","_createBlock","InlineMessage","useValidate","Listbox","Dialog","_popScopeId","_normalizeStyle","_Fragment","_renderList","TabView","TabPanel","mainStore","_withDirectives"],"mappings":"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"}