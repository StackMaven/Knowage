{"version":3,"file":"BusinessModelCatalogueDetail-1716ee8b.js","sources":["../../../../modules/managers/businessModelCatalogue/cards/businessModelDetailsCard/GenerateDatamartCard.vue","../../../../modules/managers/businessModelCatalogue/metaweb/metawebSelectDialog/MetawebSelectDialog.vue","../../../../modules/managers/businessModelCatalogue/metaweb/businessModel/tabs/propertyListTab/MetawebBusinessPropertyListTab.vue","../../../../../node_modules/fast-json-patch/module/helpers.mjs","../../../../../node_modules/fast-json-patch/module/core.mjs","../../../../../node_modules/fast-json-patch/module/duplex.mjs","../../../../../node_modules/fast-json-patch/index.mjs","../../../../modules/managers/businessModelCatalogue/metaweb/businessModel/dialogs/MetawebBusinessClassDialog.vue","../../../../modules/managers/businessModelCatalogue/metaweb/businessModel/dialogs/businessViewWizard/MetawebBusinessViewWizardStepOne.vue","../../../../modules/managers/businessModelCatalogue/metaweb/businessModel/tableAssociator/MetawebTableAssociator.vue","../../../../modules/managers/businessModelCatalogue/metaweb/businessModel/dialogs/MetawebBusinessViewDialog.vue","../../../../modules/managers/businessModelCatalogue/metaweb/businessModel/tabs/metawebAttributesTab/dialogs/metawebAttributeDetail/MetawebAttributeDetailDialog.vue","../../../../modules/managers/businessModelCatalogue/metaweb/businessModel/tabs/metawebAttributesTab/dialogs/metawebAttributeUnusedField/MetawebAttributeUnusedFieldDialog.vue","../../../../modules/managers/businessModelCatalogue/metaweb/businessModel/tabs/metawebAttributesTab/MetawebAttributesTab.vue","../../../../modules/managers/businessModelCatalogue/metaweb/businessModel/tabs/inboundRelationships/MetawebInboundRelationships.vue","../../../../modules/managers/businessModelCatalogue/metaweb/businessModel/tabs/outboundRelationships/MetawebOutboundRelationships.vue","../../../../modules/managers/businessModelCatalogue/metaweb/businessModel/tabs/physicalTable/metawebAddPhysicalTableDialog/MetawebAddPhysicalTableDialog.vue","../../../../modules/managers/businessModelCatalogue/metaweb/businessModel/tabs/physicalTable/MetawebPhysicalTableTab.vue","../../../../modules/managers/businessModelCatalogue/metaweb/businessModel/tabs/joinRelationships/MetawebJoinRelationships.vue","../../../../modules/managers/businessModelCatalogue/metaweb/businessModel/tabs/filterTab/MetawebFilterTab.vue","../../../../modules/managers/businessModelCatalogue/metaweb/businessModel/tabs/calculatedField/MetawebCalculatedField.vue","../../../../modules/managers/businessModelCatalogue/metaweb/businessModel/MetawebBusinessModel.vue","../../../../modules/managers/businessModelCatalogue/metaweb/physicalModel/tabs/MetawebForeignKeyTab.vue","../../../../modules/managers/businessModelCatalogue/metaweb/physicalModel/metawebPhysicalModelList/MetawebPhysicalModelList.vue","../../../../modules/managers/businessModelCatalogue/metaweb/physicalModel/tabs/MetawebPropertyListTab.vue","../../../../modules/managers/businessModelCatalogue/metaweb/physicalModel/metawebPhysicalModelUpdateDialog/MetawebUpdateChangedLists.vue","../../../../modules/managers/businessModelCatalogue/metaweb/physicalModel/metawebPhysicalModelUpdateDialog/MetawebUpdatePhysicalTablesSelect.vue","../../../../modules/managers/businessModelCatalogue/metaweb/physicalModel/metawebPhysicalModelUpdateDialog/MetawebPhysicalModelUpdateDialog.vue","../../../../modules/managers/businessModelCatalogue/metaweb/physicalModel/MetawebPhysicalModel.vue","../../../../modules/managers/businessModelCatalogue/metaweb/invalidRelationshipsDialog/MetawebInvalidRelationshipsDialog.vue","../../../../modules/managers/businessModelCatalogue/metaweb/Metaweb.vue","../../../../modules/managers/businessModelCatalogue/cards/businessModelDetailsCard/BusinessModelDetailsCard.vue","../../../../modules/managers/businessModelCatalogue/cards/businessModelDriversCard/BusinessModelDriverDetail.vue","../../../../modules/managers/businessModelCatalogue/cards/businessModelDriversCard/BusinessModelDriversCard.vue","../../../../modules/managers/businessModelCatalogue/cards/businessModelVersionsCard/BusinessModelVersionsCard.vue","../../../../modules/managers/businessModelCatalogue/cards/metadataCard/MetadataCard.vue","../../../../modules/managers/businessModelCatalogue/BusinessModelCatalogueDetail.vue"],"sourcesContent":["<template>\r\n    <Dialog :style=\"generateDatamartCardDescriptor.dialog.style\" :visible=\"true\" :modal=\"true\" class=\"p-fluid kn-dialog--toolbar--primary\" :header=\"$t('managers.businessModelManager.generateDatamart')\" :closable=\"false\" aria-label=\"Generate Datamart Options\">\r\n        <p>{{ $t('managers.businessModelManager.generateDatamartHint') }}</p>\r\n        <div class=\"p-m-5\">\r\n            <InputSwitch id=\"advanced-options\" class=\"p-mr-2\" v-model=\"showAdvancedOptions\" />\r\n            <label for=\"advanced-options\" class=\"kn-material-input-label\">{{ $t('managers.businessModelManager.showAdvancedOptions') }}</label>\r\n        </div>\r\n\r\n        <form class=\"p-fluid p-m-2\" v-if=\"showAdvancedOptions\">\r\n            <div class=\"p-field\">\r\n                <span class=\"p-float-label\">\r\n                    <InputText id=\"modelName\" class=\"kn-material-input\" type=\"text\" v-model.trim=\"modelName\" />\r\n                    <label for=\"modelName\" class=\"kn-material-input-label\"> {{ $t('managers.businessModelManager.modelName') }}</label>\r\n                </span>\r\n            </div>\r\n            <div class=\"p-field\">\r\n                <span class=\"p-float-label\">\r\n                    <InputText id=\"schemaName\" class=\"kn-material-input\" type=\"text\" v-model.trim=\"schemaName\" />\r\n                    <label for=\"schemaName\" class=\"kn-material-input-label\"> {{ $t('managers.businessModelManager.schemaName') }}</label>\r\n                </span>\r\n            </div>\r\n            <div class=\"p-field\">\r\n                <span class=\"p-float-label\">\r\n                    <InputText id=\"catalogName\" class=\"kn-material-input\" type=\"text\" v-model.trim=\"catalogName\" />\r\n                    <label for=\"catalogName\" class=\"kn-material-input-label\"> {{ $t('managers.businessModelManager.catalogName') }}</label>\r\n                </span>\r\n            </div>\r\n            <div class=\"p-d-flex p-mt-4\">\r\n                <span class=\"p-field-checkbox p-mr-3\">\r\n                    <Checkbox v-model=\"isGeneratedForRegistry\" :binary=\"true\" aria-label=\"Generate for Registry\" />\r\n                    <label>{{ $t('managers.businessModelManager.forRegistry') }}</label>\r\n                </span>\r\n                <span class=\"p-field-checkbox\">\r\n                    <Checkbox v-model=\"includeSources\" :binary=\"true\" aria-label=\"Include Sources\" />\r\n                    <label>{{ $t('managers.businessModelManager.includeSources') }}</label>\r\n                </span>\r\n            </div>\r\n        </form>\r\n\r\n        <template #footer>\r\n            <Button class=\"kn-button kn-button--secondary\" :label=\"$t('common.close')\" @click=\"closeTemplate\"></Button>\r\n            <Button class=\"kn-button kn-button--primary\" :label=\"$t('common.save')\" @click=\"generateDatamart\"></Button>\r\n        </template>\r\n    </Dialog>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport { AxiosResponse } from 'axios'\r\nimport Checkbox from 'primevue/checkbox'\r\nimport Dialog from 'primevue/dialog'\r\nimport InputSwitch from 'primevue/inputswitch'\r\nimport generateDatamartCardDescriptor from './GenerateDatamartCardDescriptor.json'\r\nimport mainStore from '../../../../../App.store'\r\n\r\nexport default defineComponent({\r\n    name: 'generate-datamart-card',\r\n    components: {\r\n        Checkbox,\r\n        Dialog,\r\n        InputSwitch\r\n    },\r\n    props: {\r\n        businessModel: {\r\n            type: Object,\r\n            required: true\r\n        },\r\n        user: {\r\n            type: Object,\r\n            required: true\r\n        }\r\n    },\r\n    emits: ['generated', 'close'],\r\n    watch: {\r\n        businessModel() {\r\n            this.loadBusinessModel()\r\n        }\r\n    },\r\n    setup() {\r\n        const store = mainStore()\r\n        return { store }\r\n    },\r\n    async created() {\r\n        this.loadBusinessModel()\r\n        this.loadUser()\r\n        await this.loadModelInfo()\r\n    },\r\n    data() {\r\n        return {\r\n            generateDatamartCardDescriptor,\r\n            showAdvancedOptions: false,\r\n            model: {},\r\n            currentUser: {},\r\n            modelName: '',\r\n            schemaName: '',\r\n            catalogName: '',\r\n            isGeneratedForRegistry: false,\r\n            includeSources: false\r\n        }\r\n    },\r\n    methods: {\r\n        loadBusinessModel() {\r\n            this.model = this.businessModel\r\n            this.modelName = this.businessModel.name\r\n        },\r\n        loadUser() {\r\n            this.currentUser = this.user\r\n        },\r\n        async loadModelInfo() {\r\n            await this.$http.get(`/knowagemeta/restful-services/1.0/metaWeb/modelInfos/${this.businessModel.id}?user_id=${this.user.userUniqueIdentifier}`).then((response: AxiosResponse<any>) => {\r\n                if (response.data.schemaName) {\r\n                    this.schemaName = response.data.schemaName\r\n                }\r\n                if (response.data.catalogName) {\r\n                    this.catalogName = response.data.catalogName\r\n                }\r\n            })\r\n        },\r\n        generateDatamart() {\r\n            const url =\r\n                `/knowagemeta/restful-services/1.0/metaWeb/buildModel/${this.businessModel.id}?user_id=${this.user.userId}` +\r\n                `&model=${encodeURIComponent(this.modelName)}&schema=${this.schemaName}&catalog=${this.catalogName}&registry=${this.isGeneratedForRegistry}&includeSources=${this.includeSources}`\r\n            this.$http.get(url).then(() => {\r\n                this.store.setInfo({\r\n                    title: this.$t('common.toast.createTitle'),\r\n                    msg: this.$t('common.toast.success')\r\n                })\r\n                this.$emit('generated')\r\n            })\r\n        },\r\n        closeTemplate() {\r\n            this.$emit('close')\r\n        }\r\n    }\r\n})\r\n</script>\r\n","<template>\r\n    <Dialog id=\"metaweb-select-dialog\" class=\"metaweb-dialog remove-padding p-fluid kn-dialog--toolbar--primary\" :contentStyle=\"metawebSelectDialogDescriptor.dialog.style\" :visible=\"visible\" :modal=\"false\" :closable=\"false\" position=\"right\" :baseZIndex=\"1\" :autoZIndex=\"true\">\r\n        <template #header>\r\n            <Toolbar class=\"kn-toolbar kn-toolbar--primary p-p-0 p-m-0 p-col-12\">\r\n                <template #start>\r\n                    {{ businessModel?.name }}\r\n                </template>\r\n                <template #end>\r\n                    <Button class=\"metaweb-select-dialog-button kn-button p-button-text p-m-2\" :label=\"$t('common.close')\" @click=\"closeDialog\"></Button>\r\n                    <Button class=\"metaweb-select-dialog-button kn-button p-button-text\" :label=\"$t('common.continue')\" @click=\"onContinue\"></Button>\r\n                </template>\r\n            </Toolbar>\r\n        </template>\r\n        <ProgressBar mode=\"indeterminate\" class=\"kn-progress-bar\" v-if=\"loading\" />\r\n\r\n        <DataTable v-else :value=\"rows\" class=\"p-datatable-sm kn-table p-ml-1\" :scrollable=\"true\" scrollHeight=\"100%\" v-model:filters=\"filters\" :globalFilterFields=\"metawebSelectDialogDescriptor.globalFilterFields\" @filter=\"onRowsFiltered\">\r\n            <template #empty>\r\n                {{ $t('common.info.noDataFound') }}\r\n            </template>\r\n\r\n            <template #header>\r\n                <div class=\"table-header p-d-flex\">\r\n                    <span class=\"p-input-icon-left p-mr-3 p-col-12\">\r\n                        <i class=\"pi pi-search\" />\r\n                        <InputText class=\"kn-material-input\" v-model=\"filters['global'].value\" :placeholder=\"$t('common.search')\" />\r\n                    </span>\r\n                </div>\r\n            </template>\r\n\r\n            <Column field=\"value\" :header=\"$t('metaweb.selectDialog.tableName')\" style=\"flex: 5\"></Column>\r\n            <Column :header=\"$t('metaweb.physicalModel.title')\">\r\n                <template #header>\r\n                    <Checkbox class=\"p-mr-2\" v-model=\"allPhysicalSelected\" :binary=\"true\" @change=\"setAllChecked('physical')\" />\r\n                </template>\r\n                <template #body=\"slotProps\">\r\n                    <Checkbox v-model=\"selected[slotProps.data.value].physical\" :binary=\"true\" @change=\"setChecked(slotProps.data, 'physical')\" />\r\n                </template>\r\n            </Column>\r\n            <Column :header=\"$t('metaweb.businessModel.title')\">\r\n                <template #header>\r\n                    <Checkbox class=\"p-mr-2\" v-model=\"allBusinessSelected\" :binary=\"true\" @change=\"setAllChecked('business')\" />\r\n                </template>\r\n                <template #body=\"slotProps\">\r\n                    <Checkbox v-model=\"selected[slotProps.data.value].business\" :binary=\"true\" @change=\"setChecked(slotProps.data, 'business')\" />\r\n                </template>\r\n            </Column>\r\n        </DataTable>\r\n    </Dialog>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent, PropType } from 'vue'\r\nimport { AxiosResponse } from 'axios'\r\nimport { iBusinessModel } from '../../BusinessModelCatalogue'\r\nimport { filterDefault } from '@/helpers/commons/filterHelper'\r\nimport Checkbox from 'primevue/checkbox'\r\nimport Column from 'primevue/column'\r\nimport DataTable from 'primevue/datatable'\r\nimport Dialog from 'primevue/dialog'\r\nimport metawebSelectDialogDescriptor from '@/modules/managers/businessModelCatalogue/metaweb/metawebSelectDialog/MetawebSelectDialogDescriptor.json'\r\nimport mainStore from '../../../../../App.store'\r\n\r\nexport default defineComponent({\r\n    name: 'metaweb-select-dialog',\r\n    components: { Checkbox, Column, DataTable, Dialog },\r\n    props: { visible: { type: Boolean }, selectedBusinessModel: { type: Object as PropType<iBusinessModel> } },\r\n    emits: ['close', 'metaSelected'],\r\n    data() {\r\n        return {\r\n            metawebSelectDialogDescriptor,\r\n            businessModel: null as iBusinessModel | null,\r\n            datasourceStructure: null as any,\r\n            rows: [] as { value: string }[],\r\n            selected: {} as any,\r\n            allPhysicalSelected: false,\r\n            allBusinessSelected: false,\r\n            filters: {\r\n                global: [filterDefault]\r\n            } as Object,\r\n            filteredRows: [] as { value: string }[],\r\n            loading: false\r\n        }\r\n    },\r\n    watch: {\r\n        async businessModel() {\r\n            await this.loadData()\r\n        },\r\n        async visible(value: boolean) {\r\n            if (value) {\r\n                this.loading = true\r\n                await this.loadDatasourceStructure()\r\n                this.loadRows()\r\n                this.loading = false\r\n            }\r\n        }\r\n    },\r\n    setup() {\r\n        const store = mainStore()\r\n        return { store }\r\n    },\r\n    async created() {\r\n        await this.loadData()\r\n    },\r\n    methods: {\r\n        async loadData() {\r\n            this.loading = true\r\n            this.loadBusinessModel()\r\n            await this.loadDatasourceStructure()\r\n            this.loadRows()\r\n            this.loading = false\r\n        },\r\n        loadBusinessModel() {\r\n            this.businessModel = this.selectedBusinessModel as iBusinessModel\r\n        },\r\n        async loadDatasourceStructure() {\r\n            if (this.businessModel?.dataSourceId) {\r\n                let url = `2.0/datasources/structure/${this.businessModel.dataSourceId}?`\r\n                const urlParams = {} as any\r\n                if (this.businessModel.tablePrefixLike) urlParams.tablePrefixLike = this.businessModel.tablePrefixLike\r\n                if (this.businessModel.tablePrefixNotLike) urlParams.tablePrefixNotLike = this.businessModel.tablePrefixNotLike\r\n                await this.$http.get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + url, { params: urlParams }).then((response: AxiosResponse<any>) => (this.datasourceStructure = response.data))\r\n            }\r\n        },\r\n        loadRows() {\r\n            this.rows = []\r\n            if (this.datasourceStructure) {\r\n                Object.keys(this.datasourceStructure).forEach((key: string) => {\r\n                    this.rows.push({ value: key })\r\n                    this.selected[key] = { physical: false, business: false }\r\n                })\r\n            }\r\n        },\r\n        setChecked(row: { value: string }, typeChecked: string) {\r\n            if (typeChecked === 'business' && this.selected[row.value].business) {\r\n                this.selected[row.value].physical = true\r\n            } else if (typeChecked === 'physical' && !this.selected[row.value].physical) {\r\n                this.selected[row.value].business = false\r\n            }\r\n        },\r\n        setAllChecked(typeChecked: string) {\r\n            Object.keys(this.selected).forEach((key: string) => {\r\n                if (this.checkIfTheSelectedIsInFilteredRows(key)) {\r\n                    if (typeChecked === 'business') {\r\n                        this.selected[key].business = this.allBusinessSelected\r\n                        if (this.allBusinessSelected) {\r\n                            this.selected[key].physical = true\r\n                            this.allPhysicalSelected = true\r\n                        }\r\n                    } else {\r\n                        this.selected[key].physical = this.allPhysicalSelected\r\n                        if (!this.allPhysicalSelected) {\r\n                            this.selected[key].business = false\r\n                            this.allBusinessSelected = false\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n        },\r\n        checkIfTheSelectedIsInFilteredRows(key: string) {\r\n            const index = this.filteredRows.findIndex((el: { value: string }) => el.value === key)\r\n            return index !== -1\r\n        },\r\n        closeDialog() {\r\n            this.$emit('close')\r\n            this.filters['global'].value = ''\r\n            this.selected = {}\r\n            this.allPhysicalSelected = false\r\n            this.allBusinessSelected = false\r\n        },\r\n        async onContinue() {\r\n            if (!this.checkIfPhysicalModelIsSelected()) {\r\n                this.store.setError({\r\n                    title: this.$t('common.error.generic'),\r\n                    msg: this.$t('metaweb.selectDialog.noPhysicalModelsSelectedError')\r\n                })\r\n                return\r\n            }\r\n\r\n            await this.sendCheckedMetaweb()\r\n        },\r\n        async sendCheckedMetaweb() {\r\n            this.loading = true\r\n            const physicalModels = [] as string[]\r\n            const businessModels = [] as string[]\r\n\r\n            this.prepareDataForPost(physicalModels, businessModels)\r\n\r\n            await this.$http\r\n                .post(import.meta.env.VITE_META_API_URL + `/1.0/metaWeb/create`, { datasourceId: '' + this.businessModel?.dataSourceId, physicalModels: physicalModels, businessModels: businessModels, modelName: this.businessModel?.name })\r\n                .then((response: AxiosResponse<any>) => {\r\n                    this.$emit('metaSelected', response.data)\r\n                })\r\n                .catch(() => {})\r\n\r\n            this.loading = false\r\n        },\r\n        prepareDataForPost(physicalModels, businessModels) {\r\n            Object.keys(this.selected).forEach((key: string) => {\r\n                if (this.selected[key].physical) physicalModels.push(key)\r\n                if (this.selected[key].business) businessModels.push(key)\r\n            })\r\n        },\r\n        checkIfPhysicalModelIsSelected() {\r\n            let isSelected = false\r\n            const keys = Object.keys(this.selected)\r\n\r\n            for (let i = 0; i < keys.length; i++) {\r\n                if (this.selected[keys[i]].physical) {\r\n                    isSelected = true\r\n                    break\r\n                }\r\n            }\r\n\r\n            return isSelected\r\n        },\r\n        onRowsFiltered(event: any) {\r\n            this.filteredRows = event.filteredValue\r\n            this.allPhysicalSelected = true\r\n            this.allBusinessSelected = true\r\n\r\n            if (this.filteredRows.length === 0) {\r\n                this.allPhysicalSelected = false\r\n                this.allBusinessSelected = false\r\n            }\r\n\r\n            for (let i = 0; i < this.filteredRows.length; i++) {\r\n                if (!this.selected[this.filteredRows[i].value].physical) {\r\n                    this.allPhysicalSelected = false\r\n                }\r\n                if (!this.selected[this.filteredRows[i].value].business) {\r\n                    this.allBusinessSelected = false\r\n                }\r\n            }\r\n        }\r\n    }\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.full-screen-dialog.p-dialog {\r\n    max-height: 100%;\r\n    height: 100vh;\r\n    width: calc(100vw - var(--kn-mainmenu-width));\r\n    margin: 0;\r\n}\r\n.full-screen-dialog.p-dialog .p-dialog-content {\r\n    padding: 0;\r\n    margin: 0;\r\n}\r\n#metaweb-select-dialog .p-toolbar-group-right {\r\n    height: 100%;\r\n}\r\n\r\n.metaweb-select-dialog-button {\r\n    font-size: 0.8rem;\r\n}\r\n</style>\r\n","<template>\r\n    <Accordion v-if=\"businessModel\" :multiple=\"true\" :activeIndex=\"[0, 1]\">\r\n        <AccordionTab>\r\n            <template #header>\r\n                <span>{{ $t('metaweb.physicalModel.misc') }}</span>\r\n            </template>\r\n\r\n            <div class=\"p-grid\">\r\n                <div class=\"p-col-6\" v-for=\"(modelInfo, index) in metawebBusinessPropertyListTabDescriptor.businessModelInfo\" :key=\"index\">\r\n                    <div class=\"p-field\">\r\n                        <label :for=\"modelInfo.name\" class=\"kn-material-input-label\"> {{ $t(modelInfo.label) }} </label>\r\n                        <InputText class=\"kn-material-input\" v-model=\"businessModel[modelInfo.name]\" :id=\"modelInfo.name\" data-test=\"input-name\" />\r\n                    </div>\r\n                </div>\r\n\r\n                <div v-if=\"businessModel.physicalTable && meta\" class=\"p-col-6\">\r\n                    <div class=\"p-field\">\r\n                        <label class=\"kn-material-input-label\"> {{ $t('metaweb.businessModel.physicalTable') }} </label>\r\n                        <InputText class=\"kn-material-input\" v-model=\"meta.physicalModels[businessModel.physicalTable.physicalTableIndex].name\" :disabled=\"true\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </AccordionTab>\r\n\r\n        <AccordionTab v-for=\"(categoryKey, index) in Object.keys(categories)\" :key=\"index\">\r\n            <template #header>\r\n                <span>{{ categoryKey }}</span>\r\n            </template>\r\n\r\n            <div class=\"p-grid\">\r\n                <div class=\"p-col-6\" v-for=\"(prop, index) in categories[categoryKey]\" :key=\"index\">\r\n                    <div class=\"p-fluid\" v-if=\"prop.propertyType.admissibleValues.length !== 0\">\r\n                        <div class=\"p-field\">\r\n                            <label class=\"kn-material-input-label\"> {{ prop.propertyType.name }} </label>\r\n                            <Dropdown class=\"kn-material-input\" v-model=\"prop.value\" :options=\"prop.propertyType.admissibleValues\" @change=\"updateCategoryValue(prop)\" />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"p-fluid\" v-if=\"prop.propertyType.admissibleValues.length === 0 && prop.type !== 'structural.attribute' && prop.type !== 'structural.sqlFilter' && prop.type !== 'behavioural.notEnabledRoles'\">\r\n                        <div class=\"p-field\">\r\n                            <label class=\"kn-material-input-label\"> {{ prop.propertyType.name }} </label>\r\n                            <InputText class=\"kn-material-input\" v-model=\"prop.value\" :disabled=\"prop.type === 'physical.physicaltable'\" @change=\"updateCategoryValue(prop)\" />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"p-fluid\" v-if=\"prop.type === 'structural.attribute'\">\r\n                        <div class=\"p-field\">\r\n                            <label class=\"kn-material-input-label\"> {{ prop.propertyType.name }} </label>\r\n                            <Dropdown class=\"kn-material-input\" v-model=\"prop.value\" :options=\"profileAttributes\" @change=\"updateCategoryValue(prop)\" />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"p-fluid\" v-if=\"prop.type === 'behavioural.notEnabledRoles'\">\r\n                        <div class=\"p-field\">\r\n                            <label class=\"kn-material-input-label\"> {{ prop.propertyType.name }} </label>\r\n                            <MultiSelect class=\"kn-material-input\" v-model=\"prop.value\" :options=\"roleOptions\" @change=\"updateCategoryValue(prop)\" />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"p-fluid\" v-if=\"businessModel.physicalColumn && categoryKey === 'physical'\">\r\n                        <div class=\"p-field\">\r\n                            <label class=\"kn-material-input-label\"> {{ $t('metaweb.businessModel.physicalColumn') }} </label>\r\n                            <InputText class=\"kn-material-input\" v-model=\"businessModel.physicalColumn.name\" :disabled=\"true\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </AccordionTab>\r\n    </Accordion>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent, PropType } from 'vue'\r\nimport { iBusinessModel } from '../../../Metaweb'\r\nimport Accordion from 'primevue/accordion'\r\nimport AccordionTab from 'primevue/accordiontab'\r\nimport Dropdown from 'primevue/dropdown'\r\nimport metawebBusinessPropertyListTabDescriptor from './MetawebBusinessPropertyListTabDescriptor.json'\r\nimport MultiSelect from 'primevue/multiselect'\r\nimport mainStore from '../../../../../../../App.store'\r\n\r\nexport default defineComponent({\r\n    name: 'metaweb-business-property-list-tab',\r\n    components: { Accordion, AccordionTab, Dropdown, MultiSelect },\r\n    props: { selectedBusinessModel: { type: Object as PropType<iBusinessModel | null> }, roles: { type: Array }, propMeta: { type: Object } },\r\n    emits: ['metaUpdated'],\r\n    data() {\r\n        return {\r\n            metawebBusinessPropertyListTabDescriptor,\r\n            meta: null as any,\r\n            businessModel: null as iBusinessModel | null,\r\n            categories: [] as any[],\r\n            roleOptions: [] as any[]\r\n        }\r\n    },\r\n    computed: {\r\n        profileAttributes(): any[] {\r\n            return (this.store.$state as any).user.attributes ? Object.keys((this.store.$state as any).user.attributes) : []\r\n        }\r\n    },\r\n    watch: {\r\n        selectedBusinessModel() {\r\n            this.loadMeta()\r\n            this.loadBusinessModel()\r\n        },\r\n        roles() {\r\n            this.loadRoleOptions()\r\n        }\r\n    },\r\n    setup() {\r\n        const store = mainStore()\r\n        return { store }\r\n    },\r\n    created() {\r\n        this.loadMeta()\r\n        this.loadBusinessModel()\r\n    },\r\n    methods: {\r\n        loadMeta() {\r\n            this.meta = this.propMeta as any\r\n        },\r\n        loadBusinessModel() {\r\n            this.businessModel = this.selectedBusinessModel as iBusinessModel\r\n\r\n            this.loadCategories()\r\n        },\r\n        loadRoleOptions() {\r\n            this.roleOptions = this.roles as any[]\r\n        },\r\n        loadCategories() {\r\n            this.categories = {} as any\r\n            if (this.businessModel) {\r\n                for (let i = 0; i < this.businessModel.properties.length; i++) {\r\n                    const tempProperty = this.businessModel?.properties[i]\r\n\r\n                    const key = Object.keys(tempProperty)[0]\r\n                    const newKey = key?.split('.')\r\n\r\n                    if (!this.categories[newKey[0]]) {\r\n                        this.categories[newKey[0]] = []\r\n                    }\r\n\r\n                    this.categories[newKey[0]].push({ ...tempProperty[key], type: key })\r\n                }\r\n            }\r\n        },\r\n        updateCategoryValue(property: any) {\r\n            this.businessModel?.properties?.forEach((el: any) => {\r\n                const key = Object.keys(el)[0]\r\n                if (key === property.type) {\r\n                    el[key].value = property.value\r\n                }\r\n            })\r\n\r\n            this.$emit('metaUpdated')\r\n        }\r\n    }\r\n})\r\n</script>\r\n","/*!\n * https://github.com/Starcounter-Jack/JSON-Patch\n * (c) 2017-2022 Joachim Wester\n * MIT licensed\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\nexport function hasOwnProperty(obj, key) {\n    return _hasOwnProperty.call(obj, key);\n}\nexport function _objectKeys(obj) {\n    if (Array.isArray(obj)) {\n        var keys_1 = new Array(obj.length);\n        for (var k = 0; k < keys_1.length; k++) {\n            keys_1[k] = \"\" + k;\n        }\n        return keys_1;\n    }\n    if (Object.keys) {\n        return Object.keys(obj);\n    }\n    var keys = [];\n    for (var i in obj) {\n        if (hasOwnProperty(obj, i)) {\n            keys.push(i);\n        }\n    }\n    return keys;\n}\n;\n/**\n* Deeply clone the object.\n* https://jsperf.com/deep-copy-vs-json-stringify-json-parse/25 (recursiveDeepCopy)\n* @param  {any} obj value to clone\n* @return {any} cloned obj\n*/\nexport function _deepClone(obj) {\n    switch (typeof obj) {\n        case \"object\":\n            return JSON.parse(JSON.stringify(obj)); //Faster than ES5 clone - http://jsperf.com/deep-cloning-of-objects/5\n        case \"undefined\":\n            return null; //this is how JSON.stringify behaves for array items\n        default:\n            return obj; //no need to clone primitives\n    }\n}\n//3x faster than cached /^\\d+$/.test(str)\nexport function isInteger(str) {\n    var i = 0;\n    var len = str.length;\n    var charCode;\n    while (i < len) {\n        charCode = str.charCodeAt(i);\n        if (charCode >= 48 && charCode <= 57) {\n            i++;\n            continue;\n        }\n        return false;\n    }\n    return true;\n}\n/**\n* Escapes a json pointer path\n* @param path The raw pointer\n* @return the Escaped path\n*/\nexport function escapePathComponent(path) {\n    if (path.indexOf('/') === -1 && path.indexOf('~') === -1)\n        return path;\n    return path.replace(/~/g, '~0').replace(/\\//g, '~1');\n}\n/**\n * Unescapes a json pointer path\n * @param path The escaped pointer\n * @return The unescaped path\n */\nexport function unescapePathComponent(path) {\n    return path.replace(/~1/g, '/').replace(/~0/g, '~');\n}\nexport function _getPathRecursive(root, obj) {\n    var found;\n    for (var key in root) {\n        if (hasOwnProperty(root, key)) {\n            if (root[key] === obj) {\n                return escapePathComponent(key) + '/';\n            }\n            else if (typeof root[key] === 'object') {\n                found = _getPathRecursive(root[key], obj);\n                if (found != '') {\n                    return escapePathComponent(key) + '/' + found;\n                }\n            }\n        }\n    }\n    return '';\n}\nexport function getPath(root, obj) {\n    if (root === obj) {\n        return '/';\n    }\n    var path = _getPathRecursive(root, obj);\n    if (path === '') {\n        throw new Error(\"Object not found in root\");\n    }\n    return \"/\" + path;\n}\n/**\n* Recursively checks whether an object has any undefined values inside.\n*/\nexport function hasUndefined(obj) {\n    if (obj === undefined) {\n        return true;\n    }\n    if (obj) {\n        if (Array.isArray(obj)) {\n            for (var i_1 = 0, len = obj.length; i_1 < len; i_1++) {\n                if (hasUndefined(obj[i_1])) {\n                    return true;\n                }\n            }\n        }\n        else if (typeof obj === \"object\") {\n            var objKeys = _objectKeys(obj);\n            var objKeysLength = objKeys.length;\n            for (var i = 0; i < objKeysLength; i++) {\n                if (hasUndefined(obj[objKeys[i]])) {\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}\nfunction patchErrorMessageFormatter(message, args) {\n    var messageParts = [message];\n    for (var key in args) {\n        var value = typeof args[key] === 'object' ? JSON.stringify(args[key], null, 2) : args[key]; // pretty print\n        if (typeof value !== 'undefined') {\n            messageParts.push(key + \": \" + value);\n        }\n    }\n    return messageParts.join('\\n');\n}\nvar PatchError = /** @class */ (function (_super) {\n    __extends(PatchError, _super);\n    function PatchError(message, name, index, operation, tree) {\n        var _newTarget = this.constructor;\n        var _this = _super.call(this, patchErrorMessageFormatter(message, { name: name, index: index, operation: operation, tree: tree })) || this;\n        _this.name = name;\n        _this.index = index;\n        _this.operation = operation;\n        _this.tree = tree;\n        Object.setPrototypeOf(_this, _newTarget.prototype); // restore prototype chain, see https://stackoverflow.com/a/48342359\n        _this.message = patchErrorMessageFormatter(message, { name: name, index: index, operation: operation, tree: tree });\n        return _this;\n    }\n    return PatchError;\n}(Error));\nexport { PatchError };\n","import { PatchError, _deepClone, isInteger, unescapePathComponent, hasUndefined } from './helpers.mjs';\nexport var JsonPatchError = PatchError;\nexport var deepClone = _deepClone;\n/* We use a Javascript hash to store each\n function. Each hash entry (property) uses\n the operation identifiers specified in rfc6902.\n In this way, we can map each patch operation\n to its dedicated function in efficient way.\n */\n/* The operations applicable to an object */\nvar objOps = {\n    add: function (obj, key, document) {\n        obj[key] = this.value;\n        return { newDocument: document };\n    },\n    remove: function (obj, key, document) {\n        var removed = obj[key];\n        delete obj[key];\n        return { newDocument: document, removed: removed };\n    },\n    replace: function (obj, key, document) {\n        var removed = obj[key];\n        obj[key] = this.value;\n        return { newDocument: document, removed: removed };\n    },\n    move: function (obj, key, document) {\n        /* in case move target overwrites an existing value,\n        return the removed value, this can be taxing performance-wise,\n        and is potentially unneeded */\n        var removed = getValueByPointer(document, this.path);\n        if (removed) {\n            removed = _deepClone(removed);\n        }\n        var originalValue = applyOperation(document, { op: \"remove\", path: this.from }).removed;\n        applyOperation(document, { op: \"add\", path: this.path, value: originalValue });\n        return { newDocument: document, removed: removed };\n    },\n    copy: function (obj, key, document) {\n        var valueToCopy = getValueByPointer(document, this.from);\n        // enforce copy by value so further operations don't affect source (see issue #177)\n        applyOperation(document, { op: \"add\", path: this.path, value: _deepClone(valueToCopy) });\n        return { newDocument: document };\n    },\n    test: function (obj, key, document) {\n        return { newDocument: document, test: _areEquals(obj[key], this.value) };\n    },\n    _get: function (obj, key, document) {\n        this.value = obj[key];\n        return { newDocument: document };\n    }\n};\n/* The operations applicable to an array. Many are the same as for the object */\nvar arrOps = {\n    add: function (arr, i, document) {\n        if (isInteger(i)) {\n            arr.splice(i, 0, this.value);\n        }\n        else { // array props\n            arr[i] = this.value;\n        }\n        // this may be needed when using '-' in an array\n        return { newDocument: document, index: i };\n    },\n    remove: function (arr, i, document) {\n        var removedList = arr.splice(i, 1);\n        return { newDocument: document, removed: removedList[0] };\n    },\n    replace: function (arr, i, document) {\n        var removed = arr[i];\n        arr[i] = this.value;\n        return { newDocument: document, removed: removed };\n    },\n    move: objOps.move,\n    copy: objOps.copy,\n    test: objOps.test,\n    _get: objOps._get\n};\n/**\n * Retrieves a value from a JSON document by a JSON pointer.\n * Returns the value.\n *\n * @param document The document to get the value from\n * @param pointer an escaped JSON pointer\n * @return The retrieved value\n */\nexport function getValueByPointer(document, pointer) {\n    if (pointer == '') {\n        return document;\n    }\n    var getOriginalDestination = { op: \"_get\", path: pointer };\n    applyOperation(document, getOriginalDestination);\n    return getOriginalDestination.value;\n}\n/**\n * Apply a single JSON Patch Operation on a JSON document.\n * Returns the {newDocument, result} of the operation.\n * It modifies the `document` and `operation` objects - it gets the values by reference.\n * If you would like to avoid touching your values, clone them:\n * `jsonpatch.applyOperation(document, jsonpatch._deepClone(operation))`.\n *\n * @param document The document to patch\n * @param operation The operation to apply\n * @param validateOperation `false` is without validation, `true` to use default jsonpatch's validation, or you can pass a `validateOperation` callback to be used for validation.\n * @param mutateDocument Whether to mutate the original document or clone it before applying\n * @param banPrototypeModifications Whether to ban modifications to `__proto__`, defaults to `true`.\n * @return `{newDocument, result}` after the operation\n */\nexport function applyOperation(document, operation, validateOperation, mutateDocument, banPrototypeModifications, index) {\n    if (validateOperation === void 0) { validateOperation = false; }\n    if (mutateDocument === void 0) { mutateDocument = true; }\n    if (banPrototypeModifications === void 0) { banPrototypeModifications = true; }\n    if (index === void 0) { index = 0; }\n    if (validateOperation) {\n        if (typeof validateOperation == 'function') {\n            validateOperation(operation, 0, document, operation.path);\n        }\n        else {\n            validator(operation, 0);\n        }\n    }\n    /* ROOT OPERATIONS */\n    if (operation.path === \"\") {\n        var returnValue = { newDocument: document };\n        if (operation.op === 'add') {\n            returnValue.newDocument = operation.value;\n            return returnValue;\n        }\n        else if (operation.op === 'replace') {\n            returnValue.newDocument = operation.value;\n            returnValue.removed = document; //document we removed\n            return returnValue;\n        }\n        else if (operation.op === 'move' || operation.op === 'copy') { // it's a move or copy to root\n            returnValue.newDocument = getValueByPointer(document, operation.from); // get the value by json-pointer in `from` field\n            if (operation.op === 'move') { // report removed item\n                returnValue.removed = document;\n            }\n            return returnValue;\n        }\n        else if (operation.op === 'test') {\n            returnValue.test = _areEquals(document, operation.value);\n            if (returnValue.test === false) {\n                throw new JsonPatchError(\"Test operation failed\", 'TEST_OPERATION_FAILED', index, operation, document);\n            }\n            returnValue.newDocument = document;\n            return returnValue;\n        }\n        else if (operation.op === 'remove') { // a remove on root\n            returnValue.removed = document;\n            returnValue.newDocument = null;\n            return returnValue;\n        }\n        else if (operation.op === '_get') {\n            operation.value = document;\n            return returnValue;\n        }\n        else { /* bad operation */\n            if (validateOperation) {\n                throw new JsonPatchError('Operation `op` property is not one of operations defined in RFC-6902', 'OPERATION_OP_INVALID', index, operation, document);\n            }\n            else {\n                return returnValue;\n            }\n        }\n    } /* END ROOT OPERATIONS */\n    else {\n        if (!mutateDocument) {\n            document = _deepClone(document);\n        }\n        var path = operation.path || \"\";\n        var keys = path.split('/');\n        var obj = document;\n        var t = 1; //skip empty element - http://jsperf.com/to-shift-or-not-to-shift\n        var len = keys.length;\n        var existingPathFragment = undefined;\n        var key = void 0;\n        var validateFunction = void 0;\n        if (typeof validateOperation == 'function') {\n            validateFunction = validateOperation;\n        }\n        else {\n            validateFunction = validator;\n        }\n        while (true) {\n            key = keys[t];\n            if (key && key.indexOf('~') != -1) {\n                key = unescapePathComponent(key);\n            }\n            if (banPrototypeModifications &&\n                (key == '__proto__' ||\n                    (key == 'prototype' && t > 0 && keys[t - 1] == 'constructor'))) {\n                throw new TypeError('JSON-Patch: modifying `__proto__` or `constructor/prototype` prop is banned for security reasons, if this was on purpose, please set `banPrototypeModifications` flag false and pass it to this function. More info in fast-json-patch README');\n            }\n            if (validateOperation) {\n                if (existingPathFragment === undefined) {\n                    if (obj[key] === undefined) {\n                        existingPathFragment = keys.slice(0, t).join('/');\n                    }\n                    else if (t == len - 1) {\n                        existingPathFragment = operation.path;\n                    }\n                    if (existingPathFragment !== undefined) {\n                        validateFunction(operation, 0, document, existingPathFragment);\n                    }\n                }\n            }\n            t++;\n            if (Array.isArray(obj)) {\n                if (key === '-') {\n                    key = obj.length;\n                }\n                else {\n                    if (validateOperation && !isInteger(key)) {\n                        throw new JsonPatchError(\"Expected an unsigned base-10 integer value, making the new referenced value the array element with the zero-based index\", \"OPERATION_PATH_ILLEGAL_ARRAY_INDEX\", index, operation, document);\n                    } // only parse key when it's an integer for `arr.prop` to work\n                    else if (isInteger(key)) {\n                        key = ~~key;\n                    }\n                }\n                if (t >= len) {\n                    if (validateOperation && operation.op === \"add\" && key > obj.length) {\n                        throw new JsonPatchError(\"The specified index MUST NOT be greater than the number of elements in the array\", \"OPERATION_VALUE_OUT_OF_BOUNDS\", index, operation, document);\n                    }\n                    var returnValue = arrOps[operation.op].call(operation, obj, key, document); // Apply patch\n                    if (returnValue.test === false) {\n                        throw new JsonPatchError(\"Test operation failed\", 'TEST_OPERATION_FAILED', index, operation, document);\n                    }\n                    return returnValue;\n                }\n            }\n            else {\n                if (t >= len) {\n                    var returnValue = objOps[operation.op].call(operation, obj, key, document); // Apply patch\n                    if (returnValue.test === false) {\n                        throw new JsonPatchError(\"Test operation failed\", 'TEST_OPERATION_FAILED', index, operation, document);\n                    }\n                    return returnValue;\n                }\n            }\n            obj = obj[key];\n            // If we have more keys in the path, but the next value isn't a non-null object,\n            // throw an OPERATION_PATH_UNRESOLVABLE error instead of iterating again.\n            if (validateOperation && t < len && (!obj || typeof obj !== \"object\")) {\n                throw new JsonPatchError('Cannot perform operation at the desired path', 'OPERATION_PATH_UNRESOLVABLE', index, operation, document);\n            }\n        }\n    }\n}\n/**\n * Apply a full JSON Patch array on a JSON document.\n * Returns the {newDocument, result} of the patch.\n * It modifies the `document` object and `patch` - it gets the values by reference.\n * If you would like to avoid touching your values, clone them:\n * `jsonpatch.applyPatch(document, jsonpatch._deepClone(patch))`.\n *\n * @param document The document to patch\n * @param patch The patch to apply\n * @param validateOperation `false` is without validation, `true` to use default jsonpatch's validation, or you can pass a `validateOperation` callback to be used for validation.\n * @param mutateDocument Whether to mutate the original document or clone it before applying\n * @param banPrototypeModifications Whether to ban modifications to `__proto__`, defaults to `true`.\n * @return An array of `{newDocument, result}` after the patch\n */\nexport function applyPatch(document, patch, validateOperation, mutateDocument, banPrototypeModifications) {\n    if (mutateDocument === void 0) { mutateDocument = true; }\n    if (banPrototypeModifications === void 0) { banPrototypeModifications = true; }\n    if (validateOperation) {\n        if (!Array.isArray(patch)) {\n            throw new JsonPatchError('Patch sequence must be an array', 'SEQUENCE_NOT_AN_ARRAY');\n        }\n    }\n    if (!mutateDocument) {\n        document = _deepClone(document);\n    }\n    var results = new Array(patch.length);\n    for (var i = 0, length_1 = patch.length; i < length_1; i++) {\n        // we don't need to pass mutateDocument argument because if it was true, we already deep cloned the object, we'll just pass `true`\n        results[i] = applyOperation(document, patch[i], validateOperation, true, banPrototypeModifications, i);\n        document = results[i].newDocument; // in case root was replaced\n    }\n    results.newDocument = document;\n    return results;\n}\n/**\n * Apply a single JSON Patch Operation on a JSON document.\n * Returns the updated document.\n * Suitable as a reducer.\n *\n * @param document The document to patch\n * @param operation The operation to apply\n * @return The updated document\n */\nexport function applyReducer(document, operation, index) {\n    var operationResult = applyOperation(document, operation);\n    if (operationResult.test === false) { // failed test\n        throw new JsonPatchError(\"Test operation failed\", 'TEST_OPERATION_FAILED', index, operation, document);\n    }\n    return operationResult.newDocument;\n}\n/**\n * Validates a single operation. Called from `jsonpatch.validate`. Throws `JsonPatchError` in case of an error.\n * @param {object} operation - operation object (patch)\n * @param {number} index - index of operation in the sequence\n * @param {object} [document] - object where the operation is supposed to be applied\n * @param {string} [existingPathFragment] - comes along with `document`\n */\nexport function validator(operation, index, document, existingPathFragment) {\n    if (typeof operation !== 'object' || operation === null || Array.isArray(operation)) {\n        throw new JsonPatchError('Operation is not an object', 'OPERATION_NOT_AN_OBJECT', index, operation, document);\n    }\n    else if (!objOps[operation.op]) {\n        throw new JsonPatchError('Operation `op` property is not one of operations defined in RFC-6902', 'OPERATION_OP_INVALID', index, operation, document);\n    }\n    else if (typeof operation.path !== 'string') {\n        throw new JsonPatchError('Operation `path` property is not a string', 'OPERATION_PATH_INVALID', index, operation, document);\n    }\n    else if (operation.path.indexOf('/') !== 0 && operation.path.length > 0) {\n        // paths that aren't empty string should start with \"/\"\n        throw new JsonPatchError('Operation `path` property must start with \"/\"', 'OPERATION_PATH_INVALID', index, operation, document);\n    }\n    else if ((operation.op === 'move' || operation.op === 'copy') && typeof operation.from !== 'string') {\n        throw new JsonPatchError('Operation `from` property is not present (applicable in `move` and `copy` operations)', 'OPERATION_FROM_REQUIRED', index, operation, document);\n    }\n    else if ((operation.op === 'add' || operation.op === 'replace' || operation.op === 'test') && operation.value === undefined) {\n        throw new JsonPatchError('Operation `value` property is not present (applicable in `add`, `replace` and `test` operations)', 'OPERATION_VALUE_REQUIRED', index, operation, document);\n    }\n    else if ((operation.op === 'add' || operation.op === 'replace' || operation.op === 'test') && hasUndefined(operation.value)) {\n        throw new JsonPatchError('Operation `value` property is not present (applicable in `add`, `replace` and `test` operations)', 'OPERATION_VALUE_CANNOT_CONTAIN_UNDEFINED', index, operation, document);\n    }\n    else if (document) {\n        if (operation.op == \"add\") {\n            var pathLen = operation.path.split(\"/\").length;\n            var existingPathLen = existingPathFragment.split(\"/\").length;\n            if (pathLen !== existingPathLen + 1 && pathLen !== existingPathLen) {\n                throw new JsonPatchError('Cannot perform an `add` operation at the desired path', 'OPERATION_PATH_CANNOT_ADD', index, operation, document);\n            }\n        }\n        else if (operation.op === 'replace' || operation.op === 'remove' || operation.op === '_get') {\n            if (operation.path !== existingPathFragment) {\n                throw new JsonPatchError('Cannot perform the operation at a path that does not exist', 'OPERATION_PATH_UNRESOLVABLE', index, operation, document);\n            }\n        }\n        else if (operation.op === 'move' || operation.op === 'copy') {\n            var existingValue = { op: \"_get\", path: operation.from, value: undefined };\n            var error = validate([existingValue], document);\n            if (error && error.name === 'OPERATION_PATH_UNRESOLVABLE') {\n                throw new JsonPatchError('Cannot perform the operation from a path that does not exist', 'OPERATION_FROM_UNRESOLVABLE', index, operation, document);\n            }\n        }\n    }\n}\n/**\n * Validates a sequence of operations. If `document` parameter is provided, the sequence is additionally validated against the object document.\n * If error is encountered, returns a JsonPatchError object\n * @param sequence\n * @param document\n * @returns {JsonPatchError|undefined}\n */\nexport function validate(sequence, document, externalValidator) {\n    try {\n        if (!Array.isArray(sequence)) {\n            throw new JsonPatchError('Patch sequence must be an array', 'SEQUENCE_NOT_AN_ARRAY');\n        }\n        if (document) {\n            //clone document and sequence so that we can safely try applying operations\n            applyPatch(_deepClone(document), _deepClone(sequence), externalValidator || true);\n        }\n        else {\n            externalValidator = externalValidator || validator;\n            for (var i = 0; i < sequence.length; i++) {\n                externalValidator(sequence[i], i, document, undefined);\n            }\n        }\n    }\n    catch (e) {\n        if (e instanceof JsonPatchError) {\n            return e;\n        }\n        else {\n            throw e;\n        }\n    }\n}\n// based on https://github.com/epoberezkin/fast-deep-equal\n// MIT License\n// Copyright (c) 2017 Evgeny Poberezkin\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\nexport function _areEquals(a, b) {\n    if (a === b)\n        return true;\n    if (a && b && typeof a == 'object' && typeof b == 'object') {\n        var arrA = Array.isArray(a), arrB = Array.isArray(b), i, length, key;\n        if (arrA && arrB) {\n            length = a.length;\n            if (length != b.length)\n                return false;\n            for (i = length; i-- !== 0;)\n                if (!_areEquals(a[i], b[i]))\n                    return false;\n            return true;\n        }\n        if (arrA != arrB)\n            return false;\n        var keys = Object.keys(a);\n        length = keys.length;\n        if (length !== Object.keys(b).length)\n            return false;\n        for (i = length; i-- !== 0;)\n            if (!b.hasOwnProperty(keys[i]))\n                return false;\n        for (i = length; i-- !== 0;) {\n            key = keys[i];\n            if (!_areEquals(a[key], b[key]))\n                return false;\n        }\n        return true;\n    }\n    return a !== a && b !== b;\n}\n;\n","/*!\n * https://github.com/Starcounter-Jack/JSON-Patch\n * (c) 2017-2021 Joachim Wester\n * MIT license\n */\nimport { _deepClone, _objectKeys, escapePathComponent, hasOwnProperty } from './helpers.mjs';\nimport { applyPatch } from './core.mjs';\nvar beforeDict = new WeakMap();\nvar Mirror = /** @class */ (function () {\n    function Mirror(obj) {\n        this.observers = new Map();\n        this.obj = obj;\n    }\n    return Mirror;\n}());\nvar ObserverInfo = /** @class */ (function () {\n    function ObserverInfo(callback, observer) {\n        this.callback = callback;\n        this.observer = observer;\n    }\n    return ObserverInfo;\n}());\nfunction getMirror(obj) {\n    return beforeDict.get(obj);\n}\nfunction getObserverFromMirror(mirror, callback) {\n    return mirror.observers.get(callback);\n}\nfunction removeObserverFromMirror(mirror, observer) {\n    mirror.observers.delete(observer.callback);\n}\n/**\n * Detach an observer from an object\n */\nexport function unobserve(root, observer) {\n    observer.unobserve();\n}\n/**\n * Observes changes made to an object, which can then be retrieved using generate\n */\nexport function observe(obj, callback) {\n    var patches = [];\n    var observer;\n    var mirror = getMirror(obj);\n    if (!mirror) {\n        mirror = new Mirror(obj);\n        beforeDict.set(obj, mirror);\n    }\n    else {\n        var observerInfo = getObserverFromMirror(mirror, callback);\n        observer = observerInfo && observerInfo.observer;\n    }\n    if (observer) {\n        return observer;\n    }\n    observer = {};\n    mirror.value = _deepClone(obj);\n    if (callback) {\n        observer.callback = callback;\n        observer.next = null;\n        var dirtyCheck = function () {\n            generate(observer);\n        };\n        var fastCheck = function () {\n            clearTimeout(observer.next);\n            observer.next = setTimeout(dirtyCheck);\n        };\n        if (typeof window !== 'undefined') { //not Node\n            window.addEventListener('mouseup', fastCheck);\n            window.addEventListener('keyup', fastCheck);\n            window.addEventListener('mousedown', fastCheck);\n            window.addEventListener('keydown', fastCheck);\n            window.addEventListener('change', fastCheck);\n        }\n    }\n    observer.patches = patches;\n    observer.object = obj;\n    observer.unobserve = function () {\n        generate(observer);\n        clearTimeout(observer.next);\n        removeObserverFromMirror(mirror, observer);\n        if (typeof window !== 'undefined') {\n            window.removeEventListener('mouseup', fastCheck);\n            window.removeEventListener('keyup', fastCheck);\n            window.removeEventListener('mousedown', fastCheck);\n            window.removeEventListener('keydown', fastCheck);\n            window.removeEventListener('change', fastCheck);\n        }\n    };\n    mirror.observers.set(callback, new ObserverInfo(callback, observer));\n    return observer;\n}\n/**\n * Generate an array of patches from an observer\n */\nexport function generate(observer, invertible) {\n    if (invertible === void 0) { invertible = false; }\n    var mirror = beforeDict.get(observer.object);\n    _generate(mirror.value, observer.object, observer.patches, \"\", invertible);\n    if (observer.patches.length) {\n        applyPatch(mirror.value, observer.patches);\n    }\n    var temp = observer.patches;\n    if (temp.length > 0) {\n        observer.patches = [];\n        if (observer.callback) {\n            observer.callback(temp);\n        }\n    }\n    return temp;\n}\n// Dirty check if obj is different from mirror, generate patches and update mirror\nfunction _generate(mirror, obj, patches, path, invertible) {\n    if (obj === mirror) {\n        return;\n    }\n    if (typeof obj.toJSON === \"function\") {\n        obj = obj.toJSON();\n    }\n    var newKeys = _objectKeys(obj);\n    var oldKeys = _objectKeys(mirror);\n    var changed = false;\n    var deleted = false;\n    //if ever \"move\" operation is implemented here, make sure this test runs OK: \"should not generate the same patch twice (move)\"\n    for (var t = oldKeys.length - 1; t >= 0; t--) {\n        var key = oldKeys[t];\n        var oldVal = mirror[key];\n        if (hasOwnProperty(obj, key) && !(obj[key] === undefined && oldVal !== undefined && Array.isArray(obj) === false)) {\n            var newVal = obj[key];\n            if (typeof oldVal == \"object\" && oldVal != null && typeof newVal == \"object\" && newVal != null && Array.isArray(oldVal) === Array.isArray(newVal)) {\n                _generate(oldVal, newVal, patches, path + \"/\" + escapePathComponent(key), invertible);\n            }\n            else {\n                if (oldVal !== newVal) {\n                    changed = true;\n                    if (invertible) {\n                        patches.push({ op: \"test\", path: path + \"/\" + escapePathComponent(key), value: _deepClone(oldVal) });\n                    }\n                    patches.push({ op: \"replace\", path: path + \"/\" + escapePathComponent(key), value: _deepClone(newVal) });\n                }\n            }\n        }\n        else if (Array.isArray(mirror) === Array.isArray(obj)) {\n            if (invertible) {\n                patches.push({ op: \"test\", path: path + \"/\" + escapePathComponent(key), value: _deepClone(oldVal) });\n            }\n            patches.push({ op: \"remove\", path: path + \"/\" + escapePathComponent(key) });\n            deleted = true; // property has been deleted\n        }\n        else {\n            if (invertible) {\n                patches.push({ op: \"test\", path: path, value: mirror });\n            }\n            patches.push({ op: \"replace\", path: path, value: obj });\n            changed = true;\n        }\n    }\n    if (!deleted && newKeys.length == oldKeys.length) {\n        return;\n    }\n    for (var t = 0; t < newKeys.length; t++) {\n        var key = newKeys[t];\n        if (!hasOwnProperty(mirror, key) && obj[key] !== undefined) {\n            patches.push({ op: \"add\", path: path + \"/\" + escapePathComponent(key), value: _deepClone(obj[key]) });\n        }\n    }\n}\n/**\n * Create an array of patches from the differences in two objects\n */\nexport function compare(tree1, tree2, invertible) {\n    if (invertible === void 0) { invertible = false; }\n    var patches = [];\n    _generate(tree1, tree2, patches, '', invertible);\n    return patches;\n}\n","export * from './module/core.mjs';\nexport * from './module/duplex.mjs';\nexport {\n    PatchError as JsonPatchError,\n    _deepClone as deepClone,\n    escapePathComponent,\n    unescapePathComponent\n} from './module/helpers.mjs';\n\n\n/**\n * Default export for backwards compat\n */\n\nimport * as core from './module/core.mjs';\nimport * as duplex from './module/duplex.mjs';\nimport {\n    PatchError as JsonPatchError,\n    _deepClone as deepClone,\n    escapePathComponent,\n    unescapePathComponent\n} from './module/helpers.mjs';\n\nexport default Object.assign({}, core, duplex, {\n    JsonPatchError,\n    deepClone,\n    escapePathComponent,\n    unescapePathComponent\n});","<template>\r\n    <Dialog class=\"bsdialog\" :style=\"bsDescriptor.style.bsDialog\" :visible=\"showBusinessClassDialog\" :modal=\"true\" :closable=\"false\">\r\n        <template #header>\r\n            <Toolbar class=\"kn-toolbar kn-toolbar--primary kn-width-full\">\r\n                <template #start>\r\n                    {{ $t('metaweb.businessModel.newBusiness') }}\r\n                </template>\r\n            </Toolbar>\r\n        </template>\r\n        <form ref=\"bcForm\" class=\"p-fluid p-formgrid p-grid p-mt-4 p-mx-2 kn-flex-0\">\r\n            <div class=\"p-field p-col-12 p-md-6\">\r\n                <span class=\"p-float-label\">\r\n                    <InputText\r\n                        id=\"name\"\r\n                        class=\"kn-material-input\"\r\n                        v-model.trim=\"v$.tmpBusinessModel.name.$model\"\r\n                        :class=\"{\r\n                            'p-invalid': v$.tmpBusinessModel.name.$invalid && v$.tmpBusinessModel.name.$dirty\r\n                        }\"\r\n                        @blur=\"v$.tmpBusinessModel.name.$touch()\"\r\n                        @change=\"$emit('touched')\"\r\n                    />\r\n                    <label for=\"name\" class=\"kn-material-input-label\"> {{ $t('common.name') }} *</label>\r\n                </span>\r\n                <KnValidationMessages class=\"p-mt-1\" :vComp=\"v$.tmpBusinessModel.name\" :additionalTranslateParams=\"{ fieldName: $t('common.name') }\" />\r\n            </div>\r\n            <div class=\"p-field p-col-12 p-md-6\">\r\n                <span class=\"p-float-label\">\r\n                    <InputText id=\"desc\" class=\"kn-material-input\" v-model=\"tmpBusinessModel.description\" />\r\n                    <label for=\"desc\" class=\"kn-material-input-label\"> {{ $t('common.description') }}</label>\r\n                </span>\r\n            </div>\r\n            <div class=\"p-field p-col-12\">\r\n                <span class=\"p-float-label\">\r\n                    <Dropdown id=\"driver\" class=\"kn-material-input\" v-model=\"tmpBusinessModel.physicalModel\" :filter=\"true\" :options=\"physicalModels\" optionLabel=\"name\" />\r\n                    <label for=\"driver\" class=\"kn-material-input-label\"> {{ $t('metaweb.businessModel.physTable') }}</label>\r\n                </span>\r\n            </div>\r\n        </form>\r\n\r\n        <div class=\"kn-relative kn-flex\">\r\n            <div class=\"kn-height-full kn-width-full kn-absolute\">\r\n                <DataTable\r\n                    v-if=\"tmpBusinessModel.physicalModel\"\r\n                    :value=\"tmpBusinessModel.physicalModel.columns\"\r\n                    class=\"p-datatable-sm kn-table p-ml-2\"\r\n                    v-model:selection=\"tmpBusinessModel.selectedColumns\"\r\n                    :scrollable=\"true\"\r\n                    :scrollHeight=\"bsDescriptor.style.mainList\"\r\n                    dataKey=\"position\"\r\n                    v-model:filters=\"filters\"\r\n                    :globalFilterFields=\"bsDescriptor.globalFilterFields\"\r\n                >\r\n                    <template #empty>\r\n                        {{ $t('common.info.noDataFound') }}\r\n                    </template>\r\n                    <template #header>\r\n                        <div class=\"table-header p-d-flex\">\r\n                            <span class=\"p-input-icon-left p-mr-3 p-col-12\">\r\n                                <i class=\"pi pi-search\" />\r\n                                <InputText class=\"kn-material-input\" v-model=\"filters['global'].value\" :placeholder=\"$t('common.search')\" />\r\n                            </span>\r\n                        </div>\r\n                    </template>\r\n                    <Column selectionMode=\"multiple\" />\r\n                    <Column field=\"name\" :header=\"$t('common.name')\" :style=\"bsDescriptor.style.tableCell\" />\r\n                </DataTable>\r\n            </div>\r\n        </div>\r\n        <template #footer>\r\n            <Button class=\"p-button-text kn-button\" :label=\"$t('common.cancel')\" @click=\"closeDialog\" />\r\n            <Button class=\"kn-button kn-button--primary\" :label=\"$t('common.save')\" :disabled=\"buttonDisabled\" @click=\"saveBusinessClass\" />\r\n        </template>\r\n    </Dialog>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { AxiosResponse } from 'axios'\r\nimport { defineComponent } from 'vue'\r\nimport { filterDefault } from '@/helpers/commons/filterHelper'\r\nimport { createValidations, ICustomValidatorMap } from '@/helpers/commons/validationHelper'\r\nimport useValidate from '@vuelidate/core'\r\nimport Dialog from 'primevue/dialog'\r\nimport Dropdown from 'primevue/dropdown'\r\nimport DataTable from 'primevue/datatable'\r\nimport Column from 'primevue/column'\r\nimport KnValidationMessages from '@/components/UI/KnValidatonMessages.vue'\r\nimport bsDescriptor from '../MetawebBusinessModelDescriptor.json'\r\n\r\nimport { generate, applyPatch } from 'fast-json-patch'\r\n\r\nexport default defineComponent({\r\n    name: 'document-drivers',\r\n    components: { Dialog, Dropdown, DataTable, Column, KnValidationMessages },\r\n    emits: ['closeDialog'],\r\n    props: { physicalModels: Array, showBusinessClassDialog: Boolean, meta: Object, observer: { type: Object } },\r\n    computed: {\r\n        buttonDisabled(): boolean {\r\n            if (this.v$.$invalid || this.tmpBusinessModel.selectedColumns.length === 0) {\r\n                return true\r\n            } else return false\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            bsDescriptor,\r\n            v$: useValidate() as any,\r\n            metaObserve: {} as any,\r\n            tmpBusinessModel: { physicalModel: null, selectedColumns: [], name: '', description: '' } as any,\r\n            filters: {\r\n                global: [filterDefault]\r\n            } as Object\r\n        }\r\n    },\r\n    created() {\r\n        this.loadMeta()\r\n    },\r\n    watch: {\r\n        meta() {\r\n            this.loadMeta()\r\n        }\r\n    },\r\n    validations() {\r\n        const bmRequired = (value) => {\r\n            return !this.showBusinessClassDialog || value\r\n        }\r\n        const customValidators: ICustomValidatorMap = {\r\n            'bm-dialog-required': bmRequired\r\n        }\r\n        const validationObject = {\r\n            tmpBusinessModel: createValidations('tmpBusinessModel', bsDescriptor.validations.tmpBusinessModel, customValidators)\r\n        }\r\n        return validationObject\r\n    },\r\n    methods: {\r\n        async loadMeta() {\r\n            this.meta ? (this.metaObserve = this.meta) : ''\r\n        },\r\n        resetPhModel() {\r\n            this.tmpBusinessModel.selectedColumns = []\r\n        },\r\n        closeDialog() {\r\n            this.$emit('closeDialog')\r\n            this.tmpBusinessModel = { physicalModel: { columns: [] }, selectedColumns: [], name: '', description: '' } as any\r\n        },\r\n        async saveBusinessClass() {\r\n            let objToSend = { selectedColumns: [] } as any\r\n            objToSend.name = this.tmpBusinessModel.name\r\n            objToSend.description = this.tmpBusinessModel.description\r\n            objToSend.physicalModel = this.tmpBusinessModel.physicalModel.name\r\n            this.tmpBusinessModel.selectedColumns.forEach((element) => {\r\n                objToSend.selectedColumns.push(element.name)\r\n            })\r\n            const postData = { data: objToSend, diff: generate(this.observer) }\r\n            await this.$http\r\n                .post(import.meta.env.VITE_META_API_URL + `/1.0/metaWeb/addBusinessClass`, postData)\r\n                .then(async (response: AxiosResponse<any>) => {\r\n                    this.metaObserve = applyPatch(this.metaObserve, response.data)\r\n                    generate(this.observer)\r\n                    this.closeDialog()\r\n                })\r\n                .catch(() => {})\r\n        }\r\n    }\r\n})\r\n</script>\r\n<style lang=\"scss\">\r\n.bsdialog.p-dialog .p-dialog-header,\r\n.bsdialog.p-dialog .p-dialog-content {\r\n    padding: 0;\r\n}\r\n.bsdialog.p-dialog .p-dialog-content {\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex: 1;\r\n}\r\n</style>\r\n","<template>\r\n    <form ref=\"bcForm\" class=\"p-fluid p-formgrid p-grid p-mt-4 p-mx-2 kn-flex-0\">\r\n        <div class=\"p-field p-col-12 p-md-6\">\r\n            <span class=\"p-float-label\">\r\n                <InputText\r\n                    id=\"name\"\r\n                    class=\"kn-material-input\"\r\n                    v-model.trim=\"v$.tmpBnssView.name.$model\"\r\n                    :class=\"{\r\n                        'p-invalid': v$.tmpBnssView.name.$invalid && v$.tmpBnssView.name.$dirty\r\n                    }\"\r\n                    @blur=\"v$.tmpBnssView.name.$touch()\"\r\n                    @change=\"$emit('touched')\"\r\n                />\r\n                <label for=\"name\" class=\"kn-material-input-label\"> {{ $t('common.name') }} *</label>\r\n            </span>\r\n            <KnValidationMessages class=\"p-mt-1\" :vComp=\"v$.tmpBnssView.name\" :additionalTranslateParams=\"{ fieldName: $t('common.name') }\" />\r\n        </div>\r\n        <div class=\"p-field p-col-12 p-md-6\">\r\n            <span class=\"p-float-label\">\r\n                <InputText id=\"desc\" class=\"kn-material-input\" v-model=\"tmpBnssView.description\" />\r\n                <label for=\"desc\" class=\"kn-material-input-label\"> {{ $t('common.description') }}</label>\r\n            </span>\r\n        </div>\r\n    </form>\r\n    <div class=\"kn-relative kn-flex\">\r\n        <div class=\"kn-height-full kn-width-full\" :style=\"bsDescriptor.style.absolute\">\r\n            <DataTable class=\"p-datatable-sm kn-table p-ml-2\" :value=\"physicalModels\" v-model:selection=\"tmpBnssView.physicalModels\" :scrollable=\"true\" scrollHeight=\"100%\" v-model:filters=\"filters\" :globalFilterFields=\"bsDescriptor.globalFilterFields\">\r\n                <template #empty>\r\n                    {{ $t('metaweb.businessModel.') }}\r\n                </template>\r\n                <template #header>\r\n                    <div class=\"table-header p-d-flex\">\r\n                        <span class=\"p-input-icon-left p-mr-3 p-col-12\">\r\n                            <i class=\"pi pi-search\" />\r\n                            <InputText class=\"kn-material-input\" v-model=\"filters['global'].value\" :placeholder=\"$t('common.search')\" />\r\n                        </span>\r\n                    </div>\r\n                </template>\r\n                <Column selectionMode=\"multiple\" />\r\n                <Column field=\"name\" :header=\"$t('common.name')\" style=\"flex-basis:100%\" />\r\n            </DataTable>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport { filterDefault } from '@/helpers/commons/filterHelper'\r\nimport { createValidations, ICustomValidatorMap } from '@/helpers/commons/validationHelper'\r\nimport useValidate from '@vuelidate/core'\r\nimport DataTable from 'primevue/datatable'\r\nimport Column from 'primevue/column'\r\nimport KnValidationMessages from '@/components/UI/KnValidatonMessages.vue'\r\nimport bsDescriptor from '../../MetawebBusinessModelDescriptor.json'\r\n\r\nexport default defineComponent({\r\n    components: { DataTable, Column, KnValidationMessages },\r\n    props: { physicalModels: Array, showBusinessViewDialog: Boolean, bnssViewObject: Object },\r\n    data() {\r\n        return {\r\n            bsDescriptor,\r\n            v$: useValidate() as any,\r\n            tmpBnssView: {} as any,\r\n            filters: {\r\n                global: [filterDefault]\r\n            } as Object\r\n        }\r\n    },\r\n    created() {\r\n        this.tmpBnssView = this.bnssViewObject\r\n    },\r\n    watch: {\r\n        bnssViewObject() {\r\n            this.tmpBnssView = this.bnssViewObject\r\n        }\r\n    },\r\n    validations() {\r\n        const bvRequired = (value) => {\r\n            return !this.showBusinessViewDialog || value\r\n        }\r\n        const customValidators: ICustomValidatorMap = {\r\n            'bv-dialog-required': bvRequired\r\n        }\r\n        const validationObject = {\r\n            tmpBnssView: createValidations('tmpBnssView', bsDescriptor.validations.tmpBnssView, customValidators)\r\n        }\r\n        return validationObject\r\n    }\r\n})\r\n</script>\r\n","<template>\r\n    <div id=\"associator-container\" class=\"p-grid p-m-2\">\r\n        <div id=\"source-list-container\" class=\"p-col p-d-flex p-flex-column kn-flex\">\r\n            <Toolbar class=\"kn-toolbar kn-toolbar--secondary\">\r\n                <template #start>\r\n                    {{ $t('metaweb.businessModel.sourceAttr') }}\r\n                </template>\r\n            </Toolbar>\r\n            <div class=\"kn-relative kn-flex\">\r\n                <Listbox class=\"associator-list kn-list data-condition-list kn-absolute kn-height-full kn-width-full\" :options=\"sourceModel\">\r\n                    <template #empty>{{ $t('metaweb.businessModel.sourceHint') }} </template>\r\n                    <template #option=\"slotProps\">\r\n                        <div :id=\"'source-' + slotProps.index\" :ref=\"'source-' + slotProps.index\" class=\"kn-list-item kn-draggable\" draggable=\"true\" @dragstart=\"onDragStart($event, 'source-' + slotProps.index)\" @dragend=\"removeDragClass('source-' + slotProps.index)\">\r\n                            <i class=\"pi pi-bars\"></i>\r\n                            <div class=\"kn-list-item-text\">\r\n                                <span>{{ slotProps.option.name }}</span>\r\n                            </div>\r\n                        </div>\r\n                    </template>\r\n                </Listbox>\r\n            </div>\r\n        </div>\r\n        <div id=\"target-list-container\" class=\"p-col p-d-flex p-flex-column kn-flex\">\r\n            <Toolbar class=\"kn-toolbar kn-toolbar--secondary\">\r\n                <template #start>\r\n                    {{ $t('metaweb.businessModel.targetAttr') }}\r\n                </template>\r\n            </Toolbar>\r\n            <div class=\"kn-relative kn-flex\">\r\n                <Listbox class=\"associator-list kn-list data-condition-list kn-absolute kn-height-full kn-width-full\" :options=\"targetModel\">\r\n                    <template #empty>{{ $t('metaweb.businessModel.targetHint') }} </template>\r\n                    <template #option=\"slotProps\">\r\n                        <div\r\n                            class=\"associator-target-list-item\"\r\n                            :id=\"'target-' + slotProps.index\"\r\n                            :ref=\"'target-' + slotProps.index\"\r\n                            @drop=\"onDrop($event, 'target-' + slotProps.index, slotProps.option)\"\r\n                            @dragover.prevent\r\n                            @dragenter.prevent=\"setDropzoneClass(true, 'target-' + slotProps.index)\"\r\n                            @dragleave.prevent=\"setDropzoneClass(false, 'target-' + slotProps.index)\"\r\n                        >\r\n                            <div class=\"associator-block-hover p-d-flex p-flex-row p-ai-center kn-width-full\">\r\n                                <span class=\"kn-truncated kn-flex-05\">\r\n                                    {{ slotProps.option.name }}\r\n                                </span>\r\n                                <i class=\"fas fa-link kn-flex-05\" v-if=\"slotProps.option[associatedItem] && slotProps.option[associatedItem].length > 0\" />\r\n                                <div class=\"p-d-flex p-flex-column kn-flex\" v-bind:class=\"{ 'p-mb-1': slotProps.option[associatedItem].length > 1 }\" v-if=\"slotProps.option[associatedItem] && slotProps.option[associatedItem].length > 0\">\r\n                                    <span class=\"p-d-flex p-flex-row p-ai-center\" v-for=\"(link, index) in slotProps.option[associatedItem]\" v-bind:key=\"index\">\r\n                                        <span class=\"kn-truncated\">\r\n                                            {{ link.name }}\r\n                                        </span>\r\n                                        <Button v-if=\"slotProps.option[associatedItem].length > 1\" icon=\"fas fa-times\" class=\"associator-enable-hover p-button-text p-button-rounded p-button-plain\" @click.stop=\"deleteRelationship(slotProps.option, link)\" />\r\n                                    </span>\r\n                                </div>\r\n                                <Button icon=\"far fa-trash-alt kn-flex-0\" class=\"associator-enable-hover p-button-text p-button-rounded p-button-plain\" v-if=\"slotProps.option[associatedItem] && slotProps.option[associatedItem].length > 0\" @click.stop=\"deleteRelationship(slotProps.option)\" />\r\n                            </div>\r\n                        </div>\r\n                    </template>\r\n                </Listbox>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport bussinessModelDescriptor from '@/modules/managers/businessModelCatalogue/metaweb/businessModel/MetawebBusinessModelDescriptor.json'\r\nimport Listbox from 'primevue/listbox'\r\n\r\nexport default defineComponent({\r\n    components: { Listbox },\r\n    props: { sourceArray: { type: Array, required: true }, targetArray: { type: Array, required: true }, useMultipleTablesFromSameSource: Boolean },\r\n    emits: ['dropEnd', 'relationshipDeleted'],\r\n    data() {\r\n        return {\r\n            bussinessModelDescriptor,\r\n            sourceModel: [] as any,\r\n            targetModel: [] as any,\r\n            associatedItem: '',\r\n            expandSummary: true\r\n        }\r\n    },\r\n    created() {\r\n        this.setAssociatedItem()\r\n        this.targetModel = this.targetArray\r\n        this.sourceModel = this.sourceArray\r\n    },\r\n    watch: {\r\n        targetArray() {\r\n            this.targetModel = this.targetArray\r\n        },\r\n        sourceArray() {\r\n            this.sourceModel = this.sourceArray\r\n        }\r\n    },\r\n    methods: {\r\n        setAssociatedItem() {\r\n            if (!this.associatedItem) {\r\n                this.associatedItem = 'links'\r\n            }\r\n        },\r\n        onDragStart(event, elementId) {\r\n            event.dataTransfer.setData('text', elementId.split('-')[1])\r\n            event.dataTransfer.dropEffect = 'move'\r\n            event.dataTransfer.effectAllowed = 'move'\r\n            // @ts-ignore\r\n            this.$refs[`${elementId}`].classList.add('associator-dragging')\r\n        },\r\n        removeDragClass(elementId) {\r\n            // @ts-ignore\r\n            this.$refs[`${elementId}`].classList.remove('associator-dragging')\r\n        },\r\n        setDropzoneClass(addClass, elementId) {\r\n            // @ts-ignore\r\n            addClass ? this.$refs[`${elementId}`].classList.add('associator-hover') : this.$refs[`${elementId}`].classList.remove('associator-hover')\r\n        },\r\n        setDropErrorClass(elementId) {\r\n            // @ts-ignore\r\n            this.$refs[`${elementId}`].classList.add('associator-drop-error')\r\n            setTimeout(() => {\r\n                // @ts-ignore\r\n                this.$refs[`${elementId}`].classList.remove('associator-drop-error')\r\n            }, 500)\r\n        },\r\n        beforeDrop(source, target) {\r\n            if (target.links) {\r\n                for (var i = 0; i < target.links.length; i++) {\r\n                    if (source.tableName === target.links[i].tableName) {\r\n                        return false\r\n                    }\r\n                }\r\n            }\r\n            return true\r\n        },\r\n        onDrop(event, elementId, targetElement) {\r\n            event.preventDefault()\r\n            event.stopPropagation()\r\n            // @ts-ignore\r\n            this.$refs[`${elementId}`].classList.remove('associator-hover')\r\n            var data = event.dataTransfer.getData('text')\r\n            var executeDrop = true\r\n            this.useMultipleTablesFromSameSource ? (executeDrop = this.beforeDrop(this.sourceModel[data], targetElement)) : ''\r\n            if (executeDrop != false) {\r\n                if (targetElement[this.associatedItem] == undefined) {\r\n                    targetElement[this.associatedItem] = []\r\n                }\r\n                if (targetElement[this.associatedItem].indexOf(this.sourceModel[data]) != -1) {\r\n                    this.setDropErrorClass(elementId)\r\n                } else {\r\n                    targetElement[this.associatedItem].push(this.sourceModel[data])\r\n                    this.$emit('dropEnd', event, this.sourceModel[data], targetElement)\r\n                }\r\n            } else {\r\n                this.setDropErrorClass(elementId)\r\n            }\r\n        },\r\n        deleteRelationship(item, rel?) {\r\n            rel == undefined ? (item[this.associatedItem] = []) : item[this.associatedItem].splice(rel, 1)\r\n            this.$emit('relationshipDeleted')\r\n        }\r\n    }\r\n})\r\n</script>\r\n<style lang=\"scss\">\r\n.associator-dragging {\r\n    background-color: #bbd6ed;\r\n    border: 1px dashed;\r\n}\r\n.associator-hover {\r\n    background-color: rgba(128, 128, 128, 0.32);\r\n    border: 1px dashed;\r\n}\r\n.associator-drop-error {\r\n    background-color: rgba(255, 0, 0, 0.29);\r\n    border: 1px dashed red;\r\n}\r\n.associator-block-hover {\r\n    pointer-events: none !important;\r\n}\r\n.associator-enable-hover {\r\n    pointer-events: auto !important;\r\n}\r\n.associator-target-list-item {\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    padding: 0.75rem 0.75rem;\r\n    border-bottom: 1px solid #f2f2f2;\r\n}\r\n.associator-list .p-listbox-list-wrapper {\r\n    height: 100%;\r\n}\r\n</style>\r\n","<template>\r\n    <Dialog class=\"bsdialog\" :style=\"bsDescriptor.style.bsDialog\" :visible=\"showBusinessViewDialog\" :modal=\"true\" :closable=\"false\">\r\n        <template #header>\r\n            <Toolbar class=\"kn-toolbar kn-toolbar--primary kn-width-full\">\r\n                <template #start>\r\n                    {{ $t('metaweb.businessModel.newView') }}\r\n                </template>\r\n            </Toolbar>\r\n        </template>\r\n\r\n        <StepOne v-if=\"wizardStep === 1\" :physicalModels=\"physicalModels\" :showBusinessViewDialog=\"showBusinessViewDialog\" :bnssViewObject=\"tmpBnssView\" />\r\n\r\n        <form v-if=\"wizardStep === 2\" ref=\"bvForm\" class=\"p-fluid p-formgrid p-grid p-mt-4 p-mx-2 kn-flex-0\">\r\n            <div class=\"p-field p-col-12 p-md-6\">\r\n                <span class=\"p-float-label\">\r\n                    <Dropdown id=\"source\" class=\"kn-material-input\" v-model=\"sourceTable\" :options=\"tmpBnssView.physicalModels\" optionLabel=\"name\" />\r\n                    <label for=\"source\" class=\"kn-material-input-label\"> {{ $t('metaweb.businessModel.sourceTable') }}</label>\r\n                </span>\r\n            </div>\r\n            <div class=\"p-field p-col-12 p-md-6\">\r\n                <span class=\"p-float-label\">\r\n                    <Dropdown id=\"target\" class=\"kn-material-input\" v-model=\"targetTable\" :options=\"tmpBnssView.physicalModels\" optionLabel=\"name\" />\r\n                    <label for=\"target\" class=\"kn-material-input-label\"> {{ $t('metaweb.businessModel.targetTable') }}</label>\r\n                </span>\r\n            </div>\r\n        </form>\r\n\r\n        <TableAssociator class=\"kn-flex\" v-if=\"wizardStep === 2\" :sourceArray=\"sourceTable.columns\" :targetArray=\"targetTable.columns\" :useMultipleTablesFromSameSource=\"true\" @drop=\"updateSummary\" @relationshipDeleted=\"updateSummary\" />\r\n\r\n        <div v-if=\"wizardStep === 2\" id=\"summary-container\" class=\"p-m-3 p-d-flex p-flex-column kn-flex-05\">\r\n            <Toolbar class=\"kn-toolbar kn-toolbar--primary\">\r\n                <template #start>\r\n                    {{ $t('metaweb.businessModel.summary') }}\r\n                </template>\r\n                <template #end>\r\n                    <Button v-if=\"!expandSummary\" icon=\"fas fa-chevron-right\" class=\"p-button-text p-button-rounded p-button-plain\" style=\"color: white\" @click=\"expandSummary = true\" />\r\n                    <Button v-else icon=\"fas fa-chevron-down\" class=\"p-button-text p-button-rounded p-button-plain\" style=\"color: white\" @click=\"expandSummary = false\" />\r\n                </template>\r\n            </Toolbar>\r\n            <div class=\"kn-relative kn-flex\">\r\n                <Listbox v-show=\"expandSummary\" class=\"kn-list data-condition-list kn-absolute kn-height-full kn-width-full kn-overflow\" :options=\"summary\">\r\n                    <template #empty>{{ $t('metaweb.businessModel.summaryHint') }} </template>\r\n                    <template #option=\"slotProps\">\r\n                        <div class=\"associator-block-hover p-d-flex p-flex-row p-ai-center kn-width-full\">\r\n                            <span class=\"kn-truncated kn-flex-05 p-ml-2\">\r\n                                {{ slotProps.option.name }}\r\n                            </span>\r\n                            <i class=\"fas fa-link kn-flex-05\" v-if=\"slotProps.option['links'] && slotProps.option['links'].length > 0\" />\r\n                            <div class=\"p-d-flex p-flex-column kn-flex\" v-bind:class=\"{ 'p-mb-1': slotProps.option['links'].length > 1 }\" v-if=\"slotProps.option['links'] && slotProps.option['links'].length > 0\">\r\n                                <span class=\"p-d-flex p-flex-row p-ai-center\" v-for=\"(link, index) in slotProps.option['links']\" v-bind:key=\"index\">\r\n                                    <span class=\"kn-truncated\">\r\n                                        {{ link.name }}\r\n                                    </span>\r\n                                    <Button v-if=\"slotProps.option['links'].length > 1\" icon=\"fas fa-times\" class=\"associator-enable-hover p-button-text p-button-rounded p-button-plain\" @click.stop=\"deleteRelationship(slotProps.option, link)\" />\r\n                                </span>\r\n                            </div>\r\n                            <Button icon=\"far fa-trash-alt kn-flex-0\" class=\"associator-enable-hover p-button-text p-button-rounded p-button-plain\" v-if=\"slotProps.option['links'] && slotProps.option['links'].length > 0\" @click.stop=\"deleteRelationship(slotProps.option)\" />\r\n                        </div>\r\n                    </template>\r\n                </Listbox>\r\n            </div>\r\n        </div>\r\n\r\n        <template #footer>\r\n            <Button class=\"p-button-text kn-button\" :label=\"$t('common.cancel')\" @click=\"closeDialog\" />\r\n            <Button v-if=\"wizardStep == 2 && !editMode\" class=\"kn-button kn-button--secondary\" :label=\"$t('common.back')\" :disabled=\"buttonDisabled || summary.length > 0\" @click=\"previousStep\" />\r\n            <Button v-if=\"wizardStep == 1\" class=\"kn-button kn-button--primary\" :label=\"$t('common.next')\" :disabled=\"buttonDisabled\" @click=\"nextStep\" />\r\n            <Button v-if=\"wizardStep == 2\" class=\"kn-button kn-button--primary\" :label=\"$t('common.save')\" :disabled=\"buttonDisabled\" @click=\"saveBusinessView\" />\r\n        </template>\r\n    </Dialog>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { AxiosResponse } from 'axios'\r\nimport { defineComponent } from 'vue'\r\nimport useValidate from '@vuelidate/core'\r\nimport Dialog from 'primevue/dialog'\r\nimport bsDescriptor from '../MetawebBusinessModelDescriptor.json'\r\nimport StepOne from './businessViewWizard/MetawebBusinessViewWizardStepOne.vue'\r\nimport TableAssociator from '@/modules/managers/businessModelCatalogue/metaweb/businessModel/tableAssociator/MetawebTableAssociator.vue'\r\nimport Dropdown from 'primevue/dropdown'\r\nimport Listbox from 'primevue/listbox'\r\n\r\nimport { generate, applyPatch } from 'fast-json-patch'\r\n\r\nexport default defineComponent({\r\n    components: { Dialog, StepOne, TableAssociator, Dropdown, Listbox },\r\n    emits: ['closeDialog'],\r\n    props: { showBusinessViewDialog: Boolean, meta: { type: Object, required: true }, observer: { type: Object }, selectedBusinessModel: { type: Object, required: true }, editMode: Boolean },\r\n    computed: {\r\n        buttonDisabled(): boolean {\r\n            if (this.v$.$invalid || this.tmpBnssView.physicalModels.length < 2) {\r\n                return true\r\n            } else return false\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            bsDescriptor,\r\n            v$: useValidate() as any,\r\n            tmpBnssView: { physicalModels: [], name: '', description: '' } as any,\r\n            metaObserve: {} as any,\r\n            wizardStep: 1,\r\n            expandSummary: true,\r\n            summary: [] as any,\r\n            sourceTable: { columns: [] } as any,\r\n            targetTable: { columns: [] } as any,\r\n            physicalModels: [] as any\r\n        }\r\n    },\r\n    created() {\r\n        this.loadMeta()\r\n        this.setEditModeData()\r\n    },\r\n    watch: {\r\n        meta() {\r\n            this.loadMeta()\r\n            this.setEditModeData()\r\n        }\r\n    },\r\n    methods: {\r\n        async loadMeta() {\r\n            this.meta ? (this.metaObserve = this.meta) : ''\r\n            this.meta ? (this.physicalModels = JSON.parse(JSON.stringify(this.meta.physicalModels))) : ''\r\n        },\r\n        closeDialog() {\r\n            this.tmpBnssView = null as any\r\n            this.targetTable = null\r\n            this.sourceTable = null\r\n            this.$emit('closeDialog')\r\n        },\r\n        nextStep() {\r\n            this.wizardStep++\r\n        },\r\n        previousStep() {\r\n            this.wizardStep--\r\n        },\r\n        getItemIndex(list, name) {\r\n            for (var i = 0; i < list.length; i++) {\r\n                if (list[i].name === name) {\r\n                    return i\r\n                }\r\n            }\r\n            return -1\r\n        },\r\n        setEditModeData() {\r\n            if (this.editMode == true) {\r\n                this.wizardStep = 2\r\n                for (var pti = 0; pti < this.selectedBusinessModel.physicalTables.length; pti++) {\r\n                    var tmppt = {}\r\n                    tmppt = JSON.parse(JSON.stringify(this.meta.physicalModels[this.selectedBusinessModel.physicalTables[pti].physicalTableIndex]))\r\n                    this.tmpBnssView.physicalModels.push(tmppt)\r\n                }\r\n\r\n                for (var x = 0; x < this.tmpBnssView.physicalModels.length; x++) {\r\n                    for (var y = 0; y < this.tmpBnssView.physicalModels[x].columns.length; y++) {\r\n                        this.tmpBnssView.physicalModels[x].columns[y].$parent = this.tmpBnssView.physicalModels[x]\r\n                    }\r\n                }\r\n\r\n                for (var i = 0; i < this.selectedBusinessModel.joinRelationships.length; i++) {\r\n                    var rel = this.selectedBusinessModel.joinRelationships[i]\r\n                    var destTab = this.tmpBnssView.physicalModels[this.getItemIndex(this.tmpBnssView.physicalModels, rel.destinationTable.name)]\r\n                    var sourceTab = this.tmpBnssView.physicalModels[this.getItemIndex(this.tmpBnssView.physicalModels, rel.sourceTable.name)]\r\n                    for (var dc = 0; dc < rel.destinationColumns.length; dc++) {\r\n                        var destCol = destTab.columns[this.getItemIndex(destTab.columns, rel.destinationColumns[dc].name)]\r\n                        var sourceCol = sourceTab.columns[this.getItemIndex(sourceTab.columns, rel.sourceColumns[dc].name)]\r\n                        // eslint-disable-next-line no-prototype-builtins\r\n                        if (!destCol.hasOwnProperty('links')) {\r\n                            destCol.links = []\r\n                        }\r\n                        destCol.links.push(sourceCol)\r\n                    }\r\n                }\r\n\r\n                this.updateSummary()\r\n            }\r\n        },\r\n        updateSummary() {\r\n            this.summary = []\r\n            for (var i = 0; i < this.tmpBnssView.physicalModels.length; i++) {\r\n                for (var col = 0; col < this.tmpBnssView.physicalModels[i].columns.length; col++) {\r\n                    // eslint-disable-next-line no-prototype-builtins\r\n                    if (this.tmpBnssView.physicalModels[i].columns[col].hasOwnProperty('links') && this.tmpBnssView.physicalModels[i].columns[col].links.length > 0) {\r\n                        this.summary.push(this.tmpBnssView.physicalModels[i].columns[col])\r\n                        // eslint-disable-next-line no-prototype-builtins\r\n                    } else if (this.tmpBnssView.physicalModels[i].columns[col].hasOwnProperty('links') && this.tmpBnssView.physicalModels[i].columns[col].links.length > 0) {\r\n                        delete this.tmpBnssView.physicalModels[i].columns[col].links\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        async saveBusinessView() {\r\n            var tmpData = {} as any\r\n            if (this.editMode) {\r\n                tmpData.viewUniqueName = this.selectedBusinessModel.uniqueName\r\n            } else {\r\n                tmpData.name = this.tmpBnssView.name\r\n                tmpData.description = this.tmpBnssView.description\r\n                tmpData.sourceBusinessClass = this.tmpBnssView.sourceBusinessClass\r\n                tmpData.physicaltable = []\r\n            }\r\n\r\n            tmpData.relationships = {}\r\n\r\n            for (var i = 0; i < this.tmpBnssView.physicalModels.length; i++) {\r\n                var tmpDataObj = this.tmpBnssView.physicalModels[i]\r\n                this.editMode ? '' : tmpData.physicaltable.push(tmpDataObj.name)\r\n                for (var col = 0; col < this.tmpBnssView.physicalModels[i].columns.length; col++) {\r\n                    // eslint-disable-next-line no-prototype-builtins\r\n                    if (this.tmpBnssView.physicalModels[i].columns[col].hasOwnProperty('links') && this.tmpBnssView.physicalModels[i].columns[col].links.length > 0) {\r\n                        // eslint-disable-next-line no-prototype-builtins\r\n                        if (!tmpData.relationships.hasOwnProperty(tmpDataObj.name)) {\r\n                            tmpData.relationships[tmpDataObj.name] = {}\r\n                        }\r\n                        var tabObj = tmpData.relationships[tmpDataObj.name]\r\n                        var tmpColObj = this.tmpBnssView.physicalModels[i].columns[col]\r\n                        // eslint-disable-next-line no-prototype-builtins\r\n                        if (!tabObj.hasOwnProperty(tmpColObj.name)) {\r\n                            tabObj[tmpColObj.name] = {}\r\n                        }\r\n                        var colObj = tabObj[tmpColObj.name]\r\n                        for (var rel = 0; rel < tmpColObj.links.length; rel++) {\r\n                            // eslint-disable-next-line no-prototype-builtins\r\n                            if (!colObj.hasOwnProperty(tmpColObj.links[rel].tableName)) {\r\n                                colObj[tmpColObj.links[rel].tableName] = []\r\n                            }\r\n                            var targetTableObj = colObj[tmpColObj.links[rel].tableName]\r\n                            targetTableObj.push(tmpColObj.links[rel].name)\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            const postData = { data: tmpData, diff: [] }\r\n            await this.$http\r\n                .post(import.meta.env.VITE_META_API_URL + `/1.0/metaWeb/addBusinessView`, postData)\r\n                .then(async (response: AxiosResponse<any>) => {\r\n                    this.metaObserve = applyPatch(this.metaObserve, response.data)\r\n                    generate(this.observer)\r\n                })\r\n                .catch(() => {})\r\n                .finally(() => this.closeDialog())\r\n        },\r\n        deleteRelationship(item, rel?) {\r\n            rel == undefined ? (item.links = []) : item.links.splice(rel, 1)\r\n            this.updateSummary()\r\n        }\r\n    }\r\n})\r\n</script>\r\n<style lang=\"scss\">\r\n.data-condition-list {\r\n    border: 1px solid var(--kn-color-borders) !important;\r\n    border-top: none;\r\n}\r\n</style>\r\n","<template>\r\n    <Dialog id=\"metaweb-attribute-detail-dialog\" class=\"p-fluid kn-dialog--toolbar--primary\" :style=\"metawebAttributeDetailDialogDescriptor.dialog.style\" :visible=\"visible\" :modal=\"true\" :closable=\"false\">\r\n        <template #header>\r\n            <Toolbar class=\"kn-toolbar kn-toolbar--primary p-p-0 p-m-2 p-col-12\">\r\n                <template #start>\r\n                    {{ $t('metaweb.businessModel.attributesDetail.title') }}\r\n                </template>\r\n            </Toolbar>\r\n        </template>\r\n        <ProgressBar mode=\"indeterminate\" class=\"kn-progress-bar\" v-if=\"loading\" />\r\n\r\n        <div v-if=\"attribute\" ref=\"attribute-form\" class=\"p-mt-4 p-mx-4 kn-flex-0\">\r\n            <div class=\"p-fluid p-formgrid p-grid\">\r\n                <div class=\"p-field p-col-12 p-md-12\">\r\n                    <span class=\"p-float-label\">\r\n                        <InputText id=\"name\" class=\"kn-material-input\" v-model.trim=\"attribute.name\" />\r\n                        <label for=\"name\" class=\"kn-material-input-label\"> {{ $t('common.name') }}</label>\r\n                    </span>\r\n                </div>\r\n\r\n                <div class=\"p-field p-col-12 p-md-12\">\r\n                    <span class=\"p-float-label\">\r\n                        <InputText id=\"name\" class=\"kn-material-input\" v-model.trim=\"attribute.description\" />\r\n                        <label for=\"name\" class=\"kn-material-input-label\"> {{ $t('common.description') }}</label>\r\n                    </span>\r\n                </div>\r\n\r\n                <div class=\"p-field p-col-12 p-md-12\">\r\n                    <span class=\"p-float-label\">\r\n                        <Dropdown class=\"kn-material-input\" v-model=\"columnType\" :options=\"metawebAttributeDetailDialogDescriptor.typeOptions\" @change=\"onTypeChange()\" />\r\n                        <label for=\"type\" class=\"kn-material-input-label\"> {{ $t('common.type') }}</label>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n\r\n            <label class=\"kn-material-input-label\">{{ $t('metaweb.businessModel.attributesDetail.structural') }}</label>\r\n\r\n            <div class=\"p-fluid p-formgrid p-grid p-mt-4\">\r\n                <div class=\"p-field p-col-12 p-md-6 p-mt-2\">\r\n                    <span class=\"p-float-label\">\r\n                        <Dropdown class=\"kn-material-input\" v-model=\"properties['structural.aggtype'].value\" :options=\"properties['structural.aggtype'].propertyType.admissibleValues\" @change=\"updateAttribute('structural.aggtyp')\" />\r\n                        <label class=\"kn-material-input-label\"> {{ properties['structural.aggtype'].propertyType.name }}</label>\r\n                        <small>{{ properties['structural.aggtype'].propertyType.description }}</small>\r\n                    </span>\r\n                </div>\r\n\r\n                <div class=\"p-field p-col-12 p-md-6 p-mt-2\">\r\n                    <span class=\"p-float-label\">\r\n                        <Dropdown class=\"kn-material-input\" v-model=\"properties['structural.datatype'].value\" :options=\"properties['structural.datatype'].propertyType.admissibleValues\" @change=\"updateAttribute('structural.datatype')\" />\r\n                        <label class=\"kn-material-input-label\"> {{ properties['structural.datatype'].propertyType.name }}</label>\r\n                        <small>{{ properties['structural.datatype'].propertyType.description }}</small>\r\n                    </span>\r\n                </div>\r\n\r\n                <div class=\"p-field p-col-12 p-md-6 p-mt-2\">\r\n                    <span class=\"p-float-label\">\r\n                        <MultiSelect class=\"kn-material-input\" v-model=\"properties['behavioural.notEnabledRoles'].value\" :options=\"roleOptions\" optionLabel=\"name\" optionValue=\"name\" :filter=\"true\" @change=\"updateAttribute('behavioural.notEnabledRoles')\" />\r\n                        <label class=\"kn-material-input-label\"> {{ properties['behavioural.notEnabledRoles'].propertyType.name }}</label>\r\n                        <small>{{ properties['behavioural.notEnabledRoles'].propertyType.description }}</small>\r\n                    </span>\r\n                </div>\r\n\r\n                <div class=\"p-field p-col-12 p-md-6 p-mt-2\">\r\n                    <span class=\"p-float-label\">\r\n                        <Dropdown class=\"kn-material-input\" v-model=\"properties['structural.attribute'].value\" :options=\"profileAttributes\" @change=\"updateAttribute('structural.attribute')\" />\r\n                        <label class=\"kn-material-input-label\"> {{ properties['structural.attribute'].propertyType.name }}</label>\r\n                        <small>{{ properties['structural.attribute'].propertyType.description }}</small>\r\n                    </span>\r\n                </div>\r\n\r\n                <div class=\"p-field p-col-12 p-md-6 p-mt-2\">\r\n                    <span class=\"p-float-label\">\r\n                        <InputText class=\"kn-material-input\" v-model.trim=\"properties['physical.physicaltable'].value\" :disabled=\"true\" />\r\n                        <label class=\"kn-material-input-label\"> {{ properties['physical.physicaltable'].propertyType.name }}</label>\r\n                        <small>{{ properties['physical.physicaltable'].propertyType.description }}</small>\r\n                    </span>\r\n                </div>\r\n\r\n                <div v-if=\"attribute.physicalColumn\" class=\"p-field p-col-12 p-md-6 p-mt-2\">\r\n                    <span class=\"p-float-label\">\r\n                        <InputText id=\"physicalColumn\" class=\"kn-material-input\" v-model.trim=\"attribute.physicalColumn.name\" :disabled=\"true\" />\r\n                        <label for=\"physicalColumn\" class=\"kn-material-input-label\">{{ $t('metaweb.businessModel.physicalColumn') }}</label>\r\n                        <small>{{ $t('metaweb.businessModel.physicalColumnHint') }}</small>\r\n                    </span>\r\n                </div>\r\n\r\n                <div class=\"p-field p-col-12 p-md-6 p-mt-2\">\r\n                    <span class=\"p-float-label\">\r\n                        <Dropdown class=\"kn-material-input\" v-model=\"properties['structural.filtercondition'].value\" :options=\"properties['structural.filtercondition'].propertyType.admissibleValues\" @change=\"updateAttribute('structural.filtercondition')\" />\r\n                        <label class=\"kn-material-input-label\"> {{ properties['structural.filtercondition'].propertyType.name }}</label>\r\n                        <small>{{ properties['structural.filtercondition'].propertyType.description }}</small>\r\n                    </span>\r\n                </div>\r\n\r\n                <div class=\"p-field p-col-12 p-md-6 p-mt-2\" v-if=\"properties['structural.datatype'].value === 'DATE' || properties['structural.datatype'].value === 'TIMESTAMP' || properties['structural.datatype'].value === 'TIME'\">\r\n                    <span class=\"p-float-label\">\r\n                        <Dropdown class=\"kn-material-input\" v-model=\"properties['structural.dateformat'].value\" :options=\"properties['structural.dateformat'].propertyType.admissibleValues\" @change=\"updateAttribute('structural.dateformat')\">\r\n                            <template #option=\"slotProps\">\r\n                                <span>{{ getFormattedDate(new Date(), slotProps.option) }}</span>\r\n                            </template>\r\n                            <template #value=\"slotProps\">\r\n                                <span>{{ getFormattedDate(new Date(), slotProps.value) }}</span>\r\n                            </template>\r\n                        </Dropdown>\r\n                        <label class=\"kn-material-input-label\"> {{ properties['structural.dateformat'].propertyType.name }}</label>\r\n                        <small>{{ properties['structural.datatype'].value === 'TIME' ? properties['structural.format'].propertyType.description : properties['structural.dateformat'].propertyType.description }}</small>\r\n                    </span>\r\n                </div>\r\n\r\n                <div class=\"p-field p-col-12 p-md-6 p-mt-2\" v-if=\"['INTEGER', 'DOUBLE', 'DECIMAL', 'BIGINT', 'FLOAT'].indexOf(properties['structural.datatype'].value) !== -1\">\r\n                    <span class=\"p-float-label\">\r\n                        <Dropdown class=\"kn-material-input\" v-model=\"properties['structural.format'].value\" :options=\"properties['structural.format'].propertyType.admissibleValues\" @change=\"updateAttribute('structural.format')\" />\r\n                        <label class=\"kn-material-input-label\"> {{ properties['structural.format'].propertyType.name }}</label>\r\n                        <small>{{ properties['structural.format'].propertyType.description }}</small>\r\n                    </span>\r\n                </div>\r\n\r\n                <div class=\"p-field p-col-12 p-md-6 p-mt-2\">\r\n                    <span class=\"p-float-label\">\r\n                        <InputText class=\"kn-material-input\" v-model.trim=\"properties['structural.customFunction'].value\" @change=\"updateAttribute('structural.customFunction')\" />\r\n                        <label class=\"kn-material-input-label\"> {{ properties['structural.customFunction'].propertyType.name }}</label>\r\n                        <small>{{ properties['structural.customFunction'].propertyType.description }}</small>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <template #footer>\r\n            <Button class=\"kn-button kn-button--primary\" @click=\"closeDialog\"> {{ $t('common.cancel') }}</Button>\r\n            <Button class=\"kn-button kn-button--primary\" @click=\"saveAttribute\"> {{ $t('common.save') }}</Button>\r\n        </template>\r\n    </Dialog>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent, PropType } from 'vue'\r\nimport { iBusinessModelColumn } from '../../../../../Metaweb'\r\nimport { formatDate } from '@/helpers/commons/localeHelper'\r\nimport Dialog from 'primevue/dialog'\r\nimport Dropdown from 'primevue/dropdown'\r\nimport MultiSelect from 'primevue/multiselect'\r\nimport metawebAttributeDetailDialogDescriptor from './MetawebAttributeDetailDialogDescriptor.json'\r\nimport mainStore from '../../../../../../../../../App.store'\r\n\r\nexport default defineComponent({\r\n    name: 'metaweb-attribute-detail-dialog',\r\n    components: { Dialog, Dropdown, MultiSelect },\r\n    props: { visible: { type: Boolean }, selectedAttribute: { type: Object as PropType<iBusinessModelColumn> }, roles: { type: Array } },\r\n    emits: ['close', 'save'],\r\n    data() {\r\n        return {\r\n            metawebAttributeDetailDialogDescriptor,\r\n            attribute: null as iBusinessModelColumn | null,\r\n            properties: {} as any,\r\n            roleOptions: [] as any[],\r\n            columnType: '' as string,\r\n            loading: false\r\n        }\r\n    },\r\n    computed: {\r\n        profileAttributes(): any[] {\r\n            return (this.store.$state as any).user.attributes ? Object.keys((this.store.$state as any).user.attributes) : []\r\n        }\r\n    },\r\n    watch: {\r\n        selectedAttribute() {\r\n            this.loadAttribute()\r\n        },\r\n        roles() {\r\n            this.loadRoleOptions()\r\n        },\r\n        visible() {\r\n            this.loadAttribute()\r\n            this.loadRoleOptions()\r\n        }\r\n    },\r\n    setup() {\r\n        const store = mainStore()\r\n        return { store }\r\n    },\r\n    created() {\r\n        this.loadAttribute()\r\n        this.loadRoleOptions()\r\n    },\r\n    methods: {\r\n        loadAttribute() {\r\n            if (this.selectedAttribute) {\r\n                this.attribute = { ...this.selectedAttribute, physicalColumn: { ...this.selectedAttribute.physicalColumn }, properties: this.getDeepCopyProperties(this.selectedAttribute.properties) } as iBusinessModelColumn\r\n            }\r\n\r\n            this.getAttributeType()\r\n            this.loadAttributeProperties()\r\n        },\r\n        loadRoleOptions() {\r\n            this.roleOptions = this.roles as any[]\r\n        },\r\n        getAttributeType() {\r\n            if (this.attribute) {\r\n                for (let i = 0; i < this.attribute.properties.length; i++) {\r\n                    const tempProperty = this.attribute.properties[i]\r\n                    const key = Object.keys(tempProperty)[0]\r\n                    if (key === 'structural.columntype') {\r\n                        this.columnType = tempProperty[key].value\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        getDeepCopyProperties(properties: any[]) {\r\n            const newProperties = [] as any[]\r\n            properties.forEach((property: any) => {\r\n                const key = Object.keys(property)[0]\r\n                const tempProperty = {}\r\n                tempProperty[key] = { ...property[key] }\r\n                newProperties.push(tempProperty)\r\n            })\r\n\r\n            return newProperties\r\n        },\r\n        loadAttributeProperties() {\r\n            if (this.attribute) {\r\n                this.attribute.properties?.forEach((property: any) => {\r\n                    const key = Object.keys(property)[0]\r\n                    this.properties[key] = property[key]\r\n                })\r\n            }\r\n\r\n            if (this.properties['behavioural.notEnabledRoles']?.value && typeof this.properties['behavioural.notEnabledRoles'].value === 'string') {\r\n                this.properties['behavioural.notEnabledRoles'].value = this.properties['behavioural.notEnabledRoles'].value?.split(';')\r\n            }\r\n        },\r\n        onTypeChange() {\r\n            if (this.attribute) {\r\n                for (let i = 0; i < this.attribute.properties.length; i++) {\r\n                    const tempProperty = this.attribute.properties[i]\r\n                    const key = Object.keys(tempProperty)[0]\r\n                    if (key === 'structural.columntype') {\r\n                        tempProperty[key].value = this.columnType\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        updateAttribute(propertyKey: string) {\r\n            if (this.attribute) {\r\n                for (let i = 0; i < this.attribute.properties.length; i++) {\r\n                    const property = this.attribute.properties[i]\r\n                    const key = Object.keys(property)[0]\r\n                    if (key === propertyKey) {\r\n                        property[key].value = this.properties[key].value\r\n                        break\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        closeDialog() {\r\n            this.$emit('close')\r\n        },\r\n        saveAttribute() {\r\n            if (this.attribute) {\r\n                for (let i = 0; i < this.attribute.properties.length; i++) {\r\n                    const property = this.attribute.properties[i]\r\n                    const key = Object.keys(property)[0]\r\n                    if (key === 'behavioural.notEnabledRoles' && Array.isArray(property[key].value)) {\r\n                        property[key].value = property[key].value?.join(';')\r\n                        break\r\n                    }\r\n                }\r\n            }\r\n\r\n            this.$emit('save', this.attribute)\r\n        },\r\n        getFormattedDate(date: any, format: any) {\r\n            return formatDate(date, format)\r\n        }\r\n    }\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n#metaweb-attribute-detail-dialog .p-dialog-header,\r\n#metaweb-attribute-detail-dialog .p-dialog-content {\r\n    padding: 0;\r\n}\r\n\r\n#metaweb-attribute-detail-dialog .p-dialog-content {\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex: 1;\r\n}\r\n</style>\r\n","<template>\r\n    <Dialog id=\"metaweb-attribute-unused-field-dialog\" class=\"p-fluid kn-dialog--toolbar--primary\" :style=\"metawebAttributeUnusedFieldDialogDescriptor.dialog.style\" :visible=\"visible\" :modal=\"true\" :closable=\"false\">\r\n        <template #header>\r\n            <Toolbar class=\"kn-toolbar kn-toolbar--primary p-p-0 p-m-2 p-col-12\">\r\n                <template #start>\r\n                    {{ $t('metaweb.businessModel.addUnusedFields') }}\r\n                </template>\r\n            </Toolbar>\r\n        </template>\r\n        <ProgressBar mode=\"indeterminate\" class=\"kn-progress-bar\" v-if=\"loading\" />\r\n\r\n        <Message v-if=\"fields.length === 0\" class=\"p-m-4\" severity=\"info\" :closable=\"false\" :style=\"metawebAttributeUnusedFieldDialogDescriptor.styles.message\">\r\n            {{ $t('metaweb.businessModel.noUnusedFields') }}\r\n        </Message>\r\n\r\n        <Listbox v-else class=\"metaweb-unused-fields-listbox p-m-4\" :options=\"fields\">\r\n            <template #option=\"slotProps\">\r\n                <div class=\"p-m-2\">\r\n                    <Checkbox class=\"p-mr-2\" v-model=\"selectedUnusedFields\" :value=\"slotProps.option\"></Checkbox>\r\n                    <span>{{ slotProps.option.name }}</span>\r\n                </div>\r\n            </template>\r\n        </Listbox>\r\n\r\n        <template #footer>\r\n            <Button class=\"kn-button kn-button--primary\" @click=\"closeDialog\"> {{ $t('common.cancel') }}</Button>\r\n            <Button class=\"kn-button kn-button--primary\" @click=\"save\"> {{ $t('common.save') }}</Button>\r\n        </template>\r\n    </Dialog>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import { defineComponent } from 'vue'\r\n    import Checkbox from 'primevue/checkbox'\r\n    import Dialog from 'primevue/dialog'\r\n    import Listbox from 'primevue/listbox'\r\n    import Message from 'primevue/message'\r\n    import metawebAttributeUnusedFieldDialogDescriptor from './MetawebAttributeUnusedFieldDialogDescriptor.json'\r\n\r\n    export default defineComponent({\r\n        name: 'metaweb-attribute-detail-dialog',\r\n        components: { Checkbox, Dialog, Listbox, Message },\r\n        props: { visible: { type: Boolean }, unusedFields: { type: Object } },\r\n        emits: ['close', 'save'],\r\n        data() {\r\n            return {\r\n                metawebAttributeUnusedFieldDialogDescriptor,\r\n                fields: [] as any[],\r\n                selectedUnusedFields: [] as any[],\r\n                loading: false\r\n            }\r\n        },\r\n        watch: {\r\n            unusedFields() {\r\n                this.loadFields()\r\n            }\r\n        },\r\n        created() {\r\n            this.loadFields()\r\n        },\r\n        methods: {\r\n            loadFields() {\r\n                this.fields = this.unusedFields as any[]\r\n            },\r\n            closeDialog() {\r\n                this.$emit('close')\r\n                this.selectedUnusedFields = []\r\n            },\r\n            save() {\r\n                this.$emit('save', this.selectedUnusedFields)\r\n            }\r\n        }\r\n    })\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n    #metaweb-attribute-unused-field-dialog #metaweb-attribute-detail-dialog .p-dialog-header,\r\n    #metaweb-attribute-unused-field-dialog .p-dialog-content {\r\n        padding: 0;\r\n    }\r\n\r\n    #metaweb-attribute-unused-field-dialog .p-dialog-content {\r\n        display: flex;\r\n        flex-direction: column;\r\n        flex: 1;\r\n    }\r\n\r\n    .metaweb-unused-fields-listbox {\r\n        border: none;\r\n    }\r\n\r\n    .metaweb-unused-fields-listbox .p-listbox-item {\r\n        padding: 0 !important;\r\n    }\r\n</style>\r\n","<template>\r\n    <div>\r\n        <DataTable v-if=\"businessModel\" class=\"p-datatable-sm kn-table p-m-2\" :value=\"businessModel.columns\" :loading=\"loading\" responsiveLayout=\"stack\" breakpoint=\"960px\" @rowReorder=\"onRowReorder\">\r\n            <Column :rowReorder=\"true\" :headerStyle=\"metawebAttributesTabDescriptor.reorderColumnStyle\" :reorderableColumn=\"false\" />\r\n            <Column class=\"kn-truncated\" v-for=\"(column, index) in metawebAttributesTabDescriptor.columns\" :key=\"index\" :field=\"column.field\" :header=\"$t(column.header)\">\r\n                <template #body=\"slotProps\">\r\n                    <div class=\"p-d-flex p-flex-row\">\r\n                        <Checkbox v-if=\"column.field === 'identifier'\" v-model=\"slotProps.data[slotProps.column.props.field]\" :binary=\"true\" @change=\"$emit('metaUpdated')\"></Checkbox>\r\n                        <Checkbox v-else-if=\"column.field === 'visible'\" v-model=\"columnsVisibility[slotProps.data.uniqueName]\" :binary=\"true\" @change=\"onChange(slotProps.data, 'visibility')\"></Checkbox>\r\n                        <Checkbox v-else-if=\"column.field === 'personal'\" v-model=\"columnsPersonal[slotProps.data.uniqueName]\" :binary=\"true\" @change=\"onChange(slotProps.data, 'personal')\"></Checkbox>\r\n                        <Checkbox v-else-if=\"column.field === 'decrypt'\" v-model=\"columnsDecrypt[slotProps.data.uniqueName]\" :binary=\"true\" @change=\"onChange(slotProps.data, 'decrypt')\"></Checkbox>\r\n                        <Checkbox v-else-if=\"column.field === 'subjectId'\" v-model=\"columnsSubjectId[slotProps.data.uniqueName]\" :binary=\"true\" @change=\"onChange(slotProps.data, 'subjectId')\"></Checkbox>\r\n                        <Dropdown v-else-if=\"column.field === 'type'\" class=\"kn-material-input\" v-model=\"columnsType[slotProps.data.uniqueName]\" :options=\"metawebAttributesTabDescriptor.typeOptions\" @change=\"onChange(slotProps.data, 'type')\" />\r\n                        <InputText v-else-if=\"column.field === 'name'\" v-model=\"slotProps.data[slotProps.column.props.field]\" class=\"kn-material-input p-inputtext-sm p-p-2\" @blur=\"$emit('metaUpdated')\" />\r\n                        <span v-else>{{ slotProps.data[slotProps.column.props.field] }}</span>\r\n                    </div>\r\n                </template>\r\n            </Column>\r\n            <Column :style=\"metawebAttributesTabDescriptor.iconColumnStyle\">\r\n                <template #header>\r\n                    <Button class=\"kn-button kn-button--primary p-button-link p-jc-center\" @click=\"openUnusedFieldsDialog\" data-test=\"add-button\"> {{ $t('common.add') }}</Button>\r\n                </template>\r\n\r\n                <template #body=\"slotProps\">\r\n                    <div class=\"p-d-flex p-flex-row p-jc-end\">\r\n                        <Button icon=\"far fa-edit\" class=\"p-button-link\" @click=\"openAttributeDialog(slotProps.data)\" :data-test=\"'open-icon-' + slotProps.data.name\" />\r\n                        <Button icon=\"pi pi-trash\" class=\"p-button-link\" @click=\"deleteBusinessColumnConfirm(slotProps.data)\" :data-test=\"'delete-icon-' + slotProps.data.name\" />\r\n                    </div>\r\n                </template>\r\n            </Column>\r\n        </DataTable>\r\n\r\n        <MetawebAttributeDetailDialog :visible=\"attributeDetailDialogVisible\" :selectedAttribute=\"selectedAttribute\" :roles=\"roles\" @close=\"attributeDetailDialogVisible = false\" @save=\"onAttributeSave\"></MetawebAttributeDetailDialog>\r\n        <MetawebAttributeUnusedFieldDialog :visible=\"unusedFieldDialogVisible\" :unusedFields=\"unusedFields\" @close=\"unusedFieldDialogVisible = false\" @save=\"saveUnusedFields\"></MetawebAttributeUnusedFieldDialog>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent, PropType } from 'vue'\r\nimport { AxiosResponse } from 'axios'\r\nimport { iBusinessModel, iBusinessModelColumn } from '../../../Metaweb'\r\nimport Checkbox from 'primevue/checkbox'\r\nimport Column from 'primevue/column'\r\nimport DataTable from 'primevue/datatable'\r\nimport Dropdown from 'primevue/dropdown'\r\nimport metawebAttributesTabDescriptor from './MetawebAttributesTabDescriptor.json'\r\nimport MetawebAttributeDetailDialog from './dialogs/metawebAttributeDetail/MetawebAttributeDetailDialog.vue'\r\nimport MetawebAttributeUnusedFieldDialog from './dialogs/metawebAttributeUnusedField/MetawebAttributeUnusedFieldDialog.vue'\r\nimport mainStore from '../../../../../../../App.store'\r\nimport { generate, applyPatch } from 'fast-json-patch'\r\n\r\nexport default defineComponent({\r\n    name: 'metaweb-attributes-tab',\r\n    components: { Checkbox, Column, DataTable, Dropdown, MetawebAttributeDetailDialog, MetawebAttributeUnusedFieldDialog },\r\n    props: { selectedBusinessModel: { type: Object as PropType<iBusinessModel | null> }, propMeta: { type: Object }, observer: { type: Object }, roles: { type: Array } },\r\n    emits: ['loading', 'metaUpdated'],\r\n    data() {\r\n        return {\r\n            metawebAttributesTabDescriptor,\r\n            meta: null as any,\r\n            businessModel: null as iBusinessModel | null,\r\n            columnsVisibility: {} as any,\r\n            columnsType: {} as any,\r\n            columnsPersonal: {} as any,\r\n            columnsDecrypt: {} as any,\r\n            columnsSubjectId: {} as any,\r\n            attributeDetailDialogVisible: false,\r\n            selectedAttribute: null as iBusinessModelColumn | null,\r\n            unusedFieldDialogVisible: false,\r\n            unusedFields: [] as any[],\r\n            metaObserver: null as any,\r\n            propertyKeys: [] as string[],\r\n            loading: false\r\n        }\r\n    },\r\n    watch: {\r\n        selectedBusinessModel() {\r\n            this.loadMeta()\r\n            this.loadBusinessModel()\r\n        }\r\n    },\r\n    setup() {\r\n        const store = mainStore()\r\n        return { store }\r\n    },\r\n    created() {\r\n        this.loadMeta()\r\n        this.loadBusinessModel()\r\n    },\r\n    methods: {\r\n        loadMeta() {\r\n            this.meta = this.propMeta as any\r\n        },\r\n        loadBusinessModel() {\r\n            this.businessModel = this.selectedBusinessModel as iBusinessModel\r\n\r\n            this.formatBusinessModel()\r\n        },\r\n        formatBusinessModel() {\r\n            if (this.businessModel) {\r\n                this.businessModel.columns?.forEach((column: any) => {\r\n                    for (let i = 0; i < column.properties.length; i++) {\r\n                        const tempProperty = column.properties[i]\r\n                        const key = Object.keys(tempProperty)[0]\r\n\r\n                        if (!this.propertyKeys.includes(key)) this.propertyKeys.push(key)\r\n\r\n                        if (key === 'structural.visible') {\r\n                            this.columnsVisibility[column.uniqueName] = tempProperty[key].value === 'true'\r\n                        } else if (key === 'structural.columntype') {\r\n                            this.columnsType[column.uniqueName] = tempProperty[key].value\r\n                        } else if (key === 'structural.personal') {\r\n                            this.columnsPersonal[column.uniqueName] = tempProperty[key].value === 'true'\r\n                        } else if (key === 'structural.decrypt') {\r\n                            this.columnsDecrypt[column.uniqueName] = tempProperty[key].value === 'true'\r\n                        } else if (key === 'structural.subjectId') {\r\n                            this.columnsSubjectId[column.uniqueName] = tempProperty[key].value === 'true'\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n        },\r\n        async onRowReorder(event: any) {\r\n            this.loading = true\r\n            const postData = { data: { businessModelUniqueName: this.businessModel?.uniqueName, index: event.dragIndex, direction: event.dropIndex - event.dragIndex }, diff: generate(this.observer) }\r\n            await this.$http\r\n                .post(import.meta.env.VITE_META_API_URL + `/1.0/metaWeb/moveBusinessColumn`, postData)\r\n                .then((response: AxiosResponse<any>) => {\r\n                    this.meta = applyPatch(this.meta, response.data).newDocument\r\n                })\r\n                .catch(() => {})\r\n                .finally(() => generate(this.observer))\r\n            this.loading = false\r\n        },\r\n        onChange(column: iBusinessModelColumn, type: string) {\r\n            for (let i = 0; i < column.properties.length; i++) {\r\n                const tempProperty = column.properties[i]\r\n                const key = Object.keys(tempProperty)[0]\r\n                if (key === 'structural.visible' && type === 'visibility') {\r\n                    tempProperty[key].value = this.columnsVisibility[column.uniqueName]\r\n                } else if (key === 'structural.columntype' && type === 'type') {\r\n                    tempProperty[key].value = this.columnsType[column.uniqueName]\r\n                } else if (key === 'structural.personal' && type === 'personal') {\r\n                    tempProperty[key].value = this.columnsPersonal[column.uniqueName]\r\n                } else if (key === 'structural.decrypt' && type === 'decrypt') {\r\n                    tempProperty[key].value = this.columnsDecrypt[column.uniqueName]\r\n                } else if (key === 'structural.subjectId' && type === 'subjectId') {\r\n                    tempProperty[key].value = this.columnsSubjectId[column.uniqueName]\r\n                }\r\n            }\r\n\r\n            this.$emit('metaUpdated')\r\n        },\r\n        openAttributeDialog(attribute: iBusinessModelColumn) {\r\n            this.selectedAttribute = attribute\r\n            this.attributeDetailDialogVisible = true\r\n        },\r\n        onAttributeSave(attribute: iBusinessModelColumn) {\r\n            this.selectedAttribute = attribute\r\n\r\n            if (this.businessModel) {\r\n                const index = this.businessModel.columns.findIndex((el: iBusinessModelColumn) => el.uniqueName === this.selectedAttribute?.uniqueName)\r\n                if (index !== -1) {\r\n                    this.businessModel.columns[index] = this.selectedAttribute\r\n                }\r\n            }\r\n\r\n            this.formatBusinessModel()\r\n            this.$emit('metaUpdated')\r\n            this.attributeDetailDialogVisible = false\r\n        },\r\n        deleteBusinessColumnConfirm(attribute: iBusinessModelColumn) {\r\n            this.$confirm.require({\r\n                message: this.$t('documentExecution.dossier.deleteConfirm'),\r\n                header: this.$t('documentExecution.dossier.deleteTitle'),\r\n                icon: 'pi pi-exclamation-triangle',\r\n                accept: async () => await this.deleteBusinessColumn(attribute)\r\n            })\r\n        },\r\n        async deleteBusinessColumn(attribute: iBusinessModelColumn) {\r\n            this.loading = true\r\n            const postData = { data: { businessColumnUniqueName: attribute.uniqueName, businessModelUniqueName: this.businessModel?.uniqueName }, diff: generate(this.observer) }\r\n\r\n            await this.$http\r\n                .post(import.meta.env.VITE_META_API_URL + `/1.0/metaWeb/deleteBusinessColumn`, postData)\r\n                .then((response: AxiosResponse<any>) => {\r\n                    this.meta = applyPatch(this.meta, response.data).newDocument\r\n\r\n                    this.store.setInfo({\r\n                        title: this.$t('common.toast.deleteTitle'),\r\n                        msg: this.$t('common.toast.deleteSuccess')\r\n                    })\r\n                    generate(this.observer)\r\n                })\r\n                .catch(() => {})\r\n            this.loading = false\r\n        },\r\n        openUnusedFieldsDialog() {\r\n            if (this.businessModel && this.businessModel.physicalTable) {\r\n                this.unusedFields = []\r\n                const physicalTable = this.meta?.physicalModels[this.businessModel?.physicalTable.physicalTableIndex]\r\n                const allColumns = [...physicalTable.columns]\r\n\r\n                for (let i = 0; i < allColumns.length; i++) {\r\n                    const tempColumn = allColumns[i]\r\n\r\n                    if (tempColumn.markedDeleted) {\r\n                        continue\r\n                    } else {\r\n                        const index = this.businessModel.columns.findIndex((el: any) => el.uniqueName === tempColumn.name)\r\n                        if (index === -1) this.unusedFields.push(tempColumn)\r\n                    }\r\n                }\r\n            }\r\n\r\n            this.unusedFieldDialogVisible = true\r\n        },\r\n        async saveUnusedFields(unusedColumns: any[]) {\r\n            this.loading = true\r\n            const tempColumns = unusedColumns.map((el: any) => {\r\n                return { businessModelUniqueName: this.businessModel?.uniqueName, physicalColumnName: el.name, physicalTableName: el.tableName }\r\n            })\r\n            const postData = { data: { columns: tempColumns }, diff: generate(this.observer) }\r\n            await this.$http\r\n                .post(import.meta.env.VITE_META_API_URL + `/1.0/metaWeb/createBusinessColumn`, postData)\r\n                .then((response: AxiosResponse<any>) => {\r\n                    this.meta = applyPatch(this.meta, response.data).newDocument\r\n                    this.unusedFieldDialogVisible = false\r\n                })\r\n                .catch(() => {})\r\n                .finally(() => generate(this.observer))\r\n            this.loading = false\r\n        }\r\n    }\r\n})\r\n</script>\r\n","<template>\r\n    <DataTable :value=\"inboundRelationships\" class=\"p-datatable-sm kn-table p-ml-2\" responsiveLayout=\"stack\" breakpoint=\"960px\" v-model:filters=\"filters\" :globalFilterFields=\"irDescriptor.globalFilterFields\">\r\n        <template #empty>\r\n            {{ $t('common.info.noDataFound') }}\r\n        </template>\r\n        <template #header>\r\n            <div class=\"table-header p-d-flex\">\r\n                <span class=\"p-input-icon-left p-mr-3 p-col-12\">\r\n                    <i class=\"pi pi-search\" />\r\n                    <InputText class=\"kn-material-input\" v-model=\"filters['global'].value\" :placeholder=\"$t('common.search')\" />\r\n                </span>\r\n            </div>\r\n        </template>\r\n        <Column field=\"name\" :header=\"$t('common.name')\" :sortable=\"true\" />\r\n        <Column field=\"sourceTableName\" :header=\"$t('metaweb.businessModel.sourceTable')\" :sortable=\"true\" />\r\n        <Column :header=\"$t('metaweb.physicalModel.sourceColumns')\" :sortable=\"true\">\r\n            <template #body=\"slotProps\">\r\n                <span v-tooltip.top=\"createColumnString(slotProps.data.sourceColumns)\">{{ createColumnString(slotProps.data.sourceColumns) }}</span>\r\n            </template>\r\n        </Column>\r\n        <Column field=\"destinationTableName\" :header=\"$t('metaweb.businessModel.targetTable')\" :sortable=\"true\" />\r\n        <Column :header=\"$t('metaweb.physicalModel.targetColumns')\" :sortable=\"true\">\r\n            <template #body=\"slotProps\">\r\n                <span v-tooltip.top=\"createColumnString(slotProps.data.destinationColumns)\">{{ createColumnString(slotProps.data.destinationColumns) }}</span>\r\n            </template>\r\n        </Column>\r\n        <Column :style=\"irDescriptor.style.iconColumnStyle\" class=\"p-text-right\">\r\n            <template #header>\r\n                <Button :label=\"$t('common.add')\" class=\"p-button-link p-text-right\" @click=\"inboundDialogVisible = true\" />\r\n            </template>\r\n            <template #body=\"slotProps\">\r\n                <Button icon=\"pi pi-trash\" class=\"p-button-link\" @click=\"deleteInbound(slotProps.data)\" />\r\n            </template>\r\n        </Column>\r\n    </DataTable>\r\n\r\n    <Dialog class=\"bsdialog\" :style=\"bsDescriptor.style.bsDialog\" :visible=\"inboundDialogVisible\" :modal=\"true\" :closable=\"false\">\r\n        <template #header>\r\n            <Toolbar class=\"kn-toolbar kn-toolbar--primary kn-width-full\">\r\n                <template #start>\r\n                    {{ $t('metaweb.businessModel.tabView.inbound') }}\r\n                </template>\r\n            </Toolbar>\r\n        </template>\r\n        <form id=\"inbound-form\" class=\"p-fluid p-formgrid p-grid p-mt-4 p-mx-2 kn-flex-0\">\r\n            <div class=\"p-field p-col-12 p-md-6\">\r\n                <span class=\"p-float-label\">\r\n                    <InputText\r\n                        id=\"name\"\r\n                        class=\"kn-material-input\"\r\n                        v-model.trim=\"v$.dataSend.name.$model\"\r\n                        :class=\"{\r\n                            'p-invalid': v$.dataSend.name.$invalid && v$.dataSend.name.$dirty\r\n                        }\"\r\n                        @blur=\"v$.dataSend.name.$touch()\"\r\n                        @change=\"$emit('touched')\"\r\n                    />\r\n                    <label for=\"name\" class=\"kn-material-input-label\"> {{ $t('metaweb.businessModel.inbound.name') }} *</label>\r\n                </span>\r\n                <KnValidationMessages class=\"p-mt-1\" :vComp=\"v$.dataSend.name\" :additionalTranslateParams=\"{ fieldName: $t('metaweb.businessModel.inbound.name') }\" />\r\n            </div>\r\n            <div class=\"p-field p-col-12 p-md-6\">\r\n                <span class=\"p-float-label\">\r\n                    <Dropdown\r\n                        id=\"source\"\r\n                        class=\"kn-material-input\"\r\n                        v-model=\"v$.dataSend.cardinality.$model\"\r\n                        optionLabel=\"name\"\r\n                        optionValue=\"value\"\r\n                        :options=\"irDescriptor.cardinality\"\r\n                        :class=\"{ 'p-invalid': v$.dataSend.cardinality.$invalid && v$.dataSend.cardinality.$dirty }\"\r\n                        @blur=\"v$.dataSend.cardinality.$touch()\"\r\n                    />\r\n                    <label for=\"source\" class=\"kn-material-input-label\"> {{ $t('kpi.kpiDefinition.cardinalityTtitle') }} *</label>\r\n                </span>\r\n                <KnValidationMessages class=\"p-mt-1\" :vComp=\"v$.dataSend.cardinality\" :additionalTranslateParams=\"{ fieldName: $t('kpi.kpiDefinition.cardinalityTtitle') }\" />\r\n            </div>\r\n            <div class=\"p-field p-col-12 p-md-6\">\r\n                <span class=\"p-float-label\">\r\n                    <Dropdown id=\"source\" class=\"kn-material-input\" v-model=\"rightElement\" :options=\"sourceBusinessClassOptions\" optionLabel=\"name\" @change=\"alterTableToSimpleBound($event.value)\" />\r\n                    <label for=\"source\" class=\"kn-material-input-label\"> {{ $t('metaweb.businessModel.inbound.sourceBc') }} </label>\r\n                </span>\r\n            </div>\r\n            <div class=\"p-field p-col-12 p-md-6\">\r\n                <span class=\"p-float-label\">\r\n                    <InputText id=\"target\" class=\"kn-material-input\" v-model=\"businessModel.name\" :disabled=\"true\" />\r\n                    <label for=\"target\" class=\"kn-material-input-label\"> {{ $t('metaweb.businessModel.inbound.targetBc') }} </label>\r\n                </span>\r\n            </div>\r\n        </form>\r\n\r\n        <TableAssociator class=\"kn-flex\" :sourceArray=\"simpleRight\" :targetArray=\"simpleLeft\" :useMultipleTablesFromSameSource=\"false\" @drop=\"onDrop\" @relationshipDeleted=\"onDelete\" />\r\n\r\n        <template #footer>\r\n            <Button class=\"p-button-text kn-button\" :label=\"$t('common.cancel')\" @click=\"closeDialog\" />\r\n            <Button class=\"kn-button kn-button--primary\" :label=\"$t('common.create')\" :disabled=\"buttonDisabled\" @click=\"createInbound\" />\r\n        </template>\r\n    </Dialog>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { AxiosResponse } from 'axios'\r\nimport { createValidations, ICustomValidatorMap } from '@/helpers/commons/validationHelper'\r\nimport { defineComponent, PropType } from 'vue'\r\nimport { iBusinessModel } from '@/modules/managers/businessModelCatalogue/metaweb/Metaweb'\r\nimport { filterDefault } from '@/helpers/commons/filterHelper'\r\nimport useValidate from '@vuelidate/core'\r\nimport irDescriptor from './MetawebInboundRelationshipsDescriptor.json'\r\nimport bsDescriptor from '@/modules/managers/businessModelCatalogue/metaweb/businessModel/MetawebBusinessModelDescriptor.json'\r\nimport TableAssociator from '@/modules/managers/businessModelCatalogue/metaweb/businessModel/tableAssociator/MetawebTableAssociator.vue'\r\nimport DataTable from 'primevue/datatable'\r\nimport Column from 'primevue/column'\r\nimport Dialog from 'primevue/dialog'\r\nimport Dropdown from 'primevue/dropdown'\r\nimport KnValidationMessages from '@/components/UI/KnValidatonMessages.vue'\r\n\r\nimport { generate, applyPatch } from 'fast-json-patch'\r\n\r\nexport default defineComponent({\r\n    name: 'metaweb-attributes-tab',\r\n    components: { TableAssociator, DataTable, Column, Dialog, Dropdown, KnValidationMessages },\r\n    props: { selectedBusinessModel: { type: Object as PropType<iBusinessModel | null>, required: true }, propMeta: { type: Object, required: true }, observer: { type: Object, required: true } },\r\n    emits: ['loading'],\r\n    computed: {\r\n        leftHasLinks(): boolean {\r\n            var x = 0\r\n            this.simpleLeft.forEach((item) => {\r\n                if (item.links.length > 0) x += 1\r\n            })\r\n            return x > 0 ? false : true\r\n        },\r\n        buttonDisabled(): boolean {\r\n            if (this.v$.$invalid || this.leftHasLinks) {\r\n                return true\r\n            } else return false\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            bsDescriptor,\r\n            irDescriptor,\r\n            meta: null as any,\r\n            dataSend: {} as any,\r\n            simpleLeft: [] as any,\r\n            simpleRight: [] as any,\r\n            v$: useValidate() as any,\r\n            rightElement: null as any,\r\n            inboundDialogVisible: false,\r\n            inboundRelationships: [] as any,\r\n            sourceBusinessClassOptions: [] as any,\r\n            businessModel: null as iBusinessModel | null,\r\n            filters: { global: [filterDefault] } as Object\r\n        }\r\n    },\r\n    watch: {\r\n        selectedBusinessModel: {\r\n            handler() {\r\n                this.loadData()\r\n            },\r\n            deep: true\r\n        }\r\n    },\r\n    created() {\r\n        this.loadData()\r\n    },\r\n    validations() {\r\n        const inboundRequired = (value) => {\r\n            return !this.inboundDialogVisible || value\r\n        }\r\n        const customValidators: ICustomValidatorMap = {\r\n            'inbound-dialog-required': inboundRequired\r\n        }\r\n        const validationObject = {\r\n            dataSend: createValidations('dataSend', irDescriptor.validations.dataSend, customValidators)\r\n        }\r\n        return validationObject\r\n    },\r\n    methods: {\r\n        loadData() {\r\n            this.meta = this.propMeta as any\r\n            this.businessModel = this.selectedBusinessModel as iBusinessModel\r\n            this.simpleLeft = this.tableToSimpleBound(this.businessModel)\r\n            this.populateInboundRelationships()\r\n            this.populateSourceBusinessClassOptions()\r\n        },\r\n        populateInboundRelationships() {\r\n            this.inboundRelationships = this.selectedBusinessModel?.relationships.filter((relationship) => this.selectedBusinessModel?.uniqueName != relationship.sourceTableName)\r\n        },\r\n        populateSourceBusinessClassOptions() {\r\n            this.sourceBusinessClassOptions = []\r\n            this.propMeta.businessModels.forEach((el) => this.sourceBusinessClassOptions.push(el))\r\n            this.propMeta.businessViews.forEach((el) => this.sourceBusinessClassOptions.push(el))\r\n        },\r\n        createColumnString(data) {\r\n            var ret = [] as any\r\n            data.forEach((entry) => {\r\n                ret.push(entry.name)\r\n            }, this)\r\n            return ret.join(', ')\r\n        },\r\n        closeDialog() {\r\n            this.dataSend = {}\r\n            this.rightElement = null\r\n            this.simpleRight = []\r\n            this.simpleLeft = this.tableToSimpleBound(this.businessModel)\r\n            this.inboundDialogVisible = false\r\n        },\r\n        alterTableToSimpleBound(item) {\r\n            this.simpleRight = this.tableToSimpleBound(item)\r\n        },\r\n        tableToSimpleBound(model) {\r\n            var a = [] as any\r\n            if (model) {\r\n                if (model.columns)\r\n                    model.columns.forEach(function (item) {\r\n                        // eslint-disable-next-line no-prototype-builtins\r\n                        if (!item.hasOwnProperty('referencedColumns')) {\r\n                            a.push({ name: item.name, uname: item.uniqueName, links: [] })\r\n                        }\r\n                    })\r\n            }\r\n            return a\r\n        },\r\n        async createInbound() {\r\n            this.dataSend.sourceColumns = []\r\n            this.dataSend.destinationColumns = []\r\n            this.dataSend.sourceTableName = this.rightElement.uniqueName\r\n            this.dataSend.destinationTableName = this.businessModel?.uniqueName\r\n            this.simpleLeft.forEach((entry) => {\r\n                if (entry.links.length > 0) {\r\n                    this.dataSend.destinationColumns.push(entry.uname)\r\n                    this.dataSend.sourceColumns.push(entry.links[0].uname)\r\n                }\r\n            })\r\n            const postData = { data: this.dataSend, diff: generate(this.observer) }\r\n            await this.$http\r\n                .post(import.meta.env.VITE_META_API_URL + `/1.0/metaWeb/addBusinessRelation`, postData)\r\n                .then((response: AxiosResponse<any>) => {\r\n                    this.meta = applyPatch(this.meta, response.data).newDocument\r\n                    this.closeDialog()\r\n                    this.populateInboundRelationships()\r\n                })\r\n                .catch(() => {})\r\n                .finally(() => generate(this.observer))\r\n        },\r\n        async deleteInbound(item) {\r\n            const postData = { data: item, diff: generate(this.observer) }\r\n            await this.$http\r\n                .post(import.meta.env.VITE_META_API_URL + `/1.0/metaWeb/deleteBusinessRelation`, postData)\r\n                .then((response: AxiosResponse<any>) => {\r\n                    this.meta = applyPatch(this.meta, response.data).newDocument\r\n                    this.populateInboundRelationships()\r\n                })\r\n                .catch(() => {})\r\n                .finally(() => generate(this.observer))\r\n        }\r\n    }\r\n})\r\n</script>\r\n","<template>\r\n    <DataTable :value=\"inboundRelationships\" class=\"p-datatable-sm kn-table p-ml-2\" responsiveLayout=\"stack\" breakpoint=\"960px\" v-model:filters=\"filters\" :globalFilterFields=\"orDescriptor.globalFilterFields\">\r\n        <template #empty>\r\n            {{ $t('common.info.noDataFound') }}\r\n        </template>\r\n        <template #header>\r\n            <div class=\"table-header p-d-flex\">\r\n                <span class=\"p-input-icon-left p-mr-3 p-col-12\">\r\n                    <i class=\"pi pi-search\" />\r\n                    <InputText class=\"kn-material-input\" v-model=\"filters['global'].value\" :placeholder=\"$t('common.search')\" />\r\n                </span>\r\n            </div>\r\n        </template>\r\n        <Column field=\"name\" :header=\"$t('common.name')\" :sortable=\"true\" />\r\n        <Column field=\"sourceTableName\" :header=\"$t('metaweb.businessModel.sourceTable')\" :sortable=\"true\" />\r\n        <Column class=\"kn-truncated\" :header=\"$t('metaweb.physicalModel.sourceColumns')\" :sortable=\"true\">\r\n            <template #body=\"slotProps\">\r\n                <span v-tooltip.top=\"createColumnString(slotProps.data.sourceColumns)\">{{ createColumnString(slotProps.data.sourceColumns) }}</span>\r\n            </template>\r\n        </Column>\r\n        <Column field=\"destinationTableName\" :header=\"$t('metaweb.businessModel.targetTable')\" :sortable=\"true\" />\r\n        <Column :header=\"$t('metaweb.physicalModel.targetColumns')\" :sortable=\"true\">\r\n            <template #body=\"slotProps\">\r\n                <span v-tooltip.top=\"createColumnString(slotProps.data.destinationColumns)\">{{ createColumnString(slotProps.data.destinationColumns) }}</span>\r\n            </template>\r\n        </Column>\r\n        <Column :style=\"orDescriptor.style.iconColumnStyle\" class=\"p-text-right\">\r\n            <template #header>\r\n                <Button :label=\"$t('common.add')\" class=\"p-button-link p-text-right\" @click=\"inboundDialogVisible = true\" />\r\n            </template>\r\n            <template #body=\"slotProps\">\r\n                <Button icon=\"pi pi-trash\" class=\"p-button-link\" @click=\"deleteOutbound(slotProps.data)\" />\r\n            </template>\r\n        </Column>\r\n    </DataTable>\r\n\r\n    <Dialog class=\"bsdialog\" :style=\"bsDescriptor.style.bsDialog\" :visible=\"inboundDialogVisible\" :modal=\"true\" :closable=\"false\">\r\n        <template #header>\r\n            <Toolbar class=\"kn-toolbar kn-toolbar--primary kn-width-full\">\r\n                <template #start>\r\n                    {{ $t('metaweb.businessModel.tabView.outbound') }}\r\n                </template>\r\n            </Toolbar>\r\n        </template>\r\n        <form id=\"inbound-form\" class=\"p-fluid p-formgrid p-grid p-mt-4 p-mx-2 kn-flex-0\">\r\n            <div class=\"p-field p-col-12 p-md-6\">\r\n                <span class=\"p-float-label\">\r\n                    <InputText\r\n                        id=\"name\"\r\n                        class=\"kn-material-input\"\r\n                        v-model.trim=\"v$.dataSend.name.$model\"\r\n                        :class=\"{\r\n                            'p-invalid': v$.dataSend.name.$invalid && v$.dataSend.name.$dirty\r\n                        }\"\r\n                        @blur=\"v$.dataSend.name.$touch()\"\r\n                        @change=\"$emit('touched')\"\r\n                    />\r\n                    <label for=\"name\" class=\"kn-material-input-label\"> {{ $t('metaweb.businessModel.inbound.name') }} *</label>\r\n                </span>\r\n                <KnValidationMessages class=\"p-mt-1\" :vComp=\"v$.dataSend.name\" :additionalTranslateParams=\"{ fieldName: $t('metaweb.businessModel.inbound.name') }\" />\r\n            </div>\r\n            <div class=\"p-field p-col-12 p-md-6\">\r\n                <span class=\"p-float-label\">\r\n                    <Dropdown\r\n                        id=\"source\"\r\n                        class=\"kn-material-input\"\r\n                        v-model=\"v$.dataSend.cardinality.$model\"\r\n                        optionLabel=\"name\"\r\n                        optionValue=\"value\"\r\n                        :options=\"orDescriptor.cardinality\"\r\n                        :class=\"{ 'p-invalid': v$.dataSend.cardinality.$invalid && v$.dataSend.cardinality.$dirty }\"\r\n                        @blur=\"v$.dataSend.cardinality.$touch()\"\r\n                    />\r\n                    <label for=\"source\" class=\"kn-material-input-label\"> {{ $t('kpi.kpiDefinition.cardinalityTtitle') }} *</label>\r\n                </span>\r\n                <KnValidationMessages class=\"p-mt-1\" :vComp=\"v$.dataSend.cardinality\" :additionalTranslateParams=\"{ fieldName: $t('kpi.kpiDefinition.cardinalityTtitle') }\" />\r\n            </div>\r\n            <div class=\"p-field p-col-12 p-md-6\">\r\n                <span class=\"p-float-label\">\r\n                    <InputText id=\"target\" class=\"kn-material-input\" v-model=\"businessModel.name\" :disabled=\"true\" />\r\n                    <label for=\"target\" class=\"kn-material-input-label\"> {{ $t('metaweb.businessModel.inbound.targetBc') }} </label>\r\n                </span>\r\n            </div>\r\n            <div class=\"p-field p-col-12 p-md-6\">\r\n                <span class=\"p-float-label\">\r\n                    <Dropdown id=\"source\" class=\"kn-material-input\" v-model=\"rightElement\" :options=\"sourceBusinessClassOptions\" optionLabel=\"name\" @change=\"alterTableToSimpleBound($event.value)\" />\r\n                    <label for=\"source\" class=\"kn-material-input-label\"> {{ $t('metaweb.businessModel.inbound.sourceBc') }} </label>\r\n                </span>\r\n            </div>\r\n        </form>\r\n\r\n        <TableAssociator class=\"kn-flex\" :sourceArray=\"simpleLeft\" :targetArray=\"simpleRight\" :useMultipleTablesFromSameSource=\"false\" @drop=\"onDrop\" @relationshipDeleted=\"onDelete\" />\r\n\r\n        <template #footer>\r\n            <Button class=\"p-button-text kn-button\" :label=\"$t('common.cancel')\" @click=\"closeDialog\" />\r\n            <Button class=\"kn-button kn-button--primary\" :label=\"$t('common.create')\" :disabled=\"buttonDisabled\" @click=\"createOutbound\" />\r\n        </template>\r\n    </Dialog>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { AxiosResponse } from 'axios'\r\nimport { createValidations, ICustomValidatorMap } from '@/helpers/commons/validationHelper'\r\nimport { defineComponent, PropType } from 'vue'\r\nimport { iBusinessModel } from '@/modules/managers/businessModelCatalogue/metaweb/Metaweb'\r\nimport { filterDefault } from '@/helpers/commons/filterHelper'\r\nimport useValidate from '@vuelidate/core'\r\nimport orDescriptor from './MetawebOutboundRelationshipsDescriptor.json'\r\nimport bsDescriptor from '@/modules/managers/businessModelCatalogue/metaweb/businessModel/MetawebBusinessModelDescriptor.json'\r\nimport TableAssociator from '@/modules/managers/businessModelCatalogue/metaweb/businessModel/tableAssociator/MetawebTableAssociator.vue'\r\nimport DataTable from 'primevue/datatable'\r\nimport Column from 'primevue/column'\r\nimport Dialog from 'primevue/dialog'\r\nimport Dropdown from 'primevue/dropdown'\r\nimport KnValidationMessages from '@/components/UI/KnValidatonMessages.vue'\r\n\r\nimport { generate, applyPatch } from 'fast-json-patch'\r\n\r\nexport default defineComponent({\r\n    name: 'metaweb-attributes-tab',\r\n    components: { TableAssociator, DataTable, Column, Dialog, Dropdown, KnValidationMessages },\r\n    props: { selectedBusinessModel: { type: Object as PropType<iBusinessModel | null>, required: true }, propMeta: { type: Object, required: true }, observer: { type: Object, required: true } },\r\n    emits: ['loading'],\r\n    computed: {\r\n        leftHasLinks(): boolean {\r\n            var x = 0\r\n            this.simpleRight.forEach((item) => {\r\n                if (item.links.length > 0) x += 1\r\n            })\r\n            return x > 0 ? false : true\r\n        },\r\n        buttonDisabled(): boolean {\r\n            if (this.v$.$invalid || this.leftHasLinks) {\r\n                return true\r\n            } else return false\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            v$: useValidate() as any,\r\n            businessModel: null as iBusinessModel | null,\r\n            meta: null as any,\r\n            inboundRelationships: [] as any,\r\n            orDescriptor,\r\n            bsDescriptor,\r\n            inboundDialogVisible: false,\r\n            sourceBusinessClassOptions: [] as any,\r\n            dataSend: {} as any,\r\n            simpleLeft: [] as any,\r\n            simpleRight: [] as any,\r\n            rightElement: null as any,\r\n            filters: {\r\n                global: [filterDefault]\r\n            } as Object\r\n        }\r\n    },\r\n    watch: {\r\n        selectedBusinessModel: {\r\n            handler() {\r\n                this.loadData()\r\n            },\r\n            deep: true\r\n        }\r\n    },\r\n    created() {\r\n        this.loadData()\r\n    },\r\n    validations() {\r\n        const outboundRequired = (value) => {\r\n            return !this.inboundDialogVisible || value\r\n        }\r\n        const customValidators: ICustomValidatorMap = {\r\n            'outbound-dialog-required': outboundRequired\r\n        }\r\n        const validationObject = {\r\n            dataSend: createValidations('dataSend', orDescriptor.validations.dataSend, customValidators)\r\n        }\r\n        return validationObject\r\n    },\r\n    methods: {\r\n        loadData() {\r\n            this.meta = this.propMeta as any\r\n            this.businessModel = this.selectedBusinessModel as iBusinessModel\r\n            this.simpleLeft = this.tableToSimpleBound(this.businessModel)\r\n            this.populateInboundRelationships()\r\n            this.populateSourceBusinessClassOptions()\r\n        },\r\n        populateInboundRelationships() {\r\n            this.inboundRelationships = this.selectedBusinessModel?.relationships.filter((relationship) => this.selectedBusinessModel?.uniqueName === relationship.sourceTableName)\r\n        },\r\n        populateSourceBusinessClassOptions() {\r\n            this.sourceBusinessClassOptions = []\r\n            this.propMeta.businessModels.forEach((el) => this.sourceBusinessClassOptions.push(el))\r\n            this.propMeta.businessViews.forEach((el) => this.sourceBusinessClassOptions.push(el))\r\n        },\r\n        createColumnString(data) {\r\n            var ret = [] as any\r\n            data.forEach((entry) => {\r\n                ret.push(entry.name)\r\n            }, this)\r\n            return ret.join(', ')\r\n        },\r\n        closeDialog() {\r\n            this.dataSend = {}\r\n            this.rightElement = null\r\n            this.simpleRight = []\r\n            this.simpleLeft = this.tableToSimpleBound(this.businessModel)\r\n            this.inboundDialogVisible = false\r\n        },\r\n        alterTableToSimpleBound(item) {\r\n            this.simpleRight = this.tableToSimpleBound(item)\r\n        },\r\n        tableToSimpleBound(model) {\r\n            var a = [] as any\r\n            if (model) {\r\n                if (model.columns)\r\n                    model.columns.forEach(function (item) {\r\n                        // eslint-disable-next-line no-prototype-builtins\r\n                        if (!item.hasOwnProperty('referencedColumns')) {\r\n                            a.push({ name: item.name, uname: item.uniqueName, links: [] })\r\n                        }\r\n                    })\r\n            }\r\n            return a\r\n        },\r\n        async createOutbound() {\r\n            this.dataSend.sourceColumns = []\r\n            this.dataSend.destinationColumns = []\r\n            this.dataSend.sourceTableName = this.businessModel?.uniqueName\r\n            this.dataSend.destinationTableName = this.rightElement.uniqueName\r\n            this.simpleRight.forEach((entry) => {\r\n                if (entry.links.length > 0) {\r\n                    this.dataSend.destinationColumns.push(entry.uname)\r\n                    this.dataSend.sourceColumns.push(entry.links[0].uname)\r\n                }\r\n            })\r\n            const postData = { data: this.dataSend, diff: generate(this.observer) }\r\n            await this.$http\r\n                .post(import.meta.env.VITE_META_API_URL + `/1.0/metaWeb/addBusinessRelation`, postData)\r\n                .then((response: AxiosResponse<any>) => {\r\n                    this.meta = applyPatch(this.meta, response.data)\r\n                    this.closeDialog()\r\n                    this.populateInboundRelationships()\r\n                })\r\n                .catch(() => {})\r\n                .finally(() => generate(this.observer))\r\n        },\r\n        async deleteOutbound(item) {\r\n            const postData = { data: item, diff: generate(this.observer) }\r\n            await this.$http\r\n                .post(import.meta.env.VITE_META_API_URL + `/1.0/metaWeb/deleteBusinessRelation`, postData)\r\n                .then((response: AxiosResponse<any>) => {\r\n                    this.meta = applyPatch(this.meta, response.data)\r\n                    this.populateInboundRelationships()\r\n                })\r\n                .catch(() => {})\r\n                .finally(() => generate(this.observer))\r\n        }\r\n    }\r\n})\r\n</script>\r\n","<template>\r\n    <Dialog id=\"metaweb-add-physical-table-dialog\" :style=\"metawebAddPhysicalTableDialogDescriptor.dialog.style\" :visible=\"visible\" :modal=\"true\" :closable=\"false\">\r\n        <template #header>\r\n            <Toolbar class=\"kn-toolbar kn-toolbar--primary kn-width-full\">\r\n                <template #start>\r\n                    {{ $t('metaweb.businessModel.addPhysicalTables') }}\r\n                </template>\r\n            </Toolbar>\r\n        </template>\r\n        <ProgressBar mode=\"indeterminate\" class=\"kn-progress-bar\" v-if=\"loading\" />\r\n\r\n        <DataTable :value=\"rows\" class=\"p-datatable-sm kn-table p-m-2\" v-model:selection=\"selectedTables\" dataKey=\"name\" v-model:filters=\"filters\" :globalFilterFields=\"metawebAddPhysicalTableDialogDescriptor.globalFilterFields\">\r\n            <template #empty>\r\n                {{ $t('common.info.noDataFound') }}\r\n            </template>\r\n            <template #header>\r\n                <div class=\"table-header p-d-flex\">\r\n                    <span class=\"p-input-icon-left p-mr-3 p-col-12\">\r\n                        <i class=\"pi pi-search\" />\r\n                        <InputText class=\"kn-material-input\" v-model=\"filters['global'].value\" :placeholder=\"$t('common.search')\" />\r\n                    </span>\r\n                </div>\r\n            </template>\r\n            <Column selectionMode=\"multiple\" :style=\"metawebAddPhysicalTableDialogDescriptor.selectColumnStyle\" />\r\n            <Column field=\"name\" :header=\"$t('common.name')\" />\r\n        </DataTable>\r\n\r\n        <template #footer>\r\n            <Button class=\"kn-button kn-button--primary\" @click=\"closeDialog\"> {{ $t('common.cancel') }}</Button>\r\n            <Button class=\"kn-button kn-button--primary\" @click=\"save\"> {{ $t('common.save') }}</Button>\r\n        </template>\r\n    </Dialog>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import { defineComponent } from 'vue'\r\n    import { filterDefault } from '@/helpers/commons/filterHelper'\r\n    import Column from 'primevue/column'\r\n    import DataTable from 'primevue/datatable'\r\n    import Dialog from 'primevue/dialog'\r\n    import metawebAddPhysicalTableDialogDescriptor from './MetawebAddPhysicalTableDialogDescriptor.json'\r\n\r\n    export default defineComponent({\r\n        name: 'metaweb-add-physical-table-dialog',\r\n        components: { Column, DataTable, Dialog },\r\n        props: { visible: { type: Boolean }, physicalTables: { type: Array }, propLoading: { type: Boolean }, roles: { type: Array } },\r\n        emits: ['close', 'save'],\r\n        data() {\r\n            return {\r\n                metawebAddPhysicalTableDialogDescriptor,\r\n                rows: [] as any[],\r\n                selectedTables: [] as any[],\r\n                filters: {\r\n                    global: [filterDefault]\r\n                } as Object,\r\n                loading: false\r\n            }\r\n        },\r\n        watch: {\r\n            physicalTables() {\r\n                this.loadTables()\r\n            },\r\n            propLoading() {\r\n                this.setLoading()\r\n            }\r\n        },\r\n        created() {\r\n            this.loadTables()\r\n            this.setLoading()\r\n        },\r\n        methods: {\r\n            loadTables() {\r\n                this.selectedTables = []\r\n                this.rows = this.physicalTables as any[]\r\n            },\r\n            setLoading() {\r\n                this.loading = this.propLoading\r\n            },\r\n            closeDialog() {\r\n                this.selectedTables = []\r\n                this.$emit('close')\r\n            },\r\n            save() {\r\n                this.$emit('save', [...this.selectedTables])\r\n            }\r\n        }\r\n    })\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n    #metaweb-add-physical-table-dialog .p-dialog-header,\r\n    #metaweb-add-physical-table-dialog .p-dialog-content {\r\n        padding: 0;\r\n    }\r\n\r\n    #metaweb-add-physical-table-dialog .p-dialog-content {\r\n        display: flex;\r\n        flex-direction: column;\r\n        flex: 1;\r\n    }\r\n</style>\r\n","<template>\r\n    <div>\r\n        <DataTable v-if=\"businessModel\" class=\"p-datatable-sm kn-table p-m-2\" :value=\"physicalTables\" v-model:filters=\"filters\" :globalFilterFields=\"metawebPhysicalTableTabDescriptor.globalFilterFields\" :loading=\"loading\" editMode=\"cell\" responsiveLayout=\"stack\" breakpoint=\"960px\">\r\n            <template #header>\r\n                <div class=\"table-header\">\r\n                    <span class=\"p-input-icon-left\">\r\n                        <i class=\"pi pi-search\" />\r\n                        <InputText class=\"kn-material-input\" type=\"text\" v-model=\"filters['global'].value\" :placeholder=\"$t('common.search')\" badge=\"0\" data-test=\"search-input\" />\r\n                    </span>\r\n                </div>\r\n            </template>\r\n            <template #empty>\r\n                {{ $t('common.info.noDataFound') }}\r\n            </template>\r\n            <Column class=\"kn-truncated\" :header=\"$t('common.name')\">\r\n                <template #body=\"slotProps\">\r\n                    <span v-tooltip.top=\"slotProps.data.name\">{{ slotProps.data.name }}</span>\r\n                </template>\r\n            </Column>\r\n            <Column :style=\"metawebPhysicalTableTabDescriptor.iconColumnStyle\">\r\n                <template #header>\r\n                    <Button class=\"kn-button kn-button--primary p-button-link p-jc-center\" @click=\"openAddPhysicalTableDialog\"> {{ $t('common.add') }}</Button>\r\n                </template>\r\n\r\n                <template #body=\"slotProps\">\r\n                    <div class=\"p-d-flex p-flex-row p-jc-end\">\r\n                        <Button icon=\"pi pi-trash\" class=\"p-button-link\" v-tooltip.top=\"$t('common.delete')\" @click=\"deletePhysicalTableConfirm(slotProps.data)\" />\r\n                    </div>\r\n                </template>\r\n            </Column>\r\n        </DataTable>\r\n\r\n        <MetawebAddPhysicalTableDialog :visible=\"addTableDialogVisible\" :physicalTables=\"availablePhysicalTables\" :propLoading=\"loading\" @close=\"addTableDialogVisible = false\" @save=\"addNewPhysicalTables\"></MetawebAddPhysicalTableDialog>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent, PropType } from 'vue'\r\nimport { AxiosResponse } from 'axios'\r\nimport { iBusinessModel } from '../../../Metaweb'\r\nimport { filterDefault } from '@/helpers/commons/filterHelper'\r\nimport Column from 'primevue/column'\r\nimport DataTable from 'primevue/datatable'\r\nimport metawebPhysicalTableTabDescriptor from './MetawebPhysicalTableTabDescriptor.json'\r\nimport MetawebAddPhysicalTableDialog from './metawebAddPhysicalTableDialog/MetawebAddPhysicalTableDialog.vue'\r\nimport { generate, applyPatch } from 'fast-json-patch'\r\nimport mainStore from '../../../../../../../App.store'\r\n\r\nexport default defineComponent({\r\n    name: 'metaweb-physical-table-tab',\r\n    props: { selectedBusinessModel: { type: Object as PropType<iBusinessModel | null> }, propMeta: { type: Object }, observer: { type: Object } },\r\n    components: { Column, DataTable, MetawebAddPhysicalTableDialog },\r\n    data() {\r\n        return {\r\n            metawebPhysicalTableTabDescriptor,\r\n            meta: null as any,\r\n            businessModel: null as iBusinessModel | null,\r\n            physicalTables: [] as any,\r\n            filters: {\r\n                global: [filterDefault]\r\n            } as Object,\r\n            availablePhysicalTables: [] as any[],\r\n            addTableDialogVisible: false,\r\n            loading: false\r\n        }\r\n    },\r\n    watch: {\r\n        selectedBusinessModel() {\r\n            this.loadData()\r\n        }\r\n    },\r\n    setup() {\r\n        const store = mainStore()\r\n        return { store }\r\n    },\r\n    created() {\r\n        this.loadData()\r\n    },\r\n    methods: {\r\n        loadData() {\r\n            this.loadMeta()\r\n            this.loadBusinessModel()\r\n        },\r\n        loadMeta() {\r\n            this.meta = this.propMeta as any\r\n        },\r\n        loadBusinessModel() {\r\n            this.businessModel = this.selectedBusinessModel as iBusinessModel\r\n            this.loadPhysicalTables()\r\n        },\r\n        loadPhysicalTables() {\r\n            this.physicalTables = []\r\n            if (this.businessModel) {\r\n                this.businessModel.physicalTables?.forEach((el: any) => this.physicalTables.push(this.meta.physicalModels[el.physicalTableIndex]))\r\n            }\r\n        },\r\n        openAddPhysicalTableDialog() {\r\n            this.availablePhysicalTables = [...this.meta.physicalModels]\r\n            const indexesToRemove = this.businessModel?.physicalTables?.map((el: any) => el.physicalTableIndex).sort()\r\n\r\n            if (indexesToRemove) {\r\n                for (let i = indexesToRemove.length - 1; i >= 0; i--) {\r\n                    this.availablePhysicalTables.splice(indexesToRemove[i], 1)\r\n                }\r\n            }\r\n\r\n            this.addTableDialogVisible = true\r\n        },\r\n        deletePhysicalTableConfirm(physicalTable: any) {\r\n            this.$confirm.require({\r\n                message: this.$t('documentExecution.dossier.deleteConfirm'),\r\n                header: this.$t('documentExecution.dossier.deleteTitle'),\r\n                icon: 'pi pi-exclamation-triangle',\r\n                accept: async () => await this.deletePhysicalTable(physicalTable)\r\n            })\r\n        },\r\n        async deletePhysicalTable(physicalTable: any) {\r\n            this.loading = true\r\n            const postData = { data: { viewUniqueName: this.businessModel?.uniqueName, physicalTable: physicalTable.name } }\r\n            await this.$http\r\n                .post(import.meta.env.VITE_META_API_URL + `/1.0/metaWeb/deletePhysicalColumnfromBusinessView`, postData)\r\n                .then((response: AxiosResponse<any>) => {\r\n                    this.meta = applyPatch(this.meta, response.data).newDocument\r\n                    this.loadData()\r\n\r\n                    this.store.setInfo({\r\n                        title: this.$t('common.toast.deleteTitle'),\r\n                        msg: this.$t('common.toast.deleteSuccess')\r\n                    })\r\n                    generate(this.observer)\r\n                })\r\n                .catch(() => {})\r\n            this.loading = false\r\n        },\r\n        async addNewPhysicalTables(selectedTables: any[]) {\r\n            this.loading = true\r\n            const postData = { data: { viewUniqueName: this.businessModel?.uniqueName, physicalTables: selectedTables.map((el: any) => el.name) }, diff: generate(this.observer) }\r\n            await this.$http\r\n                .post(import.meta.env.VITE_META_API_URL + `/1.0/metaWeb/addPhysicalColumnToBusinessView`, postData)\r\n                .then((response: AxiosResponse<any>) => {\r\n                    this.meta = applyPatch(this.meta, response.data).newDocument\r\n                    this.loadData()\r\n\r\n                    this.store.setInfo({\r\n                        title: this.$t('common.toast.createTitle'),\r\n                        msg: this.$t('common.toast.createSuccess')\r\n                    })\r\n                    this.addTableDialogVisible = false\r\n                    generate(this.observer)\r\n                })\r\n                .catch(() => {})\r\n            this.loading = false\r\n        }\r\n    }\r\n})\r\n</script>\r\n","<template>\r\n    <DataTable :value=\"businessModel.joinRelationships\" class=\"p-datatable-sm kn-table p-ml-2\" responsiveLayout=\"scroll\" breakpoint=\"400px\">\r\n        <Column class=\"p-text-center\">\r\n            <template #header>\r\n                <Button :label=\"$t('metaweb.businessModel.editJoin')\" class=\"p-button-link p-text-right\" @click=\"showBusinessViewDialog = true\" />\r\n            </template>\r\n            <template #body=\"slotProps\">\r\n                <span v-for=\"(rel, index) in slotProps.data.sourceColumns\" v-bind:key=\"index\" class=\"associator-block-hover p-d-flex p-flex-row p-ai-center kn-width-full\">\r\n                    <!-- <span class=\"p-mr-6\">{{ slotProps.data.sourceTable.name }}.{{ rel.name }}</span>\r\n                    <span class=\"p-mx-6\"><i class=\"fa fa-link\" aria-hidden=\"true\"></i></span>\r\n                    <span class=\"p-ml-6\">{{ slotProps.data.destinationTable.name }}.{{ slotProps.data.destinationColumns[index].name }}</span> -->\r\n                    <span class=\"kn-truncated kn-flex-05 p-ml-2 p-text-right\">{{ slotProps.data.sourceTable.name }}.{{ rel.name }}</span>\r\n                    <i class=\"fas fa-link kn-flex-05\" aria-hidden=\"true\" />\r\n                    <span class=\"kn-truncated kn-flex-05 p-ml-2 p-text-left\">{{ slotProps.data.destinationTable.name }}.{{ slotProps.data.destinationColumns[index].name }}</span>\r\n                    <br />\r\n                </span>\r\n            </template>\r\n        </Column>\r\n    </DataTable>\r\n\r\n    <MetawebBusinessViewDialog\r\n        v-if=\"showBusinessViewDialog\"\r\n        :selectedBusinessModel=\"selectedBusinessModel\"\r\n        :physicalModels=\"propMeta.physicalModels\"\r\n        :meta=\"propMeta\"\r\n        :observer=\"observer\"\r\n        :editMode=\"true\"\r\n        :showBusinessViewDialog=\"showBusinessViewDialog\"\r\n        @closeDialog=\"showBusinessViewDialog = false\"\r\n    />\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport useValidate from '@vuelidate/core'\r\nimport { defineComponent, PropType } from 'vue'\r\nimport { iBusinessModel } from '@/modules/managers/businessModelCatalogue/metaweb/Metaweb'\r\nimport DataTable from 'primevue/datatable'\r\nimport Column from 'primevue/column'\r\nimport MetawebBusinessViewDialog from '@/modules/managers/businessModelCatalogue/metaweb/businessModel/dialogs/MetawebBusinessViewDialog.vue'\r\n\r\nexport default defineComponent({\r\n    name: 'metaweb-attributes-tab',\r\n    components: { DataTable, Column, MetawebBusinessViewDialog },\r\n    props: {\r\n        selectedBusinessModel: { type: Object as PropType<iBusinessModel | null>, required: true },\r\n        propMeta: { type: Object },\r\n        observer: { type: Object }\r\n    },\r\n    emits: ['loading'],\r\n    computed: {},\r\n    data() {\r\n        return {\r\n            v$: useValidate() as any,\r\n            businessModel: null as iBusinessModel | null,\r\n            showBusinessViewDialog: false\r\n        }\r\n    },\r\n    watch: {\r\n        selectedBusinessModel() {\r\n            this.loadData()\r\n        }\r\n    },\r\n    created() {\r\n        this.loadData()\r\n    },\r\n    validations() {},\r\n    methods: {\r\n        loadData() {\r\n            this.businessModel = this.selectedBusinessModel as iBusinessModel\r\n        }\r\n    }\r\n})\r\n</script>\r\n","<template>\r\n    <div v-if=\"businessModel\">\r\n        <div v-for=\"(property, index) in businessModel.properties\" :key=\"index\">\r\n            <div class=\"p-d-flex p-flex-row p-m-4\" v-if=\"property['structural.sqlFilter']\">\r\n                <div class=\"p-mr-2\">\r\n                    <i class=\"fa fa-question-circle\" v-tooltip.top=\"$t('metaweb.filterHelpMessage')\"></i>\r\n                </div>\r\n                <div class=\" p-fluid p-field kn-flex\">\r\n                    <label class=\"kn-material-input-label\"> {{ $t('common.sqlExpression') }} </label>\r\n                    <Textarea class=\"kn-material-input\" v-model=\"property['structural.sqlFilter'].value\" @blur=\"updateMeta\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent, PropType } from 'vue'\r\nimport { iBusinessModel } from '../../../Metaweb'\r\nimport Textarea from 'primevue/textarea'\r\n\r\nexport default defineComponent({\r\n    name: 'metaweb-filter-tab',\r\n    components: { Textarea },\r\n    props: { selectedBusinessModel: { type: Object as PropType<iBusinessModel | null> }, propMeta: { type: Object } },\r\n    emits: ['metaUpdated'],\r\n    data() {\r\n        return {\r\n            meta: null as any,\r\n            businessModel: null as iBusinessModel | null\r\n        }\r\n    },\r\n    watch: {\r\n        selectedBusinessModel() {\r\n            this.loadMeta()\r\n            this.loadBusinessModel()\r\n        }\r\n    },\r\n    created() {\r\n        this.loadMeta()\r\n        this.loadBusinessModel()\r\n    },\r\n    methods: {\r\n        loadMeta() {\r\n            this.meta = this.propMeta as any\r\n        },\r\n        loadBusinessModel() {\r\n            this.businessModel = this.selectedBusinessModel as iBusinessModel\r\n        },\r\n        updateMeta() {\r\n            setTimeout(() => {\r\n                this.$emit('metaUpdated')\r\n            }, 250)\r\n        }\r\n    }\r\n})\r\n</script>\r\n","<template>\r\n    <DataTable :value=\"businessModel.calculatedBusinessColumns\" class=\"p-datatable-sm kn-table p-ml-2\" responsiveLayout=\"stack\" breakpoint=\"960px\">\r\n        <template #empty>\r\n            {{ $t('common.info.noDataFound') }}\r\n        </template>\r\n        <Column field=\"name\" :header=\"$t('common.name')\" :sortable=\"true\" />\r\n        <Column :style=\"descriptor.style.iconColumnStyle\" class=\"p-text-right\">\r\n            <template #header>\r\n                <Button :label=\"$t('common.add')\" class=\"p-button-link p-text-right\" @click=\"addCalcField\" />\r\n            </template>\r\n            <template #body=\"slotProps\">\r\n                <Button icon=\"far fa-edit\" class=\"p-button-link\" @click=\"editCalcField(slotProps.data)\" />\r\n                <Button icon=\"pi pi-trash\" class=\"p-button-link\" @click=\"deleteCalcField(slotProps.data)\" />\r\n            </template>\r\n        </Column>\r\n    </DataTable>\r\n\r\n    <KnCalculatedField\r\n        v-if=\"calcFieldDialogVisible\"\r\n        v-model:template=\"selectedCalcField\"\r\n        v-model:visibility=\"calcFieldDialogVisible\"\r\n        :fields=\"calcFieldColumns\"\r\n        :descriptor=\"calcFieldDescriptor\"\r\n        :propCalcFieldFunctions=\"calcFieldFunctions\"\r\n        :source=\"'QBE'\"\r\n        :readOnly=\"false\"\r\n        :valid=\"true\"\r\n        @save=\"onCalcFieldSave\"\r\n        @cancel=\"calcFieldDialogVisible = false\"\r\n    >\r\n        <template #additionalInputs>\r\n            <div class=\"p-field\" :class=\"[selectedCalcField.type === 'DATE' ? 'p-col-3' : 'p-col-4']\">\r\n                <span class=\"p-float-label\">\r\n                    <Dropdown id=\"type\" class=\"kn-material-input\" v-model=\"selectedCalcField.type\" :options=\"descriptor.types\" optionLabel=\"label\" optionValue=\"name\" />\r\n                    <label for=\"type\" class=\"kn-material-input-label\"> {{ $t('components.knCalculatedField.type') }} </label>\r\n                </span>\r\n            </div>\r\n            <div v-if=\"selectedCalcField.type === 'DATE'\" class=\"p-field p-col-3\">\r\n                <span class=\"p-float-label\">\r\n                    <Dropdown id=\"type\" class=\"kn-material-input\" v-model=\"selectedCalcField.format\" :options=\"descriptor.admissibleDateFormats\">\r\n                        <template #value>\r\n                            <span>{{ selectedCalcField.format ? moment().format(selectedCalcField.format) : '' }}</span>\r\n                        </template>\r\n                        <template #option=\"slotProps\">\r\n                            <span>{{ moment().format(slotProps.option) }}</span>\r\n                        </template>\r\n                    </Dropdown>\r\n                    <label for=\"type\" class=\"kn-material-input-label\"> {{ $t('managers.datasetManagement.ckanDateFormat') }} </label>\r\n                </span>\r\n            </div>\r\n            <div class=\"p-field\" :class=\"[selectedCalcField.type === 'DATE' ? 'p-col-3' : 'p-col-4']\">\r\n                <span class=\"p-float-label\">\r\n                    <Dropdown id=\"columnType\" class=\"kn-material-input\" v-model=\"selectedCalcField.nature\" :options=\"descriptor.columnTypes\" optionLabel=\"label\" optionValue=\"name\" />\r\n                    <label for=\"columnType\" class=\"kn-material-input-label\"> {{ $t('managers.functionsCatalog.columnType') }} </label>\r\n                </span>\r\n            </div>\r\n        </template>\r\n    </KnCalculatedField>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { AxiosResponse } from 'axios'\r\nimport { defineComponent, PropType } from 'vue'\r\nimport { iBusinessModel } from '../../../Metaweb'\r\nimport { IKnCalculatedFieldFunction } from '@/components/functionalities/KnCalculatedField/KnCalculatedField'\r\nimport moment from 'moment'\r\nimport DataTable from 'primevue/datatable'\r\nimport Column from 'primevue/column'\r\nimport descriptor from './MetawebCalculatedFieldDescriptor.json'\r\nimport calcFieldDescriptor from './MetawebCalcFieldDescriptor.json'\r\nimport KnCalculatedField from '@/components/functionalities/KnCalculatedField/KnCalculatedField.vue'\r\nimport Dropdown from 'primevue/dropdown'\r\n\r\nimport { generate, applyPatch } from 'fast-json-patch'\r\nimport deepcopy from 'deepcopy'\r\n\r\nexport default defineComponent({\r\n    name: 'metaweb-filter-tab',\r\n    components: { DataTable, Column, KnCalculatedField, Dropdown },\r\n    props: { selectedBusinessModel: { type: Object as PropType<iBusinessModel | null> }, propMeta: { type: Object }, propCustomFunctions: { type: Array }, observer: { type: Object, required: true } },\r\n    emits: ['metaUpdated'],\r\n    data() {\r\n        return {\r\n            moment,\r\n            descriptor,\r\n            calcFieldDescriptor,\r\n            meta: null as any,\r\n            businessModel: null as iBusinessModel | null,\r\n            calcFieldDialogVisible: false,\r\n            readOnly: false,\r\n            selectedCalcField: {} as any,\r\n            calcFieldColumns: [] as any,\r\n            calcFieldFunctions: [] as IKnCalculatedFieldFunction[]\r\n        }\r\n    },\r\n    computed: {\r\n        isGeographicBm(): boolean {\r\n            let hideFields = false\r\n            this.businessModel?.properties?.forEach((el: any) => {\r\n                const key = Object.keys(el)[0]\r\n                if (key === 'structural.tabletype' && el[key].value === 'geographic dimension') {\r\n                    hideFields = true\r\n                }\r\n            })\r\n            return hideFields\r\n        }\r\n    },\r\n    watch: {\r\n        selectedBusinessModel: {\r\n            handler() {\r\n                this.loadMeta()\r\n                this.loadBusinessModel()\r\n                this.calcFieldFunctions = this.createCalcFieldFunctions(calcFieldDescriptor.availableFunctions, this.propCustomFunctions)\r\n            },\r\n            deep: true\r\n        }\r\n    },\r\n    created() {\r\n        this.loadMeta()\r\n        this.loadBusinessModel()\r\n        this.calcFieldFunctions = this.createCalcFieldFunctions(calcFieldDescriptor.availableFunctions, this.propCustomFunctions)\r\n    },\r\n    methods: {\r\n        loadMeta() {\r\n            this.meta = this.propMeta as any\r\n        },\r\n        loadBusinessModel() {\r\n            this.businessModel = this.selectedBusinessModel as iBusinessModel\r\n        },\r\n        updateMeta() {\r\n            setTimeout(() => {\r\n                this.$emit('metaUpdated')\r\n            }, 250)\r\n        },\r\n\r\n        createCalcFieldColumns() {\r\n            this.calcFieldColumns = []\r\n            this.businessModel?.simpleBusinessColumns.forEach((field) => {\r\n                this.calcFieldColumns.push({ fieldAlias: field.name, fieldLabel: field.name })\r\n            })\r\n        },\r\n\r\n        editCalcField(calcField) {\r\n            this.createCalcFieldColumns()\r\n            this.selectedCalcField = this.formatCalcFieldForComponent(calcField)\r\n            this.calcFieldDialogVisible = true\r\n        },\r\n\r\n        formatCalcFieldForComponent(calcField) {\r\n            let formatField = {} as any\r\n\r\n            formatField.alias = calcField.name\r\n            formatField.uniqueName = calcField.uniqueName\r\n\r\n            for (var i = 0; i < calcField.properties.length; i++) {\r\n                var key = Object.keys(calcField.properties[i])[0]\r\n                if (key === 'structural.datatype') {\r\n                    formatField.type = calcField.properties[i][key].value.toUpperCase()\r\n                }\r\n                if (key === 'structural.expression') {\r\n                    formatField.expression = calcField.properties[i][key].value\r\n                }\r\n                if (key === 'structural.columntype') {\r\n                    formatField.nature = calcField.properties[i][key].value.toUpperCase()\r\n                }\r\n            }\r\n\r\n            return formatField\r\n        },\r\n\r\n        addCalcField() {\r\n            this.createCalcFieldColumns()\r\n            this.selectedCalcField = { alias: '', expression: '', format: undefined, nature: 'ATTRIBUTE', type: 'STRING' } as any\r\n            this.calcFieldDialogVisible = true\r\n        },\r\n\r\n        onCalcFieldSave(event) {\r\n            let calculatedField = {\r\n                expression: event.formula,\r\n                dataType: this.selectedCalcField.type,\r\n                columnType: this.selectedCalcField.nature.toLowerCase(),\r\n                name: event.colName,\r\n                sourceTableName: this.businessModel?.uniqueName,\r\n                editMode: false\r\n            } as any\r\n\r\n            calculatedField.dataType == 'DATE' ? (calculatedField.format = this.selectedCalcField.format) : ''\r\n\r\n            if (this.selectedCalcField.uniqueName) {\r\n                calculatedField.uniquename = this.selectedCalcField.uniqueName\r\n                calculatedField.editMode = true\r\n            }\r\n\r\n            this.createCalcField(calculatedField)\r\n            this.calcFieldDialogVisible = false\r\n        },\r\n\r\n        async createCalcField(calculatedField) {\r\n            const postData = { data: calculatedField, diff: generate(this.observer) }\r\n            await this.$http\r\n                .post(import.meta.env.VITE_META_API_URL + `/1.0/metaWeb/setCalculatedField`, postData)\r\n                .then((response: AxiosResponse<any>) => {\r\n                    this.meta = applyPatch(this.meta, response.data).newDocument\r\n                })\r\n                .catch(() => {})\r\n                .finally(() => generate(this.observer))\r\n        },\r\n\r\n        async deleteCalcField(calcField) {\r\n            let dataToSend = { name: calcField.name, sourceTableName: this.businessModel?.uniqueName }\r\n            const postData = { data: dataToSend, diff: generate(this.observer) }\r\n            await this.$http\r\n                .post(import.meta.env.VITE_META_API_URL + `/1.0/metaWeb/deleteCalculatedField`, postData)\r\n                .then((response: AxiosResponse<any>) => {\r\n                    this.meta = applyPatch(this.meta, response.data).newDocument\r\n                })\r\n                .catch(() => {})\r\n                .finally(() => generate(this.observer))\r\n        },\r\n        createCalcFieldFunctions(providedFunctions, customFunctions?) {\r\n            let functions = deepcopy(providedFunctions)\r\n\r\n            if (customFunctions) {\r\n                customFunctions.forEach((funct) => {\r\n                    functions.push(funct)\r\n                })\r\n            }\r\n            if (!this.isGeographicBm) {\r\n                let tempFunctions = deepcopy(functions)\r\n                functions = tempFunctions.filter((funct) => {\r\n                    return funct.category !== 'SPATIAL'\r\n                })\r\n            }\r\n\r\n            return functions\r\n        }\r\n    }\r\n})\r\n</script>\r\n","<template>\r\n    <div v-if=\"meta\" class=\"p-grid p-m-0 kn-flex\">\r\n        <div id=\"CONTAINER ELEMENT LIST\" class=\"p-col-4 p-sm-4 p-md-3 p-p-0 p-d-flex p-flex-column kn-flex\">\r\n            <ProgressBar mode=\"indeterminate\" class=\"kn-progress-bar\" v-if=\"loading\" data-test=\"progress-bar\" />\r\n            <div class=\"p-d-flex p-flex-column kn-flex\">\r\n                <Toolbar class=\"kn-toolbar kn-toolbar--default\">\r\n                    <template #start>\r\n                        <span>{{ $t('metaweb.businessModel.businessClass') }}</span>\r\n                    </template>\r\n                    <template #end>\r\n                        <KnFabButton icon=\"fas fa-plus\" @click=\"showMenu\" />\r\n                    </template>\r\n                </Toolbar>\r\n                <div class=\"kn-relative kn-flex\">\r\n                    <div class=\"kn-height-full kn-width-full kn-absolute\">\r\n                        <DataTable class=\"p-datatable-sm metaweb-table kn-table metaweb-right-border\" :loading=\"loading\" :scrollable=\"true\" scrollHeight=\"100%\" :value=\"meta.businessModels\" @row-click=\"selectBusinessModel\" @rowReorder=\"onRowReorder\" data-test=\"bm-table\">\r\n                            <Column :rowReorder=\"true\" :reorderableColumn=\"false\" />\r\n                            <Column :style=\"mainDescriptor.style.columnMain\">\r\n                                <template #body=\"slotProps\">\r\n                                    <span>{{ slotProps.data.name }}</span>\r\n                                    <Chip :label=\"slotProps.data.columns.length + ' ' + $t('metaweb.businessModel.tabView.attributes')\" class=\"p-ml-2\" :style=\"mainDescriptor.style.chip\" />\r\n                                </template>\r\n                            </Column>\r\n\r\n                            <Column :style=\"mainDescriptor.style.columnTrash\">\r\n                                <template #body=\"slotProps\">\r\n                                    <Button icon=\"pi pi-trash\" class=\"p-button-link\" @click=\"deleteFromList(slotProps.data)\" />\r\n                                </template>\r\n                            </Column>\r\n                        </DataTable>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div v-if=\"meta.businessViews.length > 0\" class=\"p-d-flex p-flex-column kn-flex\">\r\n                <Toolbar class=\"kn-toolbar kn-toolbar--default\">\r\n                    <template #start>\r\n                        <span>{{ $t('metaweb.businessModel.businessView') }}</span>\r\n                    </template>\r\n                </Toolbar>\r\n                <div class=\"kn-relative kn-flex\">\r\n                    <div class=\"kn-height-full kn-width-full kn-absolute\">\r\n                        <DataTable class=\"p-datatable-sm metaweb-table kn-table metaweb-right-border\" :loading=\"loading\" :scrollable=\"true\" scrollHeight=\"100%\" :value=\"meta.businessViews\" @row-click=\"selectBusinessModel\" @rowReorder=\"onRowReorder\">\r\n                            <Column :rowReorder=\"true\" :reorderableColumn=\"false\" />\r\n                            <Column :style=\"mainDescriptor.style.columnMain\">\r\n                                <template #body=\"slotProps\">\r\n                                    <span>{{ slotProps.data.name }}</span>\r\n                                    <Chip :label=\"slotProps.data.columns.length + ' ' + $t('metaweb.businessModel.tabView.attributes')\" class=\"p-ml-2\" :style=\"mainDescriptor.style.chip\" />\r\n                                </template>\r\n                            </Column>\r\n\r\n                            <Column :style=\"mainDescriptor.style.columnTrash\">\r\n                                <template #body=\"slotProps\">\r\n                                    <Button icon=\"pi pi-trash\" class=\"p-button-link\" @click=\"deleteFromList(slotProps.data)\" />\r\n                                </template>\r\n                            </Column>\r\n                        </DataTable>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div id=\"CONTAINER ELEMENT DETAILS\" class=\"p-col-8 p-sm-8 p-md-9 p-p-0 p-m-0 p-d-flex p-flex-column\" :style=\"mainDescriptor.style.flex3\">\r\n            <Toolbar class=\"kn-toolbar kn-toolbar--secondary\">\r\n                <template #start>\r\n                    <span v-if=\"selectedBusinessModel\">{{ selectedBusinessModel.name }}</span>\r\n                </template>\r\n            </Toolbar>\r\n            <div v-if=\"Object.keys(selectedBusinessModel).length !== 0\" class=\"metaweb-tab-container p-d-flex p-flex-column kn-flex\">\r\n                <TabView class=\"metaweb-tabview p-d-flex p-flex-column kn-flex\" scrollable>\r\n                    <TabPanel>\r\n                        <template #header>\r\n                            <span>{{ $t('metaweb.businessModel.tabView.propertyTitle') }}</span>\r\n                        </template>\r\n\r\n                        <div :style=\"mainDescriptor.style.absoluteScroll\">\r\n                            <MetawebBusinessPropertyListTab :selectedBusinessModel=\"selectedBusinessModel\" :roles=\"roles\" :propMeta=\"meta\" @metaUpdated=\"$emit('metaUpdated')\"></MetawebBusinessPropertyListTab>\r\n                        </div>\r\n                    </TabPanel>\r\n\r\n                    <TabPanel>\r\n                        <template #header>\r\n                            <span>{{ $t('metaweb.businessModel.tabView.attributes') }}</span>\r\n                        </template>\r\n\r\n                        <div :style=\"mainDescriptor.style.absoluteScroll\">\r\n                            <MetawebAttributesTab :selectedBusinessModel=\"selectedBusinessModel\" :propMeta=\"meta\" :observer=\"observer\" :roles=\"roles\" @metaUpdated=\"$emit('metaUpdated')\"></MetawebAttributesTab>\r\n                        </div>\r\n                    </TabPanel>\r\n\r\n                    <TabPanel>\r\n                        <template #header>\r\n                            <span>{{ $t('metaweb.businessModel.tabView.calcField') }}</span>\r\n                        </template>\r\n                        <div :style=\"mainDescriptor.style.absoluteScroll\">\r\n                            <CalculatedField :selectedBusinessModel=\"selectedBusinessModel\" :propMeta=\"meta\" :propCustomFunctions=\"customFunctions\" @metaUpdated=\"$emit('metaUpdated')\" :observer=\"observer\" />\r\n                        </div>\r\n                    </TabPanel>\r\n                    <TabPanel>\r\n                        <template #header>\r\n                            <span>{{ $t('metaweb.businessModel.tabView.inbound') }}</span>\r\n                        </template>\r\n                        <div :style=\"mainDescriptor.style.absoluteScroll\">\r\n                            <InboundRelationships :selectedBusinessModel=\"selectedBusinessModel\" :propMeta=\"meta\" :observer=\"observer\" />\r\n                        </div>\r\n                    </TabPanel>\r\n                    <TabPanel>\r\n                        <template #header>\r\n                            <span>{{ $t('metaweb.businessModel.tabView.outbound') }}</span>\r\n                        </template>\r\n                        <div :style=\"mainDescriptor.style.absoluteScroll\">\r\n                            <OutboundRelationships :selectedBusinessModel=\"selectedBusinessModel\" :propMeta=\"meta\" :observer=\"observer\" />\r\n                        </div>\r\n                    </TabPanel>\r\n                    <TabPanel>\r\n                        <template #header>\r\n                            <span>{{ $t('metaweb.businessModel.tabView.filter') }}</span>\r\n                        </template>\r\n                        <div :style=\"mainDescriptor.style.absoluteScroll\"><MetawebFilterTab :selectedBusinessModel=\"selectedBusinessModel\" :propMeta=\"meta\" @metaUpdated=\"$emit('metaUpdated')\"></MetawebFilterTab></div>\r\n                    </TabPanel>\r\n\r\n                    <TabPanel v-if=\"selectedBusinessModel.joinRelationships != undefined\">\r\n                        <template #header>\r\n                            <span>{{ $t('metaweb.businessModel.tabView.joinRelationships') }}</span>\r\n                        </template>\r\n                        <div :style=\"mainDescriptor.style.absoluteScroll\">\r\n                            <MetawebJoinRelationships :selectedBusinessModel=\"selectedBusinessModel\" :propMeta=\"meta\" :observer=\"observer\" />\r\n                        </div>\r\n                    </TabPanel>\r\n\r\n                    <TabPanel v-if=\"selectedBusinessModel.joinRelationships != undefined\">\r\n                        <template #header>\r\n                            <span>{{ $t('metaweb.businessModel.physicalTable') }}</span>\r\n                        </template>\r\n\r\n                        <div :style=\"mainDescriptor.style.absoluteScroll\">\r\n                            <MetawebPhysicalTableTab :selectedBusinessModel=\"selectedBusinessModel\" :propMeta=\"meta\" :observer=\"observer\"></MetawebPhysicalTableTab>\r\n                        </div>\r\n                    </TabPanel>\r\n                </TabView>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <Menu id=\"optionsMenu\" ref=\"optionsMenu\" :model=\"menuButtons\" />\r\n    <BusinessClassDialog v-if=\"showBusinessClassDialog\" :meta=\"meta\" :observer=\"observer\" :physicalModels=\"meta.physicalModels\" :showBusinessClassDialog=\"showBusinessClassDialog\" @closeDialog=\"showBusinessClassDialog = false\" />\r\n    <BusinessViewDialog v-if=\"showBusinessViewDialog\" :meta=\"meta\" :observer=\"observer\" :showBusinessViewDialog=\"showBusinessViewDialog\" @closeDialog=\"showBusinessViewDialog = false\" />\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport { iBusinessModel } from '../Metaweb'\r\nimport { AxiosResponse } from 'axios'\r\nimport mainDescriptor from '../MetawebDescriptor.json'\r\nimport KnFabButton from '@/components/UI/KnFabButton.vue'\r\nimport TabView from 'primevue/tabview'\r\nimport TabPanel from 'primevue/tabpanel'\r\nimport bmDescriptor from './MetawebBusinessModelDescriptor.json'\r\nimport Menu from 'primevue/contextmenu'\r\nimport MetawebBusinessPropertyListTab from './tabs/propertyListTab/MetawebBusinessPropertyListTab.vue'\r\nimport BusinessClassDialog from './dialogs/MetawebBusinessClassDialog.vue'\r\nimport BusinessViewDialog from './dialogs/MetawebBusinessViewDialog.vue'\r\nimport MetawebAttributesTab from './tabs/metawebAttributesTab/MetawebAttributesTab.vue'\r\nimport InboundRelationships from './tabs/inboundRelationships/MetawebInboundRelationships.vue'\r\nimport OutboundRelationships from './tabs/outboundRelationships/MetawebOutboundRelationships.vue'\r\nimport MetawebPhysicalTableTab from './tabs/physicalTable/MetawebPhysicalTableTab.vue'\r\nimport MetawebJoinRelationships from './tabs/joinRelationships/MetawebJoinRelationships.vue'\r\nimport MetawebFilterTab from './tabs/filterTab/MetawebFilterTab.vue'\r\nimport CalculatedField from './tabs/calculatedField/MetawebCalculatedField.vue'\r\nimport Column from 'primevue/column'\r\nimport DataTable from 'primevue/datatable'\r\nimport Chip from 'primevue/chip'\r\nimport mainStore from '../../../../../App.store'\r\n\r\nimport { generate, applyPatch } from 'fast-json-patch'\r\n\r\nexport default defineComponent({\r\n    name: 'metaweb-business-model',\r\n    components: {\r\n        Chip,\r\n        Column,\r\n        DataTable,\r\n        CalculatedField,\r\n        MetawebJoinRelationships,\r\n        OutboundRelationships,\r\n        BusinessClassDialog,\r\n        BusinessViewDialog,\r\n        KnFabButton,\r\n        TabView,\r\n        TabPanel,\r\n        Menu,\r\n        MetawebBusinessPropertyListTab,\r\n        MetawebAttributesTab,\r\n        InboundRelationships,\r\n        MetawebPhysicalTableTab,\r\n        MetawebFilterTab\r\n    },\r\n    props: { propMeta: { type: Object }, observer: { type: Object }, metaUpdated: { type: Boolean }, businessModelId: Number },\r\n    emits: ['loading', 'metaUpdated'],\r\n    computed: {},\r\n    data() {\r\n        return {\r\n            bmDescriptor,\r\n            mainDescriptor,\r\n            meta: null as any,\r\n            menuButtons: [] as any,\r\n            customFunctions: [] as any,\r\n            showBusinessClassDialog: false,\r\n            showBusinessViewDialog: false,\r\n            selectedBusinessModel: {} as iBusinessModel,\r\n            roles: [] as any[],\r\n            loading: false\r\n        }\r\n    },\r\n    watch: {\r\n        propMeta() {\r\n            this.loadMeta()\r\n        },\r\n        metaUpdated() {\r\n            this.loadMeta()\r\n        }\r\n    },\r\n    setup() {\r\n        const store = mainStore()\r\n        return { store }\r\n    },\r\n    created() {\r\n        this.loadMeta()\r\n        this.createMenuItems()\r\n        this.loadRoles()\r\n        this.loadCustomFunctions()\r\n    },\r\n    methods: {\r\n        showMenu(event) {\r\n            // eslint-disable-next-line\r\n            // @ts-ignore\r\n            this.$refs.optionsMenu.toggle(event)\r\n        },\r\n        createMenuItems() {\r\n            this.menuButtons = []\r\n            this.menuButtons.push({ key: '0', label: this.$t('metaweb.businessModel.newBusiness'), command: () => this.showBusinessClass() }, { key: '1', label: this.$t('metaweb.businessModel.newView'), command: () => this.showBusinessView() })\r\n        },\r\n        loadMeta() {\r\n            this.meta = this.propMeta\r\n        },\r\n        selectBusinessModel(event) {\r\n            this.selectedBusinessModel = event.data as iBusinessModel\r\n        },\r\n        showBusinessClass() {\r\n            this.showBusinessClassDialog = true\r\n        },\r\n        showBusinessView() {\r\n            this.showBusinessViewDialog = true\r\n        },\r\n        async deleteFromList(itemForDeletion) {\r\n            const postData = { data: { name: itemForDeletion.uniqueName }, diff: generate(this.observer) }\r\n            let url = ''\r\n            itemForDeletion.joinRelationships ? (url = import.meta.env.VITE_META_API_URL + '/1.0/metaWeb/deleteBusinessView') : (url = import.meta.env.VITE_META_API_URL + '/1.0/metaWeb/deleteBusinessClass')\r\n            await this.$http\r\n                .post(url, postData)\r\n                .then((response: AxiosResponse<any>) => {\r\n                    this.meta = applyPatch(this.meta, response.data).newDocument\r\n\r\n                    this.store.setInfo({\r\n                        title: this.$t('common.toast.deleteTitle'),\r\n                        msg: this.$t('common.toast.deleteSuccess')\r\n                    })\r\n                    generate(this.observer)\r\n                })\r\n                .catch(() => {})\r\n        },\r\n        async loadRoles() {\r\n            this.loading = true\r\n            await this.$http.get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + '2.0/roles').then((response: AxiosResponse<any>) => (this.roles = response.data))\r\n            this.loading = false\r\n        },\r\n        async loadCustomFunctions() {\r\n            this.loading = true\r\n            await this.$http.get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/configs/KNOWAGE.CUSTOMIZED_DATABASE_FUNCTIONS/${this.businessModelId}`).then((response: AxiosResponse<any>) => {\r\n                if (response.data.data && response.data.data.length > 0) {\r\n                    this.customFunctions = response.data.data.map((funct) => ({ category: 'CUSTOM', formula: funct.value, label: funct.label, name: funct.name, help: 'dataPreparation.custom' }))\r\n                } else this.customFunctions = null\r\n            })\r\n            this.loading = false\r\n        },\r\n        async onRowReorder(event: any) {\r\n            this.loading = true\r\n            const postData = { data: { index: event.dragIndex, direction: event.dropIndex - event.dragIndex }, diff: generate(this.observer) }\r\n            await this.$http\r\n                .post(import.meta.env.VITE_META_API_URL + `/1.0/metaWeb/moveBusinessClass`, postData)\r\n                .then((response: AxiosResponse<any>) => {\r\n                    this.meta = applyPatch(this.meta, response.data).newDocument\r\n                })\r\n                .catch(() => {})\r\n                .finally(() => generate(this.observer))\r\n            this.loading = false\r\n        }\r\n    }\r\n})\r\n</script>\r\n<style lang=\"scss\">\r\n.metaweb-table .p-datatable-thead {\r\n    display: none !important;\r\n}\r\n</style>\r\n","<template>\r\n    <div class=\"card\" style=\"height: calc(100vh - 165px)\">\r\n        <DataTable\r\n            :value=\"foreignKeys\"\r\n            class=\"p-datatable-sm kn-table\"\r\n            dataKey=\"id\"\r\n            v-model:filters=\"filters\"\r\n            :globalFilterFields=\"metawebForeignKeyTabDescriptor.globalFilterFields\"\r\n            responsiveLayout=\"stack\"\r\n            breakpoint=\"600px\"\r\n            :scrollable=\"true\"\r\n            :scrollHeight=\"metawebForeignKeyTabDescriptor.scrollHeight\"\r\n        >\r\n            <template #empty>\r\n                {{ $t('common.info.noDataFound') }}\r\n            </template>\r\n            <template #header>\r\n                <div class=\"table-header p-d-flex p-ai-center\">\r\n                    <span id=\"search-container\" class=\"p-input-icon-left p-mr-3\">\r\n                        <i class=\"pi pi-search\" />\r\n                        <InputText class=\"kn-material-input\" v-model=\"filters['global'].value\" :placeholder=\"$t('common.search')\" />\r\n                    </span>\r\n                </div>\r\n            </template>\r\n\r\n            <Column class=\"kn-truncated\" field=\"name\" :header=\"$t('common.name')\" key=\"name\" :sortable=\"true\">\r\n                <template #body=\"slotProps\">\r\n                    <span v-tooltip.top=\"slotProps.data.name\">{{ slotProps.data.name }}</span>\r\n                </template>\r\n            </Column>\r\n            <Column class=\"kn-truncated\" :header=\"$t('metaweb.physicalModel.sourceColumns')\" :sortable=\"true\">\r\n                <template #body=\"slotProps\">\r\n                    <span v-tooltip.top=\"getColumns(slotProps.data, 'sourceColumns')\">{{ getColumns(slotProps.data, 'sourceColumns') }}</span>\r\n                </template>\r\n            </Column>\r\n            <Column class=\"kn-truncated\" :header=\"$t('metaweb.physicalModel.targetColumns')\" :sortable=\"true\">\r\n                <template #body=\"slotProps\">\r\n                    <span v-tooltip.top=\"getColumns(slotProps.data, 'destinationColumns')\">{{ getColumns(slotProps.data, 'destinationColumns') }}</span>\r\n                </template>\r\n            </Column>\r\n        </DataTable>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport { filterDefault } from '@/helpers/commons/filterHelper'\r\nimport { iForeignKey } from '../../Metaweb'\r\nimport Column from 'primevue/column'\r\nimport DataTable from 'primevue/datatable'\r\nimport metawebForeignKeyTabDescriptor from './MetawebForeignKeyTabDescriptor.json'\r\n\r\nexport default defineComponent({\r\n    name: 'metaweb-foreign-key-tab',\r\n    components: { Column, DataTable },\r\n    props: { propForeignKeys: { type: Array } },\r\n    data() {\r\n        return {\r\n            metawebForeignKeyTabDescriptor,\r\n            foreignKeys: [] as iForeignKey[],\r\n            filters: { global: [filterDefault] } as Object\r\n        }\r\n    },\r\n    watch: {\r\n        propForeignKeys() {\r\n            this.loadForeignKeys()\r\n        }\r\n    },\r\n    created() {\r\n        this.loadForeignKeys()\r\n    },\r\n    methods: {\r\n        loadForeignKeys() {\r\n            this.foreignKeys = this.propForeignKeys as iForeignKey[]\r\n        },\r\n        getColumns(foreignKey: iForeignKey, columnType: string) {\r\n            const columns = [] as string[]\r\n            for (let i = 0; i < foreignKey[columnType].length; i++) {\r\n                columns.push(foreignKey[columnType][i].tableName + '.' + foreignKey[columnType][i].name)\r\n            }\r\n\r\n            return columns.join(',')\r\n        }\r\n    }\r\n})\r\n</script>\r\n","<template>\r\n    <Accordion v-if=\"meta\" :multiple=\"true\" @tabOpen=\"setSelected($event.index)\" @tabClose=\"setSelected($event.index)\">\r\n        <AccordionTab v-for=\"(physicalModel, index) in meta.physicalModels\" :key=\"index\">\r\n            <template #header>\r\n                <div class=\"p-d-flex p-flex-row metaweb-physical-model-accordion-header\">\r\n                    <span :data-test=\"'physical-model-tab-' + physicalModel.name \">{{ physicalModel.name }}</span>\r\n                    <span class=\"p-ml-auto p-mr-2\">{{ physicalModel.columns.length + ' ' + $t('common.properties') }}</span>\r\n                </div>\r\n            </template>\r\n\r\n            <Listbox class=\"metaweb-physical-model-column-listbox\" v-model=\"selectedPhysicalModel\" :options=\"physicalModel.columns\" @change=\"emitSelectedItem\">\r\n                <template #option=\"slotProps\">\r\n                    <div>\r\n                        <i :class=\"slotProps.option.primaryKey ? 'fa fa-key gold-key' : 'fa fa-columns'\" class=\"p-mr-2\"></i>\r\n                        <span >{{ slotProps.option.name }}</span>\r\n                    </div>\r\n                </template>\r\n            </Listbox>\r\n        </AccordionTab>\r\n    </Accordion>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport { iColumn, iPhysicalModel } from '../../Metaweb'\r\nimport Accordion from 'primevue/accordion'\r\nimport AccordionTab from 'primevue/accordiontab'\r\nimport Listbox from 'primevue/listbox'\r\n\r\nexport default defineComponent({\r\n    name: 'metaweb-physical-model-list',\r\n    components: { Accordion, AccordionTab, Listbox },\r\n    props: { propMeta: { type: Object } },\r\n    emits: ['selected'],\r\n    data() {\r\n        return {\r\n            meta: null as any,\r\n            selectedPhysicalModel: null as iColumn | iPhysicalModel | null\r\n        }\r\n    },\r\n    watch: {\r\n        propMeta() {\r\n            this.loadMeta()\r\n        }\r\n    },\r\n    created() {\r\n        this.loadMeta()\r\n    },\r\n    methods: {\r\n        loadMeta() {\r\n            this.meta = this.propMeta as any\r\n        },\r\n        emitSelectedItem() {\r\n            this.$emit('selected', this.selectedPhysicalModel)\r\n        },\r\n        setSelected(index: number) {\r\n            this.selectedPhysicalModel = this.meta.physicalModels[index]\r\n            this.$emit('selected', this.selectedPhysicalModel)\r\n        }\r\n    }\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.metaweb-physical-model-column-listbox {\r\n    border: none;\r\n}\r\n\r\n.metaweb-physical-model-column-listbox .p-listbox-item {\r\n    padding: 0.2rem !important;\r\n}\r\n\r\n.metaweb-physical-model-accordion-header {\r\n    width: 100%;\r\n}\r\n\r\n.gold-key {\r\n    color: gold;\r\n}\r\n</style>\r\n","<template>\r\n    <Accordion v-if=\"physicalModel\" :multiple=\"true\" :activeIndex=\"[0]\">\r\n        <AccordionTab>\r\n            <template #header>\r\n                <span>{{ $t('metaweb.physicalModel.misc') }}</span>\r\n            </template>\r\n\r\n            <div class=\"p-grid\">\r\n                <div class=\"p-col-6\" v-for=\"(modelInfo, index) in metawebPropertyListTabDescriptor.physicalModelInfo\" :key=\"index\">\r\n                    <div class=\"p-fluid\">\r\n                        <div class=\"p-field\">\r\n                            <label :for=\"modelInfo.name\" class=\"kn-material-input-label\"> {{ $t(modelInfo.label) }} </label>\r\n                            <InputText class=\"kn-material-input\" v-model=\"physicalModel[modelInfo.name]\" :id=\"modelInfo.name\" :disabled=\"true\" :data-test=\"'input-' + modelInfo.label\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </AccordionTab>\r\n\r\n        <AccordionTab v-for=\"(categoryKey, index) in Object.keys(categories)\" :key=\"index\">\r\n            <template #header>\r\n                <span>{{ categoryKey }}</span>\r\n            </template>\r\n\r\n            <div class=\"p-grid\">\r\n                <div class=\"p-col-6\" v-for=\"(prop, index) in categories[categoryKey]\" :key=\"index\">\r\n                    <div class=\"p-fluid\">\r\n                        <div class=\"p-field\">\r\n                            <label class=\"kn-material-input-label\"> {{ prop.propertyType.name }} </label>\r\n                            <InputText class=\"kn-material-input\" v-model=\"prop.value\" :disabled=\"true\" :data-test=\"'input-' + prop.propertyType.name\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </AccordionTab>\r\n    </Accordion>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent, PropType } from 'vue'\r\nimport { iColumn, iPhysicalModel } from '../../Metaweb'\r\nimport Accordion from 'primevue/accordion'\r\nimport AccordionTab from 'primevue/accordiontab'\r\nimport metawebPropertyListTabDescriptor from './MetawebPropertyListTabDescriptor.json'\r\n\r\nexport default defineComponent({\r\n    name: 'metaweb-property-list-tab',\r\n    components: { Accordion, AccordionTab },\r\n    props: { selectedPhysicalModel: { type: Object as PropType<iColumn | iPhysicalModel | null> } },\r\n    data() {\r\n        return {\r\n            metawebPropertyListTabDescriptor,\r\n            physicalModel: null as iColumn | iPhysicalModel | null,\r\n            categories: [] as any[]\r\n        }\r\n    },\r\n    watch: {\r\n        selectedPhysicalModel() {\r\n            this.loadPhysicalModel()\r\n        }\r\n    },\r\n    created() {\r\n        this.loadPhysicalModel()\r\n    },\r\n    methods: {\r\n        loadPhysicalModel() {\r\n            this.physicalModel = this.selectedPhysicalModel as iColumn | iPhysicalModel\r\n\r\n            this.loadCategories()\r\n        },\r\n        loadCategories() {\r\n            this.categories = {} as any\r\n            if (this.physicalModel) {\r\n                for (let i = 0; i < this.physicalModel.properties.length; i++) {\r\n                    const tempProperty = this.physicalModel?.properties[i]\r\n                    const key = Object.keys(tempProperty)[0]\r\n                    const newKey = key?.split('.')\r\n\r\n                    if (!this.categories[newKey[0]]) {\r\n                        this.categories[newKey[0]] = []\r\n                    }\r\n                    this.categories[newKey[0]].push(tempProperty[key])\r\n                }\r\n            }\r\n        }\r\n    }\r\n})\r\n</script>\r\n","<template>\r\n    <div v-if=\"data\">\r\n        <div class=\"p-m-2 p-my-4\">\r\n            <label class=\"kn-material-input-label\">{{ data.missingColumns.length > 0 ? $t('metaweb.updatePhysicalModel.addNewColumns') : $t('metaweb.updatePhysicalModel.noNewColumns') }}</label>\r\n            <Listbox v-if=\"data.missingColumns.length > 0\" class=\"metaweb-update-changed-list \" :options=\"data.missingColumns\" :disabled=\"true\"></Listbox>\r\n        </div>\r\n\r\n        <div class=\"p-mx-2 p-my-4\">\r\n            <label class=\"kn-material-input-label\">{{ data.removingItems.length > 0 ? $t('metaweb.updatePhysicalModel.deletedColumns') : $t('metaweb.updatePhysicalModel.noDeletedColumns') }}</label>\r\n            <Listbox v-if=\"data.removingItems.length > 0\" class=\"metaweb-update-changed-list \" :options=\"data.removingItems\" :disabled=\"true\"></Listbox>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent, PropType } from 'vue'\r\nimport { iChangedData } from '../../Metaweb'\r\nimport Listbox from 'primevue/listbox'\r\n\r\nexport default defineComponent({\r\n    name: 'metaweb-update-changed-lists',\r\n    components: { Listbox },\r\n    props: { changedItem: { type: Object as PropType<iChangedData | null> } },\r\n    data() {\r\n        return {\r\n            data: null as iChangedData | null\r\n        }\r\n    },\r\n    watch: {\r\n        changedItem() {\r\n            this.loadData()\r\n        }\r\n    },\r\n    async created() {\r\n        this.loadData()\r\n    },\r\n    methods: {\r\n        loadData() {\r\n            this.data = this.changedItem as iChangedData\r\n        }\r\n    }\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.metaweb-update-changed-list {\r\n    border: none;\r\n}\r\n\r\n.metaweb-update-changed-list .p-listbox-item {\r\n    border-bottom: 1px solid #c2c2c2 !important;\r\n}\r\n</style>\r\n","<template>\r\n    <div v-if=\"data\">\r\n        <div class=\"p-m-2 p-my-4\">\r\n            <label class=\"kn-material-input-label\">{{ data.missingTables.length > 0 ? $t('metaweb.updatePhysicalModel.newTables') : $t('metaweb.updatePhysicalModel.noNewTables') }}</label>\r\n\r\n            <DataTable\r\n                :value=\"rows\"\r\n                class=\"p-datatable-sm kn-table\"\r\n                v-model:selection=\"selectedTables\"\r\n                dataKey=\"value\"\r\n                v-model:filters=\"filters\"\r\n                :globalFilterFields=\"metawebPhysicalModelUpdateDialogDescriptor.globalFilterFields\"\r\n                @row-select=\"onTablesSelect\"\r\n                @row-unselect=\"onTablesSelect\"\r\n                @row-select-all=\"onTablesSelect\"\r\n                @row-unselect-all=\"onTablesSelect\"\r\n            >\r\n                <template #empty>\r\n                    {{ $t('common.info.noDataFound') }}\r\n                </template>\r\n                <template #header>\r\n                    <div class=\"table-header p-d-flex\">\r\n                        <span class=\"p-input-icon-left p-mr-3 p-col-12\">\r\n                            <i class=\"pi pi-search\" />\r\n                            <InputText class=\"kn-material-input\" v-model=\"filters['global'].value\" :placeholder=\"$t('common.search')\" />\r\n                        </span>\r\n                    </div>\r\n                </template>\r\n                <Column selectionMode=\"multiple\" :style=\"metawebPhysicalModelUpdateDialogDescriptor.selectColumnStyle\" />\r\n                <Column field=\"value\" :header=\"data.missingTables.length > 0 ? $t('metaweb.updatePhysicalModel.newTables') : $t('metaweb.updatePhysicalModel.noNewTables')\" />\r\n            </DataTable>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent, PropType } from 'vue'\r\nimport { iChangedData } from '../../Metaweb'\r\nimport { filterDefault } from '@/helpers/commons/filterHelper'\r\nimport Column from 'primevue/column'\r\nimport DataTable from 'primevue/datatable'\r\nimport metawebPhysicalModelUpdateDialogDescriptor from './MetawebPhysicalModelUpdateDialogDescriptor.json'\r\n\r\nexport default defineComponent({\r\n    name: 'metaweb-update-changed-lists',\r\n    components: { Column, DataTable },\r\n    props: { changedItem: { type: Object as PropType<iChangedData | null> } },\r\n    emits: ['selected'],\r\n    data() {\r\n        return {\r\n            metawebPhysicalModelUpdateDialogDescriptor,\r\n            data: null as iChangedData | null,\r\n            rows: [] as { value: string }[],\r\n            selectedTables: [] as string[],\r\n            filters: {\r\n                global: [filterDefault]\r\n            } as Object\r\n        }\r\n    },\r\n    watch: {\r\n        changedItem() {\r\n            this.loadData()\r\n        }\r\n    },\r\n    async created() {\r\n        this.loadData()\r\n    },\r\n    methods: {\r\n        loadData() {\r\n            this.data = this.changedItem as iChangedData\r\n            this.loadRows()\r\n        },\r\n        loadRows() {\r\n            this.rows = []\r\n            this.data?.missingTables?.forEach((el: any) => this.rows.push({ value: el }))\r\n        },\r\n        onTablesSelect() {\r\n            this.$emit('selected', this.selectedTables)\r\n        }\r\n    }\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.metaweb-missing-tables-list {\r\n    border: none;\r\n}\r\n\r\n.metaweb-missing-tables-list .p-listbox-item {\r\n    border-bottom: 1px solid #c2c2c2 !important;\r\n}\r\n</style>\r\n","<template>\r\n    <Dialog class=\"p-fluid kn-dialog--toolbar--primary\" :contentStyle=\"metawebPhysicalModelUpdateDialogDescriptor.dialog.style\" :visible=\"visible\" :modal=\"true\" :closable=\"false\">\r\n        <template #header>\r\n            <Toolbar class=\"kn-toolbar kn-toolbar--primary p-p-0 p-m-0 p-col-12\">\r\n                <template #start>\r\n                    {{ $t('metaweb.updatePhysicalModel.title') }}\r\n                </template>\r\n            </Toolbar>\r\n        </template>\r\n        <ProgressBar mode=\"indeterminate\" class=\"kn-progress-bar\" v-if=\"loading\" />\r\n\r\n        <MetawebUpdateChangedLists v-if=\"step === 0\" :changedItem=\"data\"></MetawebUpdateChangedLists>\r\n        <MetawebUpdatePhysicalTablesSelect v-else :changedItem=\"data\" @selected=\"onTablesSelect\"></MetawebUpdatePhysicalTablesSelect>\r\n\r\n        <template #footer>\r\n            <div class=\"p-d-flex p-flex-row p-jc-end\">\r\n                <Button class=\"kn-button kn-button--primary\" @click=\"closeDialog\"> {{ $t('common.cancel') }}</Button>\r\n                <Button class=\"kn-button kn-button--primary\" @click=\"save\"> {{ step === 0 ? $t('common.next') + ' >' : $t('common.save') }}</Button>\r\n            </div>\r\n        </template>\r\n    </Dialog>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent, PropType } from 'vue'\r\nimport { AxiosResponse } from 'axios'\r\n\r\nimport { iChangedData } from '../../Metaweb'\r\nimport Dialog from 'primevue/dialog'\r\nimport metawebPhysicalModelUpdateDialogDescriptor from './MetawebPhysicalModelUpdateDialogDescriptor.json'\r\nimport MetawebUpdateChangedLists from './MetawebUpdateChangedLists.vue'\r\nimport MetawebUpdatePhysicalTablesSelect from './MetawebUpdatePhysicalTablesSelect.vue'\r\nimport mainStore from '../../../../../../App.store'\r\n\r\nexport default defineComponent({\r\n    name: 'metaweb-physical-model-update-dialog',\r\n    components: { Dialog, MetawebUpdateChangedLists, MetawebUpdatePhysicalTablesSelect },\r\n    props: { visible: { type: Boolean }, changedItem: { type: Object as PropType<iChangedData> } },\r\n    emits: ['close', 'updated'],\r\n    data() {\r\n        return {\r\n            metawebPhysicalModelUpdateDialogDescriptor,\r\n            data: null as iChangedData | null,\r\n            tables: [] as string[],\r\n            step: 0,\r\n            loading: false\r\n        }\r\n    },\r\n    watch: {\r\n        changedItem() {\r\n            this.loadData()\r\n        }\r\n    },\r\n    setup() {\r\n        const store = mainStore()\r\n        return { store }\r\n    },\r\n    async created() {\r\n        this.loadData()\r\n    },\r\n    methods: {\r\n        loadData() {\r\n            this.data = this.changedItem as iChangedData\r\n        },\r\n        closeDialog() {\r\n            this.$emit('close')\r\n            this.step = 0\r\n            this.tables = []\r\n        },\r\n        onTablesSelect(selectedTables: { value: string }[]) {\r\n            this.tables = selectedTables.map((el: any) => el.value)\r\n        },\r\n        async save() {\r\n            if (this.step === 0) {\r\n                this.step = 1\r\n            } else {\r\n                await this.updatePhysicalModel()\r\n            }\r\n        },\r\n        async updatePhysicalModel() {\r\n            this.loading = true\r\n            await this.$http\r\n                .post(import.meta.env.VITE_META_API_URL + `/1.0/metaWeb/updatePhysicalModel`, { tables: this.tables })\r\n                .then((response: AxiosResponse<any>) => {\r\n                    this.store.setInfo({\r\n                        title: this.$t('common.toast.updateTitle'),\r\n                        msg: this.$t('common.toast.updateSuccess')\r\n                    })\r\n                    this.$emit('updated', response.data)\r\n                    this.tables = []\r\n                    this.step = 0\r\n                })\r\n                .catch(() => {})\r\n\r\n            this.loading = false\r\n        }\r\n    }\r\n})\r\n</script>\r\n","<template>\r\n    <div class=\"p-grid p-m-0 kn-flex\">\r\n        <div class=\"p-col-4 p-sm-4 p-md-3 p-p-0 p-d-flex p-flex-column kn-flex\">\r\n            <Toolbar class=\"kn-toolbar kn-toolbar--primary\">\r\n                <template #start> {{ $t('metaweb.physicalModel.tables') }}</template>\r\n                <template #end>\r\n                    <Button class=\"p-button-text p-button-rounded p-button-plain p-button-sm\" @click=\"openUpdateDialog\">{{ $t('metaweb.physicalModel.updatePhysicalModel') }}</Button>\r\n                </template>\r\n            </Toolbar>\r\n\r\n            <div class=\"kn-flex kn-relative\">\r\n                <div class=\"metaweb-right-border\" :style=\"physDescriptor.style.mainListContainer\">\r\n                    <MetawebPhysicalModelList :style=\"physDescriptor.style.mainList\" :propMeta=\"meta\" @selected=\"onSelectedItem\"></MetawebPhysicalModelList>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"p-col-8 p-sm-8 p-md-9 p-p-0 p-m-0 p-d-flex p-flex-column\">\r\n            <Toolbar class=\"kn-toolbar kn-toolbar--secondary\">\r\n                <template #start>\r\n                    <span data-test=\"physical-model-name\">{{ selectedPhysicalModel?.name }}</span>\r\n                </template>\r\n            </Toolbar>\r\n            <div v-if=\"selectedPhysicalModel\" class=\"metaweb-tab-container p-d-flex p-flex-column kn-flex\">\r\n                <TabView class=\"metaweb-tabview p-d-flex p-flex-column kn-flex\" scrollable data-test=\"tab-view\">\r\n                    <TabPanel>\r\n                        <template #header>\r\n                            <span>{{ $t('metaweb.physicalModel.propertyList') }}</span>\r\n                        </template>\r\n\r\n                        <MetawebPropertyListTab class=\"p-m-2\" :selectedPhysicalModel=\"selectedPhysicalModel\"></MetawebPropertyListTab>\r\n                    </TabPanel>\r\n                    <TabPanel v-if=\"selectedPhysicalModel?.type === 'TABLE'\">\r\n                        <template #header>\r\n                            <span>{{ $t('metaweb.physicalModel.foreignKey') }}</span>\r\n                        </template>\r\n\r\n                        <MetawebForeignKeyTab class=\"p-m-2\" :propForeignKeys=\"selectedPhysicalModel.foreignKeys\"></MetawebForeignKeyTab>\r\n                    </TabPanel>\r\n                </TabView>\r\n            </div>\r\n        </div>\r\n\r\n        <MetawebPhysicalModelUpdateDialog :visible=\"updateDialogVisible\" :changedItem=\"changedItem\" @close=\"updateDialogVisible = false\" @updated=\"onPhysicalModelUpdate\"></MetawebPhysicalModelUpdateDialog>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport { AxiosResponse } from 'axios'\r\nimport { iChangedData, iColumn, iPhysicalModel } from '../Metaweb'\r\nimport MetawebForeignKeyTab from './tabs/MetawebForeignKeyTab.vue'\r\nimport MetawebPhysicalModelList from './metawebPhysicalModelList/MetawebPhysicalModelList.vue'\r\nimport MetawebPropertyListTab from './tabs/MetawebPropertyListTab.vue'\r\nimport MetawebPhysicalModelUpdateDialog from './metawebPhysicalModelUpdateDialog/MetawebPhysicalModelUpdateDialog.vue'\r\nimport TabView from 'primevue/tabview'\r\nimport TabPanel from 'primevue/tabpanel'\r\nimport physDescriptor from './PhysicalModelDescriptor.json'\r\n\r\nimport { applyPatch, generate } from 'fast-json-patch'\r\n\r\nexport default defineComponent({\r\n    name: 'metaweb-physical-model',\r\n    components: { MetawebForeignKeyTab, MetawebPhysicalModelList, MetawebPropertyListTab, MetawebPhysicalModelUpdateDialog, TabView, TabPanel },\r\n    props: { propMeta: { type: Object }, observer: { type: Object } },\r\n    emits: ['loading'],\r\n    data() {\r\n        return {\r\n            physDescriptor,\r\n            meta: null as any,\r\n            selectedPhysicalModel: null as iColumn | iPhysicalModel | null,\r\n            updateDialogVisible: false,\r\n            changedItem: null as iChangedData | null\r\n        }\r\n    },\r\n    watch: {\r\n        propMeta() {\r\n            this.loadMeta()\r\n        }\r\n    },\r\n    created() {\r\n        this.loadMeta()\r\n    },\r\n    methods: {\r\n        loadMeta() {\r\n            this.meta = this.propMeta\r\n        },\r\n        onSelectedItem(selectedPhysicalModel: iColumn | iPhysicalModel) {\r\n            this.selectedPhysicalModel = selectedPhysicalModel\r\n        },\r\n        async openUpdateDialog() {\r\n            this.$emit('loading', true)\r\n            await this.$http.get(import.meta.env.VITE_META_API_URL + '/1.0/metaWeb/updatePhysicalModel').then((response: AxiosResponse<any>) => (this.changedItem = response.data))\r\n            this.updateDialogVisible = true\r\n            this.$emit('loading', false)\r\n        },\r\n        onPhysicalModelUpdate(changes: any) {\r\n            this.meta = applyPatch(this.meta, changes).newDocument\r\n            generate(this.observer)\r\n            this.updateDialogVisible = false\r\n        }\r\n    }\r\n})\r\n</script>\r\n","<template>\r\n    <Dialog id=\"metaweb-inccorect-relationships-dialog\" class=\"p-fluid kn-dialog--toolbar--primary\" :style=\"metawebInvalidRelationshipsDialogDescriptor.dialog.style\" :visible=\"visible\" :modal=\"true\" :closable=\"false\" :baseZIndex=\"10\" :autoZIndex=\"true\">\r\n        <template #header>\r\n            <Toolbar class=\"kn-toolbar kn-toolbar--primary p-p-0 p-m-2 p-col-12\">\r\n                <template #start>\r\n                    {{ $t('common.warning') }}\r\n                </template>\r\n            </Toolbar>\r\n        </template>\r\n\r\n        <div class=\"p-m-4\">\r\n            <h3>{{ $t('metaweb.incorrectRelationships.title') }}</h3>\r\n            <p>{{ $t('metaweb.incorrectRelationships.warningMessage.partOne') }}</p>\r\n            <p>{{ $t('metaweb.incorrectRelationships.warningMessage.partTwo') }}</p>\r\n            <p>{{ $t('metaweb.incorrectRelationships.warningMessage.partThree') }}</p>\r\n        </div>\r\n\r\n        <div class=\"p-d-flex p-flex-column p-m-2\">\r\n            <div v-for=\"(relation, index) in incorrectRelationships\" :key=\"index\" class=\"p-m-4\">\r\n                <h2>{{ relation.businessRelationshipName }}</h2>\r\n                <div>{{ relation.sourceTableName }} <i class=\"fa fa-arrow-right\" aria-hidden=\"true\"></i> {{ relation.destinationTableName }}</div>\r\n                <Chip class=\"p-m-2\">{{ $t('metaweb.incorrectRelationships.requiredColumns') + ': ' + relation.requiredNumberOfColumns }}</Chip>\r\n            </div>\r\n        </div>\r\n\r\n        <template #footer>\r\n            <Button class=\"kn-button kn-button--primary\" @click=\"closeDialog\"> {{ $t('common.cancel') }}</Button>\r\n            <Button class=\"kn-button kn-button--primary\" @click=\"save\"> {{ $t('common.save') }}</Button>\r\n        </template>\r\n    </Dialog>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import { defineComponent } from 'vue'\r\n    import Chip from 'primevue/chip'\r\n    import Dialog from 'primevue/dialog'\r\n    import metawebInvalidRelationshipsDialogDescriptor from './MetawebInvalidRelationshipsDialogDescriptor.json'\r\n\r\n    export default defineComponent({\r\n        name: 'metaweb-invalid-relationships-dialog',\r\n        components: { Chip, Dialog },\r\n        props: { visible: { type: Boolean }, propIncorrectRelationships: { type: Array } },\r\n        emits: ['close', 'save'],\r\n        data() {\r\n            return {\r\n                metawebInvalidRelationshipsDialogDescriptor,\r\n                incorrectRelationships: [] as any[]\r\n            }\r\n        },\r\n        watch: {\r\n            propIncorrectRelationships() {\r\n                this.loadIncorrectRelationships()\r\n            }\r\n        },\r\n        created() {\r\n            this.loadIncorrectRelationships()\r\n        },\r\n        methods: {\r\n            loadIncorrectRelationships() {\r\n                this.incorrectRelationships = this.propIncorrectRelationships as any[]\r\n            },\r\n            closeDialog() {\r\n                this.$emit('close')\r\n            },\r\n            save() {\r\n                this.$emit('save')\r\n            }\r\n        }\r\n    })\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n    #metaweb-inccorect-relationships-dialog .p-dialog-header,\r\n    #metaweb-inccorect-relationships-dialog .p-dialog-content {\r\n        padding: 0;\r\n    }\r\n\r\n    #metaweb-inccorect-relationships-dialog .p-dialog-content {\r\n        display: flex;\r\n        flex-direction: column;\r\n        flex: 1;\r\n    }\r\n</style>\r\n","<template>\r\n    <Dialog class=\"metaweb-dialog remove-padding p-fluid kn-dialog--toolbar--primary\" :contentStyle=\"mainDescriptor.style.flex\" :visible=\"visible\" :modal=\"false\" :closable=\"false\" position=\"right\" :baseZIndex=\"1\" :autoZIndex=\"true\">\r\n        <template #header>\r\n            <Toolbar class=\"kn-toolbar kn-toolbar--primary p-p-0 p-m-0 p-col-12\">\r\n                <template #start> {{ $t('metaweb.title') }} </template>\r\n                <template #end>\r\n                    <Button icon=\"pi pi-save\" class=\"p-button-text p-button-rounded p-button-plain\" v-tooltip.bottom=\"$t('common.save')\" @click=\"metadataSave\" />\r\n                    <Button icon=\"pi pi-times\" class=\"p-button-text p-button-rounded p-button-plain\" v-tooltip.bottom=\"$t('common.close')\" @click=\"closeMetawebConfirm\" />\r\n                </template>\r\n            </Toolbar>\r\n        </template>\r\n        <div class=\"metaweb-tab-container p-d-flex p-flex-column kn-flex\">\r\n            <ProgressBar v-if=\"loading\" class=\"kn-progress-bar\" mode=\"indeterminate\" data-test=\"progress-bar\" />\r\n            <TabView class=\"metaweb-tabview p-d-flex p-flex-column kn-flex\">\r\n                <TabPanel>\r\n                    <template #header>\r\n                        <span>{{ $t('metaweb.businessModel.title') }}</span>\r\n                    </template>\r\n                    <BusinessModelTab :businessModelId=\"businessModel.dataSourceId\" :propMeta=\"meta\" :observer=\"observer\" :metaUpdated=\"metaUpdated\" @metaUpdated=\"onMetaUpdated\" />\r\n                </TabPanel>\r\n                <TabPanel>\r\n                    <template #header>\r\n                        <span>{{ $t('metaweb.physicalModel.title') }}</span>\r\n                    </template>\r\n\r\n                    <MetawebPhysicalModel :propMeta=\"meta\" :observer=\"observer\" @loading=\"setLoading\"></MetawebPhysicalModel>\r\n                </TabPanel>\r\n            </TabView>\r\n        </div>\r\n\r\n        <MetawebInvalidRelationshipsDialog :visible=\"invalidRelationshipsDialogVisible\" :propIncorrectRelationships=\"incorrectRelationships\" @close=\"invalidRelationshipsDialogVisible = false\" @save=\"generateModel\"></MetawebInvalidRelationshipsDialog>\r\n    </Dialog>\r\n</template>\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport { AxiosResponse } from 'axios'\r\nimport useValidate from '@vuelidate/core'\r\nimport mainDescriptor from './MetawebDescriptor.json'\r\nimport Dialog from 'primevue/dialog'\r\nimport TabView from 'primevue/tabview'\r\nimport TabPanel from 'primevue/tabpanel'\r\nimport BusinessModelTab from './businessModel/MetawebBusinessModel.vue'\r\nimport MetawebPhysicalModel from './physicalModel/MetawebPhysicalModel.vue'\r\nimport MetawebInvalidRelationshipsDialog from './invalidRelationshipsDialog/MetawebInvalidRelationshipsDialog.vue'\r\nimport { mapActions } from 'pinia'\r\nimport mainStore from '@/App.store'\r\nimport { observe, generate, applyPatch } from 'fast-json-patch'\r\n\r\nexport default defineComponent({\r\n    name: 'metaweb',\r\n    components: { BusinessModelTab, MetawebPhysicalModel, TabView, TabPanel, Dialog, MetawebInvalidRelationshipsDialog },\r\n    props: { visible: { type: Boolean }, propMeta: { type: Object }, businessModel: { type: Object } },\r\n    emits: ['closeMetaweb', 'modelGenerated'],\r\n    data() {\r\n        return {\r\n            v$: useValidate() as any,\r\n            mainDescriptor,\r\n            meta: null as any,\r\n            observer: null as any,\r\n            metaUpdated: false,\r\n            invalidRelationshipsDialogVisible: false,\r\n            incorrectRelationships: [] as any[],\r\n            loading: false\r\n        }\r\n    },\r\n    computed: {},\r\n    watch: {\r\n        propMeta() {\r\n            this.loadMeta()\r\n        }\r\n    },\r\n    created() {\r\n        this.loadMeta()\r\n    },\r\n    methods: {\r\n        ...mapActions(mainStore, ['setInfo']),\r\n        loadMeta() {\r\n            this.meta = this.propMeta\r\n\r\n            if (this.meta) {\r\n                this.observer = observe(this.meta)\r\n            }\r\n        },\r\n        setLoading(loading: boolean) {\r\n            this.loading = loading\r\n        },\r\n        async metadataSave() {\r\n            await this.checkRelationships(true)\r\n        },\r\n        onMetaUpdated() {\r\n            this.checkRelationships(false)\r\n        },\r\n        async checkRelationships(generateModel: boolean) {\r\n            this.loading = true\r\n            const postData = { data: { name: this.businessModel?.name, id: this.businessModel?.id }, diff: generate(this.observer) }\r\n            await this.$http\r\n                .post(import.meta.env.VITE_META_API_URL + `/1.0/metaWeb/checkRelationships`, postData)\r\n                .then(async (response: AxiosResponse<any>) => {\r\n                    this.observer = applyPatch(this.observer, response.data).newDocument\r\n                    this.observer = observe(this.meta)\r\n                    this.metaUpdated = !this.metaUpdated\r\n                    if (generateModel)\r\n                        if (response.data.incorrectRelationships.length === 0) {\r\n                            await this.generateModel()\r\n                        } else {\r\n                            this.invalidRelationshipsDialogVisible = true\r\n                            this.incorrectRelationships = response.data.incorrectRelationships\r\n                        }\r\n                })\r\n                .catch(() => {})\r\n            this.loading = false\r\n        },\r\n        async generateModel() {\r\n            const postData = { data: { name: this.businessModel?.name, id: this.businessModel?.id }, diff: generate(this.observer) }\r\n            await this.$http\r\n                .post(import.meta.env.VITE_META_API_URL + `/1.0/metaWeb/generateModel`, postData)\r\n                .then(() => {\r\n                    this.setInfo({\r\n                        title: this.$t('common.toast.createTitle'),\r\n                        msg: this.$t('common.toast.success')\r\n                    })\r\n                    this.$emit('modelGenerated')\r\n                })\r\n                .catch(() => {})\r\n                .finally(() => (this.invalidRelationshipsDialogVisible = false))\r\n        },\r\n        closeMetawebConfirm() {\r\n            this.$confirm.require({\r\n                header: this.$t('metaweb.exitFromMeta'),\r\n                accept: () => {\r\n                    this.$emit('closeMetaweb')\r\n                    this.meta = null\r\n                    this.observer = null\r\n                    this.incorrectRelationships = []\r\n                }\r\n            })\r\n        }\r\n    }\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.metaweb-right-border {\r\n    border-right: 1px solid #ccc;\r\n}\r\n.metaweb-tabview .p-tabview-panels {\r\n    padding: 0 !important;\r\n}\r\n.metaweb-dialog.p-dialog {\r\n    max-height: 100%;\r\n    height: 100vh;\r\n    width: calc(100vw - var(--kn-mainmenu-width));\r\n    margin: 0;\r\n}\r\n.remove-padding.p-dialog .p-dialog-header,\r\n.remove-padding.p-dialog .p-dialog-content {\r\n    padding: 0;\r\n    margin: 0;\r\n    overflow-x: hidden;\r\n}\r\n.metaweb-tab-container .p-tabview .p-tabview-panel,\r\n.metaweb-tab-container .p-tabview .p-tabview-panels {\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex: 1;\r\n    position: relative;\r\n}\r\n</style>\r\n","<template>\r\n    <Card>\r\n        <template #header>\r\n            <Toolbar class=\"kn-toolbar kn-toolbar--primary\">\r\n                <template #start>\r\n                    {{ $t('managers.businessModelManager.details') }}\r\n                </template>\r\n            </Toolbar>\r\n        </template>\r\n        <template #content>\r\n            <form class=\"p-fluid p-m-5\">\r\n                <div class=\"p-field\">\r\n                    <span class=\"p-float-label\">\r\n                        <InputText\r\n                            id=\"name\"\r\n                            class=\"kn-material-input\"\r\n                            type=\"text\"\r\n                            v-model.trim=\"v$.businessModel.name.$model\"\r\n                            :class=\"{\r\n                                'p-invalid': v$.businessModel.name.$invalid && v$.businessModel.name.$dirty\r\n                            }\"\r\n                            maxLength=\"100\"\r\n                            :disabled=\"businessModel.id\"\r\n                            @blur=\"v$.businessModel.name.$touch()\"\r\n                            @input=\"onFieldChange('name', $event.target.value)\"\r\n                            data-test=\"name-input\"\r\n                        />\r\n                        <label for=\"label\" class=\"kn-material-input-label\"> {{ $t('common.name') }} * </label>\r\n                    </span>\r\n                    <KnValidationMessages\r\n                        :vComp=\"v$.businessModel.name\"\r\n                        :additionalTranslateParams=\"{\r\n                            fieldName: $t('common.name')\r\n                        }\"\r\n                    />\r\n                </div>\r\n                <div class=\"p-field\">\r\n                    <span class=\"p-float-label\">\r\n                        <InputText\r\n                            id=\"description\"\r\n                            class=\"kn-material-input\"\r\n                            type=\"text\"\r\n                            v-model.trim=\"v$.businessModel.description.$model\"\r\n                            :class=\"{\r\n                                'p-invalid': v$.businessModel.description.$invalid && v$.businessModel.description.$dirty\r\n                            }\"\r\n                            maxLength=\"500\"\r\n                            @blur=\"v$.businessModel.description.$touch()\"\r\n                            @input=\"onFieldChange('description', $event.target.value)\"\r\n                            :disabled=\"readonly\"\r\n                            data-test=\"description-input\"\r\n                        />\r\n                        <label for=\"description\" class=\"kn-material-input-label\"> {{ $t('managers.businessModelManager.description') }}</label>\r\n                    </span>\r\n                    <KnValidationMessages\r\n                        :vComp=\"v$.businessModel.description\"\r\n                        :additionalTranslateParams=\"{\r\n                            fieldName: $t('managers.businessModelManager.description')\r\n                        }\"\r\n                    />\r\n                </div>\r\n\r\n                <div class=\"p-field\">\r\n                    <span>\r\n                        <label for=\"category\" class=\"kn-material-input-label\">{{ $t('common.category') }} * </label>\r\n                        <Dropdown\r\n                            id=\"category\"\r\n                            class=\"kn-material-input\"\r\n                            :class=\"{\r\n                                'p-invalid': v$.businessModel.category.$invalid && v$.businessModel.category.$dirty\r\n                            }\"\r\n                            v-model=\"v$.businessModel.category.$model\"\r\n                            :options=\"categories\"\r\n                            :placeholder=\"$t('common.category')\"\r\n                            :disabled=\"readonly\"\r\n                            @before-show=\"v$.businessModel.category.$touch()\"\r\n                            @change=\"onFieldChange('category', $event.value.VALUE_ID)\"\r\n                        >\r\n                            <template #value=\"slotProps\">\r\n                                <div v-if=\"slotProps.value\">\r\n                                    <span>{{ slotProps.value.VALUE_NM }}</span>\r\n                                </div>\r\n                            </template>\r\n                            <template #option=\"slotProps\">\r\n                                <div>\r\n                                    <span>{{ slotProps.option.VALUE_NM }}</span>\r\n                                </div>\r\n                            </template>\r\n                        </Dropdown>\r\n                    </span>\r\n                    <KnValidationMessages\r\n                        :vComp=\"v$.businessModel.category\"\r\n                        :additionalTranslateParams=\"{\r\n                            fieldName: $t('managers.businessModelManager.analyticalDriver')\r\n                        }\"\r\n                    />\r\n                </div>\r\n\r\n                <div class=\"p-field\">\r\n                    <span>\r\n                        <label for=\"dataSourceLabel\" class=\"kn-material-input-label\">{{ $t('managers.businessModelManager.dataSource') }} * </label>\r\n                        <Dropdown\r\n                            id=\"dataSourceLabel\"\r\n                            class=\"kn-material-input\"\r\n                            :class=\"{\r\n                                'p-invalid': v$.businessModel.dataSourceLabel.$invalid && v$.businessModel.dataSourceLabel.$dirty\r\n                            }\"\r\n                            v-model=\"v$.businessModel.dataSourceLabel.$model\"\r\n                            :options=\"datasources\"\r\n                            :placeholder=\"$t('managers.businessModelManager.dataSourceLabelPlaceholder')\"\r\n                            :disabled=\"readonly\"\r\n                            @before-show=\"v$.businessModel.dataSourceLabel.$touch()\"\r\n                            @change=\"onFieldChange('dataSourceLabel', $event.value)\"\r\n                        >\r\n                            <template #value=\"slotProps\">\r\n                                <div v-if=\"slotProps.value\">\r\n                                    <span>{{ slotProps.value }}</span>\r\n                                </div>\r\n                            </template>\r\n                            <template #option=\"slotProps\">\r\n                                <div>\r\n                                    <span>{{ slotProps.option }}</span>\r\n                                </div>\r\n                            </template>\r\n                        </Dropdown>\r\n                    </span>\r\n                    <KnValidationMessages\r\n                        :vComp=\"v$.businessModel.dataSourceLabel\"\r\n                        :additionalTranslateParams=\"{\r\n                            fieldName: $t('managers.businessModelManager.dataSource')\r\n                        }\"\r\n                    />\r\n                </div>\r\n\r\n                <div class=\"p-d-flex p-flex-row\">\r\n                    <div class=\"input-container\" v-show=\"!metaWebVisible && !readonly\">\r\n                        <label for=\"upload\" class=\"kn-material-input-label\">{{ $t('managers.businessModelManager.uploadFile') }}:</label>\r\n                        <KnInputFile :changeFunction=\"uploadFile\" :visibility=\"true\" />\r\n                    </div>\r\n                    <div class=\"input-container p-d-flex p-flex-row\">\r\n                        <div class=\"p-m-2\">\r\n                            <Button v-show=\"metaWebVisible\" class=\"kn-button kn-button--primary\" :label=\"$t('managers.businessModelManager.metaWeb')\" @click=\"goToMetaWeb\" data-test=\"metaweb-button\"></Button>\r\n                        </div>\r\n                        <div class=\"p-m-2\" v-show=\"toGenerate\">\r\n                            <Button v-show=\"metaWebVisible\" class=\"kn-button kn-button--primary\" :label=\"$t('managers.businessModelManager.generate')\" @click=\"generateDatamartVisible = true\" data-test=\"generate-button\"></Button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"input-container\">\r\n                        <div class=\"p-d-flex p-flex-row\">\r\n                            <div v-if=\"selectedBusinessModel.id\" class=\"p-mr-2\">\r\n                                <InputSwitch id=\"enable-metadata\" class=\"p-mr-2\" v-model=\"metaWebVisible\" :disabled=\"readonly\" data-test=\"metaweb-switch\" />\r\n                                <label for=\"enable-metadata\" class=\"kn-material-input-label\">{{ $t('managers.businessModelManager.enableMetaweb') }}</label>\r\n                            </div>\r\n                            <div>\r\n                                <InputSwitch id=\"model-lock\" class=\"p-mr-2\" v-model=\"businessModel.modelLocked\" :disabled=\"readonly\" @change=\"onLockedChange\" />\r\n                                <label for=\"model-lock\" class=\"kn-material-input-label\">{{ businessModel.modelLocked ? $t('managers.businessModelManager.unlockModel') : $t('managers.businessModelManager.lockModel') }}</label>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"p-mt-2\">\r\n                            <InputSwitch id=\"smart-view\" class=\"p-mr-2\" v-model=\"businessModel.smartView\" :disabled=\"readonly\" @change=\"onSmartViewChange\" />\r\n                            <label for=\"smart-view\" class=\"kn-material-input-label\" v-tooltip.bottom=\"$t('managers.businessModelManager.smartViewTooltip')\">{{ businessModel.smartView ? $t('managers.businessModelManager.smartView') : $t('managers.businessModelManager.advancedView') }}</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"p-mt-5\" v-if=\"metaWebVisible\">\r\n                    <Toolbar class=\"kn-toolbar kn-toolbar--secondary\">\r\n                        <template #start>\r\n                            {{ $t('managers.businessModelManager.configurationTablePrefixTitle') }}\r\n                        </template>\r\n                        <template #end>\r\n                            <i class=\"fa fa-info-circle\" v-tooltip.bottom=\"$t('managers.businessModelManager.prefixTooltip')\"></i>\r\n                        </template>\r\n                    </Toolbar>\r\n                    <div class=\"p-fluid p-m-5\">\r\n                        <div class=\"p-field p-d-flex\">\r\n                            <div class=\"kn-flex\">\r\n                                <span class=\"p-float-label p-mr-2\">\r\n                                    <InputText\r\n                                        id=\"tablePrefixLike\"\r\n                                        class=\"kn-material-input\"\r\n                                        type=\"text\"\r\n                                        v-model.trim=\"v$.businessModel.tablePrefixLike.$model\"\r\n                                        :class=\"{\r\n                                            'p-invalid': v$.businessModel.tablePrefixLike.$invalid && v$.businessModel.tablePrefixLike.$dirty\r\n                                        }\"\r\n                                        maxLength=\"500\"\r\n                                        v-tooltip.bottom=\"$t('managers.businessModelManager.tablePrefixLikeExampleTooltip')\"\r\n                                        :disabled=\"readonly\"\r\n                                        @blur=\"v$.businessModel.tablePrefixLike.$touch()\"\r\n                                        @input=\"onFieldChange('tablePrefixLike', $event.target.value)\"\r\n                                        data-test=\"prefix-input\"\r\n                                    />\r\n                                    <label for=\"label\" class=\"kn-material-input-label\"> {{ $t('managers.businessModelManager.tablePrefixLike') }}</label>\r\n                                </span>\r\n                                <KnValidationMessages\r\n                                    :vComp=\"v$.businessModel.tablePrefixLike\"\r\n                                    :additionalTranslateParams=\"{\r\n                                        fieldName: $t('managers.businessModelManager.tablePrefixLike')\r\n                                    }\"\r\n                                />\r\n                            </div>\r\n                            <div class=\"kn-flex\">\r\n                                <span class=\"p-float-label\">\r\n                                    <InputText\r\n                                        id=\"tablePrefixNotLike\"\r\n                                        class=\"kn-material-input\"\r\n                                        type=\"text\"\r\n                                        v-model.trim=\"v$.businessModel.tablePrefixNotLike.$model\"\r\n                                        :class=\"{\r\n                                            'p-invalid': v$.businessModel.tablePrefixNotLike.$invalid && v$.businessModel.tablePrefixNotLike.$dirty\r\n                                        }\"\r\n                                        maxLength=\"500\"\r\n                                        v-tooltip.bottom=\"$t('managers.businessModelManager.tablePrefixNotLikeExampleTooltip')\"\r\n                                        :disabled=\"readonly\"\r\n                                        @blur=\"v$.businessModel.tablePrefixNotLike.$touch()\"\r\n                                        @input=\"onFieldChange('tablePrefixNotLike', $event.target.value)\"\r\n                                        data-test=\"prefix-not-like-input\"\r\n                                    />\r\n                                    <label for=\"label\" class=\"kn-material-input-label\"> {{ $t('managers.businessModelManager.tablePrefixNotLike') }}</label>\r\n                                </span>\r\n                                <KnValidationMessages\r\n                                    :vComp=\"v$.businessModel.tablePrefixNotLike\"\r\n                                    :additionalTranslateParams=\"{\r\n                                        fieldName: $t('managers.businessModelManager.tablePrefixNotLike')\r\n                                    }\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n\r\n            <GenerateDatamartCard v-if=\"generateDatamartVisible\" :businessModel=\"selectedBusinessModel\" :user=\"user\" @close=\"generateDatamartVisible = false\" @generated=\"onDatamartGenerated\"></GenerateDatamartCard>\r\n\r\n            <MetawebSelectDialog :visible=\"metawebSelectDialogVisible\" :selectedBusinessModel=\"selectedBusinessModel\" @close=\"metawebSelectDialogVisible = false\" @metaSelected=\"onMetaSelect\"></MetawebSelectDialog>\r\n\r\n            <Metaweb :visible=\"metawebDialogVisible\" :propMeta=\"meta\" :businessModel=\"businessModel\" @closeMetaweb=\"metawebDialogVisible = false\" @modelGenerated=\"$emit('modelGenerated')\" />\r\n            <KnOverlaySpinnerPanel id=\"metaweb-spinner\" :visibility=\"loading\" />\r\n\r\n            <Dialog :visible=\"saveConfirmVisible\" :modal=\"true\" :closable=\"false\">\r\n                {{ $t('managers.businessModelManager.saveRequired') }}\r\n                <template #footer>\r\n                    <Button class=\"kn-button kn-button--primary\" @click=\"saveConfirmVisible = false\"> {{ $t('common.ok') }}</Button>\r\n                </template>\r\n            </Dialog>\r\n        </template>\r\n    </Card>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent, PropType } from 'vue'\r\nimport { iBusinessModel } from '../../BusinessModelCatalogue'\r\nimport { createValidations } from '@/helpers/commons/validationHelper'\r\nimport { AxiosResponse } from 'axios'\r\nimport businessModelDetailsCardDescriptor from './BusinessModelDetailsCardDescriptor.json'\r\nimport businessModelDetailsCardValidation from './BusinessModelDetailsCardValidation.json'\r\nimport Card from 'primevue/card'\r\nimport Dialog from 'primevue/dialog'\r\nimport Dropdown from 'primevue/dropdown'\r\nimport GenerateDatamartCard from './GenerateDatamartCard.vue'\r\nimport InputSwitch from 'primevue/inputswitch'\r\nimport KnInputFile from '@/components/UI/KnInputFile.vue'\r\nimport KnValidationMessages from '@/components/UI/KnValidatonMessages.vue'\r\nimport KnOverlaySpinnerPanel from '@/components/UI/KnOverlaySpinnerPanel.vue'\r\nimport MetawebSelectDialog from '../../metaweb/metawebSelectDialog/MetawebSelectDialog.vue'\r\nimport Metaweb from '@/modules/managers/businessModelCatalogue/metaweb/Metaweb.vue'\r\nimport useValidate from '@vuelidate/core'\r\nimport mainStore from '../../../../../App.store'\r\n\r\nexport default defineComponent({\r\n    name: 'business-model-details-card',\r\n    components: {\r\n        Card,\r\n        Dialog,\r\n        Dropdown,\r\n        GenerateDatamartCard,\r\n        InputSwitch,\r\n        KnInputFile,\r\n        KnValidationMessages,\r\n        KnOverlaySpinnerPanel,\r\n        MetawebSelectDialog,\r\n        Metaweb\r\n    },\r\n    props: {\r\n        selectedBusinessModel: {\r\n            type: Object,\r\n            required: true\r\n        },\r\n        domainCategories: {\r\n            type: Array,\r\n            required: true\r\n        },\r\n        datasourcesMeta: {\r\n            type: Array,\r\n            required: true\r\n        },\r\n        user: {\r\n            type: Object as PropType<Object | null>\r\n        },\r\n        toGenerate: {\r\n            type: Boolean\r\n        },\r\n        readonly: {\r\n            type: Boolean\r\n        },\r\n        businessModelVersions: {\r\n            type: Array\r\n        }\r\n    },\r\n    emits: ['fieldChanged', 'fileUploaded', 'datamartGenerated', 'modelGenerated'],\r\n    watch: {\r\n        selectedBusinessModel() {\r\n            this.v$.$reset()\r\n            this.loadBusinessModel()\r\n        },\r\n        domainCategories() {\r\n            this.loadCategories()\r\n        },\r\n        datasourcesMeta() {\r\n            this.loadDatasources()\r\n        }\r\n    },\r\n    computed: {\r\n        metaModelUrl(): any {\r\n            return `/knowagemeta/restful-services/1.0/pages/edit?datasourceId=${this.businessModel.dataSourceId}&user_id=${(this.user as any)?.userUniqueIdentifier}&bmId=${this.businessModel.id}&bmName=${this.businessModel.name}`\r\n        }\r\n    },\r\n    setup() {\r\n        const store = mainStore()\r\n        return { store }\r\n    },\r\n    created() {\r\n        this.loadBusinessModel()\r\n        this.loadCategories()\r\n        this.loadDatasources()\r\n    },\r\n    data() {\r\n        return {\r\n            businessModelDetailsCardDescriptor,\r\n            businessModelDetailsCardValidation,\r\n            businessModel: {} as iBusinessModel,\r\n            categories: [] as any[],\r\n            datasources: [] as any[],\r\n            metaWebVisible: false,\r\n            generateDatamartVisible: false,\r\n            metawebSelectDialogVisible: false,\r\n            metawebDialogVisible: false,\r\n            meta: null as any,\r\n            touched: false,\r\n            v$: useValidate() as any,\r\n            loading: false,\r\n            prefixesTouched: false,\r\n            saveConfirmVisible: false\r\n        }\r\n    },\r\n    validations() {\r\n        return {\r\n            businessModel: createValidations('businessModel', businessModelDetailsCardValidation.validations.businessModel)\r\n        }\r\n    },\r\n    methods: {\r\n        loadBusinessModel() {\r\n            this.businessModel = { ...this.selectedBusinessModel } as iBusinessModel\r\n        },\r\n        loadCategories() {\r\n            this.categories = this.domainCategories as any[]\r\n        },\r\n        loadDatasources() {\r\n            this.datasources = this.datasourcesMeta as any[]\r\n        },\r\n        uploadFile(event) {\r\n            this.$emit('fileUploaded', event.target.files[0])\r\n        },\r\n        onFieldChange(fieldName: string, value: any) {\r\n            if (fieldName === 'tablePrefixLike' || fieldName === 'tablePrefixNotLike') this.prefixesTouched = true\r\n            this.$emit('fieldChanged', { fieldName, value })\r\n        },\r\n        onLockedChange() {\r\n            this.$emit('fieldChanged', { fieldName: 'modelLocked', value: this.businessModel.modelLocked })\r\n        },\r\n        onSmartViewChange() {\r\n            this.$emit('fieldChanged', { fieldName: 'smartView', value: this.businessModel.smartView })\r\n        },\r\n        async goToMetaWeb() {\r\n            if (this.prefixesTouched) {\r\n                this.saveConfirmVisible = true\r\n            } else {\r\n                this.loading = true\r\n                await this.createSession()\r\n                if (this.businessModelVersions?.length === 0) {\r\n                    this.metawebSelectDialogVisible = true\r\n                } else {\r\n                    await this.loadModelFromSession()\r\n                }\r\n                this.loading = false\r\n            }\r\n        },\r\n        onDatamartGenerated() {\r\n            this.$emit('datamartGenerated')\r\n        },\r\n        onMetaSelect(meta: any) {\r\n            this.meta = meta\r\n            this.metawebSelectDialogVisible = false\r\n            this.metawebDialogVisible = true\r\n        },\r\n        async loadModelFromSession() {\r\n            await this.$http\r\n                .get(import.meta.env.VITE_META_API_URL + `/1.0/metaWeb/model`)\r\n                .then((response: AxiosResponse<any>) => {\r\n                    this.meta = response.data\r\n                    this.metawebDialogVisible = true\r\n                })\r\n                .catch(() => {})\r\n        },\r\n        async createSession() {\r\n            let url = `/1.0/pages/edit?datasourceId=${this.businessModel?.dataSourceId}&user_id=${(this.store.$state as any).user.userUniqueIdentifier}&bmId=${this.businessModel?.id}&bmName=${this.businessModel?.name}`\r\n            if (this.businessModel.tablePrefixLike) url += `&tablePrefixLike=${this.businessModel.tablePrefixLike}`\r\n            if (this.businessModel.tablePrefixNotLike) url += `&tablePrefixNotLike=${this.businessModel.tablePrefixNotLike}`\r\n            await this.$http\r\n                .get(import.meta.env.VITE_META_API_URL + url, {\r\n                    headers: {\r\n                        Accept: 'application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9'\r\n                    }\r\n                })\r\n                .then(() => {})\r\n                .catch(() => {})\r\n        }\r\n    }\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.full-screen-dialog.p-dialog {\r\n    max-height: 100%;\r\n}\r\n.full-screen-dialog.p-dialog .p-dialog-content {\r\n    padding: 0;\r\n}\r\n\r\n.pi-upload {\r\n    display: none;\r\n}\r\n\r\n#metaweb-spinner {\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n}\r\n</style>\r\n","<template>\r\n    <Card>\r\n        <template #header>\r\n            <Toolbar class=\"kn-toolbar kn-toolbar--primary\">\r\n                <template #start>\r\n                    {{ $t('managers.businessModelManager.driversDetails') }}\r\n                </template>\r\n            </Toolbar>\r\n        </template>\r\n        <template #content>\r\n            <KnHint :title=\"'managers.businessModelManager.drivers'\" :hint=\"'managers.businessModelManager.noDriverSelected'\" v-if=\"!selectedDriver\" data-test=\"driver-hint\"></KnHint>\r\n            <form class=\"p-fluid p-m-5\" v-else>\r\n                <div class=\"p-field\">\r\n                    <span class=\"p-float-label\">\r\n                        <InputText\r\n                            id=\"label\"\r\n                            class=\"kn-material-input\"\r\n                            type=\"text\"\r\n                            v-model.trim=\"v$.driver.label.$model\"\r\n                            :class=\"{\r\n                                'p-invalid': v$.driver.label.$invalid && v$.driver.label.$dirty\r\n                            }\"\r\n                            maxLength=\"40\"\r\n                            @blur=\"v$.driver.label.$touch()\"\r\n                            @input=\"setChanged\"\r\n                            :disabled=\"readonly\"\r\n                            data-test=\"label-input\"\r\n                        />\r\n                        <label for=\"label\" class=\"kn-material-input-label\"> {{ $t('managers.businessModelManager.driverTitle') }} * </label>\r\n                    </span>\r\n                    <KnValidationMessages\r\n                        :vComp=\"v$.driver.label\"\r\n                        :additionalTranslateParams=\"{\r\n                            fieldName: $t('managers.businessModelManager.driverTitle')\r\n                        }\"\r\n                    />\r\n                </div>\r\n\r\n                <div class=\"p-field\">\r\n                    <span>\r\n                        <label for=\"parameter\" class=\"kn-material-input-label\">{{ $t('managers.businessModelManager.analyticalDriver') }} * </label>\r\n                        <Dropdown\r\n                            id=\"parameter\"\r\n                            class=\"kn-material-input\"\r\n                            :class=\"{\r\n                                'p-invalid': v$.driver.parameter.$invalid && v$.driver.parameter.$dirty\r\n                            }\"\r\n                            v-model=\"v$.driver.parameter.$model\"\r\n                            :options=\"analyticalDrivers\"\r\n                            :placeholder=\"$t('managers.businessModelManager.analyticalDriverPlaceholder')\"\r\n                            :filter=\"true\"\r\n                            filterMatchMode=\"contains\"\r\n                            :filterFields=\"['label']\"\r\n                            :disabled=\"readonly\"\r\n                            @before-show=\"v$.driver.parameter.$touch()\"\r\n                            @change=\"showAnalyticalDropdownConfirm\"\r\n                        >\r\n                            <template #value=\"slotProps\">\r\n                                <div v-if=\"slotProps.value\">\r\n                                    <span>{{ slotProps.value.label }}</span>\r\n                                </div>\r\n                            </template>\r\n                            <template #option=\"slotProps\">\r\n                                <div>\r\n                                    <span>{{ slotProps.option.label }}</span>\r\n                                </div>\r\n                            </template>\r\n                        </Dropdown>\r\n                    </span>\r\n\r\n                    <KnValidationMessages\r\n                        :vComp=\"v$.driver.parameter\"\r\n                        :additionalTranslateParams=\"{\r\n                            fieldName: $t('managers.businessModelManager.analyticalDriver')\r\n                        }\"\r\n                    >\r\n                    </KnValidationMessages>\r\n                </div>\r\n\r\n                <div class=\"p-field\">\r\n                    <span class=\"p-float-label\">\r\n                        <InputText\r\n                            id=\"parameterUrlName\"\r\n                            class=\"kn-material-input\"\r\n                            type=\"text\"\r\n                            v-model.trim=\"v$.driver.parameterUrlName.$model\"\r\n                            :class=\"{\r\n                                'p-invalid': v$.driver.parameterUrlName.$invalid && v$.driver.parameterUrlName.$dirty\r\n                            }\"\r\n                            maxLength=\"20\"\r\n                            :disabled=\"readonly\"\r\n                            @blur=\"v$.driver.parameterUrlName.$touch()\"\r\n                            @input=\"setChanged\"\r\n                            data-test=\"parameterUrlName-input\"\r\n                        />\r\n                        <label for=\"parameterUrlName\" class=\"kn-material-input-label\"> {{ $t('managers.businessModelManager.driversUrl') }} * </label>\r\n                    </span>\r\n                    <KnValidationMessages\r\n                        :vComp=\"v$.driver.parameterUrlName\"\r\n                        :additionalTranslateParams=\"{\r\n                            fieldName: $t('managers.businessModelManager.driversUrl')\r\n                        }\"\r\n                        :specificTranslateKeys=\"{ custom_unique: 'managers.businessModelManager.driversUrlNotUnique' }\"\r\n                    />\r\n                </div>\r\n\r\n                <div class=\"p-field p-mt-2\">\r\n                    <InputSwitch id=\"driver-multivalue \" class=\"p-mr-2\" v-model=\"driver.multivalue\" :disabled=\"readonly\" @change=\"setChanged\" />\r\n                    <i class=\"fa fa-list p-mr-2\" />\r\n                    <label for=\"driver-multivalue \" class=\"kn-material-input-label\"> {{ $t('managers.businessModelManager.multivalue') }}</label>\r\n                </div>\r\n            </form>\r\n        </template>\r\n    </Card>\r\n\r\n    <Card v-if=\"selectedDriver\">\r\n        <template #header>\r\n            <Toolbar class=\"kn-toolbar kn-toolbar--primary\">\r\n                <template #start>\r\n                    {{ $t('managers.businessModelManager.driverDataConditions') }}\r\n                </template>\r\n                <template #end>\r\n                    <Button class=\"kn-button p-button-text\" @click=\"showForm\" :disabled=\"modes.length === 0 || !driver.id || readonly\">{{ $t('managers.businessModelManager.addCondition') }}</Button>\r\n                </template>\r\n            </Toolbar>\r\n        </template>\r\n        <template #content>\r\n            <div class=\"kn-list--column\">\r\n                <div class=\"p-col\">\r\n                    <Listbox class=\"kn-list\" :options=\"conditions\" listStyle=\"max-height:calc(100% - 62px)\" @change=\"showForm\">\r\n                        <template #empty>{{ $t('common.info.noDataFound') }}</template>\r\n                        <template #option=\"slotProps\">\r\n                            <div class=\"kn-list-item\">\r\n                                <div class=\"kn-list-item-text\">\r\n                                    <span>{{ slotProps.option.filterOperation + ' ' + $t('managers.businessModelManager.value') + ' ' + slotProps.option.parFatherUrlName }}</span>\r\n                                </div>\r\n                                <Button icon=\"far fa-trash-alt\" class=\"p-button-link p-button-sm\" :disabled=\"readonly\" @click.stop=\"showConditionDeleteDialog(slotProps.option)\" />\r\n                            </div>\r\n                        </template>\r\n                    </Listbox>\r\n                </div>\r\n            </div>\r\n        </template>\r\n    </Card>\r\n\r\n    <div v-if=\"conditionFormVisible\">\r\n        <Dialog class=\"p-fluid kn-dialog--toolbar--primary\" :style=\"businessModelDriverDetailDescriptor.conditionDialog.style\" :visible=\"true\" :modal=\"true\" :header=\"$t('managers.businessModelManager.driverDataConditions')\" :closable=\"false\">\r\n            <div id=\"operationInfo\">\r\n                <p>{{ $t('managers.businessModelManager.operationInfo', { driver: driver.label }) }}</p>\r\n            </div>\r\n\r\n            <form class=\"p-fluid p-m-5\">\r\n                <div class=\"p-field p-d-flex\">\r\n                    <div :style=\"businessModelDriverDetailDescriptor.input.parFather.style\">\r\n                        <span class=\"p-float-label\">\r\n                            <Dropdown id=\"parFather\" class=\"kn-material-input\" v-model=\"condition.parFatherId\" :options=\"drivers\" placeholder=\" \" optionValue=\"id\" :disabled=\"readonly\">\r\n                                <template #value=\"slotProps\">\r\n                                    <div v-if=\"slotProps.value\">\r\n                                        <span>{{ getDriverProperty(slotProps.value, 'label') }}</span>\r\n                                    </div>\r\n                                </template>\r\n                                <template #option=\"slotProps\">\r\n                                    <div>\r\n                                        <span>{{ slotProps.option.label }}</span>\r\n                                    </div>\r\n                                </template>\r\n                            </Dropdown>\r\n                            <label for=\"parFather\" class=\"kn-material-input-label\">{{ $t('managers.businessModelManager.driverDepends') }}</label>\r\n                        </span>\r\n                    </div>\r\n\r\n                    <div :style=\"businessModelDriverDetailDescriptor.input.filterOperation.style\">\r\n                        <span class=\"p-float-label\">\r\n                            <Dropdown id=\"filterOperation\" class=\"kn-material-input\" v-model=\"condition.filterOperation\" :options=\"businessModelDriverDetailDescriptor.operations\" optionLabel=\"name\" optionValue=\"value\" :disabled=\"readonly\" />\r\n                            <label for=\"filterOperation\" class=\"kn-material-input-label\">{{ $t('managers.businessModelManager.filterOperator') }}</label>\r\n                        </span>\r\n                    </div>\r\n\r\n                    <div :style=\"businessModelDriverDetailDescriptor.input.logicOperator.style\">\r\n                        <span class=\"p-float-label\">\r\n                            <Dropdown id=\"logicOperator\" class=\"kn-material-input\" v-model=\"condition.logicOperator\" :options=\"businessModelDriverDetailDescriptor.logicOperator\" optionLabel=\"name\" optionValue=\"value\" :disabled=\"readonly\" />\r\n                            <label for=\"logicOperator\" class=\"kn-material-input-label\">{{ $t('managers.businessModelManager.logicOperator') }}</label>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n                <div v-for=\"mode in modes\" :key=\"mode.useID\">\r\n                    <hr />\r\n                    <p>{{ $t('managers.businessModelManager.modality') + ': ' + mode.name }}</p>\r\n                    <div class=\"p-d-flex p-ai-center\">\r\n                        <div class=\"mode-inputs\">\r\n                            <Checkbox class=\"p-mr-2\" :value=\"mode.useID\" v-model=\"selectedModes\" :disabled=\"readonly\" />\r\n                            <label>{{ $t('managers.businessModelManager.check') }}</label>\r\n                        </div>\r\n                        <div class=\"mode-inputs\">\r\n                            <label class=\"kn-material-input-label\">{{ $t('managers.businessModelManager.lovsColumn') }}</label>\r\n                            <Dropdown id=\"parFather\" class=\"kn-material-input\" v-model=\"modalities[mode.useID]\" :options=\"getLovs(mode.idLov)\" :placeholder=\"$t('managers.businessModelManager.lovsColumnSelect')\" :disabled=\"isModeActive(mode.useID) || readonly\">\r\n                                <template #value=\"slotProps\">\r\n                                    <div v-if=\"slotProps.value\">\r\n                                        <span>{{ slotProps.value }}</span>\r\n                                    </div>\r\n                                </template>\r\n                                <template #option=\"slotProps\">\r\n                                    <div>\r\n                                        <span>{{ slotProps.option }}</span>\r\n                                    </div>\r\n                                </template>\r\n                            </Dropdown>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            <template #footer>\r\n                <Button class=\"kn-button kn-button--secondary\" :label=\"$t('common.close')\" @click=\"closeForm\"></Button>\r\n                <Button class=\"kn-button kn-button--primary\" :label=\"$t('common.save')\" :disabled=\"readonly\" @click=\"handleSubmit\"></Button>\r\n            </template>\r\n        </Dialog>\r\n    </div>\r\n\r\n    <Dialog header=\"Error\" v-model:visible=\"displayWarning\">\r\n        <p>{{ errorMessage }}</p>\r\n        <template #footer>\r\n            <Button label=\"Ok\" icon=\"pi pi-check\" @click=\"displayWarning = false\" />\r\n        </template>\r\n    </Dialog>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport { iBusinessModelDriver } from '../../BusinessModelCatalogue'\r\nimport { createValidations, ICustomValidatorMap } from '@/helpers/commons/validationHelper'\r\nimport { AxiosResponse } from 'axios'\r\nimport businessModelDriverDetailDescriptor from './BusinessModelDriverDetailDescriptor.json'\r\nimport businessModelDriverDetailValidationDescriptor from './BusinessModelDriverDetailValidationDescriptor.json'\r\nimport Card from 'primevue/card'\r\nimport Checkbox from 'primevue/checkbox'\r\nimport Dialog from 'primevue/dialog'\r\nimport Dropdown from 'primevue/dropdown'\r\nimport InputSwitch from 'primevue/inputswitch'\r\nimport KnHint from '@/components/UI/KnHint.vue'\r\nimport KnValidationMessages from '@/components/UI/KnValidatonMessages.vue'\r\nimport Listbox from 'primevue/listbox'\r\nimport useValidate from '@vuelidate/core'\r\nimport mainStore from '../../../../../App.store'\r\n\r\nexport default defineComponent({\r\n    name: 'business-model-driver-detail-card',\r\n    components: {\r\n        Card,\r\n        Checkbox,\r\n        Dialog,\r\n        Dropdown,\r\n        InputSwitch,\r\n        KnHint,\r\n        KnValidationMessages,\r\n        Listbox\r\n    },\r\n    props: {\r\n        businessModelId: {\r\n            type: Number\r\n        },\r\n        selectedDriver: {\r\n            value: [Object, null],\r\n            required: true\r\n        },\r\n        formVisible: {\r\n            type: Boolean\r\n        },\r\n        driverOptions: {\r\n            type: Array,\r\n            required: true\r\n        },\r\n        businessModelDrivers: {\r\n            type: Array,\r\n            required: true\r\n        },\r\n        readonly: {\r\n            type: Boolean\r\n        }\r\n    },\r\n    emits: ['touched'],\r\n    watch: {\r\n        async selectedDriver() {\r\n            this.loadSelectedDriver()\r\n            if (this.driver) {\r\n                await this.loadDataDependencies()\r\n                if (this.driver.parameter) {\r\n                    await this.loadModes()\r\n                    await this.loadLovs()\r\n                }\r\n            }\r\n        },\r\n        driverOptions() {\r\n            this.loadAnalyticalDrivers()\r\n        },\r\n        businessModelDrivers() {\r\n            this.loadBusinessModelDrivers()\r\n        }\r\n    },\r\n    setup() {\r\n        const store = mainStore()\r\n        return { store }\r\n    },\r\n    async created() {\r\n        this.loadSelectedDriver()\r\n        this.loadAnalyticalDrivers()\r\n        this.loadBusinessModelDrivers()\r\n        if (this.selectedDriver) {\r\n            await this.loadDataDependencies()\r\n            await this.loadModes()\r\n            await this.loadLovs()\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            businessModelDriverDetailDescriptor,\r\n            businessModelDriverDetailValidationDescriptor,\r\n            driver: null as iBusinessModelDriver | null,\r\n            drivers: [] as iBusinessModelDriver[],\r\n            oldDropdownValue: null as any,\r\n            analyticalDrivers: [] as any[],\r\n            condition: {} as any,\r\n            conditions: [] as any[],\r\n            originalModalities: [] as any[],\r\n            lovs: [] as any[],\r\n            modes: [] as any[],\r\n            selectedModes: [] as any,\r\n            modesToDelete: [] as any,\r\n            modalities: {} as any,\r\n            touched: false,\r\n            conditionFormVisible: false,\r\n            operation: 'insert',\r\n            errorMessage: '',\r\n            displayWarning: false,\r\n            v$: useValidate() as any\r\n        }\r\n    },\r\n    validations() {\r\n        const customValidators: ICustomValidatorMap = {\r\n            'custom-unique': (value: string) => {\r\n                return this.urlNotUnique(value)\r\n            }\r\n        }\r\n\r\n        const validationObject = {\r\n            driver: createValidations('driver', businessModelDriverDetailValidationDescriptor.validations.driver, customValidators)\r\n        }\r\n\r\n        return validationObject\r\n    },\r\n    methods: {\r\n        loadSelectedDriver() {\r\n            this.oldDropdownValue = null\r\n            this.driver = this.selectedDriver as iBusinessModelDriver\r\n\r\n            if (this.driver) {\r\n                if (this.driver.parameter) {\r\n                    this.oldDropdownValue = this.driver.parameter\r\n                }\r\n                if (!this.driver.id) {\r\n                    this.v$.driver.label.$touch()\r\n                    this.v$.driver.parameter.$touch()\r\n                    this.v$.driver.parameterUrlName.$touch()\r\n                }\r\n            }\r\n        },\r\n        loadAnalyticalDrivers() {\r\n            this.analyticalDrivers = this.driverOptions as any[]\r\n        },\r\n        loadBusinessModelDrivers() {\r\n            this.drivers = this.businessModelDrivers as any[]\r\n        },\r\n        async loadDataDependencies() {\r\n            this.conditions = []\r\n            if (this.driver && this.driver.id) {\r\n                await this.$http.get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/businessmodels/${this.businessModelId}/datadependencies?driverId=${this.driver.id}`).then((response: AxiosResponse<any>) =>\r\n                    response.data.forEach((condition: any) => {\r\n                        const index = this.conditions.findIndex((cond) => cond.parFatherId === condition.parFatherId && cond.filterOperation == condition.filterOperation && cond.logicOperator == condition.logicOperator)\r\n                        condition.modalities = []\r\n                        condition.modalities.push({ conditionId: condition.id, useModeId: condition.useModeId, filterColumn: condition.filterColumn })\r\n                        if (index > -1) {\r\n                            this.conditions[index].modalities.push({ conditionId: condition.id, useModeId: condition.useModeId, filterColumn: condition.filterColumn })\r\n                        } else {\r\n                            this.conditions.push(condition)\r\n                        }\r\n                    })\r\n                )\r\n            }\r\n        },\r\n        async loadModes() {\r\n            await this.$http.get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/analyticalDrivers/${this.driver?.parameter?.id}/modes`).then((response: AxiosResponse<any>) => (this.modes = response.data))\r\n        },\r\n        async loadLovs() {\r\n            await this.$http.get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/analyticalDrivers/${this.driver?.parameter?.id}/lovs`).then((response: AxiosResponse<any>) => (this.lovs = response.data))\r\n        },\r\n        getLovs(lovId: number) {\r\n            const index = this.lovs.findIndex((lov) => lov.id === lovId)\r\n            if (index > -1) {\r\n                const lov = JSON.parse(this.lovs[index].lovProviderJSON)\r\n                return lov.QUERY ? lov.QUERY['VISIBLE-COLUMNS'].split(',') : []\r\n            }\r\n        },\r\n        isModeActive(modeId: number) {\r\n            const index = this.selectedModes.findIndex((id: any) => {\r\n                return id === modeId\r\n            })\r\n            return index === -1\r\n        },\r\n        urlNotUnique(url: string) {\r\n            const index = this.drivers.findIndex((driver) => driver.parameterUrlName === url && driver.id != this.driver?.id)\r\n            return index === -1\r\n        },\r\n        showAnalyticalDropdownConfirm() {\r\n            if (this.oldDropdownValue) {\r\n                this.$confirm.require({\r\n                    message: this.$t('managers.businessModelManager.analyticalDropdownConfirm'),\r\n                    header: this.$t('common.toast.deleteTitle'),\r\n                    icon: 'pi pi-exclamation-triangle',\r\n                    accept: () => this.deleteAllConditions(),\r\n                    reject: () => this.resetDrodpwonValue()\r\n                })\r\n            }\r\n            this.setChanged()\r\n        },\r\n        resetDrodpwonValue() {\r\n            if (this.driver) {\r\n                this.driver.parameter = this.oldDropdownValue\r\n            }\r\n        },\r\n        async saveCondition(condition: any) {\r\n            await this.$http.post(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/businessmodels/${this.businessModelId}/datadependencies`, condition).finally(() => (this.conditionFormVisible = false))\r\n        },\r\n        async handleSubmit() {\r\n            if (this.condition.id) {\r\n                this.operation = 'update'\r\n            }\r\n\r\n            const modalityKeys = Object.keys(this.modalities)\r\n            for (let i = 0; i < this.selectedModes.length; i++) {\r\n                for (let j = 0; j < modalityKeys.length; j++) {\r\n                    if (this.selectedModes[i] === +modalityKeys[j]) {\r\n                        const conditionForPost = {\r\n                            ...this.condition,\r\n                            parFatherId: '' + this.condition.parFatherId,\r\n                            parFatherUrlName: this.getDriverProperty(this.condition.parFatherId, 'parameterUrlName'),\r\n                            parId: (this.selectedDriver as iBusinessModelDriver).id,\r\n                            useModeId: +modalityKeys[j],\r\n                            filterColumn: this.modalities[this.selectedModes[i]]\r\n                        }\r\n\r\n                        if (this.operation === 'update') {\r\n                            const index = this.originalModalities.findIndex((modality) => {\r\n                                return modality.conditionId === conditionForPost.id\r\n                            })\r\n                            if (index > -1) {\r\n                                this.originalModalities.splice(index, 1)\r\n                            }\r\n                        }\r\n\r\n                        if (!conditionForPost.prog) {\r\n                            conditionForPost.prog = 0\r\n                        }\r\n                        conditionForPost.prog++\r\n                        delete conditionForPost.parFather\r\n                        delete conditionForPost.modalities\r\n                        await this.sendRequest(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/businessmodels/${this.businessModelId}/datadependencies`, conditionForPost).then((response: AxiosResponse<any>) => {\r\n                            if (response.data.errors) {\r\n                                this.errorMessage = response.data.errors[0].message\r\n                                this.displayWarning = true\r\n                            } else {\r\n                                this.store.setInfo({\r\n                                    title: this.$t(this.businessModelDriverDetailDescriptor.operation[this.operation].toastTitle),\r\n                                    msg: this.$t(this.businessModelDriverDetailDescriptor.operation.success)\r\n                                })\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n\r\n            this.originalModalities.forEach((modality) => {\r\n                this.deleteCondition({\r\n                    ...this.condition,\r\n                    id: modality.conditionId,\r\n                    parFatherId: this.condition.parFatherId,\r\n                    parFatherUrlName: (this.selectedDriver as iBusinessModelDriver).parameterUrlName,\r\n                    parId: (this.selectedDriver as iBusinessModelDriver).id,\r\n                    useModeId: modality.useModeId,\r\n                    filterColumn: modality.filterColumn\r\n                })\r\n            })\r\n            this.originalModalities = []\r\n\r\n            this.loadData()\r\n        },\r\n        sendRequest(url: string, condition: any) {\r\n            if (this.operation === 'insert') {\r\n                return this.$http.post(url, condition)\r\n            } else {\r\n                return this.$http.put(url, condition)\r\n            }\r\n        },\r\n        showForm(event: any) {\r\n            this.originalModalities = []\r\n            this.selectedModes = []\r\n            if (event.value) {\r\n                this.condition = { ...event.value, parFather: this.selectedDriver }\r\n                this.condition.modalities.forEach((modality: any) => {\r\n                    this.originalModalities.push(modality)\r\n                    this.selectedModes.push(modality.useModeId)\r\n                    this.modalities[modality.useModeId] = modality.filterColumn\r\n                })\r\n            } else {\r\n                this.condition = {\r\n                    parFather: this.drivers[0],\r\n                    filterOperation: 'equal',\r\n                    logicOperator: 'AND'\r\n                }\r\n            }\r\n            this.conditionFormVisible = true\r\n        },\r\n        setChanged() {\r\n            if (this.driver) {\r\n                this.driver.status = 'CHANGED'\r\n                this.driver.numberOfErrors = this.v$.$errors.length\r\n            }\r\n        },\r\n        closeForm() {\r\n            this.conditionFormVisible = false\r\n        },\r\n        showConditionDeleteDialog(condition) {\r\n            this.$confirm.require({\r\n                message: this.$t('common.toast.deleteMessage'),\r\n                header: this.$t('common.toast.deleteConfirmTitle'),\r\n                icon: 'pi pi-exclamation-triangle',\r\n                accept: () => this.deleteConditions(condition)\r\n            })\r\n        },\r\n        async deleteConditions(condition: any) {\r\n            condition.modalities.forEach((mode: any) => {\r\n                this.deleteCondition({ ...condition, id: mode.conditionId, useModeId: mode.useModeId, filterColumn: mode.filterColumn })\r\n            })\r\n        },\r\n        async deleteCondition(condition: any) {\r\n            delete condition.parFather\r\n            delete condition.modalities\r\n            await this.$http.post(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/businessmodels/${this.businessModelId}/datadependencies/delete`, condition).then(() => {\r\n                this.store.setInfo({\r\n                    title: this.$t('common.toast.deleteTitle'),\r\n                    msg: this.$t('common.toast.deleteSuccess')\r\n                })\r\n                this.loadData()\r\n            })\r\n        },\r\n        deleteAllConditions() {\r\n            this.setChanged()\r\n            this.oldDropdownValue = this.driver?.parameter\r\n            this.conditions.forEach((condition) => this.deleteCondition(condition))\r\n        },\r\n        loadData() {\r\n            this.loadDataDependencies()\r\n            this.loadModes()\r\n            this.loadLovs()\r\n            this.selectedModes = []\r\n            this.condition = {}\r\n            this.operation = 'insert'\r\n            this.conditionFormVisible = false\r\n        },\r\n        getDriverProperty(driverId: number, property: string) {\r\n            const index = this.drivers.findIndex((driver: any) => driver.id === driverId)\r\n            return index !== -1 ? this.drivers[index][property] : ''\r\n        }\r\n    }\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.mode-inputs {\r\n    flex: 0.5;\r\n}\r\n#operationInfo {\r\n    margin-top: 2rem;\r\n    font-size: 0.8rem;\r\n    text-transform: uppercase;\r\n    display: flex;\r\n    justify-content: center;\r\n    border: 1px solid rgba(59, 103, 140, 0.1);\r\n    background-color: #eaf0f6;\r\n\r\n    p {\r\n        margin: 0.3rem;\r\n    }\r\n}\r\n</style>\r\n","span<template>\r\n    <div class=\"kn-page-content p-grid p-m-0\">\r\n        <Card class=\"p-col-6 p-p-0\">\r\n            <template #header>\r\n                <Toolbar class=\"kn-toolbar kn-toolbar--primary\">\r\n                    <template #start>\r\n                        {{ $t('managers.businessModelManager.drivers') }}\r\n                    </template>\r\n                    <template #end>\r\n                        <Button class=\"kn-button p-button-text\" :disabled=\"readonly\" @click=\"showForm\">{{ $t('managers.businessModelManager.add') }}</Button>\r\n                    </template>\r\n                </Toolbar>\r\n            </template>\r\n            <template #content>\r\n                <Listbox class=\"kn-list\" :options=\"businessModelDrivers\" listStyle=\"max-height:calc(100% - 62px)\" @change=\"showForm\" data-test=\"driver-list\">\r\n                    <template #empty>{{ $t('common.info.noDataFound') }}</template>\r\n                    <template #option=\"slotProps\">\r\n                        <div class=\"kn-list-item\">\r\n                            <div class=\"kn-list-item-text\">\r\n                                <span\r\n                                    :class=\"{\r\n                                        'driver-invalid': slotProps.option.numberOfErrors > 0\r\n                                    }\"\r\n                                    >{{ slotProps.option.label }}</span\r\n                                >\r\n                                <span class=\"kn-list-item-text-secondary kn-truncated\">{{ slotProps.option.parameterUrlName }}</span>\r\n                            </div>\r\n                            <Button v-if=\"slotProps.option.id !== businessModelDrivers[0].id && !readonly\" icon=\"fa fa-arrow-up\" class=\"p-button-link p-button-sm\" @click.stop=\"movePriority(slotProps.option.id, 'UP')\" />\r\n                            <Button v-if=\"slotProps.option.id !== businessModelDrivers[businessModelDrivers.length - 1].id && !readonly\" icon=\"fa fa-arrow-down\" class=\"p-button-link p-button-sm\" @click.stop=\"movePriority(slotProps.option.id, 'DOWN')\" />\r\n                            <Button v-if=\"!readonly\" icon=\"far fa-trash-alt\" class=\"p-button-link p-button-sm\" @click.stop=\"deleteDriverConfirm(slotProps.index)\" />\r\n                        </div>\r\n                    </template>\r\n                </Listbox>\r\n            </template>\r\n        </Card>\r\n\r\n        <div class=\"p-col-6 p-p-0 p-m-0\">\r\n            <BuisnessModelDriverDetail :businessModelId=\"id\" :selectedDriver=\"selectedDriver\" :formVisible=\"formVisible\" :driverOptions=\"analyticalDrivers\" :businessModelDrivers=\"businessModelDrivers\" :readonly=\"readonly\"></BuisnessModelDriverDetail>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import { defineComponent } from 'vue'\r\n    import { iBusinessModelDriver } from '../../BusinessModelCatalogue'\r\n    import BuisnessModelDriverDetail from './BusinessModelDriverDetail.vue'\r\n    import Card from 'primevue/card'\r\n    import Listbox from 'primevue/listbox'\r\n\r\n    export default defineComponent({\r\n        name: 'business-model-drivers-card',\r\n        components: {\r\n            BuisnessModelDriverDetail,\r\n            Card,\r\n            Listbox\r\n        },\r\n        props: {\r\n            id: {\r\n                type: Number,\r\n                required: true\r\n            },\r\n            drivers: {\r\n                type: Array,\r\n                required: true\r\n            },\r\n            driversOptions: {\r\n                type: Array,\r\n                required: true\r\n            },\r\n            readonly: {\r\n                type: Boolean\r\n            }\r\n        },\r\n        emits: ['delete'],\r\n        data() {\r\n            return {\r\n                businessModelDrivers: [] as iBusinessModelDriver[],\r\n                driversForDelete: [] as iBusinessModelDriver[],\r\n                analyticalDrivers: [] as any[],\r\n                selectedDriver: null as iBusinessModelDriver | null,\r\n                formVisible: false\r\n            }\r\n        },\r\n        watch: {\r\n            drivers() {\r\n                this.selectedDriver = null\r\n                this.loadDrivers()\r\n            },\r\n            driversOptions() {\r\n                this.loadAnalyticalDrivers()\r\n            }\r\n        },\r\n        created() {\r\n            this.loadDrivers()\r\n            this.loadAnalyticalDrivers()\r\n        },\r\n        methods: {\r\n            loadDrivers() {\r\n                this.businessModelDrivers = this.drivers as any[]\r\n            },\r\n            loadAnalyticalDrivers() {\r\n                this.analyticalDrivers = this.driversOptions\r\n            },\r\n            showForm(event: any) {\r\n                if (event.value) {\r\n                    this.selectedDriver = event.value\r\n                } else {\r\n                    this.selectedDriver = { biMetaModelID: this.id, modifiable: 0, priority: this.businessModelDrivers.length + 1, required: true, visible: true, multivalue: false, numberOfErrors: 1 }\r\n                    this.businessModelDrivers.push(this.selectedDriver)\r\n                }\r\n\r\n                if (this.selectedDriver && this.selectedDriver.parameter) {\r\n                    this.selectedDriver.parameter = this.analyticalDrivers.find((driver) => {\r\n                        return driver.id === this.selectedDriver?.parameter?.id\r\n                    })\r\n                }\r\n\r\n                this.formVisible = true\r\n            },\r\n            movePriority(driverId: number, direction: 'UP' | 'DOWN') {\r\n                const currentDriverIndex = this.businessModelDrivers.findIndex((driver) => driver.id === driverId)\r\n\r\n                if (direction === 'UP') {\r\n                    this.businessModelDrivers[currentDriverIndex - 1].priority++\r\n                    this.businessModelDrivers[currentDriverIndex - 1].status = 'CHANGED'\r\n                    this.businessModelDrivers[currentDriverIndex].priority--\r\n                    this.businessModelDrivers[currentDriverIndex].status = 'CHANGED'\r\n\r\n                    const temp = this.businessModelDrivers[currentDriverIndex - 1]\r\n                    this.businessModelDrivers[currentDriverIndex - 1] = this.businessModelDrivers[currentDriverIndex]\r\n                    this.businessModelDrivers[currentDriverIndex] = temp\r\n                } else {\r\n                    this.businessModelDrivers[currentDriverIndex + 1].priority--\r\n                    this.businessModelDrivers[currentDriverIndex + 1].status = 'CHANGED'\r\n                    this.businessModelDrivers[currentDriverIndex].priority++\r\n                    this.businessModelDrivers[currentDriverIndex].status = 'CHANGED'\r\n\r\n                    const temp = this.businessModelDrivers[currentDriverIndex + 1]\r\n                    this.businessModelDrivers[currentDriverIndex + 1] = this.businessModelDrivers[currentDriverIndex]\r\n                    this.businessModelDrivers[currentDriverIndex] = temp\r\n                }\r\n            },\r\n            deleteDriverConfirm(index: number) {\r\n                this.$confirm.require({\r\n                    message: this.$t('common.toast.deleteMessage'),\r\n                    header: this.$t('common.toast.deleteTitle'),\r\n                    icon: 'pi pi-exclamation-triangle',\r\n                    accept: () => this.deleteDriver(index)\r\n                })\r\n            },\r\n            deleteDriver(index: number) {\r\n                if (this.businessModelDrivers[index].id) {\r\n                    this.driversForDelete.push(this.businessModelDrivers[index])\r\n                }\r\n                this.businessModelDrivers.splice(index, 1)\r\n                this.$emit('delete', this.driversForDelete)\r\n                this.selectedDriver = null\r\n            }\r\n        }\r\n    })\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n    .driver-invalid {\r\n        color: red;\r\n    }\r\n</style>\r\n","<template>\r\n    <Card class=\"p-m-2\">\r\n        <template #header>\r\n            <Toolbar class=\"kn-toolbar kn-toolbar--primary\">\r\n                <template #start>\r\n                    {{ $t('managers.businessModelManager.savedVersions') }}\r\n                </template>\r\n            </Toolbar>\r\n        </template>\r\n        <template #content>\r\n            <Listbox class=\"kn-list\" :options=\"businessModelVersions\" data-test=\"versions-list\">\r\n                <template #empty>{{ $t('managers.businessModelManager.noSavedVersions') }}</template>\r\n                <template #option=\"slotProps\">\r\n                    <div class=\"kn-list-item\" :data-test=\"'version-' + slotProps.option.id\">\r\n                        <RadioButton name=\"active\" :value=\"slotProps.option\" v-model=\"activeVersion\" :disabled=\"readonly\" @change=\"setActive\"></RadioButton>\r\n                        <div class=\"kn-list-item-text\">\r\n                            <span>{{ slotProps.option.fileName }}</span>\r\n                            <span class=\"kn-list-item-text-secondary\">{{ creationDate(slotProps.option.creationDate) }}</span>\r\n                        </div>\r\n                        <div class=\"kn-list-item-text\">\r\n                            <span>{{ slotProps.option.creationUser }}</span>\r\n                        </div>\r\n                        <Button class=\"p-button-link p-button-sm\" icon=\"fa fa-ellipsis-v\" @click=\"toggle($event, slotProps.option)\" aria-haspopup=\"true\" aria-controls=\"overlay_menu\" />\r\n                        <Menu ref=\"menu\" :model=\"items\" :popup=\"true\" />\r\n                    </div>\r\n                </template>\r\n            </Listbox>\r\n        </template>\r\n    </Card>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport { iBusinessModelVersion } from '../../BusinessModelCatalogue'\r\nimport { formatDateWithLocale } from '@/helpers/commons/localeHelper'\r\nimport { downloadDirect } from '@/helpers/commons/fileHelper'\r\nimport { AxiosResponse } from 'axios'\r\nimport Card from 'primevue/card'\r\nimport Listbox from 'primevue/listbox'\r\nimport Menu from 'primevue/menu'\r\nimport RadioButton from 'primevue/radiobutton'\r\nimport mainStore from '../../../../../App.store'\r\n\r\nexport default defineComponent({\r\n    name: 'business-models-versions-card',\r\n    components: {\r\n        Card,\r\n        Listbox,\r\n        Menu,\r\n        RadioButton\r\n    },\r\n    props: {\r\n        id: {\r\n            type: Number\r\n        },\r\n        versions: {\r\n            type: Array,\r\n            required: true\r\n        },\r\n        readonly: {\r\n            type: Boolean\r\n        }\r\n    },\r\n    emits: ['touched', 'deleted'],\r\n    watch: {\r\n        versions() {\r\n            this.loadVersions()\r\n        }\r\n    },\r\n    setup() {\r\n        const store = mainStore()\r\n        return { store }\r\n    },\r\n    created() {\r\n        this.loadVersions()\r\n    },\r\n    data() {\r\n        return {\r\n            businessModelVersions: [] as iBusinessModelVersion[],\r\n            items: [] as { label: string; icon: string; command: Function }[],\r\n            previousActiveVersion: { active: false },\r\n            activeVersion: { active: false }\r\n        }\r\n    },\r\n    methods: {\r\n        loadVersions() {\r\n            this.businessModelVersions = [] as iBusinessModelVersion[]\r\n            this.versions.forEach((version: any) => {\r\n                if (version.active) {\r\n                    this.previousActiveVersion = version\r\n                    this.activeVersion = version\r\n                }\r\n                this.businessModelVersions.push(version)\r\n            })\r\n        },\r\n        creationDate(date: string) {\r\n            return formatDateWithLocale(date, { year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' })\r\n        },\r\n        toggle(event: any, version: iBusinessModelVersion) {\r\n            this.createMenuItems(version)\r\n\r\n            const menu = this.$refs.menu as any\r\n            menu.toggle(event)\r\n        },\r\n        createMenuItems(version: iBusinessModelVersion) {\r\n            this.items = []\r\n            if (version.hasContent && !version.hasLog) {\r\n                this.items.push({ label: this.$t('managers.businessModelManager.downloadJar'), icon: 'fa fa-file-archive-o', command: () => this.downloadFile(version.id, 'JAR') })\r\n            }\r\n            if (version.hasLog) {\r\n                this.items.push({ label: this.$t('managers.businessModelManager.downloadLog'), icon: 'fa fa-file-text-o', command: () => this.downloadFile(version.id, 'LOG') })\r\n            }\r\n            if (version.hasFileModel) {\r\n                this.items.push({ label: this.$t('managers.businessModelManager.downloadModel'), icon: 'fa fa-file-code-o', command: () => this.downloadFile(version.id, 'SBIMODEL') })\r\n            }\r\n            if (!this.readonly) {\r\n                this.items.push({ label: this.$t('common.delete'), icon: 'far fa-trash-alt', command: () => this.deleteVersionConfirm(version.id) })\r\n            }\r\n        },\r\n        setActive() {\r\n            this.previousActiveVersion.active = false\r\n            this.previousActiveVersion = this.activeVersion\r\n            this.activeVersion.active = true\r\n            this.$emit('touched')\r\n        },\r\n        async downloadFile(versionId: number, filetype: string) {\r\n            await this.$http\r\n                .get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/businessmodels/${this.id}/versions/${versionId}/${filetype}/file`, {\r\n                    responseType: 'arraybuffer',\r\n                    headers: {\r\n                        Accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9'\r\n                    }\r\n                })\r\n                .then((response: AxiosResponse<any>) => {\r\n                    if (response.data.errors) {\r\n                        this.store.setError({\r\n                            title: this.$t('common.error.downloading'),\r\n                            msg: this.$t('common.error.errorCreatingPackage')\r\n                        })\r\n                    } else {\r\n                        if (response.headers) {\r\n                            const contentDisposition = response.headers['content-disposition']\r\n                            const contentDispositionMatches = contentDisposition.match(/filename[^;\\n=]*=((['\"]).*?\\2|[^;\\n]*)/i)\r\n                            if (contentDispositionMatches && contentDispositionMatches.length > 1) {\r\n                                const fileAndExtension = contentDispositionMatches[1]\r\n                                const completeFileName = fileAndExtension.replaceAll('\"', '')\r\n                                downloadDirect(response.data, completeFileName, response.headers['content-type'])\r\n                            }\r\n                        }\r\n                        this.store.setInfo({ title: this.$t('common.toast.success') })\r\n                    }\r\n                })\r\n        },\r\n        deleteVersionConfirm(versionId: number) {\r\n            this.$confirm.require({\r\n                message: this.$t('common.toast.deleteMessage'),\r\n                header: this.$t('common.toast.deleteTitle'),\r\n                icon: 'pi pi-exclamation-triangle',\r\n                accept: () => {\r\n                    this.deleteVersion(versionId)\r\n                }\r\n            })\r\n        },\r\n        async deleteVersion(versionId: number) {\r\n            await this.$http.delete(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/businessmodels/${this.id}/versions/${versionId}/`).then(() => {\r\n                this.store.setInfo({\r\n                    title: this.$t('common.toast.deleteTitle'),\r\n                    msg: this.$t('common.toast.deleteSuccess')\r\n                })\r\n                this.$emit('deleted')\r\n            })\r\n        }\r\n    }\r\n})\r\n</script>\r\n","<template>\r\n    <Card class=\"p-m-2\">\r\n        <template #header>\r\n            <Toolbar class=\"kn-toolbar kn-toolbar--primary\">\r\n                <template #start>\r\n                    {{ $t('managers.businessModelManager.metadata') }}\r\n                </template>\r\n            </Toolbar>\r\n        </template>\r\n        <template #content>\r\n            <div class=\"p-m-5\">\r\n                <Button id=\"metadata-button\" class=\"p-jc-center\" @click=\"confirmImport\">{{ $t('managers.businessModelManager.importMetadata') }}</Button>\r\n                <div v-if=\"importing\" class=\"p-mt-5\">\r\n                    <div id=\"import-metadata-spinner\">\r\n                        <ProgressSpinner />\r\n                    </div>\r\n                    <ProgressBar mode=\"indeterminate\" class=\"kn-progress-bar\" />\r\n                    <div id=\"import-progress-message\" class=\"p-d-flex p-jc-center p-ai-center\">{{ $t('managers.businessModelManager.importProgress') }}</div>\r\n                </div>\r\n            </div>\r\n        </template>\r\n    </Card>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport Card from 'primevue/card'\r\nimport ProgressSpinner from 'primevue/progressspinner'\r\nimport mainStore from '../../../../../App.store'\r\n\r\nexport default defineComponent({\r\n    name: 'metadata-card',\r\n    components: {\r\n        Card,\r\n        ProgressSpinner\r\n    },\r\n    props: {\r\n        id: {\r\n            type: Number,\r\n            required: false\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            importing: false\r\n        }\r\n    },\r\n    setup() {\r\n        const store = mainStore()\r\n        return { store }\r\n    },\r\n    methods: {\r\n        confirmImport() {\r\n            this.$confirm.require({\r\n                message: this.$t('managers.businessModelManager.importConfirm'),\r\n                header: this.$t('managers.businessModelManager.importMetadata'),\r\n                icon: 'pi pi-exclamation-triangle',\r\n                accept: () => this.importMetadata()\r\n            })\r\n        },\r\n        async importMetadata() {\r\n            this.importing = true\r\n            await this.$http\r\n                .post(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/metadata/${this.id}/bmExtract/`, undefined, { headers: { 'X-Disable-Errors': 'true' } })\r\n                .then(() =>\r\n                    this.store.setInfo({\r\n                        title: this.$t('common.toast.createTitle'),\r\n                        msg: this.$t('common.toast.success')\r\n                    })\r\n                )\r\n                .catch((error) =>\r\n                    this.store.setError({\r\n                        title: this.$t('common.error.generic'),\r\n                        msg: error.message\r\n                    })\r\n                )\r\n                .finally(() => (this.importing = false))\r\n        }\r\n    }\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n#metadata-button {\r\n    min-width: 15rem;\r\n    text-transform: uppercase;\r\n}\r\n\r\n#import-progress-message {\r\n    background-color: rgba(0, 0, 0, $alpha: 0.3);\r\n    height: 3rem;\r\n}\r\n\r\n#import-metadata-spinner {\r\n    position: fixed;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: 100%;\r\n    top: 0;\r\n    left: 0;\r\n    opacity: 0.7;\r\n    background-color: rgba(0, 0, 0, $alpha: 0.5);\r\n    z-index: 99;\r\n}\r\n\r\n::v-deep(.p-progress-spinner-circle) {\r\n    animation: p-progress-spinner-color 4s ease-in-out infinite;\r\n}\r\n@keyframes p-progress-spinner-color {\r\n    100%,\r\n    0% {\r\n        stroke: #43749e;\r\n    }\r\n    80%,\r\n    90% {\r\n        stroke: #d62d20;\r\n    }\r\n}\r\n</style>\r\n","<template>\r\n    <Toolbar class=\"kn-toolbar kn-toolbar--primary p-m-0\">\r\n        <template #start>{{ selectedBusinessModel.name }} </template>\r\n        <template #end>\r\n            <Button icon=\"pi pi-save\" class=\"p-button-text p-button-rounded p-button-plain\" :disabled=\"buttonDisabled\" @click=\"handleSubmit\" data-test=\"submit-button\" />\r\n            <Button icon=\"pi pi-times\" class=\"p-button-text p-button-rounded p-button-plain\" @click=\"closeTemplate\" data-test=\"close-button\" />\r\n        </template>\r\n    </Toolbar>\r\n    <ProgressBar mode=\"indeterminate\" class=\"kn-progress-bar\" v-if=\"loading\" />\r\n    <TabView class=\"tabview-custom kn-page-content\" v-else>\r\n        <TabPanel>\r\n            <template #header>\r\n                <span>{{ $t('managers.businessModelManager.details') }}</span>\r\n            </template>\r\n\r\n            <BusinessModelDetailsCard\r\n                :selectedBusinessModel=\"selectedBusinessModel\"\r\n                :domainCategories=\"categories\"\r\n                :datasourcesMeta=\"datasources\"\r\n                :user=\"user\"\r\n                :toGenerate=\"toGenerate\"\r\n                :readonly=\"readonly\"\r\n                :businessModelVersions=\"businessModelVersions\"\r\n                @fieldChanged=\"onFieldChange\"\r\n                @fileUploaded=\"uploadedFile = $event\"\r\n                @datamartGenerated=\"loadPage\"\r\n                @modelGenerated=\"loadVersions\"\r\n            ></BusinessModelDetailsCard>\r\n        </TabPanel>\r\n\r\n        <TabPanel>\r\n            <template #header>\r\n                <span>{{ $t('managers.businessModelManager.metadata') }}</span>\r\n            </template>\r\n\r\n            <MetadataCard v-if=\"businessModelVersions?.length > 0 && !readonly\" :id=\"selectedBusinessModel.id\"></MetadataCard>\r\n        </TabPanel>\r\n\r\n        <TabPanel>\r\n            <template #header>\r\n                <span>{{ $t('managers.businessModelManager.savedVersions') }}</span>\r\n            </template>\r\n\r\n            <BusinessModelVersionsCard :id=\"selectedBusinessModel.id\" :versions=\"businessModelVersions\" :readonly=\"readonly\" @touched=\"setDirty\" @deleted=\"loadVersions\"></BusinessModelVersionsCard>\r\n        </TabPanel>\r\n\r\n        <TabPanel v-if=\"id\">\r\n            <template #header v-if=\"id\">\r\n                <span>{{ $t('managers.businessModelManager.drivers') }}</span>\r\n                <Badge :value=\"invalidDrivers\" class=\"p-ml-2\" severity=\"danger\" v-if=\"invalidDrivers > 0\"></Badge>\r\n            </template>\r\n\r\n            <BusinessModelDriversCard v-if=\"id\" :id=\"selectedBusinessModel.id\" :drivers=\"drivers\" :driversOptions=\"analyticalDrivers\" :readonly=\"readonly\" @delete=\"setDriversForDelete\"></BusinessModelDriversCard>\r\n        </TabPanel>\r\n    </TabView>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport { iBusinessModel, iBusinessModelVersion } from './BusinessModelCatalogue'\r\nimport { AxiosResponse } from 'axios'\r\nimport Badge from 'primevue/badge'\r\nimport BusinessModelDetailsCard from './cards/businessModelDetailsCard/BusinessModelDetailsCard.vue'\r\nimport BusinessModelDriversCard from './cards/businessModelDriversCard/BusinessModelDriversCard.vue'\r\nimport BusinessModelVersionsCard from './cards/businessModelVersionsCard/BusinessModelVersionsCard.vue'\r\nimport MetadataCard from './cards/metadataCard/MetadataCard.vue'\r\nimport TabView from 'primevue/tabview'\r\nimport TabPanel from 'primevue/tabpanel'\r\nimport useValidate from '@vuelidate/core'\r\nimport mainStore from '../../../App.store'\r\nimport deepcopy from 'deepcopy'\r\n\r\nexport default defineComponent({\r\n    name: 'business-model-catalogue-detail',\r\n    components: {\r\n        Badge,\r\n        BusinessModelDetailsCard,\r\n        BusinessModelDriversCard,\r\n        BusinessModelVersionsCard,\r\n        MetadataCard,\r\n        TabView,\r\n        TabPanel\r\n    },\r\n    props: {\r\n        id: {\r\n            type: Number,\r\n            required: false\r\n        }\r\n    },\r\n    emits: ['touched', 'closed', 'inserted'],\r\n    data() {\r\n        return {\r\n            user: null as any,\r\n            selectedBusinessModel: {} as iBusinessModel,\r\n            businessModelVersions: [] as iBusinessModelVersion[],\r\n            analyticalDrivers: [],\r\n            drivers: [] as any[],\r\n            driversForDelete: [] as any[],\r\n            categories: [] as any[],\r\n            datasources: [] as any[],\r\n            toGenerate: false,\r\n            uploadedFile: null as any,\r\n            loading: false,\r\n            touched: false,\r\n            uploadingError: false,\r\n            v$: useValidate() as any\r\n        }\r\n    },\r\n    computed: {\r\n        buttonDisabled(): any {\r\n            return this.invalidDrivers > 0 || !this.selectedBusinessModel.name || !this.selectedBusinessModel.category || !this.selectedBusinessModel.dataSourceLabel || this.readonly\r\n        },\r\n        invalidDrivers(): number {\r\n            return this.drivers.filter((driver: any) => driver.numberOfErrors > 0).length\r\n        },\r\n        readonly(): any {\r\n            return this.selectedBusinessModel.id && this.selectedBusinessModel.modelLocked && this.user && this.selectedBusinessModel.modelLocked && this.selectedBusinessModel.modelLocker && this.selectedBusinessModel.modelLocker !== this.user.userId\r\n        }\r\n    },\r\n    watch: {\r\n        async id() {\r\n            await this.loadPage()\r\n        }\r\n    },\r\n    setup() {\r\n        const store = mainStore()\r\n        return { store }\r\n    },\r\n    async created() {\r\n        await this.loadUser()\r\n        await this.loadPage()\r\n    },\r\n    methods: {\r\n        async loadUser() {\r\n            await this.$http.get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/currentuser`).then((response: AxiosResponse<any>) => (this.user = response.data))\r\n        },\r\n        async loadSelectedBusinessModelData() {\r\n            if (this.id) {\r\n                await this.loadSelectedBusinessModel()\r\n                await this.loadVersions()\r\n                await this.loadDrivers()\r\n\r\n                this.formatBusinessModelAnalyticalDriver()\r\n            } else {\r\n                this.selectedBusinessModel = { modelLocked: false, smartView: false } as iBusinessModel\r\n                this.businessModelVersions = []\r\n                this.drivers = []\r\n                this.analyticalDrivers = []\r\n            }\r\n        },\r\n        async loadSelectedBusinessModel() {\r\n            await this.$http.get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/businessmodels/${this.id}`).then((response: AxiosResponse<any>) => (this.selectedBusinessModel = response.data))\r\n        },\r\n        async loadVersions() {\r\n            await this.$http.get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/businessmodels/${this.id}/versions/`).then((response: AxiosResponse<any>) => {\r\n                this.businessModelVersions = response.data.versions\r\n                this.toGenerate = response.data.togenerate\r\n            })\r\n        },\r\n        async loadDrivers() {\r\n            this.drivers = []\r\n            await this.$http.get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/businessmodels/${this.id}/drivers`).then((response: AxiosResponse<any>) =>\r\n                response.data.forEach((driver: any) => {\r\n                    this.drivers.push({ ...driver, status: 'NOT_CHANGED', numberOfErrors: 0 })\r\n                })\r\n            )\r\n        },\r\n        async loadAnalyticalDrivers() {\r\n            await this.$http.get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + '2.0/analyticalDrivers/').then((response: AxiosResponse<any>) => (this.analyticalDrivers = response.data))\r\n        },\r\n        async loadCategories() {\r\n            await this.$http.get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + 'domains/listValueDescriptionByType?DOMAIN_TYPE=BM_CATEGORY').then((response: AxiosResponse<any>) => (this.categories = response.data))\r\n        },\r\n        async loadDatasources() {\r\n            this.datasources = []\r\n            await this.$http.get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + '2.0/datasources/?type=meta').then((response: AxiosResponse<any>) => response.data.forEach((datasource) => this.datasources.push(datasource.label)))\r\n        },\r\n        formatBusinessModelAnalyticalDriver() {\r\n            if (this.selectedBusinessModel.category?.VALUE_NM) return\r\n            const index = this.categories.findIndex((category) => category.VALUE_ID === this.selectedBusinessModel.category)\r\n            this.selectedBusinessModel = { ...this.selectedBusinessModel, category: this.categories[index] }\r\n        },\r\n        setDriversForDelete(drivers: any) {\r\n            this.driversForDelete = drivers\r\n        },\r\n        async handleSubmit() {\r\n            this.loading = true\r\n            if (this.selectedBusinessModel.id) {\r\n                await this.updateBusinessModel()\r\n            } else {\r\n                await this.saveBusinessModel()\r\n            }\r\n\r\n            if (this.uploadingError) {\r\n                this.loading = false\r\n                return\r\n            }\r\n\r\n            if (this.selectedBusinessModel.id && this.uploadedFile && !this.uploadingError) {\r\n                await this.uploadFile()\r\n            }\r\n\r\n            if (this.businessModelVersions.length > 0 && !this.uploadingError) {\r\n                const activeBusinessModelVersion = this.businessModelVersions.find((version) => version.active === true)\r\n                this.saveActiveVersion(activeBusinessModelVersion)\r\n            }\r\n\r\n            this.driversForDelete.forEach((driver) => {\r\n                if (!this.uploadingError) {\r\n                    this.deleteDriver(driver.id)\r\n                }\r\n            })\r\n\r\n            this.drivers.forEach((driver) => {\r\n                if (driver.status === 'CHANGED' && !this.uploadingError) {\r\n                    delete driver.status\r\n                    delete driver.numberOfErrors\r\n                    if (driver.id) {\r\n                        this.updateDriver(driver)\r\n                    } else {\r\n                        this.saveDriver(driver)\r\n                    }\r\n                }\r\n            })\r\n\r\n            if (!this.uploadingError) {\r\n                this.store.setInfo({\r\n                    title: this.$t('common.toast.updateTitle'),\r\n                    msg: this.$t('common.toast.success')\r\n                })\r\n                this.$router.replace(`/business-model-catalogue/${this.selectedBusinessModel.id}`)\r\n            }\r\n            this.loadPage()\r\n            this.touched = false\r\n            this.$emit('inserted')\r\n            this.uploadingError = false\r\n            this.loading = false\r\n        },\r\n        setUploadingError(title: string, message: string) {\r\n            this.uploadingError = true\r\n            this.store.setError({ title: this.$t('common.toast.' + title), msg: message })\r\n        },\r\n        async saveBusinessModel() {\r\n            await this.$http\r\n                .post(import.meta.env.VITE_RESTFUL_SERVICES_PATH + '2.0/businessmodels/', { ...this.selectedBusinessModel, modelLocker: this.user.userId })\r\n                .then((response: AxiosResponse<any>) => {\r\n                    if (response.data.errors) {\r\n                        this.setUploadingError('createTitle', response.data.errors[0].message)\r\n                    } else {\r\n                        this.selectedBusinessModel = response.data\r\n                        this.formatBusinessModelAnalyticalDriver()\r\n                    }\r\n                })\r\n                .catch(() => {\r\n                    this.uploadingError = true\r\n                })\r\n        },\r\n        async updateBusinessModel() {\r\n            if (this.selectedBusinessModel.category.VALUE_ID) {\r\n                this.selectedBusinessModel.category = this.selectedBusinessModel.category.VALUE_ID\r\n            }\r\n            await this.$http\r\n                .put(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/businessmodels/${this.selectedBusinessModel.id}`, { ...this.selectedBusinessModel, modelLocker: this.user.userId })\r\n                .then((response: AxiosResponse<any>) => {\r\n                    if (response.data.errors) {\r\n                        this.setUploadingError('updateTitle', response.data.errors[0].message)\r\n                    } else {\r\n                        this.selectedBusinessModel = response.data\r\n                    }\r\n                })\r\n                .catch(() => {\r\n                    this.uploadingError = true\r\n                })\r\n                .finally(() => this.formatBusinessModelAnalyticalDriver())\r\n        },\r\n        saveActiveVersion(businessModelVersion) {\r\n            this.$http.put(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/businessmodels/${this.id}/versions/${businessModelVersion.id}/`).then((response: AxiosResponse<any>) => {\r\n                if (response.data.errors) {\r\n                    this.setUploadingError('updateTitle', response.data.errors[0].message)\r\n                }\r\n            })\r\n        },\r\n        async uploadFile() {\r\n            const formData = new FormData()\r\n            formData.append('file', this.uploadedFile)\r\n            await this.$http.post(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/businessmodels/${this.selectedBusinessModel.id}/versions`, formData, { headers: { 'Content-Type': 'multipart/form-data' } }).then((response: AxiosResponse<any>) => {\r\n                if (response.data.errors) {\r\n                    this.store.setError({ title: this.$t('managers.businessModelManager.toast.uploadFile'), msg: response.data.errors })\r\n                } else {\r\n                    this.store.setInfo({ title: this.$t('managers.businessModelManager.uploadFile'), msg: this.$t('managers.businessModelManager.uploadFileSuccess') })\r\n                    this.uploadedFile = null\r\n                }\r\n            })\r\n        },\r\n        saveDriver(driver: any) {\r\n            this.$http.post(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/businessmodels/${this.id}/drivers`, { ...driver, parID: driver.parameter.id }).then((response: AxiosResponse<any>) => {\r\n                if (response.data.errors) {\r\n                    this.setUploadingError('saveTitle', response.data.errors[0].message)\r\n                }\r\n            })\r\n        },\r\n        updateDriver(driver: any) {\r\n            this.$http.put(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/businessmodels/${this.id}/drivers/${driver.id}`, { ...driver, parID: driver.parameter.id }).then((response: AxiosResponse<any>) => {\r\n                if (response.data.errors) {\r\n                    this.setUploadingError('updateTitle', response.data.errors[0].message)\r\n                }\r\n            })\r\n        },\r\n        deleteDriver(driverId: number) {\r\n            this.$http.delete(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/businessmodels/${this.id}/drivers/${driverId}`).then((response: AxiosResponse<any>) => {\r\n                if (response.data.errors) {\r\n                    this.setUploadingError('deleteTitle', response.data.errors[0].message)\r\n                }\r\n            })\r\n        },\r\n        async loadPage() {\r\n            this.loading = true\r\n            await this.loadAnalyticalDrivers()\r\n            await this.loadCategories()\r\n            await this.loadDatasources()\r\n            await this.loadSelectedBusinessModelData()\r\n            this.loading = false\r\n        },\r\n        onFieldChange(event: any) {\r\n            this.selectedBusinessModel[event.fieldName] = event.value\r\n            if (event.fieldName === 'modelLocked') {\r\n                this.selectedBusinessModel.modelLocker = this.user.userId\r\n            }\r\n            this.touched = true\r\n            this.$emit('touched')\r\n        },\r\n        setDirty() {\r\n            this.$emit('touched')\r\n        },\r\n        closeTemplate() {\r\n            this.$router.push('/business-model-catalogue')\r\n            this.$emit('closed')\r\n        }\r\n    }\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n::v-deep(.p-toolbar-group-right) {\r\n    height: 100%;\r\n}\r\n</style>\r\n"],"names":["_sfc_main","Checkbox","Dialog","InputSwitch","mainStore","_hoisted_2","_hoisted_6","_hoisted_9","_hoisted_12","_hoisted_14","_openBlock","_createBlock","_normalizeStyle","_withCtx","_createVNode","_createElementVNode","_toDisplayString","_hoisted_1","_createElementBlock","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_7","_hoisted_8","_hoisted_10","_hoisted_11","_hoisted_13","_hoisted_15","Column","DataTable","Accordion","AccordionTab","Dropdown","MultiSelect","_Fragment","_renderList","_createCommentVNode","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","this","JsonPatchError","deepClone","bsDescriptor","useValidate","_normalizeClass","Listbox","bussinessModelDescriptor","_withModifiers","_withDirectives","_vShow","_hoisted_23","_hoisted_26","_hoisted_31","_hoisted_32","_hoisted_24","_hoisted_25","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_33","_hoisted_34","_hoisted_35","_hoisted_36","Message","_createTextVNode","MetawebBusinessViewDialog","Textarea","moment","Chip","TabView","TabPanel","Menu","Card","RadioButton","ProgressSpinner","Badge","_createSlots"],"mappings":"4uDAuDA,KAAKA,IAAa,EAAa,CAC3B,KAAM,yBACN,WAAY,CAAA,SACRC,GAAA,OACAC,EAAA,YACAC,EACJ,EACA,MAAO,CACH,cAAe,CACX,KAAM,OACN,SAAU,EACd,EACA,KAAM,CACF,KAAM,OACN,SAAU,EACd,CACJ,EACA,MAAO,CAAC,YAAa,OAAO,EAC5B,MAAO,CACH,eAAgB,CACZ,KAAK,kBAAkB,CAC3B,CACJ,EACA,OAAQ,CAEJ,MAAO,CAAA,MADOC,GACC,CACnB,EACA,KAAM,UAAU,CACZ,KAAK,kBAAkB,EACvB,KAAK,SAAS,EACd,KAAM,MAAK,eACf,EACA,MAAO,CACI,MAAA,CACH,kCACA,oBAAqB,GACrB,MAAO,CAAC,EACR,YAAa,CAAC,EACd,UAAW,GACX,WAAY,GACZ,YAAa,GACb,uBAAwB,GACxB,eAAgB,EAAA,CAExB,EACA,QAAS,CACL,mBAAoB,CAChB,KAAK,MAAQ,KAAK,cACb,KAAA,UAAY,KAAK,cAAc,IACxC,EACA,UAAW,CACP,KAAK,YAAc,KAAK,IAC5B,EACA,KAAM,gBAAgB,CAClB,KAAM,MAAK,MAAM,IAAI,wDAAwD,KAAK,cAAc,cAAc,KAAK,KAAK,sBAAsB,EAAE,KAAK,AAAC,GAAiC,CAC/K,AAAA,EAAS,KAAK,YACT,MAAA,WAAa,EAAS,KAAK,YAEhC,EAAS,KAAK,aACT,MAAA,YAAc,EAAS,KAAK,YACrC,CACH,CACL,EACA,kBAAmB,CACf,KAAM,GACF,wDAAwD,KAAK,cAAc,cAAc,KAAK,KAAK,gBACzF,mBAAmB,KAAK,SAAS,YAAY,KAAK,sBAAsB,KAAK,wBAAwB,KAAK,yCAAyC,KAAK,iBACtK,KAAK,MAAM,IAAI,CAAG,EAAE,KAAK,IAAM,CAC3B,KAAK,MAAM,QAAQ,CACf,MAAO,KAAK,GAAG,0BAA0B,EACzC,IAAK,KAAK,GAAG,sBAAsB,CAAA,CACtC,EACD,KAAK,MAAM,WAAW,CAAA,CACzB,CACL,EACA,eAAgB,CACZ,KAAK,MAAM,OAAO,CACtB,CACJ,CACJ,CAAC,qBAjIqBC,GAAC,CAAmB,IAAK,mBAAA,MAAA,+BAGjC,IAAK,EAAA,MAAA,qBAEG,MAAM,sCAEEC,GAAY,CAAC,IAAK,YAAA,MAAA,+BAI1B,MAAM,sCAEEC,GAAa,CAAC,IAAK,aAAA,MAAA,+BAI3B,MAAM,sCAEEC,GAAc,CAAC,IAAK,cAAA,MAAA,+BAI5B,MAAM,mBAINC,GAAA,CAAA,MAAM,8KA/BVC,GAAE,EAAAC,EAAA,EAAA,CAA8C,MAAOC,EAAM,EAAA,+BAAA,OAAA,KAAA,EAAG,QAAO,GAAM,MAAM,GAAuC,MAAM,sCAAyD,OAAQ,EAAE,GAAK,gDAAA,EAAE,SAAA,GAAA,aAAA,2BAsCzM,EAAA,CAAA,OACPC,EAA2G,IAAA,CAA7FC,EAAA,EAAA,CAAkC,MAAO,iCAAqB,MAAK,EAAE,GAAa,cAAA,EAAA,QAAA,EAAA,aACW,EAAA,KAAA,EAAA,CAAA,QAAA,SAAA,CAAA,EAA7FA,EAAA,EAAA,CAAgC,MAAO,+BAAoB,MAAK,EAAE,GAAA,aAAA,EAAA,QAAA,EAAA,wDAvCpFD,EAAqE,IAAA,CACrEE,EAGM,SAHNC,EAGM,EAAA,GAAA,oDAAA,CAAA,EAAA,CAAA,EAFgFD,EAAA,MAAAE,GAAA,CAAAH,EAAlE,EAAkB,CAAC,GAAA,mBAAA,MAAA,uGACgG,EAAA,KAAA,EAAA,CAAA,YAAA,CAAA,EAAAC,EAAA,QAAAV,GAAAW,EAAA,EAAA,GAAA,mDAAA,CAAA,EAAA,CAAA,CAGrG,CAAA,EAAA,EAAA,oBAAAN,GAAA,EAMxBQ,EAAA,OAAAC,GAAA,CAAAJ,EAJF,MAGOK,GAHP,CAC+FL,EAAA,OAAAM,GAAA,CAAAP,EAA7E,EAAW,CAAC,GAAA,YAA0B,MAAK,oBAAA,KAAA,oDAAO,EAAwB,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,UAAA,GAAA,eAAA,CAAA,KAAA,EAAA,CAC2B,EAAA,KAAA,EAAA,CAAA,YAAA,CAAA,EAAAC,EAAA,QAAAT,GAAAU,EAAA,EAAA,GAAA,yCAAA,CAAA,EAAA,CAAA,GAG3H,CAAA,EAAAD,EACI,MAGOO,GAHP,CACiGP,EAAA,OAAAQ,GAAA,CAAAT,EAA/E,EAAY,CAAC,GAAA,aAA0B,MAAK,oBAAA,KAAA,qDAAO,EAAyB,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,WAAA,GAAA,eAAA,CAAA,KAAA,EAAA,CAC2B,EAAA,KAAA,EAAA,CAAA,YAAA,CAAA,EAAAC,EAAA,QAAAR,GAAAS,EAAA,EAAA,GAAA,0CAAA,CAAA,EAAA,CAAA,GAG7H,CAAA,EAAAD,EACI,MAGOS,GAHP,CACmGT,EAAA,OAAAU,GAAA,CAAAX,EAAjF,EAAa,CAAC,GAAA,cAA0B,MAAK,oBAAA,KAAA,sDAAO,EAA0B,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,YAAA,GAAA,eAAA,CAAA,KAAA,EAAA,CAC2B,EAAA,KAAA,EAAA,CAAA,YAAA,CAAA,EAAAC,EAAA,QAAAP,GAAAQ,EAAA,EAAA,GAAA,2CAAA,CAAA,EAAA,CAAA,GAG/H,CAAA,EAAAD,EACI,MAGOW,GAHP,CACmGX,EAAA,OAAAN,GAAA,CAA5EK,EAAA,EAAA,CAAA,WAAA,EAAA,uBAAyB,sBAAY,EAAA,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,uBAAA,GAAE,OAAA,GAAA,aAAA,uBACU,EAAA,KAAA,EAAA,CAAA,YAAA,CAAA,EAAAC,EAAA,QAAA,KAAAC,EAAA,EAAA,GAAA,2CAAA,CAAA,EAAA,CAAA,CAExE,CAAA,EACqFD,EAAA,OAAAY,GAAA,CAAhDb,EAAA,EAAA,CAAA,WAAA,EAAA,eAAG,sBAAY,EAAA,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,eAAA,GAAE,OAAA,GAAA,aAAA,iBACqB,EAAA,KAAA,EAAA,CAAA,YAAA,CAAA,EAAAC,EAAA,QAAA,KAAAC,EAAA,EAAA,GAAA,8CAAA,CAAA,EAAA,CAAA,qMC4B3F,KAAKhB,IAAa,EAAa,CAC3B,KAAM,wBACN,WAAY,CAAA,SAAEC,GAAU,OAAA2B,EAAQC,UAAAA,EAAW3B,OAAAA,CAAO,EAClD,MAAO,CAAE,QAAS,CAAE,KAAM,OAAQ,EAAG,sBAAuB,CAAE,KAAM,OAAqC,EACzG,MAAO,CAAC,QAAS,cAAc,EAC/B,MAAO,CACI,MAAA,CACH,iCACA,cAAe,KACf,oBAAqB,KACrB,KAAM,CAAC,EACP,SAAU,CAAC,EACX,oBAAqB,GACrB,oBAAqB,GACrB,QAAS,CACL,OAAQ,CAAC,CAAa,CAC1B,EACA,aAAc,CAAC,EACf,QAAS,EAAA,CAEjB,EACA,MAAO,CACH,KAAM,gBAAgB,CAClB,KAAM,MAAK,UACf,EACA,KAAM,SAAQ,EAAgB,CAC1B,AAAI,GACA,MAAK,QAAU,GACf,KAAM,MAAK,0BACX,KAAK,SAAS,EACd,KAAK,QAAU,GAEvB,CACJ,EACA,OAAQ,CAEJ,MAAO,CAAA,MADOE,GACC,CACnB,EACA,KAAM,UAAU,CACZ,KAAM,MAAK,UACf,EACA,QAAS,CACL,KAAM,WAAW,CACb,KAAK,QAAU,GACf,KAAK,kBAAkB,EACvB,KAAM,MAAK,0BACX,KAAK,SAAS,EACd,KAAK,QAAU,EACnB,EACA,mBAAoB,CAChB,KAAK,cAAgB,KAAK,qBAC9B,EACA,KAAM,0BAA0B,OACxB,GAAA,QAAK,gBAAL,QAAoB,aAAc,CAC9B,GAAA,GAAM,6BAA6B,KAAK,cAAc,gBAC1D,KAAM,GAAY,CAAA,EAClB,AAAI,KAAK,cAAc,iBAA2B,GAAA,gBAAkB,KAAK,cAAc,iBACnF,KAAK,cAAc,oBAA8B,GAAA,mBAAqB,KAAK,cAAc,oBAC7F,KAAM,MAAK,MAAM,IAAI,6BAA6C,EAAK,CAAE,OAAQ,CAAW,CAAA,EAAE,KAAK,AAAC,GAAkC,KAAK,oBAAsB,EAAS,IAAK,CACnL,CACJ,EACA,UAAW,CACP,KAAK,KAAO,GACR,KAAK,qBACL,OAAO,KAAK,KAAK,mBAAmB,EAAE,QAAQ,AAAC,GAAgB,CAC3D,KAAK,KAAK,KAAK,CAAE,MAAO,CAAK,CAAA,EAC7B,KAAK,SAAS,GAAO,CAAE,SAAU,GAAO,SAAU,GAAM,CAC3D,CAET,EACA,WAAW,EAAwB,EAAqB,CACpD,AAAI,IAAgB,YAAc,KAAK,SAAS,EAAI,OAAO,SAClD,KAAA,SAAS,EAAI,OAAO,SAAW,GAC7B,IAAgB,YAAc,CAAC,KAAK,SAAS,EAAI,OAAO,UAC1D,MAAA,SAAS,EAAI,OAAO,SAAW,GAE5C,EACA,cAAc,EAAqB,CAC/B,OAAO,KAAK,KAAK,QAAQ,EAAE,QAAQ,AAAC,GAAgB,CAC5C,AAAA,KAAK,mCAAmC,CAAG,GAC3C,CAAI,IAAgB,WACX,MAAA,SAAS,GAAK,SAAW,KAAK,oBAC/B,KAAK,qBACA,MAAA,SAAS,GAAK,SAAW,GAC9B,KAAK,oBAAsB,KAG1B,MAAA,SAAS,GAAK,SAAW,KAAK,oBAC9B,KAAK,qBACD,MAAA,SAAS,GAAK,SAAW,GAC9B,KAAK,oBAAsB,KAGvC,CACH,CACL,EACA,mCAAmC,EAAa,CAE5C,MAAO,AADO,MAAK,aAAa,UAAU,AAAC,GAA0B,EAAG,QAAU,CAAG,IACpE,EACrB,EACA,aAAc,CACV,KAAK,MAAM,OAAO,EACb,KAAA,QAAQ,OAAU,MAAQ,GAC/B,KAAK,SAAW,GAChB,KAAK,oBAAsB,GAC3B,KAAK,oBAAsB,EAC/B,EACA,KAAM,aAAa,CACX,GAAA,CAAC,KAAK,iCAAkC,CACxC,KAAK,MAAM,SAAS,CAChB,MAAO,KAAK,GAAG,sBAAsB,EACrC,IAAK,KAAK,GAAG,oDAAoD,CAAA,CACpE,EACD,MACJ,CAEA,KAAM,MAAK,oBACf,EACA,KAAM,qBAAqB,SACvB,KAAK,QAAU,GACf,KAAM,GAAiB,CAAA,EACjB,EAAiB,CAAA,EAElB,KAAA,mBAAmB,EAAgB,CAAc,EAEhD,KAAA,MAAK,MACN,KAAK,mDAA2D,CAAE,aAAc,GAAK,SAAK,gBAAL,cAAoB,cAAc,iBAAgC,iBAAgC,UAAW,QAAK,gBAAL,cAAoB,KAAM,EAC5N,KAAK,AAAC,GAAiC,CAC/B,KAAA,MAAM,eAAgB,EAAS,IAAI,CAAA,CAC3C,EACA,MAAM,IAAM,CAAA,CAAE,EAEnB,KAAK,QAAU,EACnB,EACA,mBAAmB,EAAgB,EAAgB,CAC/C,OAAO,KAAK,KAAK,QAAQ,EAAE,QAAQ,AAAC,GAAgB,CAC5C,AAAA,KAAK,SAAS,GAAK,UAAU,EAAe,KAAK,CAAG,EACpD,KAAK,SAAS,GAAK,UAAU,EAAe,KAAK,CAAG,CAAA,CAC3D,CACL,EACA,gCAAiC,CAC7B,GAAI,GAAa,GACjB,KAAM,GAAO,OAAO,KAAK,KAAK,QAAQ,EAEtC,OAAS,GAAI,EAAG,EAAI,EAAK,OAAQ,IAC7B,GAAI,KAAK,SAAS,EAAK,IAAI,SAAU,CACpB,EAAA,GACb,KACJ,CAGG,MAAA,EACX,EACA,eAAe,EAAY,CACvB,KAAK,aAAe,EAAM,cAC1B,KAAK,oBAAsB,GAC3B,KAAK,oBAAsB,GAEvB,KAAK,aAAa,SAAW,GAC7B,MAAK,oBAAsB,GAC3B,KAAK,oBAAsB,IAG/B,OAAS,GAAI,EAAG,EAAI,KAAK,aAAa,OAAQ,IAC1C,AAAK,KAAK,SAAS,KAAK,aAAa,GAAG,OAAO,UAC3C,MAAK,oBAAsB,IAE1B,KAAK,SAAS,KAAK,aAAa,GAAG,OAAO,UAC3C,MAAK,oBAAsB,GAGvC,CACJ,CACJ,CAAC,MArNyB,MAAM,yBACAC,GAAA,CAAA,MAAA,iPAtBjBK,GAAuB,EAAAC,EAAA,EAAA,CAAC,GAAA,wBAA2E,MAAA,oEAA2D,aAAS,EAAO,8BAAA,OAAA,MAAG,QAAO,EAAK,QAAG,MAAA,GAAiB,SAAS,GAAS,SAAU,QAAM,WAAY,EAAA,WAAA,EAC3P,EAAA,CAAA,OACPE,EAQU,IAAA,CAAAC,EAPU,EACa,CAAA,MAAA,qDAAA,EAAA,CAAA,MAAAD,EAAA,IAAA,OAAA,sDAElB,EAAA,EAAA,IACPA,EAAqI,IAAA,CAAvHC,EAAA,EAAA,CAA8D,MAAO,6DAAqB,MAAK,EAAE,GAAW,cAAA,EAAA,QAAA,EAAA,WACO,EAAA,KAAA,EAAA,CAAA,QAAA,SAAA,CAAA,EAAnHA,EAAA,EAAA,CAAwD,MAAO,uDAAwB,MAAK,EAAE,GAAU,iBAAA,EAAA,QAAA,EAAA,0DAIlED,EAAO,IAAA,CAAA,EAAA,QAAAH,KAAAC,EAAA,EAAA,CAA1D,IAAI,EAAiB,KAAK,gBAAA,MAAA,+BAEpB,IAAK,EAAQ,MAAM,EAAA,KAAkC,MAAA,iCAAkB,WAAY,GAAgB,aAAS,OAAA,QAAA,EAAA,QAAU,mBAAoB,eAA8B,EAAkB,QAAA,GAAG,mBAAQ,EAAc,8BAAA,mBAAA,SAAA,EAAA,cACvN,EAAA,CAAA,MAAAE,EAAA,IAAA,wCAIA,CAAA,EAAA,OACPA,EAKM,IAAA,CAAAE,EAJF,MAGOE,GAHP,CAC8BF,EAAA,OAAAV,GAAA,CAC1Bc,GAAAL,EAAiB,EAAmB,CAAA,MAAA,sDAAoC,sBAAe,EAAA,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,QAAA,OAAA,MAAA,GAAA,YAAA,EAAA,GAAA,eAAA,sDAKnGD,EAA8F,IAAA,CAAAC,EAAhF,EAAO,CAAE,MAAM,QAAwC,OAAe,EAAA,GAAA,gCAAA,EAAA,MAAA,CAAA,KAAA,GAAA,CAQ3E,EAAA,KAAA,EAAA,CAAA,QAAA,CAAA,EAAAA,EAPQ,EAAE,CAAA,OAAA,EAAA,GAAA,6BAAA,CACJ,EAAA,CAAA,OACPD,EAA4G,IAAA,CAAAC,EAA5F,EAAQ,CAAA,MAAA,0CAAgC,sBAAY,EAAA,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,oBAAA,GAAG,OAAM,GAAA,SAAA,EAAA,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,cAAA,UAAA,0BAEtE,CAAA,EAAA,KACPD,EAA8H,AAAA,GAAA,CAAlGC,EAAA,EAAA,CAAA,WAAA,EAAA,SAAA,EAAT,KAAQ,OAAA,SAAkC,sBAAY,AAAA,GAAA,EAAA,SAAA,EAAA,KAAA,OAAA,SAAA,EAAG,OAAM,GAAA,SAAA,AAAA,GAAA,EAAA,WAAA,EAAA,KAAA,UAAA,kEAUjF,EAAA,CAAA,QAAA,CAAA,EAAAA,EAPQ,EAAE,CAAA,OAAA,EAAA,GAAA,6BAAA,CACJ,EAAA,CAAA,OACPD,EAA4G,IAAA,CAAAC,EAA5F,EAAQ,CAAA,MAAA,0CAAgC,sBAAY,EAAA,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,oBAAA,GAAG,OAAM,GAAA,SAAA,EAAA,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,cAAA,UAAA,0BAEtE,CAAA,EAAA,KACPD,EAA8H,AAAA,GAAA,CAAlGC,EAAA,EAAA,CAAA,WAAA,EAAA,SAAA,EAAT,KAAQ,OAAA,SAAkC,sBAAY,AAAA,GAAA,EAAA,SAAA,EAAA,KAAA,OAAA,SAAA,EAAG,OAAM,GAAA,SAAA,AAAA,GAAA,EAAA,WAAA,EAAA,KAAA,UAAA,0uJCqCtG,KAAKd,IAAa,EAAa,CAC3B,KAAM,qCACN,WAAY,CAAA,UAAE8B,GAAW,aAAAC,GAAcC,SAAAA,EAAUC,YAAAA,EAAY,EAC7D,MAAO,CAAE,sBAAuB,CAAE,KAAM,MAA6C,EAAA,MAAO,CAAE,KAAM,OAAS,SAAU,CAAE,KAAM,OAAS,EACxI,MAAO,CAAC,aAAa,EACrB,MAAO,CACI,MAAA,CACH,4CACA,KAAM,KACN,cAAe,KACf,WAAY,CAAC,EACb,YAAa,CAAC,CAAA,CAEtB,EACA,SAAU,CACN,mBAA2B,CACvB,MAAQ,MAAK,MAAM,OAAe,KAAK,WAAa,OAAO,KAAM,KAAK,MAAM,OAAe,KAAK,UAAU,EAAI,CAAA,CAClH,CACJ,EACA,MAAO,CACH,uBAAwB,CACpB,KAAK,SAAS,EACd,KAAK,kBAAkB,CAC3B,EACA,OAAQ,CACJ,KAAK,gBAAgB,CACzB,CACJ,EACA,OAAQ,CAEJ,MAAO,CAAA,MADO7B,GACC,CACnB,EACA,SAAU,CACN,KAAK,SAAS,EACd,KAAK,kBAAkB,CAC3B,EACA,QAAS,CACL,UAAW,CACP,KAAK,KAAO,KAAK,QACrB,EACA,mBAAoB,CAChB,KAAK,cAAgB,KAAK,sBAE1B,KAAK,eAAe,CACxB,EACA,iBAAkB,CACd,KAAK,YAAc,KAAK,KAC5B,EACA,gBAAiB,OAEb,GADA,KAAK,WAAa,GACd,KAAK,cACL,OAAS,GAAI,EAAG,EAAI,KAAK,cAAc,WAAW,OAAQ,IAAK,CACrD,KAAA,GAAe,QAAK,gBAAL,cAAoB,WAAW,GAE9C,EAAM,OAAO,KAAK,CAAY,EAAE,GAChC,EAAS,iBAAK,MAAM,KAE1B,AAAK,KAAK,WAAW,EAAO,KACnB,MAAA,WAAW,EAAO,IAAM,CAAA,GAG5B,KAAA,WAAW,EAAO,IAAI,KAAK,CAAE,GAAG,EAAa,GAAM,KAAM,CAAK,CAAA,CACvE,CAER,EACA,oBAAoB,EAAe,SAC/B,WAAK,gBAAL,cAAoB,aAApB,QAAgC,QAAQ,AAAC,GAAY,CACjD,KAAM,GAAM,OAAO,KAAK,CAAE,EAAE,GACxB,AAAA,IAAQ,EAAS,MACd,GAAA,GAAK,MAAQ,EAAS,MAC7B,GAGJ,KAAK,MAAM,aAAa,CAC5B,CACJ,CACJ,CAAC,EAnJwBa,GAAA,CAAA,MAAM,8CAMiC,IAAK,EAAA,MAAA,eAEtC,MAAM,WAYpBX,GAAA,CAAA,MAAM,mDAEE,IAAK,EAAA,MAAA,qBAEU,oDAIf,IAAK,EAAA,MAAA,eAEK,MAAM,oDAKhB,IAAK,EAAA,MAAA,eAEK,MAAM,oDAKhB,IAAK,EAAA,MAAA,eAEK,MAAM,oDAKhB,IAAK,EAAA,MAAA,eAEK,MAAM,yMA3DJ,IAAA,EAAiB,SAAA,GAAA,YAAA,CAAA,EAAA,CAAA,YAC9CO,EAoBe,IAAA,CAAAC,EAnBM,EACsC,KAAA,CAAA,OAAnDD,EAAmD,IAAA,CAAAE,EAAA,OAAA,KAAAC,EAAA,EAAA,GAAA,4BAAA,CAAA,EAAA,CAAA,YAGvDH,EAcM,IAAA,CAbFE,EAAA,MAAAE,GAAA,CAKMP,GAAA,EAAA,EAAAQ,EAAAgB,EAAA,KAAAC,EAAA,EAAA,yCAAA,kBAAA,CAAA,EAAA,IALIzB,GAAU,EAAAQ,EAAA,MAAA,CAA2F,MAAK,UAAA,IAAA,CAChH,EAAA,CAAAH,EACI,MAAgGV,GAAA,CAAAU,EAAzE,QAAI,CAAE,IAAK,EAAC,KAAA,MAAA,2BACwFC,EAAA,EAAA,GAAA,EAAA,KAAA,CAAA,EAAA,EAAAG,EAAA,EAAAL,EAA1G,EAAmB,CAAA,MAAA,oBAAU,WAAA,EAAA,cAAA,EAAA,MAAgC,sBAAkB,AAAA,GAAA,EAAA,cAAA,EAAA,MAAA,EAAE,GAAU,EAAA,KAAA,YAAA,oEAIzG,EAAA,GAAA,GAAX,EAAA,cAAA,eAAA,EAKM,UADII,EAAA,MAAAE,GAAA,CAAAL,EAFF,MAAgGM,GAAhG,CACAN,EAA2I,QAAAT,GAAAU,EAAA,EAAA,GAAA,qCAAA,CAAA,EAAA,CAAA,EAAAF,EAA1H,EAAmB,CAAA,MAAA,mFAAc,oBAAgB,KAAuD,sBAAc,EAAA,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,KAAA,eAAA,EAAA,cAAA,cAAA,oBAAA,KAAA,GAAA,SAAA,mDAgDxIJ,GAAA,EAAA,EAAAQ,EAAAgB,EAAA,KAAAC,EA1C2D,OAAO,KAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAC5DzB,GACiB,EAAAC,EAAA,EAAA,CAAA,IAAA,GAAA,CAAA,OAA9BE,EAA8B,IAAA,CAAAE,EAAA,OAAA,KAAAC,EAAA,CAAA,EAAA,CAAA,YAGlCH,EAoCM,IAAA,CAnCFE,EAAA,MAAAO,GAAA,CAkCMZ,GAAA,EAAA,EAAAQ,EAAAgB,EAAA,KAAAC,EAAA,EAAA,WAAA,GAAA,CAAA,EAAA,IAlCIzB,GAAU,EAAAQ,EAAA,MAAA,CAAmD,MAAK,UAAA,IAAA,CAC7C,EAAA,CAAA,EAAA,aAA3B,iCAIUA,EAAA,MAAAK,GAAA,CAAAR,EAFF,MAA6ER,GAA7E,CACAQ,EAA6I,QAAAS,GAAAR,EAAA,EAAA,aAAA,IAAA,EAAA,CAAA,EAAAF,EAA7H,EAAmB,CAAA,MAAA,uCAAuB,sBAAc,GAAa,EAAgB,MAAA,EAAG,QAAM,EAAE,aAAA,iBAAA,SAAA,AAAA,GAAA,EAAA,oBAAA,CAAA,0EAG7FsB,EAAkB,GAAA,EAAA,EAA7C,EAAA,aAAA,iBAAA,SAAA,GAAA,EAKM,4GADIlB,EAAA,MAAAO,GAAA,CAAAV,EAFF,MAA6EP,GAA7E,CACAO,EAAmJ,QAAAW,GAAAV,EAAA,EAAA,aAAA,IAAA,EAAA,CAAA,EAAAF,EAAlI,EAAmB,CAAA,MAAA,uCAAuB,sBAAmB,AAAA,GAAA,EAAA,MAAA,EAAgC,SAAM,EAAE,OAAA,yBAAA,SAAA,AAAA,GAAA,EAAA,oBAAA,CAAA,2EAInGsB,EAAS,GAAA,EAAA,EAAA,EAAA,OAAA,uBAAA1B,GAI1B,EAAAQ,EAAA,MAAAT,GAAA,CAAAM,EAFF,MAA6EY,GAA7E,CACAZ,EAA4H,QAAAsB,GAAArB,EAAA,EAAA,aAAA,IAAA,EAAA,CAAA,EAAAF,EAA5G,EAAmB,CAAA,MAAA,uCAAuB,sBAAS,AAAiB,GAAA,EAAA,MAAA,EAAG,QAAM,EAAA,kBAAA,SAAA,AAAA,GAAA,EAAA,oBAAA,CAAA,0EAI1EsB,EAAS,GAAA,EAAA,EAAA,EAAA,OAAA,8BAAA1B,GAI1B,EAAAQ,EAAA,MAAAoB,GAAA,CAAAvB,EAFF,MAA6EwB,GAA7E,CACAxB,EAAyH,QAAAyB,GAAAxB,EAAA,EAAA,aAAA,IAAA,EAAA,CAAA,EAAAF,EAAtG,EAAmB,CAAA,MAAA,uCAAuB,sBAAS,AAAW,GAAA,EAAA,MAAA,EAAG,QAAM,EAAA,YAAA,SAAA,AAAA,GAAA,EAAA,oBAAA,CAAA,0EAIvEsB,EAAc,GAAA,EAAA,EAAA,EAAA,cAAzC,oCAIUlB,EAAA,MAAAuB,GAAA,CAAA1B,EAFF,MAAiG2B,GAAjG,CACA3B,EAAoG,QAAA4B,GAAA3B,EAAA,EAAA,GAAA,sCAAA,CAAA,EAAA,CAAA,EAAAF,EAAnF,EAAmB,CAAA,MAAA,mEAA8C,sBAAc,EAAA,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,cAAA,eAAA,KAAA,GAAA,SAAA,yHC7D5H;AAAA;AAAA;AAAA;AAAA,GAKA,GAAI,IAAa8B,YAAQA,WAAK,WAAe,UAAY,CACrD,GAAI,GAAgB,SAAU,EAAG,EAAG,CAChC,SAAgB,OAAO,gBAClB,CAAE,UAAW,CAAA,YAAgB,QAAS,SAAU,EAAG,EAAG,CAAE,EAAE,UAAY,CAAE,GACzE,SAAU,EAAG,EAAG,CAAE,OAAS,KAAK,GAAG,AAAI,EAAE,eAAe,CAAC,GAAG,GAAE,GAAK,EAAE,KAClE,EAAc,EAAG,CAAC,CACjC,EACI,MAAO,UAAU,EAAG,EAAG,CACnB,EAAc,EAAG,CAAC,EAClB,YAAc,CAAE,KAAK,YAAc,CAAI,CACvC,EAAE,UAAY,IAAM,KAAO,OAAO,OAAO,CAAC,EAAK,GAAG,UAAY,EAAE,UAAW,GAAI,GACvF,CACA,IACI,GAAkB,OAAO,UAAU,eAChC,YAAwB,EAAK,EAAK,CACrC,MAAO,IAAgB,KAAK,EAAK,CAAG,CACxC,CACO,YAAqB,EAAK,CAC7B,GAAI,MAAM,QAAQ,CAAG,EAAG,CAEpB,OADI,GAAS,GAAI,OAAM,EAAI,MAAM,EACxB,EAAI,EAAG,EAAI,EAAO,OAAQ,IAC/B,EAAO,GAAK,GAAK,EAErB,MAAO,EACV,CACD,GAAI,OAAO,KACP,MAAO,QAAO,KAAK,CAAG,EAE1B,GAAI,GAAO,CAAA,EACX,OAAS,KAAK,GACV,AAAI,GAAe,EAAK,CAAC,GACrB,EAAK,KAAK,CAAC,EAGnB,MAAO,EACX,CAQO,WAAoB,EAAK,CAC5B,OAAQ,MAAO,QACN,SACD,MAAO,MAAK,MAAM,KAAK,UAAU,CAAG,CAAC,MACpC,YACD,MAAO,cAEP,MAAO,GAEnB,CAEO,YAAmB,EAAK,CAI3B,OAHI,GAAI,EACJ,EAAM,EAAI,OACV,EACG,EAAI,GAAK,CAEZ,GADA,EAAW,EAAI,WAAW,CAAC,EACvB,GAAY,IAAM,GAAY,GAAI,CAClC,IACA,QACH,CACD,MAAO,EACV,CACD,MAAO,EACX,CAMO,WAA6B,EAAM,CACtC,MAAI,GAAK,QAAQ,GAAG,IAAM,IAAM,EAAK,QAAQ,GAAG,IAAM,GAC3C,EACJ,EAAK,QAAQ,KAAM,IAAI,EAAE,QAAQ,MAAO,IAAI,CACvD,CAMO,YAA+B,EAAM,CACxC,MAAO,GAAK,QAAQ,MAAO,GAAG,EAAE,QAAQ,MAAO,GAAG,CACtD,CA+BO,YAAsB,EAAK,CAC9B,GAAI,IAAQ,OACR,MAAO,GAEX,GAAI,GACA,GAAI,MAAM,QAAQ,CAAG,GACjB,OAAS,GAAM,EAAG,EAAM,EAAI,OAAQ,EAAM,EAAK,IAC3C,GAAI,GAAa,EAAI,EAAI,EACrB,MAAO,WAIV,MAAO,IAAQ,UAGpB,OAFI,GAAU,GAAY,CAAG,EACzB,EAAgB,EAAQ,OACnB,EAAI,EAAG,EAAI,EAAe,IAC/B,GAAI,GAAa,EAAI,EAAQ,GAAG,EAC5B,MAAO,IAKvB,MAAO,EACX,CACA,YAAoC,EAAS,EAAM,CAC/C,GAAI,GAAe,CAAC,CAAO,EAC3B,OAAS,KAAO,GAAM,CAClB,GAAI,GAAQ,MAAO,GAAK,IAAS,SAAW,KAAK,UAAU,EAAK,GAAM,KAAM,CAAC,EAAI,EAAK,GACtF,AAAI,MAAO,IAAU,aACjB,EAAa,KAAK,EAAM,KAAO,CAAK,CAE3C,CACD,MAAO,GAAa,KAAK;AAAA,CAAI,CACjC,CACA,GAAI,IAA4B,SAAU,EAAQ,CAC9C,GAAU,EAAY,CAAM,EAC5B,WAAoB,EAAS,EAAM,EAAO,EAAW,EAAM,CACvD,GAAI,GAAa,KAAK,YAClB,EAAQ,EAAO,KAAK,KAAM,GAA2B,EAAS,CAAE,KAAM,EAAM,MAAO,EAAO,UAAW,EAAW,KAAM,CAAM,CAAA,CAAC,GAAK,KACtI,SAAM,KAAO,EACb,EAAM,MAAQ,EACd,EAAM,UAAY,EAClB,EAAM,KAAO,EACb,OAAO,eAAe,EAAO,EAAW,SAAS,EACjD,EAAM,QAAU,GAA2B,EAAS,CAAE,KAAM,EAAM,MAAO,EAAO,UAAW,EAAW,KAAM,CAAM,CAAA,EAC3G,CACV,CACD,MAAO,EACX,EAAE,KAAK,ECxKI,EAAiB,GACjB,GAAY,EAQnB,GAAS,CACT,IAAK,SAAU,EAAK,EAAK,EAAU,CAC/B,SAAI,GAAO,KAAK,MACT,CAAE,YAAa,EACzB,EACD,OAAQ,SAAU,EAAK,EAAK,EAAU,CAClC,GAAI,GAAU,EAAI,GAClB,aAAO,GAAI,GACJ,CAAE,YAAa,EAAU,QAAS,CAAO,CACnD,EACD,QAAS,SAAU,EAAK,EAAK,EAAU,CACnC,GAAI,GAAU,EAAI,GAClB,SAAI,GAAO,KAAK,MACT,CAAE,YAAa,EAAU,QAAS,CAAO,CACnD,EACD,KAAM,SAAU,EAAK,EAAK,EAAU,CAIhC,GAAI,GAAU,GAAkB,EAAU,KAAK,IAAI,EACnD,AAAI,GACA,GAAU,EAAW,CAAO,GAEhC,GAAI,GAAgB,EAAe,EAAU,CAAE,GAAI,SAAU,KAAM,KAAK,IAAM,CAAA,EAAE,QAChF,SAAe,EAAU,CAAE,GAAI,MAAO,KAAM,KAAK,KAAM,MAAO,CAAa,CAAE,EACtE,CAAE,YAAa,EAAU,QAAS,CAAO,CACnD,EACD,KAAM,SAAU,EAAK,EAAK,EAAU,CAChC,GAAI,GAAc,GAAkB,EAAU,KAAK,IAAI,EAEvD,SAAe,EAAU,CAAE,GAAI,MAAO,KAAM,KAAK,KAAM,MAAO,EAAW,CAAW,CAAG,CAAA,EAChF,CAAE,YAAa,EACzB,EACD,KAAM,SAAU,EAAK,EAAK,EAAU,CAChC,MAAO,CAAE,YAAa,EAAU,KAAM,GAAW,EAAI,GAAM,KAAK,KAAK,EACxE,EACD,KAAM,SAAU,EAAK,EAAK,EAAU,CAChC,YAAK,MAAQ,EAAI,GACV,CAAE,YAAa,EACzB,CACL,EAEI,GAAS,CACT,IAAK,SAAU,EAAK,EAAG,EAAU,CAC7B,MAAI,IAAU,CAAC,EACX,EAAI,OAAO,EAAG,EAAG,KAAK,KAAK,EAG3B,EAAI,GAAK,KAAK,MAGX,CAAE,YAAa,EAAU,MAAO,CAAC,CAC3C,EACD,OAAQ,SAAU,EAAK,EAAG,EAAU,CAChC,GAAI,GAAc,EAAI,OAAO,EAAG,CAAC,EACjC,MAAO,CAAE,YAAa,EAAU,QAAS,EAAY,GACxD,EACD,QAAS,SAAU,EAAK,EAAG,EAAU,CACjC,GAAI,GAAU,EAAI,GAClB,SAAI,GAAK,KAAK,MACP,CAAE,YAAa,EAAU,QAAS,CAAO,CACnD,EACD,KAAM,GAAO,KACb,KAAM,GAAO,KACb,KAAM,GAAO,KACb,KAAM,GAAO,IACjB,EASO,YAA2B,EAAU,EAAS,CACjD,GAAI,GAAW,GACX,MAAO,GAEX,GAAI,GAAyB,CAAE,GAAI,OAAQ,KAAM,CAAO,EACxD,SAAe,EAAU,CAAsB,EACxC,EAAuB,KAClC,CAeO,WAAwB,EAAU,EAAW,EAAmB,EAAgB,EAA2B,EAAO,CAcrH,GAbI,IAAsB,QAAU,GAAoB,IACpD,IAAmB,QAAU,GAAiB,IAC9C,IAA8B,QAAU,GAA4B,IACpE,IAAU,QAAU,GAAQ,GAC5B,GACA,CAAI,MAAO,IAAqB,WAC5B,EAAkB,EAAW,EAAG,EAAU,EAAU,IAAI,EAGxD,GAAU,EAAW,CAAC,GAI1B,EAAU,OAAS,GAAI,CACvB,GAAI,GAAc,CAAE,YAAa,GACjC,GAAI,EAAU,KAAO,MACjB,SAAY,YAAc,EAAU,MAC7B,EAEN,GAAI,EAAU,KAAO,UACtB,SAAY,YAAc,EAAU,MACpC,EAAY,QAAU,EACf,EAEN,GAAI,EAAU,KAAO,QAAU,EAAU,KAAO,OACjD,SAAY,YAAc,GAAkB,EAAU,EAAU,IAAI,EAChE,EAAU,KAAO,QACjB,GAAY,QAAU,GAEnB,EAEN,GAAI,EAAU,KAAO,OAAQ,CAE9B,GADA,EAAY,KAAO,GAAW,EAAU,EAAU,KAAK,EACnD,EAAY,OAAS,GACrB,KAAM,IAAI,GAAe,wBAAyB,wBAAyB,EAAO,EAAW,CAAQ,EAEzG,SAAY,YAAc,EACnB,CACV,KACI,IAAI,EAAU,KAAO,SACtB,SAAY,QAAU,EACtB,EAAY,YAAc,KACnB,EAEN,GAAI,EAAU,KAAO,OACtB,SAAU,MAAQ,EACX,EAGP,GAAI,EACA,KAAM,IAAI,GAAe,uEAAwE,uBAAwB,EAAO,EAAW,CAAQ,EAGnJ,MAAO,GAGlB,KACI,CACD,AAAK,GACD,GAAW,EAAW,CAAQ,GAElC,GAAI,GAAO,EAAU,MAAQ,GACzB,EAAO,EAAK,MAAM,GAAG,EACrB,EAAM,EACN,EAAI,EACJ,EAAM,EAAK,OACX,EAAuB,OACvB,EAAM,OACN,EAAmB,OAOvB,IANA,AAAI,MAAO,IAAqB,WAC5B,EAAmB,EAGnB,EAAmB,KAEV,CAKT,GAJA,EAAM,EAAK,GACP,GAAO,EAAI,QAAQ,GAAG,GAAK,IAC3B,GAAM,GAAsB,CAAG,GAE/B,GACC,IAAO,aACH,GAAO,aAAe,EAAI,GAAK,EAAK,EAAI,IAAM,eACnD,KAAM,IAAI,WAAU,+OAA+O,EAgBvQ,GAdI,GACI,IAAyB,QACzB,CAAI,EAAI,KAAS,OACb,EAAuB,EAAK,MAAM,EAAG,CAAC,EAAE,KAAK,GAAG,EAE3C,GAAK,EAAM,GAChB,GAAuB,EAAU,MAEjC,IAAyB,QACzB,EAAiB,EAAW,EAAG,EAAU,CAAoB,GAIzE,IACI,MAAM,QAAQ,CAAG,EAAG,CACpB,GAAI,IAAQ,IACR,EAAM,EAAI,WAET,CACD,GAAI,GAAqB,CAAC,GAAU,CAAG,EACnC,KAAM,IAAI,GAAe,0HAA2H,qCAAsC,EAAO,EAAW,CAAQ,EAEnN,AAAI,GAAU,CAAG,GAClB,GAAM,CAAC,CAAC,EAEf,CACD,GAAI,GAAK,EAAK,CACV,GAAI,GAAqB,EAAU,KAAO,OAAS,EAAM,EAAI,OACzD,KAAM,IAAI,GAAe,mFAAoF,gCAAiC,EAAO,EAAW,CAAQ,EAE5K,GAAI,GAAc,GAAO,EAAU,IAAI,KAAK,EAAW,EAAK,EAAK,CAAQ,EACzE,GAAI,EAAY,OAAS,GACrB,KAAM,IAAI,GAAe,wBAAyB,wBAAyB,EAAO,EAAW,CAAQ,EAEzG,MAAO,EACV,CACJ,SAEO,GAAK,EAAK,CACV,GAAI,GAAc,GAAO,EAAU,IAAI,KAAK,EAAW,EAAK,EAAK,CAAQ,EACzE,GAAI,EAAY,OAAS,GACrB,KAAM,IAAI,GAAe,wBAAyB,wBAAyB,EAAO,EAAW,CAAQ,EAEzG,MAAO,EACV,CAKL,GAHA,EAAM,EAAI,GAGN,GAAqB,EAAI,GAAQ,EAAC,GAAO,MAAO,IAAQ,UACxD,KAAM,IAAI,GAAe,+CAAgD,8BAA+B,EAAO,EAAW,CAAQ,CAEzI,CACJ,CACL,CAeO,WAAoB,EAAU,EAAO,EAAmB,EAAgB,EAA2B,CAGtG,GAFI,IAAmB,QAAU,GAAiB,IAC9C,IAA8B,QAAU,GAA4B,IACpE,GACI,CAAC,MAAM,QAAQ,CAAK,EACpB,KAAM,IAAI,GAAe,kCAAmC,uBAAuB,EAG3F,AAAK,GACD,GAAW,EAAW,CAAQ,GAGlC,OADI,GAAU,GAAI,OAAM,EAAM,MAAM,EAC3B,EAAI,EAAG,EAAW,EAAM,OAAQ,EAAI,EAAU,IAEnD,EAAQ,GAAK,EAAe,EAAU,EAAM,GAAI,EAAmB,GAAM,EAA2B,CAAC,EACrG,EAAW,EAAQ,GAAG,YAE1B,SAAQ,YAAc,EACf,CACX,CAUO,YAAsB,EAAU,EAAW,EAAO,CACrD,GAAI,GAAkB,EAAe,EAAU,CAAS,EACxD,GAAI,EAAgB,OAAS,GACzB,KAAM,IAAI,GAAe,wBAAyB,wBAAyB,EAAO,EAAW,CAAQ,EAEzG,MAAO,GAAgB,WAC3B,CAQO,YAAmB,EAAW,EAAO,EAAU,EAAsB,CACxE,GAAI,MAAO,IAAc,UAAY,IAAc,MAAQ,MAAM,QAAQ,CAAS,EAC9E,KAAM,IAAI,GAAe,6BAA8B,0BAA2B,EAAO,EAAW,CAAQ,EAE3G,GAAK,GAAO,EAAU,IAGtB,IAAI,MAAO,GAAU,MAAS,SAC/B,KAAM,IAAI,GAAe,4CAA6C,yBAA0B,EAAO,EAAW,CAAQ,EAEzH,GAAI,EAAU,KAAK,QAAQ,GAAG,IAAM,GAAK,EAAU,KAAK,OAAS,EAElE,KAAM,IAAI,GAAe,gDAAiD,yBAA0B,EAAO,EAAW,CAAQ,EAE7H,GAAK,GAAU,KAAO,QAAU,EAAU,KAAO,SAAW,MAAO,GAAU,MAAS,SACvF,KAAM,IAAI,GAAe,wFAAyF,0BAA2B,EAAO,EAAW,CAAQ,EAEtK,GAAK,GAAU,KAAO,OAAS,EAAU,KAAO,WAAa,EAAU,KAAO,SAAW,EAAU,QAAU,OAC9G,KAAM,IAAI,GAAe,mGAAoG,2BAA4B,EAAO,EAAW,CAAQ,EAElL,GAAK,GAAU,KAAO,OAAS,EAAU,KAAO,WAAa,EAAU,KAAO,SAAW,GAAa,EAAU,KAAK,EACtH,KAAM,IAAI,GAAe,mGAAoG,2CAA4C,EAAO,EAAW,CAAQ,EAElM,GAAI,GACL,GAAI,EAAU,IAAM,MAAO,CACvB,GAAI,GAAU,EAAU,KAAK,MAAM,GAAG,EAAE,OACpC,EAAkB,EAAqB,MAAM,GAAG,EAAE,OACtD,GAAI,IAAY,EAAkB,GAAK,IAAY,EAC/C,KAAM,IAAI,GAAe,wDAAyD,4BAA6B,EAAO,EAAW,CAAQ,CAEhJ,SACQ,EAAU,KAAO,WAAa,EAAU,KAAO,UAAY,EAAU,KAAO,QACjF,GAAI,EAAU,OAAS,EACnB,KAAM,IAAI,GAAe,6DAA8D,8BAA+B,EAAO,EAAW,CAAQ,UAG/I,EAAU,KAAO,QAAU,EAAU,KAAO,OAAQ,CACzD,GAAI,GAAgB,CAAE,GAAI,OAAQ,KAAM,EAAU,KAAM,MAAO,QAC3D,EAAQ,GAAS,CAAC,CAAa,EAAG,CAAQ,EAC9C,GAAI,GAAS,EAAM,OAAS,8BACxB,KAAM,IAAI,GAAe,+DAAgE,8BAA+B,EAAO,EAAW,CAAQ,CAEzJ,OArCD,MAAM,IAAI,GAAe,uEAAwE,uBAAwB,EAAO,EAAW,CAAQ,CAuC3J,CAQO,YAAkB,EAAU,EAAU,EAAmB,CAC5D,GAAI,CACA,GAAI,CAAC,MAAM,QAAQ,CAAQ,EACvB,KAAM,IAAI,GAAe,kCAAmC,uBAAuB,EAEvF,GAAI,EAEA,EAAW,EAAW,CAAQ,EAAG,EAAW,CAAQ,EAAG,GAAqB,EAAI,MAE/E,CACD,EAAoB,GAAqB,GACzC,OAAS,GAAI,EAAG,EAAI,EAAS,OAAQ,IACjC,EAAkB,EAAS,GAAI,EAAG,EAAU,MAAS,CAE5D,CACJ,OACM,EAAP,CACI,GAAI,YAAa,GACb,MAAO,GAGP,KAAM,EAEb,CACL,CAmBO,YAAoB,EAAG,EAAG,CAC7B,GAAI,IAAM,EACN,MAAO,GACX,GAAI,GAAK,GAAK,MAAO,IAAK,UAAY,MAAO,IAAK,SAAU,CACxD,GAAI,GAAO,MAAM,QAAQ,CAAC,EAAG,EAAO,MAAM,QAAQ,CAAC,EAAG,EAAG,EAAQ,EACjE,GAAI,GAAQ,EAAM,CAEd,GADA,EAAS,EAAE,OACP,GAAU,EAAE,OACZ,MAAO,GACX,IAAK,EAAI,EAAQ,MAAQ,GACrB,GAAI,CAAC,GAAW,EAAE,GAAI,EAAE,EAAE,EACtB,MAAO,GACf,MAAO,EACV,CACD,GAAI,GAAQ,EACR,MAAO,GACX,GAAI,GAAO,OAAO,KAAK,CAAC,EAExB,GADA,EAAS,EAAK,OACV,IAAW,OAAO,KAAK,CAAC,EAAE,OAC1B,MAAO,GACX,IAAK,EAAI,EAAQ,MAAQ,GACrB,GAAI,CAAC,EAAE,eAAe,EAAK,EAAE,EACzB,MAAO,GACf,IAAK,EAAI,EAAQ,MAAQ,GAErB,GADA,EAAM,EAAK,GACP,CAAC,GAAW,EAAE,GAAM,EAAE,EAAI,EAC1B,MAAO,GAEf,MAAO,EACV,CACD,MAAO,KAAM,GAAK,IAAM,CAC5B,2OC/aA;AAAA;AAAA;AAAA;AAAA,GAOA,GAAI,IAAa,GAAI,SACjB,GAAwB,UAAY,CACpC,WAAgB,EAAK,CACjB,KAAK,UAAY,GAAI,KACrB,KAAK,IAAM,CACd,CACD,MAAO,EACX,EAAC,EACG,GAA8B,UAAY,CAC1C,WAAsB,EAAU,EAAU,CACtC,KAAK,SAAW,EAChB,KAAK,SAAW,CACnB,CACD,MAAO,EACX,EAAC,EACD,YAAmB,EAAK,CACpB,MAAO,IAAW,IAAI,CAAG,CAC7B,CACA,YAA+B,EAAQ,EAAU,CAC7C,MAAO,GAAO,UAAU,IAAI,CAAQ,CACxC,CACA,YAAkC,EAAQ,EAAU,CAChD,EAAO,UAAU,OAAO,EAAS,QAAQ,CAC7C,CAIO,YAAmB,EAAM,EAAU,CACtC,EAAS,UAAS,CACtB,CAIO,YAAiB,EAAK,EAAU,CACnC,GAAI,GAAU,CAAA,EACV,EACA,EAAS,GAAU,CAAG,EAC1B,GAAI,CAAC,EACD,EAAS,GAAI,IAAO,CAAG,EACvB,GAAW,IAAI,EAAK,CAAM,MAEzB,CACD,GAAI,GAAe,GAAsB,EAAQ,CAAQ,EACzD,EAAW,GAAgB,EAAa,QAC3C,CACD,GAAI,EACA,MAAO,GAIX,GAFA,EAAW,CAAA,EACX,EAAO,MAAQ,EAAW,CAAG,EACzB,EAAU,CACV,EAAS,SAAW,EACpB,EAAS,KAAO,KAChB,GAAI,GAAa,UAAY,CACzB,EAAS,CAAQ,CAC7B,EACY,EAAY,UAAY,CACxB,aAAa,EAAS,IAAI,EAC1B,EAAS,KAAO,WAAW,CAAU,CACjD,EACQ,AAAI,MAAO,SAAW,aAClB,QAAO,iBAAiB,UAAW,CAAS,EAC5C,OAAO,iBAAiB,QAAS,CAAS,EAC1C,OAAO,iBAAiB,YAAa,CAAS,EAC9C,OAAO,iBAAiB,UAAW,CAAS,EAC5C,OAAO,iBAAiB,SAAU,CAAS,EAElD,CACD,SAAS,QAAU,EACnB,EAAS,OAAS,EAClB,EAAS,UAAY,UAAY,CAC7B,EAAS,CAAQ,EACjB,aAAa,EAAS,IAAI,EAC1B,GAAyB,EAAQ,CAAQ,EACrC,MAAO,SAAW,aAClB,QAAO,oBAAoB,UAAW,CAAS,EAC/C,OAAO,oBAAoB,QAAS,CAAS,EAC7C,OAAO,oBAAoB,YAAa,CAAS,EACjD,OAAO,oBAAoB,UAAW,CAAS,EAC/C,OAAO,oBAAoB,SAAU,CAAS,EAE1D,EACI,EAAO,UAAU,IAAI,EAAU,GAAI,IAAa,EAAU,CAAQ,CAAC,EAC5D,CACX,CAIO,WAAkB,EAAU,EAAY,CAC3C,AAAI,IAAe,QAAU,GAAa,IAC1C,GAAI,GAAS,GAAW,IAAI,EAAS,MAAM,EAC3C,GAAU,EAAO,MAAO,EAAS,OAAQ,EAAS,QAAS,GAAI,CAAU,EACrE,EAAS,QAAQ,QACjB,EAAW,EAAO,MAAO,EAAS,OAAO,EAE7C,GAAI,GAAO,EAAS,QACpB,MAAI,GAAK,OAAS,GACd,GAAS,QAAU,GACf,EAAS,UACT,EAAS,SAAS,CAAI,GAGvB,CACX,CAEA,YAAmB,EAAQ,EAAK,EAAS,EAAM,EAAY,CACvD,GAAI,IAAQ,EAGZ,CAAI,MAAO,GAAI,QAAW,YACtB,GAAM,EAAI,UAOd,OALI,GAAU,GAAY,CAAG,EACzB,EAAU,GAAY,CAAM,EAE5B,EAAU,GAEL,EAAI,EAAQ,OAAS,EAAG,GAAK,EAAG,IAAK,CAC1C,GAAI,GAAM,EAAQ,GACd,EAAS,EAAO,GACpB,GAAI,GAAe,EAAK,CAAG,GAAK,CAAE,GAAI,KAAS,QAAa,IAAW,QAAa,MAAM,QAAQ,CAAG,IAAM,IAAQ,CAC/G,GAAI,GAAS,EAAI,GACjB,AAAI,MAAO,IAAU,UAAY,GAAU,MAAQ,MAAO,IAAU,UAAY,GAAU,MAAQ,MAAM,QAAQ,CAAM,IAAM,MAAM,QAAQ,CAAM,EAC5I,GAAU,EAAQ,EAAQ,EAAS,EAAO,IAAM,EAAoB,CAAG,EAAG,CAAU,EAGhF,IAAW,GAEP,IACA,EAAQ,KAAK,CAAE,GAAI,OAAQ,KAAM,EAAO,IAAM,EAAoB,CAAG,EAAG,MAAO,EAAW,CAAM,CAAG,CAAA,EAEvG,EAAQ,KAAK,CAAE,GAAI,UAAW,KAAM,EAAO,IAAM,EAAoB,CAAG,EAAG,MAAO,EAAW,CAAM,CAAG,CAAA,EAGjH,KACI,AAAI,OAAM,QAAQ,CAAM,IAAM,MAAM,QAAQ,CAAG,EAC5C,IACA,EAAQ,KAAK,CAAE,GAAI,OAAQ,KAAM,EAAO,IAAM,EAAoB,CAAG,EAAG,MAAO,EAAW,CAAM,CAAG,CAAA,EAEvG,EAAQ,KAAK,CAAE,GAAI,SAAU,KAAM,EAAO,IAAM,EAAoB,CAAG,CAAG,CAAA,EAC1E,EAAU,IAGN,IACA,EAAQ,KAAK,CAAE,GAAI,OAAQ,KAAM,EAAM,MAAO,CAAM,CAAE,EAE1D,EAAQ,KAAK,CAAE,GAAI,UAAW,KAAM,EAAM,MAAO,CAAG,CAAE,EAG7D,CACD,GAAI,GAAC,GAAW,EAAQ,QAAU,EAAQ,QAG1C,OAAS,GAAI,EAAG,EAAI,EAAQ,OAAQ,IAAK,CACrC,GAAI,GAAM,EAAQ,GAClB,AAAI,CAAC,GAAe,EAAQ,CAAG,GAAK,EAAI,KAAS,QAC7C,EAAQ,KAAK,CAAE,GAAI,MAAO,KAAM,EAAO,IAAM,EAAoB,CAAG,EAAG,MAAO,EAAW,EAAI,EAAI,CAAC,CAAE,CAE3G,EACL,CAIO,YAAiB,EAAO,EAAO,EAAY,CAC9C,AAAI,IAAe,QAAU,GAAa,IAC1C,GAAI,GAAU,CAAA,EACd,UAAU,EAAO,EAAO,EAAS,GAAI,CAAU,EACxC,CACX,iJCxJe,OAAO,OAAO,CAAA,EAAI,GAAM,GAAQ,CAC/C,eAAIC,GACJ,UAAIC,EACA,sBACA,wBACJ,CAAC,EC+DD,KAAK9C,IAAa,EAAa,CAC3B,KAAM,mBACN,WAAY,CAAEE,OAAAA,EAAQ8B,SAAAA,EAAUH,UAAAA,EAAWD,OAAAA,EAAQ,uBAAqB,EACxE,MAAO,CAAC,aAAa,EACrB,MAAO,CAAE,eAAgB,MAAO,wBAAyB,QAAS,KAAM,OAAQ,SAAU,CAAE,KAAM,MAAA,CAAS,EAC3G,SAAU,CACN,gBAA0B,CACtB,MAAI,QAAK,GAAG,UAAY,KAAK,iBAAiB,gBAAgB,SAAW,EAG7E,CACJ,EACA,MAAO,CACI,MAAA,CAAA,aACHmB,EACA,GAAIC,EAAY,EAChB,YAAa,CAAC,EACd,iBAAkB,CAAE,cAAe,KAAM,gBAAiB,CAAI,EAAA,KAAM,GAAI,YAAa,EAAG,EACxF,QAAS,CACL,OAAQ,CAAC,CAAa,CAC1B,CAAA,CAER,EACA,SAAU,CACN,KAAK,SAAS,CAClB,EACA,MAAO,CACH,MAAO,CACH,KAAK,SAAS,CAClB,CACJ,EACA,aAAc,CAIV,KAAM,GAAwC,CAC1C,qBAJe,AAAC,GACT,CAAC,KAAK,yBAA2B,CAGlB,EAKnB,MAHkB,CACrB,iBAAkB,GAAkB,mBAAoBD,EAAa,YAAY,iBAAkB,CAAgB,CAAA,CAG3H,EACA,QAAS,CACL,KAAM,WAAW,CACb,KAAK,MAAQ,MAAK,YAAc,KAAK,KACzC,EACA,cAAe,CACN,KAAA,iBAAiB,gBAAkB,EAC5C,EACA,aAAc,CACV,KAAK,MAAM,aAAa,EACxB,KAAK,iBAAmB,CAAE,cAAe,CAAE,QAAS,CAAC,CAAA,EAAK,gBAAiB,CAAC,EAAG,KAAM,GAAI,YAAa,EAAG,CAC7G,EACA,KAAM,oBAAoB,CACtB,GAAI,GAAY,CAAE,gBAAiB,CAAA,GACzB,EAAA,KAAO,KAAK,iBAAiB,KAC7B,EAAA,YAAc,KAAK,iBAAiB,YACpC,EAAA,cAAgB,KAAK,iBAAiB,cAAc,KAC9D,KAAK,iBAAiB,gBAAgB,QAAQ,AAAC,GAAY,CAC7C,EAAA,gBAAgB,KAAK,EAAQ,IAAI,CAAA,CAC9C,EACK,KAAA,GAAW,CAAE,KAAM,EAAW,KAAM,EAAS,KAAK,QAAQ,GAC1D,KAAA,MAAK,MACN,KAAK,6DAAqE,CAAQ,EAClF,KAAK,KAAO,IAAiC,CAC1C,KAAK,YAAc,EAAW,KAAK,YAAa,EAAS,IAAI,EAC7D,EAAS,KAAK,QAAQ,EACtB,KAAK,YAAY,CAAA,CACpB,EACA,MAAM,IAAM,CAAA,CAAE,CACvB,CACJ,CACJ,CAAC,EA3JgB9B,GAAS,CAAC,IAAK,SAAA,MAAA,qDAEVZ,GAAA,CAAA,MAAM,sDAWEe,GAAO,CAAC,IAAK,OAAA,MAAA,2BAKrBC,GAAA,CAAA,MAAM,sDAEEC,GAAO,CAAC,IAAK,OAAA,MAAA,2BAIrBC,GAAA,CAAA,MAAM,+CAEEC,GAAS,CAAC,IAAK,SAAA,MAAA,+BAM5B,MAAM,uBAgBMhB,GAAA,CAAA,MAAM,gDACD,MAAM,yBACAC,GAAA,CAAA,MAAA,0PA1DvBC,GAAW,EAAAC,EAAA,EAAA,CAAE,MAAK,WAAgC,MAAOC,EAAE,EAAuB,aAAA,MAAA,QAAA,EAAG,QAAO,EAAI,wBAAG,MAAA,GAAA,SAAA,EACjG,EAAA,CAAA,OACPC,EAIU,IAAA,CAAAC,EAHU,EACiC,CAAA,MAAA,8CAAA,EAAA,CAAA,MAAAD,EAAA,IAAA,0DAgE9C,CAAA,EAAA,OACPA,EAA4F,IAAA,CAA9EC,EAAA,EAAA,CAA2B,MAAO,0BAAsB,MAAK,EAAE,GAAW,eAAA,EAAA,QAAA,EAAA,WACwC,EAAA,KAAA,EAAA,CAAA,QAAA,SAAA,CAAA,EAAlHA,EAAA,EAAA,CAAgC,MAAO,+BAAoB,MAAU,EAAA,GAAA,aAAA,EAAiB,SAAO,EAAA,eAAA,QAAA,EAAA,oEA9D/GD,EA6BO,IAAA,CAAAE,EA5BH,OAeME,GAAA,CAAAF,EAdF,MAYOV,GAZP,CAUMU,EAAA,OAAAI,GAAA,CARWL,EAAA,EAAA,CACT,GAAA,OAEuD,MAAAmC,EAAA,CAAA,oBAAA,CAAA,YAAA,EAAA,GAAA,iBAAA,KAAA,UAAA,EAAA,GAAA,iBAAA,KAAA,MADzC,CAAA,CAAA,EAAA,WAAA,EAAA,GAAA,iBAAA,KAAA,6BAAd,EAA8C,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,GAAA,iBAAA,KAAA,OAAA,GAI7C,eAAI,CAAA,KAAA,EAAA,EACJ,OAAM,iBAAE,GAAK,iBAAA,KAAA,OAAA,GAAA,SAAA,EAAA,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,MAAA,SAAA,EAElB,EAAA,KAAA,EAAA,CAAA,aAAoF,OAApF,CAAA,EAAAlC,EAAA,QAAAK,GAAAJ,EAAA,EAAA,GAAA,aAAA,CAAA,EAAA,KAAA,CAAA,CAEJ,CAAA,EAAAF,EAA4B,EAAQ,CAAE,MAAO,SAA2B,MAAyB,EAAA,GAAA,iBAAA,KAAA,0BAAA,CAAA,UAAA,EAAA,GAAA,aAAA,CAAA,gDAErG,CAAA,EAAAC,EACI,MAGOM,GAHP,CAC4FN,EAAA,OAAAT,GAAA,CAApEQ,EAAA,EAAA,CAAC,GAAA,OAAA,MAAA,oIACoE,EAAA,KAAA,EAAA,CAAA,YAAA,CAAA,EAAAC,EAAA,QAAAO,GAAAN,EAAA,EAAA,GAAA,oBAAA,CAAA,EAAA,CAAA,GAGjG,CAAA,EAAAD,EACI,MAGOQ,GAHP,CAC2JR,EAAA,OAAAR,GAAA,CAAAO,EAA1I,EAAQ,CAAC,GAAA,SAAA,MAAA,gEAAoE,sBAAY,EAAA,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,iBAAA,cAAA,GAAG,OAAO,GAAkB,QAAY,EAAA,eAAA,YAAA,MAC9I,EAAA,KAAA,EAAA,CAAA,aAAwG,SAAxG,CAAA,EAAAC,EAAA,QAAAS,GAAAR,EAAA,EAAA,GAAA,iCAAA,CAAA,EAAA,CAAA,KAKZ,EAAA,GAAA,EAAAD,EACI,MA0BMU,GAAA,CAAAV,EAxBQ,MAAiBP,GAAa,CADxC,EAAA,iBAAA,cAAAE,GAAA,EAAAC,EAAA,EAAA,CAEK,IAAK,EACN,MAAM,EAAgC,iBAAA,cAAA,QAC9B,MAAA,iCAAA,UAAA,EAAA,iBAAA,gBACP,qBAAgB,EAAA,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,iBAAA,gBAAA,GAChB,WAAY,GACb,aAAQ,EAAU,aAAA,MAAA,SACV,QAAS,WAAA,QAAA,EAAA,QAChB,mBAAoB,SAAa,GAAkB,AAAA,GAAA,EAAA,QAAA,GAAA,mBAAA,EAAA,aAAA,kBAEzC,EAAA,CAAA,MAAAE,EAAA,IAAA,wCAGA,CAAA,EAAA,OACPA,EAKM,IAAA,CAAAE,EAJF,MAGOW,GAHP,CAC8BX,EAAA,OAAAN,GAAA,CAC1BkB,GAAAb,EAAiB,EAAmB,CAAA,MAAA,sDAAoC,sBAAe,EAAA,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,QAAA,OAAA,MAAA,GAAA,YAAA,EAAA,GAAA,eAAA,sDAInGD,EAAmC,IAAA,CACnCC,EAAyF,EAAA,CAAA,cAAA,UAAA,CAAA,EAAAA,EAA3E,EAAM,CAAE,MAAM,OAAsB,OAAK,EAAE,GAAA,aAAA,EAAA,MAAAF,EAAA,EAAA,aAAA,MAAA,SAAA,qLCT7E,KAAKZ,IAAa,EAAa,CAC3B,WAAY,CAAE6B,UAAAA,SAAWD,EAAQ,uBAAqB,EACtD,MAAO,CAAE,eAAgB,MAAO,uBAAwB,QAAS,eAAgB,MAAO,EACxF,MAAO,CACI,MAAA,CAAA,aACHmB,EACA,GAAIC,EAAY,EAChB,YAAa,CAAC,EACd,QAAS,CACL,OAAQ,CAAC,CAAa,CAC1B,CAAA,CAER,EACA,SAAU,CACN,KAAK,YAAc,KAAK,cAC5B,EACA,MAAO,CACH,gBAAiB,CACb,KAAK,YAAc,KAAK,cAC5B,CACJ,EACA,aAAc,CAIV,KAAM,GAAwC,CAC1C,qBAJe,AAAC,GACT,CAAC,KAAK,wBAA0B,CAGjB,EAKnB,MAHkB,CACrB,YAAa,GAAkB,cAAeD,EAAa,YAAY,YAAa,CAAgB,CAAA,CAG5G,CACJ,CAAC,EAxFY9B,GAAS,CAAC,IAAK,SAAA,MAAA,qDAEVZ,GAAA,CAAA,MAAM,sDAWEe,GAAO,CAAC,IAAK,OAAA,MAAA,2BAKrBC,GAAA,CAAA,MAAM,sDAEEC,GAAO,CAAC,IAAK,OAAA,MAAA,+BAWd,MAAM,iCACI,yBACCE,GAAA,CAAA,MAAA,+LAjChCd,GAuBO,EAAAQ,EAAAgB,EAAA,KAAA,CAAAnB,EAtBH,OAeME,GAAA,CAAAF,EAdF,MAYOV,GAZP,CAUMU,EAAA,OAAAI,GAAA,CARWL,EAAA,EAAA,CACT,GAAA,OAE+D,MAAAmC,EAAA,CAAA,oBAAA,CAAA,YAAA,EAAA,GAAA,YAAA,KAAA,UAAA,EAAA,GAAA,YAAA,KAAA,wEAD/D,EAAyC,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,GAAA,YAAA,KAAA,OAAA,GAIxC,eAAI,CAAA,KAAA,EAAA,EACJ,OAAM,iBAAE,GAAK,YAAA,KAAA,OAAA,GAAA,SAAA,EAAA,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,MAAA,SAAA,EAElB,EAAA,KAAA,EAAA,CAAA,aAAoF,OAApF,CAAA,EAAAlC,EAAA,QAAAK,GAAAJ,EAAA,EAAA,GAAA,aAAA,CAAA,EAAA,KAAA,CAAA,CAEJ,CAAA,EAAAF,EAA4B,EAAQ,CAAE,MAAO,SAAsB,MAAyB,EAAA,GAAA,YAAA,KAAA,0BAAA,CAAA,UAAA,EAAA,GAAA,aAAA,CAAA,gDAEhG,CAAA,EAAAC,EACI,MAGOM,GAHP,CACuFN,EAAA,OAAAT,GAAA,CAA/DQ,EAAA,EAAA,CAAC,GAAA,OAAA,MAAA,0HACoE,EAAA,KAAA,EAAA,CAAA,YAAA,CAAA,EAAAC,EAAA,QAAAO,GAAAN,EAAA,EAAA,GAAA,oBAAA,CAAA,EAAA,CAAA,KAIrG,EAAA,GAAA,EAAAD,EACI,MAgBMQ,GAAA,CAhBKR,EAAA,MAAA,CAAgC,MAAK,+BAAA,MAAAH,EAAA,EAAA,aAAA,MAAA,QAAA,CAC5C,EAAA,CAAiBE,EAAA,EAAA,CAAkC,MAAO,iCAAwB,MAAW,EAAA,eAAA,UAAA,EAAA,YAAA,eAA6B,qBAAgB,EAAA,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,YAAA,eAAA,GAAE,WAAY,GAAgB,aAAS,OAAA,QAAA,EAAA,QAAU,mBAAoB,SAAa,GAAkB,AAAA,GAAA,EAAA,QAAA,GAAA,mBAAA,EAAA,aAAA,kBAC/N,EAAA,CAAA,MAAAD,EAAA,IAAA,uCAGA,CAAA,EAAA,OACPA,EAKM,IAAA,CAAAE,EAJF,MAGOR,GAHP,CAC8BQ,EAAA,OAAAS,GAAA,CAC1BC,GAAAX,EAAiB,EAAmB,CAAA,MAAA,sDAAoC,sBAAe,EAAA,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,QAAA,OAAA,MAAA,GAAA,YAAA,EAAA,GAAA,eAAA,sDAInGD,EAAmC,IAAA,CACnCC,EAA2E,EAAA,CAAA,cAAA,UAAA,CAAA,EAAAA,EAA7D,EAAM,CAAE,MAAM,OAAqB,OAAuB,EAAA,GAAA,aAAA,EAAA,MAAA,CAAA,aAAA,MAAA,6HC6BxF,KAAKd,IAAa,EAAa,CAC3B,WAAY,CAAEkD,QAAAA,CAAQ,EACtB,MAAO,CAAE,YAAa,CAAE,KAAM,MAAO,SAAU,EAAQ,EAAA,YAAa,CAAE,KAAM,MAAO,SAAU,EAAK,EAAG,gCAAiC,OAAQ,EAC9I,MAAO,CAAC,UAAW,qBAAqB,EACxC,MAAO,CACI,MAAA,CAAA,yBACHC,EACA,YAAa,CAAC,EACd,YAAa,CAAC,EACd,eAAgB,GAChB,cAAe,EAAA,CAEvB,EACA,SAAU,CACN,KAAK,kBAAkB,EACvB,KAAK,YAAc,KAAK,YACxB,KAAK,YAAc,KAAK,WAC5B,EACA,MAAO,CACH,aAAc,CACV,KAAK,YAAc,KAAK,WAC5B,EACA,aAAc,CACV,KAAK,YAAc,KAAK,WAC5B,CACJ,EACA,QAAS,CACL,mBAAoB,CACZ,AAAC,KAAK,gBACN,MAAK,eAAiB,QAE9B,EACA,YAAY,EAAO,EAAW,CAC1B,EAAM,aAAa,QAAQ,OAAQ,EAAU,MAAM,GAAG,EAAE,EAAE,EAC1D,EAAM,aAAa,WAAa,OAChC,EAAM,aAAa,cAAgB,OAEnC,KAAK,MAAM,GAAG,KAAa,UAAU,IAAI,qBAAqB,CAClE,EACA,gBAAgB,EAAW,CAEvB,KAAK,MAAM,GAAG,KAAa,UAAU,OAAO,qBAAqB,CACrE,EACA,iBAAiB,EAAU,EAAW,CAElC,EAAW,KAAK,MAAM,GAAG,KAAa,UAAU,IAAI,kBAAkB,EAAI,KAAK,MAAM,GAAG,KAAa,UAAU,OAAO,kBAAkB,CAC5I,EACA,kBAAkB,EAAW,CAEzB,KAAK,MAAM,GAAG,KAAa,UAAU,IAAI,uBAAuB,EAChE,WAAW,IAAM,CAEb,KAAK,MAAM,GAAG,KAAa,UAAU,OAAO,uBAAuB,GACpE,GAAG,CACV,EACA,WAAW,EAAQ,EAAQ,CACvB,GAAI,EAAO,OACP,OAAS,GAAI,EAAG,EAAI,EAAO,MAAM,OAAQ,IACrC,GAAI,EAAO,YAAc,EAAO,MAAM,GAAG,UAC9B,MAAA,GAIZ,MAAA,EACX,EACA,OAAO,EAAO,EAAW,EAAe,CACpC,EAAM,eAAe,EACrB,EAAM,gBAAgB,EAEtB,KAAK,MAAM,GAAG,KAAa,UAAU,OAAO,kBAAkB,EAC9D,GAAI,GAAO,EAAM,aAAa,QAAQ,MAAM,EACxC,EAAc,GACb,KAAA,iCAAmC,GAAc,KAAK,WAAW,KAAK,YAAY,GAAO,CAAa,GAC3G,AAAI,GAAe,GACX,GAAc,KAAK,iBAAmB,MACxB,GAAA,KAAK,gBAAkB,IAErC,AAAA,EAAc,KAAK,gBAAgB,QAAQ,KAAK,YAAY,EAAK,GAAK,GACtE,KAAK,kBAAkB,CAAS,EAEhC,GAAc,KAAK,gBAAgB,KAAK,KAAK,YAAY,EAAK,EAC9D,KAAK,MAAM,UAAW,EAAO,KAAK,YAAY,GAAO,CAAa,IAGtE,KAAK,kBAAkB,CAAS,CAExC,EACA,mBAAmB,EAAM,EAAM,CACpB,GAAA,KAAa,EAAK,KAAK,gBAAkB,CAAA,EAAM,EAAK,KAAK,gBAAgB,OAAO,EAAK,CAAC,EAC7F,KAAK,MAAM,qBAAqB,CACpC,CACJ,CACJ,CAAC,EAhKWlC,GAAA,CAAuB,GAAA,uBAAA,MAAA,gBACnBZ,GAAA,CAAwB,GAAA,wBAAA,MAAA,gGAWZ,WAA0B,KACIU,EAAA,IAAA,CAAA,MAAA,cAAA,KAAA,EAAA,iCAQ1CO,GAAA,CAAwB,GAAA,wBAAA,MAAA,kFAmBP,SAAM,cAAA,aAAA,EACDE,GAAA,CAAA,MAAM,iHAGT,IAAK,EAAA,MAAA,qIA3ChCd,GAmBM,EAAAQ,EAAA,MAAAD,GAAA,CAAAF,EAdQ,MAJDV,GAAA,CAAAS,EACW,EACgC,CAAA,MAAA,kCAAA,EAAA,CAAA,MAAAD,EAAA,IAAA,uDAGpD,CAAA,EAWcE,EAAA,MAAAI,GAAA,CAVKL,EAAA,EAAA,CAAwF,MAAO,uFAAA,QAAA,EAAA,WAC/F,EAAA,CAAA,MAAAD,EAAA,IAAA,iDACA,CAAA,EAAA,OACPA,EAKM,AAAA,GAAA,CAAAE,EALgB,MAAS,CAAS,GAAG,UAAuB,EAAA,MAAQ,IAAK,UAAC,EAAA,MAA4B,MAAA,4BAAkB,UAAS,OAAqD,YAAO,AAAA,GAAE,EAAe,YAAA,EAAA,UAAa,EAAe,KAAA,EAAA,UAAA,AAAA,GAAA,EAAA,gBAAA,UAAA,EAAA,KAAA,CAC5O,EAAA,CACAM,GAAAN,EACI,MAAwCT,GAAA,CAAAS,EAAA,OAAA,KAAAC,EAAA,EAAA,OAAA,IAAA,EAAA,CAAA,mCAOhE,CAAA,EAAAD,EAKc,MAJDO,GAAA,CAAAR,EACW,EACgC,CAAA,MAAA,kCAAA,EAAA,CAAA,MAAAD,EAAA,IAAA,uDAGpD,CAAA,EA8BcE,EAAA,MAAAQ,GAAA,CA7BKT,EAAA,EAAA,CAAwF,MAAO,uFAAA,QAAA,EAAA,WAC/F,EAAA,CAAA,MAAAD,EAAA,IAAA,iDACA,CAAA,EAAA,OACPA,EAwBM,AAAA,GAAA,CAvBIE,EAAA,MAAA,CACL,MAAE,8BACF,GAAG,UAAuB,EAAA,MAC1B,cAAI,EAAE,MACN,UAAQ,EAAQ,OAAA,EAAA,UAAA,EAAA,MAAA,EAAA,MAAA,EAChB,WAAS,EAAU,IAAA,GAAA,GAAAqC,EAAA,IAAA,CAAA,EAAgB,CAAA,SAAA,CAAA,GACnC,YAASA,EAAA,AAAA,GAAU,EAAgB,iBAAA,GAAA,UAAA,EAA6B,KAAC,EAAK,CAAA,SAAA,CAAA,EAAA,YAAAA,EAAA,AAAA,GAAA,EAAA,iBAAA,GAAA,UAAA,EAAA,KAAA,EAAA,CAAA,SAAA,CAAA,CAEvE,EAAA,CAAArC,EACI,MAEOS,GAFP,CAAAT,EAGyD,OAAcU,GAAAT,EAAqB,EAAC,OAAA,IAAc,EAAE,CAAA,EAAA,EAAA,OAAA,EAA7G,iBAA2H,EAA3H,OAA2H,EAAA,gBAAA,OAAA,EAAAN,GAAA,EAAAQ,EAAA,IAAAV,EAAA,GACA4B,EAAiB,GAAA,EAAA,EAAA,EAAA,OAAA,EAA5I,iBAOM,EAAA,OAAA,EAAA,gBAAA,OAAA,EAAA1B,GAAA,EAAAQ,EAAA,MAAA,CAPD,IAAK,EAAA,MAAA+B,EAAA,CAAA,iCAAA,CAAA,SAAA,EAAA,OAAA,EAAA,gBAAA,OAAA,CAAA,CAAA,CAAA,aACNf,EAKO,KAAAC,EAAA,EAAA,OAAA,EAAA,gBAAA,CAAA,EAAA,IALIzB,GAAA,EAAkCQ,EAAA,OAAA,CAAkE,MAAK,kCAAA,IAAA,CAChH,EAAA,CAAAH,EAG+B,UAAgBC,EAAM,EAAA,IAAA,EAAA,CAAA,EAAA,EAAA,OAAA,EAArD,gBAAwN,OAAA,EAAAN,GAAA,EAAAC,EAAA,EAAA,CAA7J,IAAI,EAAgB,KAAK,eAA0E,MAAK,wEAAA,QAAAyC,EAAA,AAAA,GAAA,EAAA,mBAAA,EAAA,OAAA,CAAA,EAAA,CAAA,MAAA,CAAA,gDAG7ChB,EAAiB,GAAA,EAAA,EAAA,EAAA,OAAA,EAA/I,iBAAoQ,EAAA,OAAA,EAAA,gBAAA,OAAA,EAAA1B,GAAA,EAAAC,EAAA,EAAA,CAA5P,IAAI,EAA8B,KAAK,6BAAiK,MAAK,wEAAA,QAAAyC,EAAA,AAAA,GAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,MAAA,CAAA,oGC+BrP,KAAKpD,IAAa,EAAa,CAC3B,WAAY,CAAEE,OAAAA,EAAQ,WAAS,mBAAiB8B,SAAAA,EAAUkB,QAAAA,CAAQ,EAClE,MAAO,CAAC,aAAa,EACrB,MAAO,CAAE,uBAAwB,QAAS,KAAM,CAAE,KAAM,OAAQ,SAAU,EAAA,EAAQ,SAAU,CAAE,KAAM,MAAA,EAAU,sBAAuB,CAAE,KAAM,OAAQ,SAAU,EAAA,EAAQ,SAAU,OAAQ,EACzL,SAAU,CACN,gBAA0B,CACtB,MAAI,QAAK,GAAG,UAAY,KAAK,YAAY,eAAe,OAAS,EAGrE,CACJ,EACA,MAAO,CACI,MAAA,CAAA,aACHH,EACA,GAAIC,EAAY,EAChB,YAAa,CAAE,eAAgB,GAAI,KAAM,GAAI,YAAa,EAAG,EAC7D,YAAa,CAAC,EACd,WAAY,EACZ,cAAe,GACf,QAAS,CAAC,EACV,YAAa,CAAE,QAAS,EAAG,EAC3B,YAAa,CAAE,QAAS,EAAG,EAC3B,eAAgB,CAAC,CAAA,CAEzB,EACA,SAAU,CACN,KAAK,SAAS,EACd,KAAK,gBAAgB,CACzB,EACA,MAAO,CACH,MAAO,CACH,KAAK,SAAS,EACd,KAAK,gBAAgB,CACzB,CACJ,EACA,QAAS,CACL,KAAM,WAAW,CACb,KAAK,MAAQ,MAAK,YAAc,KAAK,MAChC,KAAA,MAAQ,MAAK,eAAiB,KAAK,MAAM,KAAK,UAAU,KAAK,KAAK,cAAc,CAAC,EAC1F,EACA,aAAc,CACV,KAAK,YAAc,KACnB,KAAK,YAAc,KACnB,KAAK,YAAc,KACnB,KAAK,MAAM,aAAa,CAC5B,EACA,UAAW,CACF,KAAA,YACT,EACA,cAAe,CACN,KAAA,YACT,EACA,aAAa,EAAM,EAAM,CACrB,OAAS,GAAI,EAAG,EAAI,EAAK,OAAQ,IACzB,GAAA,EAAK,GAAG,OAAS,EACV,MAAA,GAGR,MAAA,EACX,EACA,iBAAkB,CACV,GAAA,KAAK,UAAY,GAAM,CACvB,KAAK,WAAa,EAClB,OAAS,GAAM,EAAG,EAAM,KAAK,sBAAsB,eAAe,OAAQ,IAAO,CAC7E,GAAI,GAAQ,CAAA,EACZ,EAAQ,KAAK,MAAM,KAAK,UAAU,KAAK,KAAK,eAAe,KAAK,sBAAsB,eAAe,GAAK,mBAAmB,CAAC,EACzH,KAAA,YAAY,eAAe,KAAK,CAAK,CAC9C,CAEA,OAAS,GAAI,EAAG,EAAI,KAAK,YAAY,eAAe,OAAQ,IAC/C,OAAA,GAAI,EAAG,EAAI,KAAK,YAAY,eAAe,GAAG,QAAQ,OAAQ,IAC9D,KAAA,YAAY,eAAe,GAAG,QAAQ,GAAG,QAAU,KAAK,YAAY,eAAe,GAIhG,OAAS,GAAI,EAAG,EAAI,KAAK,sBAAsB,kBAAkB,OAAQ,IAIrE,OAHI,GAAM,KAAK,sBAAsB,kBAAkB,GACnD,EAAU,KAAK,YAAY,eAAe,KAAK,aAAa,KAAK,YAAY,eAAgB,EAAI,iBAAiB,IAAI,GACtH,EAAY,KAAK,YAAY,eAAe,KAAK,aAAa,KAAK,YAAY,eAAgB,EAAI,YAAY,IAAI,GAC9G,EAAK,EAAG,EAAK,EAAI,mBAAmB,OAAQ,IAAM,CACnD,GAAA,GAAU,EAAQ,QAAQ,KAAK,aAAa,EAAQ,QAAS,EAAI,mBAAmB,GAAI,IAAI,GAC5F,EAAY,EAAU,QAAQ,KAAK,aAAa,EAAU,QAAS,EAAI,cAAc,GAAI,IAAI,GAEjG,AAAK,EAAQ,eAAe,OAAO,GAC/B,GAAQ,MAAQ,IAEZ,EAAA,MAAM,KAAK,CAAS,CAChC,CAGJ,KAAK,cAAc,CACvB,CACJ,EACA,eAAgB,CACZ,KAAK,QAAU,GACf,OAAS,GAAI,EAAG,EAAI,KAAK,YAAY,eAAe,OAAQ,IAC/C,OAAA,GAAM,EAAG,EAAM,KAAK,YAAY,eAAe,GAAG,QAAQ,OAAQ,IAEvE,AAAI,KAAK,YAAY,eAAe,GAAG,QAAQ,GAAK,eAAe,OAAO,GAAK,KAAK,YAAY,eAAe,GAAG,QAAQ,GAAK,MAAM,OAAS,EAC1I,KAAK,QAAQ,KAAK,KAAK,YAAY,eAAe,GAAG,QAAQ,EAAI,EAE1D,KAAK,YAAY,eAAe,GAAG,QAAQ,GAAK,eAAe,OAAO,GAAK,KAAK,YAAY,eAAe,GAAG,QAAQ,GAAK,MAAM,OAAS,GACjJ,MAAO,MAAK,YAAY,eAAe,GAAG,QAAQ,GAAK,KAIvE,EACA,KAAM,mBAAmB,CACrB,GAAI,GAAU,CAAA,EACd,AAAI,KAAK,SACG,EAAA,eAAiB,KAAK,sBAAsB,WAE5C,GAAA,KAAO,KAAK,YAAY,KACxB,EAAA,YAAc,KAAK,YAAY,YAC/B,EAAA,oBAAsB,KAAK,YAAY,oBAC/C,EAAQ,cAAgB,IAG5B,EAAQ,cAAgB,GAExB,OAAS,GAAI,EAAG,EAAI,KAAK,YAAY,eAAe,OAAQ,IAAK,CACzD,GAAA,GAAa,KAAK,YAAY,eAAe,GACjD,KAAK,UAAgB,EAAQ,cAAc,KAAK,EAAW,IAAI,EACtD,OAAA,GAAM,EAAG,EAAM,KAAK,YAAY,eAAe,GAAG,QAAQ,OAAQ,IAEvE,GAAI,KAAK,YAAY,eAAe,GAAG,QAAQ,GAAK,eAAe,OAAO,GAAK,KAAK,YAAY,eAAe,GAAG,QAAQ,GAAK,MAAM,OAAS,EAAG,CAE7I,AAAK,EAAQ,cAAc,eAAe,EAAW,IAAI,GAC7C,GAAA,cAAc,EAAW,MAAQ,CAAA,GAEzC,GAAA,GAAS,EAAQ,cAAc,EAAW,MAC1C,EAAY,KAAK,YAAY,eAAe,GAAG,QAAQ,GAE3D,AAAK,EAAO,eAAe,EAAU,IAAI,GAC9B,GAAA,EAAU,MAAQ,IAG7B,OADI,GAAS,EAAO,EAAU,MACrB,EAAM,EAAG,EAAM,EAAU,MAAM,OAAQ,IAAO,CAEnD,AAAK,EAAO,eAAe,EAAU,MAAM,GAAK,SAAS,GACrD,GAAO,EAAU,MAAM,GAAK,WAAa,IAE7C,GAAI,GAAiB,EAAO,EAAU,MAAM,GAAK,WACjD,EAAe,KAAK,EAAU,MAAM,GAAK,IAAI,CACjD,CACJ,CAER,CACA,KAAM,GAAW,CAAE,KAAM,EAAS,KAAM,CAAG,CAAA,EACrC,KAAA,MAAK,MACN,KAAK,4DAAoE,CAAQ,EACjF,KAAK,KAAO,IAAiC,CAC1C,KAAK,YAAc,EAAW,KAAK,YAAa,EAAS,IAAI,EAC7D,EAAS,KAAK,QAAQ,CAAA,CACzB,EACA,MAAM,IAAM,CAAE,CAAA,EACd,QAAQ,IAAM,KAAK,YAAa,CAAA,CACzC,EACA,mBAAmB,EAAM,EAAM,CACpB,GAAA,KAAa,EAAK,MAAQ,CAAA,EAAM,EAAK,MAAM,OAAO,EAAK,CAAC,EAC/D,KAAK,cAAc,CACvB,CACJ,CACJ,CAAC,MA5OqC,IAAI,EAAS,IAAK,SAAA,MAAA,qDAElC3C,GAAA,CAAA,MAAM,sDAEEe,GAAS,CAAC,IAAK,SAAA,MAAA,2BAIvBC,GAAA,CAAA,MAAM,sDAEEC,GAAS,CAAC,IAAK,SAAA,MAAA,+BAOR,IAAG,EAAoB,GAAA,oBAAA,MAAA,qDAc1B,uBACAE,GAAA,CAAA,MAAM,wHAGT,IAAK,EAAA,MAAA,yMA9CnBd,GAAW,EAAAC,EAAA,EAAA,CAAE,MAAK,WAAgC,MAAOC,EAAE,EAAsB,aAAA,MAAA,QAAA,EAAG,QAAO,EAAI,uBAAG,MAAA,GAAA,SAAA,EAChG,EAAA,CAAA,OACPC,EAIU,IAAA,CAAAC,EAHU,EAC6B,CAAA,MAAA,8CAAA,EAAA,CAAA,MAAAD,EAAA,IAAA,sDA0D1C,CAAA,EAAA,OACPA,EAA4F,IAAA,CAA9EC,EAAA,EAAA,CAA2B,MAAO,0BAAsB,MAAK,EAAE,GAAW,eAAA,EAAA,QAAA,EAAA,WAC1E,EAAA,KAAA,EAAA,CAAA,QAAU,SAAU,CAAA,EAAlC,EAAA,YAAA,GAAA,CAAA,EAAA,SAAAJ,GAAA,EAAAC,EAAA,EAAA,CAA4C,IAAK,EAAmC,MAAO,iCAAoB,MAAU,EAAA,GAAA,aAAA,EAAuC,SAAO,EAAY,gBAAA,EAAA,QAAA,OAAA,EAAA,QAAA,EAAA,sDACrKyB,EAAU,GAAA,EAAA,EAAxB,EAAA,YAAA,EAAA1B,GAAA,EAAAC,EAAA,EAAA,CAA+B,IAAK,EAAiC,MAAO,+BAAoB,MAAU,EAAA,GAAA,aAAA,EAAiB,SAAO,EAAA,eAAA,QAAA,EAAA,kDACpHyB,EAAU,GAAA,EAAA,EAAxB,EAAA,YAAA,EAAA1B,GAAA,EAAAC,EAAA,EAAA,CAA+B,IAAK,EAAiC,MAAO,+BAAoB,MAAU,EAAA,GAAA,aAAA,EAAiB,SAAO,EAAA,eAAA,QAAA,EAAA,6EAzDvHE,EAAU,IAAA,CAAzB,EAAA,aAAA,EAAAH,GAAA,EAAAC,EAAA,EAAA,CAAkC,IAAA,EAAiC,eAAA,EAAA,eAAiD,uBAAgB,EAAA,uBAAA,eAAA,EAAA,mFAExHyB,EAAU,GAAA,EAAA,EAAA,EAAA,aAAtB,KAMU,EAAAlB,EAAA,OAAAD,GAAA,CAAAF,EAJF,MAGOV,GAHP,CACqIU,EAAA,OAAAI,GAAA,CAAAL,EAApH,EAAQ,CAAC,GAAA,SAAA,MAAA,6CAAiD,sBAAS,EAAY,IAAc,GAAA,GAAA,AAAA,GAAA,EAAA,YAAA,GAAE,UAAY,YAAM,eAAA,YAAA,MAC9H,EAAA,KAAA,EAAA,CAAA,aAA0G,SAA1G,CAAA,EAAAC,EAAA,QAAAK,GAAAJ,EAAA,EAAA,GAAA,mCAAA,CAAA,EAAA,CAAA,GAGR,CAAA,EAAAD,EACI,MAGOM,GAHP,CACqIN,EAAA,OAAAT,GAAA,CAAAQ,EAApH,EAAQ,CAAC,GAAA,SAAA,MAAA,6CAAiD,sBAAS,EAAY,IAAc,GAAA,GAAA,AAAA,GAAA,EAAA,YAAA,GAAE,UAAY,YAAM,eAAA,YAAA,MAC9H,EAAA,KAAA,EAAA,CAAA,aAA0G,SAA1G,CAAA,EAAAC,EAAA,QAAAO,GAAAN,EAAA,EAAA,GAAA,mCAAA,CAAA,EAAA,CAAA,aAK2BoB,EAAU,GAAA,EAAA,EAAjD,EAAA,aAAA,EAAA1B,GAAA,EAAAC,EAAA,EAAA,CAAiB,IAAK,EAAoC,MAAA,UAAmC,YAAa,EAAY,YAAA,QAAU,YAAA,EAAA,YAAA,QAAwC,gCAAmB,GAAG,OAAA,EAAA,cAAA,sBAAA,EAAA,uFAEnLyB,EAAU,GAAA,EAAA,EAArB,EAAA,aAAA,EAAA1B,GASc,EAAAQ,EAAA,MARIK,GAAC,CAAAT,EACK,EAC6B,CAAA,MAAA,gCAAA,EAAA,CAAA,MAAAD,EAAA,IAAA,8CAElC,CAAA,EACQ,IAAAA,EAAA,IAAA,CAAA,AAAA,EAAA,wBACA,IAAI,EAAuB,KAAK,sBAAiD,MAAA,gDAAsB,MAAK,CAAA,MAAA,OAAA,EAAA,QAAA,EAAA,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,cAAA,OAD5GH,GAAA,EAAAC,EAAA,EAAA,CAAe,IAAI,EAAwB,KAAK,uBAAiD,MAAA,gDAAsB,MAAK,CAAA,MAAA,OAAA,EAAA,QAAA,EAAA,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,cAAA,YAInJ,CAAA,EAAAI,EACI,MAmBUR,GAAA,CAnB4B8C,EAAAvC,EAAA,EAAA,CAAoF,MAAO,mFAAA,QAAA,EAAA,OAClH,EAAA,CAAA,MAAAD,EAAA,IAAA,kDACA,CAAA,EACP,OAAAA,EAAA,AAAA,GAAA,CAAAE,EACI,MAEOS,GAFP,CAGwDT,EAAA,OAAAU,GAAuBT,EAAgB,EAAM,OAAA,IAAA,EAAA,CAAA,EAAA,EAAA,OAAA,OAArG,EAA6G,OAA7G,MAA6G,OAAA,EAAAN,GAAA,EAAAQ,EAAA,IAAAV,EAAA,GACO4B,EAAgB,GAAa,EAAA,EAAA,EAAA,OAAA,OAAjJ,EAOM,OAAA,MAAA,OAAA,EAAA1B,KAAAQ,EAAA,MAAA,CAPD,IAAK,EAAA,MAAA+B,EAAA,CAAA,iCAAA,CAAA,SAAA,EAAA,OAAA,MAAA,OAAA,CAAA,CAAA,CAAA,aACNf,EAKO,KAAAC,EAAA,EAAA,OAAA,MAAA,CAAA,EAAA,IALIzB,GAAA,EAAkCQ,EAAA,OAAA,CAA2D,MAAK,kCAAA,IAAA,CACzG,EAAA,CAAAH,EAG8B,OAAUW,GAAMV,EAAA,EAAA,IAAA,EAAA,CAAA,EAAA,EAAA,OAAA,MAA9C,OAAiN,EAAAN,GAAA,EAAAC,EAAA,EAAA,CAA7J,IAAI,EAAgB,KAAK,eAA0E,MAAK,wEAAA,QAAAyC,EAAA,AAAA,GAAA,EAAA,mBAAA,EAAA,OAAA,CAAA,EAAA,CAAA,MAAA,CAAA,0CAGtC,EAAA,CAAA,GAAAhB,EAAgB,GAAa,EAAA,EAAA,EAAA,OAAA,OAA3J,EAAsP,OAAA,MAAA,OAAA,EAAA1B,KAAAC,EAAA,EAAA,CAA9O,IAAI,EAA8B,KAAK,6BAAmJ,MAAK,wEAAA,QAAAyC,EAAA,AAAA,GAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,MAAA,CAAA,wCAhBlM,EAAA,EAAA,CAAA,SAAA,CAAA,EAAA,CAAA,CAAAE,GAAA,EAAA,aAAA,6wBCwGjC,KAAKtD,IAAa,EAAa,CAC3B,KAAM,kCACN,WAAY,CAAEE,OAAAA,WAAQ8B,EAAA,YAAUC,EAAY,EAC5C,MAAO,CAAE,QAAS,CAAE,KAAM,OAAW,EAAA,kBAAmB,CAAE,KAAM,QAA4C,MAAO,CAAE,KAAM,MAAQ,EACnI,MAAO,CAAC,QAAS,MAAM,EACvB,MAAO,CACI,MAAA,CACH,0CACA,UAAW,KACX,WAAY,CAAC,EACb,YAAa,CAAC,EACd,WAAY,GACZ,QAAS,EAAA,CAEjB,EACA,SAAU,CACN,mBAA2B,CACvB,MAAQ,MAAK,MAAM,OAAe,KAAK,WAAa,OAAO,KAAM,KAAK,MAAM,OAAe,KAAK,UAAU,EAAI,CAAA,CAClH,CACJ,EACA,MAAO,CACH,mBAAoB,CAChB,KAAK,cAAc,CACvB,EACA,OAAQ,CACJ,KAAK,gBAAgB,CACzB,EACA,SAAU,CACN,KAAK,cAAc,EACnB,KAAK,gBAAgB,CACzB,CACJ,EACA,OAAQ,CAEJ,MAAO,CAAA,MADO7B,GACC,CACnB,EACA,SAAU,CACN,KAAK,cAAc,EACnB,KAAK,gBAAgB,CACzB,EACA,QAAS,CACL,eAAgB,CACZ,AAAI,KAAK,mBACL,MAAK,UAAY,CAAE,GAAG,KAAK,kBAAmB,eAAgB,CAAE,GAAG,KAAK,kBAAkB,gBAAkB,WAAY,KAAK,sBAAsB,KAAK,kBAAkB,UAAU,IAGxL,KAAK,iBAAiB,EACtB,KAAK,wBAAwB,CACjC,EACA,iBAAkB,CACd,KAAK,YAAc,KAAK,KAC5B,EACA,kBAAmB,CACf,GAAI,KAAK,UACL,OAAS,GAAI,EAAG,EAAI,KAAK,UAAU,WAAW,OAAQ,IAAK,CACjD,KAAA,GAAe,KAAK,UAAU,WAAW,GACzC,EAAM,OAAO,KAAK,CAAY,EAAE,GACtC,AAAI,IAAQ,yBACH,MAAA,WAAa,EAAa,GAAK,MAE5C,CAER,EACA,sBAAsB,EAAmB,CACrC,KAAM,GAAgB,CAAA,EACX,SAAA,QAAQ,AAAC,GAAkB,CAClC,KAAM,GAAM,OAAO,KAAK,CAAQ,EAAE,GAC5B,EAAe,CAAA,EACrB,EAAa,GAAO,CAAE,GAAG,EAAS,EAAK,EACvC,EAAc,KAAK,CAAY,CAAA,CAClC,EAEM,CACX,EACA,yBAA0B,WACtB,AAAI,KAAK,WACL,SAAK,UAAU,aAAf,QAA2B,QAAQ,AAAC,GAAkB,CAClD,KAAM,GAAM,OAAO,KAAK,CAAQ,EAAE,GAC7B,KAAA,WAAW,GAAO,EAAS,EAAA,IAIpC,SAAK,WAAW,iCAAhB,cAAgD,QAAS,MAAO,MAAK,WAAW,+BAA+B,OAAU,UACpH,MAAA,WAAW,+BAA+B,MAAQ,QAAK,WAAW,+BAA+B,QAA/C,cAAsD,MAAM,KAE3H,EACA,cAAe,CACX,GAAI,KAAK,UACL,OAAS,GAAI,EAAG,EAAI,KAAK,UAAU,WAAW,OAAQ,IAAK,CACjD,KAAA,GAAe,KAAK,UAAU,WAAW,GACzC,EAAM,OAAO,KAAK,CAAY,EAAE,GACtC,AAAI,IAAQ,yBACK,GAAA,GAAK,MAAQ,KAAK,WAEvC,CAER,EACA,gBAAgB,EAAqB,CACjC,GAAI,KAAK,UACL,OAAS,GAAI,EAAG,EAAI,KAAK,UAAU,WAAW,OAAQ,IAAK,CACjD,KAAA,GAAW,KAAK,UAAU,WAAW,GACrC,EAAM,OAAO,KAAK,CAAQ,EAAE,GAClC,GAAI,IAAQ,EAAa,CACrB,EAAS,GAAK,MAAQ,KAAK,WAAW,GAAK,MAC3C,KACJ,CACJ,CAER,EACA,aAAc,CACV,KAAK,MAAM,OAAO,CACtB,EACA,eAAgB,OACZ,GAAI,KAAK,UACL,OAAS,GAAI,EAAG,EAAI,KAAK,UAAU,WAAW,OAAQ,IAAK,CACjD,KAAA,GAAW,KAAK,UAAU,WAAW,GACrC,EAAM,OAAO,KAAK,CAAQ,EAAE,GAClC,GAAI,IAAQ,+BAAiC,MAAM,QAAQ,EAAS,GAAK,KAAK,EAAG,CAC7E,EAAS,GAAK,MAAQ,KAAS,GAAK,QAAd,cAAqB,KAAK,KAChD,KACJ,CACJ,CAGC,KAAA,MAAM,OAAQ,KAAK,SAAS,CACrC,EACA,iBAAiB,EAAW,EAAa,CAC9B,MAAA,IAAW,EAAM,CAAM,CAClC,CACJ,CACJ,CAAC,MAvQ6B,IAAI,EAAiB,IAAK,iBAAA,MAAA,2BAEnCC,GAAA,CAAA,MAAM,6BACDc,GAAA,CAAA,MAAM,uDAEEE,GAAO,CAAC,IAAK,OAAA,MAAA,2BAKrBf,GAAA,CAAA,MAAM,uDAEEiB,GAAO,CAAC,IAAK,OAAA,MAAA,qCAKhB,uDAEGE,GAAO,CAAC,IAAK,OAAA,MAAA,+BAO9B,MAAM,2BACFC,GAAA,CAAA,MAAM,oCACDjB,GAAA,CAAA,MAAM,sCAED,MAAM,qBAKhB,MAAM,2BACD6B,GAAA,CAAA,MAAM,sCAED,MAAM,qBAKhB,MAAM,2BACDG,GAAA,CAAA,MAAM,sCAED,MAAM,qBAKhB,MAAM,2BACDc,GAAA,CAAA,MAAM,sCAED,MAAM,qBAKhB,MAAM,2BACDC,GAAA,CAAA,MAAM,sCAED,MAAM,0DAKgB,IAAK,EAAA,MAAA,6DAGxBC,GAAC,CAAiB,IAAK,iBAAA,MAAA,2BAM/BC,GAAA,CAAA,MAAM,sCAED,MAAM,0DAKhB,IAAK,EAAA,MAAA,sCAUK,MAAM,0DAKhB,IAAK,EAAA,MAAA,sCAGK,MAAM,qBAKhB,MAAM,2BACD,GAAA,CAAA,MAAM,sCAED,MAAM,6MAvHtBhD,GAAiC,EAAAC,EAAA,EAAA,CAAC,GAAA,kCAA6C,MAAK,sCAAwD,MAAOC,EAAS,EAAA,uCAAA,OAAA,KAAA,EAAG,QAAO,EAAI,QAAG,MAAA,GAAA,SAAA,EACzK,EAAA,CAAA,OACPC,EAIU,IAAA,CAAAC,EAHU,EAC4C,CAAA,MAAA,qDAAA,EAAA,CAAA,MAAAD,EAAA,IAAA,qEA0HzD,CAAA,EAAA,OACPA,EAAqG,IAAA,CAAvFC,EAAA,EAAA,CAAgC,MAAK,+BAAA,QAAA,EAAA,kEACkD,EAAA,CAAA,SAAA,CAAA,EAAvFA,EAAA,EAAA,CAAgC,MAAK,+BAAA,QAAA,EAAA,2FAxHSD,EAAO,IAAA,CAAA,EAAA,QAAAH,KAAAC,EAAA,EAAA,CAA1D,IAAI,EAAiB,KAAK,gBAAA,MAAA,qBAE5ByB,EAAS,GAAA,EAAA,EAAA,EAAA,UAAA1B,GAAA,EAsBVQ,EAAA,MAAAD,GAAA,CAAAF,EApBF,MAKMV,GAAA,CAAAU,EAJF,MAGOI,GAHP,CACmFJ,EAAA,OAAAK,GAAA,CAA3DN,EAAA,EAAA,CAAC,GAAA,OAAA,MAAA,sEAA0B,EAA6B,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,UAAA,KAAA,GAAA,eAAA,CAAA,KAAA,EAAA,CACM,EAAA,KAAA,EAAA,CAAA,YAAA,CAAA,EAAAC,EAAA,QAAAM,GAAAL,EAAA,EAAA,GAAA,aAAA,CAAA,EAAA,CAAA,GAI1F,CAAA,EAAAD,EACI,MAGOT,GAHP,CAC0FS,EAAA,OAAAO,GAAA,CAAlER,EAAA,EAAA,CAAC,GAAA,OAAA,MAAA,6EAA0B,EAAoC,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,UAAA,YAAA,GAAA,eAAA,CAAA,KAAA,EAAA,CACM,EAAA,KAAA,EAAA,CAAA,YAAA,CAAA,EAAAC,EAAA,QAAAQ,GAAAP,EAAA,EAAA,GAAA,oBAAA,CAAA,EAAA,CAAA,GAIjG,CAAA,EAAAD,EACI,MAGOR,GAHP,CACsJQ,EAAA,OAAAS,GAAA,CAAAV,EAAlI,EAAmB,CAAA,MAAA,4CAAuB,sBAAS,eAAuC,EAAW,WAAA,GAAG,QAAM,EAAE,uCAAA,YAAA,SAAA,EAAA,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,eAChI,EAAA,KAAA,EAAA,CAAA,aAAkF,SAAlF,CAAA,EAAAC,EAAA,QAAAU,GAAAT,EAAA,EAAA,GAAA,aAAA,CAAA,EAAA,CAAA,KAKZ,CAAA,EAEAD,EAuFM,QAvFNP,GAuFMQ,EAAA,EAAA,GAAA,mDAAA,CAAA,EAAA,CAAA,EAAAD,EAtFF,MAMMW,GAAA,CAAAX,EALF,MAION,GAJP,CACoNM,EAAA,OAAAY,GAAA,CAAAb,EAAhM,EAAmB,CAAA,MAAA,wEAAmD,sBAAS,EAAU,IAAuB,GAAA,GAAA,AAAA,GAAa,EAAgB,WAAA,sBAAA,MAAA,GAAG,QAAM,EAAE,WAAA,sBAAA,aAAA,iBAAA,SAAA,EAAA,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,gBAAA,mBAAA,EACxK,EAAA,KAAA,EAAA,CAAA,aAAwG,SAAxG,CAAA,EACAC,EAA8E,QAAAsB,GAAArB,EAApE,EAAU,WAAA,sBAAuB,aAAa,IAAW,EAAA,CAAA,EAAAD,EAAA,QAAA,KAAAC,EAAA,EAAA,WAAA,sBAAA,aAAA,WAAA,EAAA,CAAA,GAI3E,CAAA,EAAAD,EACI,MAIOuB,GAJP,CACwNvB,EAAA,OAAAwB,GAAA,CAAAzB,EAApM,EAAmB,CAAA,MAAA,yEAAoD,sBAAS,EAAU,IAAwB,GAAA,GAAA,AAAA,GAAa,EAAgB,WAAA,uBAAA,MAAA,GAAG,QAAM,EAAE,WAAA,uBAAA,aAAA,iBAAA,SAAA,EAAA,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,gBAAA,qBAAA,EAC1K,EAAA,KAAA,EAAA,CAAA,aAAyG,SAAzG,CAAA,EACAC,EAA+E,QAAAyB,GAAAxB,EAArE,EAAU,WAAA,uBAAwB,aAAa,IAAW,EAAA,CAAA,EAAAD,EAAA,QAAA,KAAAC,EAAA,EAAA,WAAA,uBAAA,aAAA,WAAA,EAAA,CAAA,GAI5E,CAAA,EAAAD,EACI,MAIO0B,GAJP,CAC4O1B,EAAA,OAAA2B,GAAA,CAAA5B,EAArN,EAAmB,CAAA,MAAA,iFAA4D,sBAAS,EAAW,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,WAAA,+BAAA,MAAA,GAAE,QAAY,EAAA,YAAO,YAAY,OAAQ,YAAY,OAAG,OAAM,GAAA,SAAA,EAAA,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,gBAAA,6BAAA,EACpL,EAAA,KAAA,EAAA,CAAA,aAAiH,SAAjH,CAAA,EACAC,EAAuF,QAAA4B,GAAA3B,EAA7E,EAAU,WAAA,+BAAgC,aAAa,IAAW,EAAA,CAAA,EAAAD,EAAA,QAAA,KAAAC,EAAA,EAAA,WAAA,+BAAA,aAAA,WAAA,EAAA,CAAA,GAIpF,CAAA,EAAAD,EACI,MAIOwC,GAJP,CAC4KxC,EAAA,OAAA4C,GAAA,CAAA7C,EAAxJ,EAAmB,CAAA,MAAA,0EAAqD,sBAAS,EAAiB,KAAA,GAAA,IAAA,AAAA,GAAA,EAAA,WAAA,wBAAA,MAAA,GAAG,QAAM,EAAA,kBAAA,SAAA,EAAA,KAAA,GAAA,IAAA,AAAA,GAAA,EAAA,gBAAA,sBAAA,EAC3H,EAAA,KAAA,EAAA,CAAA,aAA0G,SAA1G,CAAA,EACAC,EAAgF,QAAA6C,GAAA5C,EAAtE,EAAU,WAAA,wBAAyB,aAAa,IAAW,EAAA,CAAA,EAAAD,EAAA,QAAA,KAAAC,EAAA,EAAA,WAAA,wBAAA,aAAA,WAAA,EAAA,CAAA,GAI7E,CAAA,EAAAD,EACI,MAIOyC,GAJP,CACsHzC,EAAA,OAAA8C,GAAA,CAAA/C,EAAjG,EAAmB,CAAA,MAAA,kGAAC,EAAyD,KAAA,GAAA,IAAA,AAAA,GAAA,EAAA,WAAA,0BAAA,MAAA,GAAE,eAAc,CAAA,KAAA,EAAA,EAAA,SAAA,EACF,EAAA,KAAA,EAAA,CAAA,YAAA,CAAA,EAC5GC,EAAkF,QAAA+C,GAAA9C,EAAxE,EAAU,WAAA,0BAA2B,aAAa,IAAW,EAAA,CAAA,EAAAD,EAAA,QAAA,KAAAC,EAAA,EAAA,WAAA,0BAAA,aAAA,WAAA,EAAA,CAAA,GAIpE,CAAA,EAAA,EAAA,UAAA,eAAAN,GAKA,EAAAQ,EAAA,MAAA6C,GAAA,CAHsHhD,EAAA,OAAAiD,GAAA,CAAAlD,EAA3G,EAAgB,CAAC,GAAA,iBAAA,MAAA,qFAA0B,EAA4C,KAAA,GAAA,IAAA,AAAA,GAAA,EAAA,UAAA,eAAA,KAAA,GAAE,eAAc,CAAA,KAAA,EAAA,EAAA,SAAA,EACD,EAAA,KAAA,EAAA,CAAA,YAAA,CAAA,EACpHC,EAAmE,QAAvD0C,GAAAzC,EAAA,EAAA,GAAA,sCAAA,CAAA,EAAA,CAAA,EAAAD,EAAA,QAAA,KAAAC,EAAA,EAAA,GAAA,0CAAA,CAAA,EAAA,CAAA,GAIpB,CAAA,GAAAoB,EAMM,GANN,EAAA,EAAArB,EACI,MAIO2C,GAJP,CAC6O3C,EAAA,OAAAkD,GAAA,CAAAnD,EAAzN,EAAmB,CAAA,MAAA,gFAA2D,sBAAS,EAAU,KAA+B,GAAA,IAAA,AAAA,GAAA,EAAa,WAAgB,8BAAA,MAAA,GAAG,QAAM,EAAE,WAAA,8BAAA,aAAA,iBAAA,SAAA,EAAA,KAAA,GAAA,IAAA,AAAA,GAAA,EAAA,gBAAA,4BAAA,EACxL,EAAA,KAAA,EAAA,CAAA,aAAgH,SAAhH,CAAA,EACAC,EAAsF,QAAAmD,GAAAlD,EAA5E,EAAU,WAAA,8BAA+B,aAAa,IAAW,EAAA,CAAA,EAAAD,EAAA,QAAA,KAAAC,EAAA,EAAA,WAAA,8BAAA,aAAA,WAAA,EAAA,CAAA,GAIjC,CAAA,EAa5C,EAAA,WAAA,uBAAA,QAbN,QAaM,EAAA,WAAA,uBAAA,QAAA,aAAA,EAAA,WAAA,uBAAA,QAAA,OAAAN,KADKQ,EAAA,MAAAiD,GAAA,CAHQpD,EAAA,OAAAqD,GAAA,CAAAtD,EAPK,EAAmB,CAAA,MAAA,2EAAsD,sBAAS,EAAU,KAA0B,GAAA,IAAA,AAAA,GAAa,EAAgB,WAAA,yBAAA,MAAA,GAAG,QAAM,EAAE,WAAA,yBAAA,aAAA,iBAAA,SAAA,EAAA,KAAA,GAAA,IAAA,AAAA,GAAA,EAAA,gBAAA,uBAAA,EAC/J,EAAA,CAAA,OACPD,EAAiE,AAAA,GAAA,CAAAE,EAAA,OAAA,KAAAC,EAAA,EAAA,iBAAA,GAAA,MAAA,EAAA,MAAA,CAAA,EAAA,CAAA,CAE1D,CAAA,EAAA,MACPH,EAAgE,AAAA,GAAA,CAAAE,EAAA,OAAA,KAAAC,EAAA,EAAA,iBAAA,GAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,OAGxE,EAAA,EAAA,CAAA,aAA2G,SAA3G,CAAA,EACAD,EAAiM,QAAA,GAAAC,EAAvL,EAAU,WAAA,yBAA6B,aAAc,IAAA,EAAA,CAAA,EAAAD,EAAA,QAAA,KAAAC,EAAA,EAAA,WAAA,uBAAA,QAAA,OAAA,EAAA,WAAA,qBAAA,aAAA,YAAA,EAAA,WAAA,yBAAA,aAAA,WAAA,EAAA,CAAA,oCAIvE,UAMM,SAAA,OANN,EAMM,QAAA,EAAA,WAAA,uBAAA,KAAA,IAAA,GAAAN,GAAA,EADKQ,EAAA,MAAA,GAAA,CAH2MH,EAAA,OAAA,GAAA,CAAAD,EAA9L,EAAmB,CAAA,MAAA,uEAAkD,sBAAS,EAAU,KAAsB,GAAA,IAAA,AAAA,GAAa,EAAgB,WAAA,qBAAA,MAAA,GAAG,QAAM,EAAE,WAAA,qBAAA,aAAA,iBAAA,SAAA,EAAA,KAAA,GAAA,IAAA,AAAA,GAAA,EAAA,gBAAA,mBAAA,EACtK,EAAA,KAAA,EAAA,CAAA,aAAuG,SAAvG,CAAA,EACAC,EAA6E,QAAA,GAAAC,EAAnE,EAAU,WAAA,qBAAsB,aAAa,IAAW,EAAA,CAAA,EAAAD,EAAA,QAAA,KAAAC,EAAA,EAAA,WAAA,qBAAA,aAAA,WAAA,EAAA,CAAA,GAI1E,CAAA,GAAAoB,EAMM,GANN,EAAA,EAAArB,EACI,MAIO,GAJP,CAC+JA,EAAA,OAAA,GAAA,CAAAD,EAA1I,EAAmB,CAAA,MAAA,qGAAC,EAA4D,KAAA,GAAA,IAAA,AAAA,GAAA,EAAA,WAAA,6BAAA,MAAA,GAAE,eAAM,CAAA,KAAA,EAAA,EAAA,SAAA,EAAA,KAAA,GAAA,IAAA,AAAA,GAAA,EAAA,gBAAA,2BAAA,EACM,EAAA,KAAA,EAAA,CAAA,YAAA,CAAA,EAC/GC,EAAqF,QAAA,GAAAC,EAA3E,EAAU,WAAA,6BAA8B,aAAa,IAAW,EAAA,CAAA,EAAAD,EAAA,QAAA,KAAAC,EAAA,EAAA,WAAA,6BAAA,aAAA,WAAA,EAAA,CAAA,6SClF9F,KAAKhB,IAAa,EAAa,CAC3B,KAAM,kCACN,WAAY,CAAA,SAAEC,GAAU,OAAAC,EAAQgD,QAAAA,EAASmB,QAAAA,EAAQ,EACjD,MAAO,CAAE,QAAS,CAAE,KAAM,OAAQ,EAAG,aAAc,CAAE,KAAM,OAAS,EACpE,MAAO,CAAC,QAAS,MAAM,EACvB,MAAO,CACI,MAAA,CACH,+CACA,OAAQ,CAAC,EACT,qBAAsB,CAAC,EACvB,QAAS,EAAA,CAEjB,EACA,MAAO,CACH,cAAe,CACX,KAAK,WAAW,CACpB,CACJ,EACA,SAAU,CACN,KAAK,WAAW,CACpB,EACA,QAAS,CACL,YAAa,CACT,KAAK,OAAS,KAAK,YACvB,EACA,aAAc,CACV,KAAK,MAAM,OAAO,EAClB,KAAK,qBAAuB,EAChC,EACA,MAAO,CACE,KAAA,MAAM,OAAQ,KAAK,oBAAoB,CAChD,CACJ,CACJ,CAAC,sKAvEU3D,GAAuC,EAAAC,EAAA,EAAA,CAAC,GAAA,wCAA6C,MAAK,sCAA6D,MAAOC,EAAS,EAAA,4CAAA,OAAA,KAAA,EAAG,QAAO,EAAI,QAAG,MAAA,GAAA,SAAA,EACpL,EAAA,CAAA,OACPC,EAIU,IAAA,CAAAC,EAHU,EACqC,CAAA,MAAA,qDAAA,EAAA,CAAA,MAAAD,EAAA,IAAA,8DAmBlD,CAAA,EAAA,OACPA,EAAqG,IAAA,CAAvFC,EAAA,EAAA,CAAgC,MAAK,+BAAA,QAAA,EAAA,kEACyC,EAAA,CAAA,SAAA,CAAA,EAA9EA,EAAA,EAAA,CAAgC,MAAK,+BAAA,QAAA,EAAA,kFAjBSD,EAAO,IAAA,CAAA,EAAA,QAAAH,KAAAC,EAAA,EAAA,CAA1D,IAAI,EAAiB,KAAK,gBAAA,MAAA,qBAExByB,EAAa,GAAA,EAAA,EAA5B,EAAA,OAAA,SAAA,EAAA1B,GAAA,EAAAC,EAAA,EAAA,CAAoC,IAAK,EAAS,MAAA,QAAiB,SAAU,OAAQ,SAAK,GAAA,MAAAC,EAAA,EAAA,4CAAA,OAAA,OAAA,6EAI1F,EAAA,EAAA,CAAA,OAAA,CAAA,GAAAF,GAAA,EAAAC,EAAA,EAAA,CAAgB,IAAK,EAAwC,MAAO,sCAAA,QAAA,EAAA,MACrD,EAAA,CACP,OAAAE,EAAA,AAAA,GAAA,CACiGE,EAAA,MAAAE,GAAA,CAAAH,EAA7E,EAAQ,CAAA,MAAA,2CAAiC,sBAAuB,EAAA,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,qBAAA,GAAA,MAAA,EAAA,MACxC,EAAA,KAAA,EAAA,CAAA,aAAA,OAAA,CAAA,EAAAC,EAAA,OAAA,KAAAC,EAAA,EAAA,OAAA,IAAA,EAAA,CAAA,sFCgC5D,KAAKhB,IAAa,EAAa,CAC3B,KAAM,yBACN,WAAY,CAAEC,SAAAA,UAAU2B,YAAQC,EAAW,SAAAG,EAAU,gCAA8B,oCAAkC,EACrH,MAAO,CAAE,sBAAuB,CAAE,KAAM,QAA6C,SAAU,CAAE,KAAM,MAAU,EAAA,SAAU,CAAE,KAAM,MAAA,EAAU,MAAO,CAAE,KAAM,MAAQ,EACpK,MAAO,CAAC,UAAW,aAAa,EAChC,MAAO,CACI,MAAA,CACH,kCACA,KAAM,KACN,cAAe,KACf,kBAAmB,CAAC,EACpB,YAAa,CAAC,EACd,gBAAiB,CAAC,EAClB,eAAgB,CAAC,EACjB,iBAAkB,CAAC,EACnB,6BAA8B,GAC9B,kBAAmB,KACnB,yBAA0B,GAC1B,aAAc,CAAC,EACf,aAAc,KACd,aAAc,CAAC,EACf,QAAS,EAAA,CAEjB,EACA,MAAO,CACH,uBAAwB,CACpB,KAAK,SAAS,EACd,KAAK,kBAAkB,CAC3B,CACJ,EACA,OAAQ,CAEJ,MAAO,CAAA,MADO5B,GACC,CACnB,EACA,SAAU,CACN,KAAK,SAAS,EACd,KAAK,kBAAkB,CAC3B,EACA,QAAS,CACL,UAAW,CACP,KAAK,KAAO,KAAK,QACrB,EACA,mBAAoB,CAChB,KAAK,cAAgB,KAAK,sBAE1B,KAAK,oBAAoB,CAC7B,EACA,qBAAsB,OAClB,AAAI,KAAK,eACL,SAAK,cAAc,UAAnB,QAA4B,QAAQ,AAAC,GAAgB,CACjD,OAAS,GAAI,EAAG,EAAI,EAAO,WAAW,OAAQ,IAAK,CACzC,KAAA,GAAe,EAAO,WAAW,GACjC,EAAM,OAAO,KAAK,CAAY,EAAE,GAEtC,AAAK,KAAK,aAAa,SAAS,CAAG,GAAQ,KAAA,aAAa,KAAK,CAAG,EAEhE,AAAI,IAAQ,qBACR,KAAK,kBAAkB,EAAO,YAAc,EAAa,GAAK,QAAU,OAC5E,AAAW,IAAQ,wBACf,KAAK,YAAY,EAAO,YAAc,EAAa,GAAK,MAC5D,AAAW,IAAQ,sBACf,KAAK,gBAAgB,EAAO,YAAc,EAAa,GAAK,QAAU,OAC1E,AAAW,IAAQ,qBACf,KAAK,eAAe,EAAO,YAAc,EAAa,GAAK,QAAU,OAC9D,IAAQ,wBACf,MAAK,iBAAiB,EAAO,YAAc,EAAa,GAAK,QAAU,OAE/E,CAAA,GAGZ,EACA,KAAM,cAAa,EAAY,OAC3B,KAAK,QAAU,GACT,KAAA,GAAW,CAAE,KAAM,CAAE,wBAAyB,QAAK,gBAAL,cAAoB,WAAY,MAAO,EAAM,UAAW,UAAW,EAAM,UAAY,EAAM,SAAA,EAAa,KAAM,EAAS,KAAK,QAAQ,GAClL,KAAA,MAAK,MACN,KAAK,+DAAuE,CAAQ,EACpF,KAAK,AAAC,GAAiC,CACpC,KAAK,KAAO,EAAW,KAAK,KAAM,EAAS,IAAI,EAAE,WAAA,CACpD,EACA,MAAM,IAAM,CAAA,CAAE,EACd,QAAQ,IAAM,EAAS,KAAK,QAAQ,CAAC,EAC1C,KAAK,QAAU,EACnB,EACA,SAAS,EAA8B,EAAc,CACjD,OAAS,GAAI,EAAG,EAAI,EAAO,WAAW,OAAQ,IAAK,CACzC,KAAA,GAAe,EAAO,WAAW,GACjC,EAAM,OAAO,KAAK,CAAY,EAAE,GAClC,AAAA,IAAQ,sBAAwB,IAAS,aACzC,EAAa,GAAK,MAAQ,KAAK,kBAAkB,EAAO,YACjD,AAAA,IAAQ,yBAA2B,IAAS,OACnD,EAAa,GAAK,MAAQ,KAAK,YAAY,EAAO,YAC3C,AAAA,IAAQ,uBAAyB,IAAS,WACjD,EAAa,GAAK,MAAQ,KAAK,gBAAgB,EAAO,YAC/C,AAAA,IAAQ,sBAAwB,IAAS,UAChD,EAAa,GAAK,MAAQ,KAAK,eAAe,EAAO,YAC9C,IAAQ,wBAA0B,IAAS,aAClD,GAAa,GAAK,MAAQ,KAAK,iBAAiB,EAAO,YAE/D,CAEA,KAAK,MAAM,aAAa,CAC5B,EACA,oBAAoB,EAAiC,CACjD,KAAK,kBAAoB,EACzB,KAAK,6BAA+B,EACxC,EACA,gBAAgB,EAAiC,CAG7C,GAFA,KAAK,kBAAoB,EAErB,KAAK,cAAe,CACd,KAAA,GAAQ,KAAK,cAAc,QAAQ,UAAU,AAAC,GAA6B,OAAA,SAAG,aAAe,SAAK,oBAAL,cAAwB,YAAU,EACrI,AAAI,IAAU,IACL,MAAA,cAAc,QAAQ,GAAS,KAAK,kBAEjD,CAEA,KAAK,oBAAoB,EACzB,KAAK,MAAM,aAAa,EACxB,KAAK,6BAA+B,EACxC,EACA,4BAA4B,EAAiC,CACzD,KAAK,SAAS,QAAQ,CAClB,QAAS,KAAK,GAAG,yCAAyC,EAC1D,OAAQ,KAAK,GAAG,uCAAuC,EACvD,KAAM,6BACN,OAAQ,SAAY,KAAM,MAAK,qBAAqB,CAAS,CAAA,CAChE,CACL,EACA,KAAM,sBAAqB,EAAiC,OACxD,KAAK,QAAU,GACf,KAAM,GAAW,CAAE,KAAM,CAAE,yBAA0B,EAAU,WAAY,wBAAyB,QAAK,gBAAL,cAAoB,YAAc,KAAM,EAAS,KAAK,QAAQ,GAE5J,KAAA,MAAK,MACN,KAAK,iEAAyE,CAAQ,EACtF,KAAK,AAAC,GAAiC,CACpC,KAAK,KAAO,EAAW,KAAK,KAAM,EAAS,IAAI,EAAE,YAEjD,KAAK,MAAM,QAAQ,CACf,MAAO,KAAK,GAAG,0BAA0B,EACzC,IAAK,KAAK,GAAG,4BAA4B,CAAA,CAC5C,EACD,EAAS,KAAK,QAAQ,CAAA,CACzB,EACA,MAAM,IAAM,CAAA,CAAE,EACnB,KAAK,QAAU,EACnB,EACA,wBAAyB,SACrB,GAAI,KAAK,eAAiB,KAAK,cAAc,cAAe,CACxD,KAAK,aAAe,GAEpB,KAAM,GAAa,CAAC,GAAG,AADD,SAAK,OAAL,cAAW,eAAe,QAAK,gBAAL,cAAoB,cAAc,qBAC7C,OAAO,EAE5C,OAAS,GAAI,EAAG,EAAI,EAAW,OAAQ,IAAK,CACxC,KAAM,GAAa,EAAW,GAE9B,AAAI,EAAW,eAIP,AADU,KAAK,cAAc,QAAQ,UAAU,AAAC,GAAY,EAAG,aAAe,EAAW,IAAI,IACnF,IAAS,KAAA,aAAa,KAAK,CAAU,CAE3D,CACJ,CAEA,KAAK,yBAA2B,EACpC,EACA,KAAM,kBAAiB,EAAsB,CACzC,KAAK,QAAU,GAIT,KAAA,GAAW,CAAE,KAAM,CAAE,QAHP,EAAc,IAAI,AAAC,GAAY,OACxC,MAAA,CAAE,wBAAyB,QAAK,gBAAL,cAAoB,WAAY,mBAAoB,EAAG,KAAM,kBAAmB,EAAG,SAAU,CAAA,CAClI,GACkD,KAAM,EAAS,KAAK,QAAQ,CAAE,EAC3E,KAAA,MAAK,MACN,KAAK,iEAAyE,CAAQ,EACtF,KAAK,AAAC,GAAiC,CACpC,KAAK,KAAO,EAAW,KAAK,KAAM,EAAS,IAAI,EAAE,YACjD,KAAK,yBAA2B,EAAA,CACnC,EACA,MAAM,IAAM,CAAA,CAAE,EACd,QAAQ,IAAM,EAAS,KAAK,QAAQ,CAAC,EAC1C,KAAK,QAAU,EACnB,CACJ,CACJ,CAAC,mCAlNwBC,GAAA,CAAA,IAAK,6PAtBLK,GAAa,EAAAQ,EAAA,MAAA,KAAA,CAAA,EAAA,cAAAR,KAAAC,EAAA,EAAA,CAAE,IAAK,EAAkC,MAAO,gCAAwB,MAAO,EAAE,cAAO,QAAE,QAAA,EAAA,QAAyB,iBAAW,QAAS,WAAU,QAAA,aAAA,EAAA,uBAC3KE,EAAyH,IAAA,CAAAC,EAAtG,EAAM,CAAG,WAAW,GAAsD,cAAiB,+BAAO,mBAAA,kBAAA,EACrH,EAAA,KAAA,EAAA,CAAA,aAAA,CAAA,EAaSJ,GAAA,EAAA,EAAAQ,EAAAgB,EAAA,KAAAC,EAAA,EAAA,+BAAA,QAAA,CAAA,EAAA,IAbIzB,GAAA,EAAeC,EAAA,EAAA,CAAoE,MAAK,eAAQ,IAAK,EAAiB,MAAM,EAAE,MAAA,OAAA,EAAA,GAAA,EAAA,MAAA,CAC5H,EAAA,CACP,KAAAE,EAAA,AAAA,GAAA,CACgCE,EAAA,MAAAE,GAAA,CAAA,EAAA,QAAA,aAAAP,GAAA,EAAAC,EAAA,EAAA,OAA4B,WAAA,EAAA,KAAA,EAAA,OAAS,MAAM,OAAgC,sBAAY,AAAA,GAAA,EAAA,KAAA,EAAA,OAAA,MAAA,OAAA,EAAG,OAAM,GAAA,SAAA,EAAA,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,MAAA,aAAA,EACvG,EAAA,KAAO,GAAK,aAAjC,qBAAA,CAAA,GAAA,EAAA,QAAA,UAAAD,KAAAC,EAAA,EAAA,OAA0D,WAAA,EAAA,kBAAA,EAAA,KAAA,YAA+C,sBAAY,AAAA,GAAA,EAAA,kBAAA,EAAA,KAAA,YAAA,EAAG,OAAM,GAAA,SAAA,AAAA,GAAA,EAAA,SAAA,EAAA,KAAA,YAAA,CACzG,EAAA,KAAO,GAAK,aAAjC,sBAAA,UAAA,CAAA,GAAA,EAAA,QAAA,WAAAD,GAAA,EAAAC,EAAA,EAAA,OAA2D,WAAA,EAAA,gBAAA,EAAA,KAAA,YAA6C,sBAAY,AAAA,GAAA,EAAA,gBAAA,EAAA,KAAA,YAAA,EAAG,OAAM,GAAA,SAAA,AAAA,GAAA,EAAA,SAAA,EAAA,KAAA,UAAA,CACxG,EAAA,KAAO,GAAK,aAAjC,sBAAA,UAAA,CAAA,GAAA,EAAA,QAAA,UAAAD,GAAA,EAAAC,EAAA,EAAA,OAA0D,WAAA,EAAA,eAAA,EAAA,KAAA,YAA4C,sBAAY,AAAA,GAAA,EAAA,eAAA,EAAA,KAAA,YAAA,EAAG,OAAM,GAAA,SAAA,AAAA,GAAA,EAAA,SAAA,EAAA,KAAA,SAAA,CACtG,EAAA,KAAO,GAAK,aAAjC,sBAAA,UAAA,CAAA,GAAA,EAAA,QAAA,YAAAD,GAAA,EAAAC,EAAA,EAAA,OAA4D,WAAA,EAAA,iBAAA,EAAA,KAAA,YAA8C,sBAAY,AAAA,GAAA,EAAA,iBAAA,EAAA,KAAA,YAAA,EAAG,OAAM,GAAA,SAAA,AAAA,GAAA,EAAA,SAAA,EAAA,KAAA,WAAA,CAC1G,EAAA,KAAO,GAAK,aAAjC,sBAAA,UAAA,CAAA,GAAA,EAAA,QAAA,OAAAD,GAAA,EAAAC,EAAA,EAAA,CAA8C,IAAK,EAAA,MAAA,oBAA8B,WAAA,EAAA,YAAA,EAAA,KAAA,YAAyC,sBAAS,iBAA+B,EAAW,KAAA,YAAA,EAAG,QAAM,EAAqB,+BAAA,YAAA,SAAA,AAAA,GAAA,EAAA,SAAA,EAAA,KAAA,MAAA,CACrL,EAAA,KAAO,GAAK,aAAlC,sBAAA,UAAA,UAAA,CAAA,GAAA,EAAA,QAAA,OAAAD,GAAA,EAAAC,EAAA,EAAA,OAAwD,WAAA,EAAA,KAAA,EAAA,OAAS,MAAM,OAA+B,sBAAM,AAAwC,GAAA,EAAA,KAAA,EAAA,OAAA,MAAA,OAAA,EAAE,MAAI,yCAAA,OAAA,EAAA,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,MAAA,aAAA,yBAC1J,qBAAsE,CAAA,GAAAD,KAAAQ,EAAA,OAAAb,GAAAW,EAAA,EAAA,KAAA,EAAA,OAAA,MAAA,MAAA,EAAA,CAAA,qCAIlF,EAAA,GAAA,GAAAF,EAAc,EAAE,CAAA,MAAAF,EAAA,EAAA,+BAAA,eAAA,CACD,EAAA,CAAA,OACPC,EAA8J,IAAA,CAAhJC,EAAA,EAAA,CAA0D,MAAK,yDAA0B,QAAU,EAAA,uBAAA,YAAA,8EAG1G,CAAA,EACP,KAAAD,EAAA,AAAA,GAAA,CACoJE,EAAA,MAAAI,GAAA,CAAAL,EAAnI,EAAa,CAAC,KAAK,cAAkB,MAAK,gBAAwC,QAAA,AAAA,GAAS,sBAAgC,EAAI,IAAA,EAAA,YAAA,aAAA,EAAA,KAAA,IACc,EAAA,KAAA,EAAA,CAAA,UAAA,WAAA,CAAA,EAAAA,EAA7I,EAAa,CAAC,KAAK,cAAkB,MAAK,gBAAgD,WAAS,EAAsC,4BAAA,EAAA,IAAA,EAAA,YAAA,eAAA,EAAA,KAAA,0GAMtKsB,EAAiO,GAAA,EAAA,EAAAtB,EAAzL,EAA4B,CAAG,QAAA,EAAA,6BAAuC,kBAAY,EAAA,kBAAG,MAAK,EAAA,MAAyC,QAAM,EAAe,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,6BAAA,IAAA,OAAA,EAAA,iBACW,KAAA,EAAA,CAAA,UAAA,oBAAA,QAAA,QAAA,CAAA,EAAAA,EAA9J,EAAwB,CAAG,QAAc,EAAA,yBAAe,aAAK,EAAA,aAAqC,QAAM,EAAgB,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,yBAAA,IAAA,OAAA,EAAA,6fCqF7K,KAAKd,IAAa,EAAa,CAC3B,KAAM,yBACN,WAAY,CAAE,6BAAiB6B,SAAWD,EAAQ,OAAA1B,EAAA,SAAQ8B,EAAU,uBAAqB,EACzF,MAAO,CAAE,sBAAuB,CAAE,KAAM,OAA2C,SAAU,IAAQ,SAAU,CAAE,KAAM,OAAQ,SAAU,IAAQ,SAAU,CAAE,KAAM,OAAQ,SAAU,GAAO,EAC5L,MAAO,CAAC,SAAS,EACjB,SAAU,CACN,cAAwB,CACpB,GAAI,GAAI,EACH,YAAA,WAAW,QAAQ,AAAC,GAAS,CAC1B,AAAA,EAAK,MAAM,OAAS,GAAQ,IAAA,EAAA,CACnC,EACM,IAAI,EACf,EACA,gBAA0B,CACtB,MAAI,QAAK,GAAG,UAAY,KAAK,aAGjC,CACJ,EACA,MAAO,CACI,MAAA,CAAA,aACHe,EACA,gBACA,KAAM,KACN,SAAU,CAAC,EACX,WAAY,CAAC,EACb,YAAa,CAAC,EACd,GAAIC,EAAY,EAChB,aAAc,KACd,qBAAsB,GACtB,qBAAsB,CAAC,EACvB,2BAA4B,CAAC,EAC7B,cAAe,KACf,QAAS,CAAE,OAAQ,CAAC,CAAa,CAAE,CAAA,CAE3C,EACA,MAAO,CACH,sBAAuB,CACnB,SAAU,CACN,KAAK,SAAS,CAClB,EACA,KAAM,EACV,CACJ,EACA,SAAU,CACN,KAAK,SAAS,CAClB,EACA,aAAc,CAIV,KAAM,GAAwC,CAC1C,0BAJoB,AAAC,GACd,CAAC,KAAK,sBAAwB,CAGV,EAKxB,MAHkB,CACrB,SAAU,GAAkB,WAAY,GAAa,YAAY,SAAU,CAAgB,CAAA,CAGnG,EACA,QAAS,CACL,UAAW,CACP,KAAK,KAAO,KAAK,SACjB,KAAK,cAAgB,KAAK,sBAC1B,KAAK,WAAa,KAAK,mBAAmB,KAAK,aAAa,EAC5D,KAAK,6BAA6B,EAClC,KAAK,mCAAmC,CAC5C,EACA,8BAA+B,OACtB,KAAA,qBAAuB,QAAK,wBAAL,cAA4B,cAAc,OAAO,AAAC,GAAA,OAAiB,eAAK,wBAAL,cAA4B,aAAc,EAAa,iBAC1J,EACA,oCAAqC,CACjC,KAAK,2BAA6B,GAC7B,KAAA,SAAS,eAAe,QAAQ,AAAC,GAAO,KAAK,2BAA2B,KAAK,CAAE,CAAC,EAChF,KAAA,SAAS,cAAc,QAAQ,AAAC,GAAO,KAAK,2BAA2B,KAAK,CAAE,CAAC,CACxF,EACA,mBAAmB,EAAM,CACrB,GAAI,GAAM,CAAA,EACL,SAAA,QAAQ,AAAC,GAAU,CAChB,EAAA,KAAK,EAAM,IAAI,GACpB,IAAI,EACA,EAAI,KAAK,IAAI,CACxB,EACA,aAAc,CACV,KAAK,SAAW,GAChB,KAAK,aAAe,KACpB,KAAK,YAAc,GACnB,KAAK,WAAa,KAAK,mBAAmB,KAAK,aAAa,EAC5D,KAAK,qBAAuB,EAChC,EACA,wBAAwB,EAAM,CACrB,KAAA,YAAc,KAAK,mBAAmB,CAAI,CACnD,EACA,mBAAmB,EAAO,CACtB,GAAI,GAAI,CAAA,EACR,MAAI,IACI,EAAM,SACA,EAAA,QAAQ,QAAQ,SAAU,EAAM,CAElC,AAAK,EAAK,eAAe,mBAAmB,GACtC,EAAA,KAAK,CAAE,KAAM,EAAK,KAAM,MAAO,EAAK,WAAY,MAAO,CAAA,CAAI,CAAA,CACjE,CACH,EAEF,CACX,EACA,KAAM,gBAAgB,OACb,KAAA,SAAS,cAAgB,GACzB,KAAA,SAAS,mBAAqB,GAC9B,KAAA,SAAS,gBAAkB,KAAK,aAAa,WAC7C,KAAA,SAAS,qBAAuB,QAAK,gBAAL,cAAoB,WACpD,KAAA,WAAW,QAAQ,AAAC,GAAU,CAC3B,AAAA,EAAM,MAAM,OAAS,GACrB,MAAK,SAAS,mBAAmB,KAAK,EAAM,KAAK,EACjD,KAAK,SAAS,cAAc,KAAK,EAAM,MAAM,GAAG,KAAK,EACzD,CACH,EACK,KAAA,GAAW,CAAE,KAAM,KAAK,SAAU,KAAM,EAAS,KAAK,QAAQ,GAC9D,KAAA,MAAK,MACN,KAAK,gEAAwE,CAAQ,EACrF,KAAK,AAAC,GAAiC,CACpC,KAAK,KAAO,EAAW,KAAK,KAAM,EAAS,IAAI,EAAE,YACjD,KAAK,YAAY,EACjB,KAAK,6BAA6B,CAAA,CACrC,EACA,MAAM,IAAM,CAAA,CAAE,EACd,QAAQ,IAAM,EAAS,KAAK,QAAQ,CAAC,CAC9C,EACA,KAAM,eAAc,EAAM,CAChB,KAAA,GAAW,CAAE,KAAM,EAAM,KAAM,EAAS,KAAK,QAAQ,GACrD,KAAA,MAAK,MACN,KAAK,mEAA2E,CAAQ,EACxF,KAAK,AAAC,GAAiC,CACpC,KAAK,KAAO,EAAW,KAAK,KAAM,EAAS,IAAI,EAAE,YACjD,KAAK,6BAA6B,CAAA,CACrC,EACA,MAAM,IAAM,CAAA,CAAE,EACd,QAAQ,IAAM,EAAS,KAAK,QAAQ,CAAC,CAC9C,CACJ,CACJ,CAAC,MA1PqB,MAAM,yBACA3C,GAAA,CAAA,MAAA,8EAoCXe,GAAA,CAAe,GAAA,eAAA,MAAA,qDAEVC,GAAA,CAAA,MAAM,sDAWEC,GAAO,CAAC,IAAK,OAAA,MAAA,2BAKrBC,GAAA,CAAA,MAAM,sDAWEC,GAAS,CAAC,IAAK,SAAA,MAAA,2BAKvBC,GAAA,CAAA,MAAM,sDAEEC,GAAS,CAAC,IAAK,SAAA,MAAA,2BAIvBjB,GAAA,CAAA,MAAM,sDAEE4B,GAAS,CAAC,IAAK,SAAA,MAAA,8OArFzC3B,GAiCY,EAAAQ,EAAAgB,EAAA,KAAA,CAAApB,EAjCO,EAAoB,CAAE,MAAM,EAAA,qBAAiC,MAAA,iCAAyB,iBAAW,QAAgB,WAAS,QAAA,QAAA,EAAA,QAAU,mBAAoB,SAAa,GAAkB,AAAA,GAAA,EAAA,QAAA,GAAA,mBAAA,EAAA,aAAA,kBAC3L,EAAA,CAAA,MAAAD,EAAA,IAAA,wCAGA,CAAA,EAAA,OACPA,EAKM,IAAA,CAAAE,EAJF,MAGOE,GAHP,CAC8BF,EAAA,OAAAV,GAAA,CAC1Bc,GAAAL,EAAiB,EAAmB,CAAA,MAAA,sDAAoC,sBAAe,EAAA,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,QAAA,OAAA,MAAA,GAAA,YAAA,EAAA,GAAA,eAAA,sDAInGD,EAAoE,IAAA,CAAAC,EAAtD,EAAM,CAAE,MAAM,OAAsB,OAAQ,EAAE,GAAI,aAAA,EAAA,SAAA,EACqC,EAAA,KAAA,EAAA,CAAA,QAAA,CAAA,EAAAA,EAAvF,EAAiB,CAAE,MAAM,kBAA4C,OAAQ,EAAE,GAAI,mCAAA,EAAA,SAAA,EAKxF,EAAA,KAAA,EAAA,CAAA,QAAA,CAAA,EAAAA,EAJQ,EAAE,CAA0C,OAAQ,EAAE,GAAI,qCAAA,EAAA,SAAA,EAC5D,EAAA,CAAA,KAAAD,EAAA,AAAA,GAAA,CACmEwC,EAAA3C,GAAA,EAAAQ,EAAA,OAAkB,KAAC,CAAAoD,EAAAtD,EAAA,EAAA,mBAAA,EAAA,KAAA,aAAA,CAAA,EAAA,CAAA,OAAxE,EAAA,EAAA,mBAAA,EAAA,KAAA,aAAA,4BAG6E,EAAA,CAAA,QAAA,CAAA,EAAAF,EAA5F,EAAsB,CAAE,MAAM,uBAA4C,OAAQ,EAAE,GAAI,mCAAA,EAAA,SAAA,EAK7F,EAAA,KAAA,EAAA,CAAA,QAAA,CAAA,EAAAA,EAJQ,EAAE,CAA0C,OAAQ,EAAE,GAAI,qCAAA,EAAA,SAAA,EAC5D,EAAA,CAAA,KAAAD,EAAA,AAAA,GAAA,CACwEwC,EAAA3C,GAAA,EAAAQ,EAAA,OAAkB,KAAC,CAAAoD,EAAAtD,EAAA,EAAA,mBAAA,EAAA,KAAA,kBAAA,CAAA,EAAA,CAAA,OAA7E,EAAA,EAAA,mBAAA,EAAA,KAAA,kBAAA,4BAUpB,EAAA,CAAA,QAAA,CAAA,EAAAF,EAPK,EAAE,CAAoC,MAAMF,EAAc,EAAA,aAAA,MAAA,eAAA,EAAA,MAAA,cACzD,EAAA,CAAA,OACPC,EAA4G,IAAA,CAAAC,EAA5F,EAAE,CAAgB,MAAM,EAAA,GAAA,YAAA,EAA8B,MAAK,6BAAA,QAAA,EAAA,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,qBAAA,sBAEpE,CAAA,EAAA,KACPD,EAA0F,AAAA,GAAA,CAAAC,EAA7E,EAAa,CAAC,KAAK,cAAkB,MAAK,gBAAA,QAAA,AAAA,GAAA,EAAA,cAAA,EAAA,IAAA,gDAkE1D,EAAA,EAAA,CAAA,QAAA,UAAA,oBAAA,CAAA,EAAAA,EA7DK,EAAU,CAAE,MAAK,WAAgC,MAAOF,EAAE,EAAoB,aAAA,MAAA,QAAA,EAAG,QAAO,EAAI,qBAAG,MAAA,GAAA,SAAA,EAC9F,EAAA,CAAA,OACPC,EAIU,IAAA,CAAAC,EAHU,EACqC,CAAA,MAAA,8CAAA,EAAA,CAAA,MAAAD,EAAA,IAAA,8DAqDlD,CAAA,EAAA,OACPA,EAA4F,IAAA,CAA9EC,EAAA,EAAA,CAA2B,MAAO,0BAAsB,MAAK,EAAE,GAAW,eAAA,EAAA,QAAA,EAAA,WACsC,EAAA,KAAA,EAAA,CAAA,QAAA,SAAA,CAAA,EAAhHA,EAAA,EAAA,CAAgC,MAAO,+BAAsB,QAAU,GAAc,eAAA,EAAG,SAAO,EAAA,eAAA,QAAA,EAAA,gEAnDjHD,EA6CO,IAAA,CAAAE,EA5CH,OAeMK,GAAA,CAAAL,EAdF,MAYOM,GAZP,CAUMN,EAAA,OAAAT,GAAA,CARWQ,EAAA,EAAA,CACT,GAAA,OAEgE,MAAAmC,EAAA,CAAA,oBAAA,CAAA,YAAA,EAAA,GAAA,SAAA,KAAA,UAAA,EAAA,GAAA,SAAA,KAAA,qEADhE,EAAsC,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,GAAA,SAAA,KAAA,OAAA,GAIrC,eAAI,CAAA,KAAA,EAAA,EACJ,OAAM,iBAAE,GAAK,SAAA,KAAA,OAAA,GAAA,SAAA,EAAA,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,MAAA,SAAA,EAElB,EAAA,KAAA,EAAA,CAAA,aAA2G,OAA3G,CAAA,EAAAlC,EAAA,QAAAO,GAAAN,EAAA,EAAA,GAAA,oCAAA,CAAA,EAAA,KAAA,CAAA,CAEJ,CAAA,EAAAF,EAA4B,EAAQ,CAAE,MAAO,SAAmB,MAAA,EAAA,GAAA,SAAA,KAAA,0BAAA,CAAA,UAAA,EAAA,GAAA,oCAAA,CAAA,gDAEpE,CAAA,EAAAC,EACI,MAYOQ,GAZP,CAUMR,EAAA,OAAAR,GAAA,CAAAO,EARK,EAAQ,CACX,GAAA,SAAA,MAAAmC,EACY,qBAAqB,CAAM,YAAA,EAAA,GAAA,SAAA,YAAA,UAAA,EAAA,GAAA,SAAA,YAAA,MAAA,CAAA,CAAA,EAAA,WAAA,EAAA,GAAA,SAAA,YAAA,OACvC,sBAAkB,EAAA,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,GAAA,SAAA,YAAA,OAAA,GAClB,YAAY,OACX,YAAS,QAET,QAAI,EAAA,aAAA,YAAA,OAAA,EAAA,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,GAAA,SAAA,YAAA,OAAA,EAET,EAAA,KAAA,EAAA,CAAA,aAA8G,UAA9G,OAA8G,CAAA,EAAAlC,EAAA,QAAAS,GAAAR,EAAA,EAAA,GAAA,qCAAA,CAAA,EAAA,KAAA,CAAA,CAElH,CAAA,EAAAF,EAA4B,EAAQ,CAAE,MAAO,SAA0B,MAAA,EAAA,GAAA,SAAA,YAAA,0BAAA,CAAA,UAAA,EAAA,GAAA,qCAAA,CAAA,gDAE3E,CAAA,EAAAC,EACI,MAGOU,GAHP,CACsLV,EAAA,OAAAP,GAAA,CAAAM,EAArK,EAAQ,CAAC,GAAA,SAAA,MAAA,8CAAkD,sBAAS,EAA0B,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,aAAA,GAAE,QAAY,EAAA,2BAAQ,YAAM,OAAA,SAAA,EAAA,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,wBAAA,EAAA,KAAA,EACvI,EAAA,KAAA,EAAA,CAAA,aAAgH,SAAhH,CAAA,EAAAC,EAAA,QAAAW,GAAAV,EAAA,EAAA,GAAA,wCAAA,CAAA,EAAA,CAAA,GAGR,CAAA,EAAAD,EACI,MAGON,GAHP,CACqGM,EAAA,OAAAY,GAAA,CAAAb,EAAnF,EAAQ,CAAC,GAAA,SAAA,MAAA,oDAAwD,sBAAc,EAAA,KAAA,GAAA,IAAA,AAAA,GAAA,EAAA,cAAA,KAAA,GAAA,SAAA,EACmB,EAAA,KAAA,EAAA,CAAA,YAAA,CAAA,EAAAC,EAAA,QAAAsB,GAAArB,EAAA,EAAA,GAAA,wCAAA,CAAA,EAAA,CAAA,KAK5H,CAAA,EAAAF,EAAuB,EAAS,CAAE,MAAA,UAA2B,YAAa,EAAA,YAAa,YAAA,EAAA,WAAyC,gCAAY,GAAG,OAAA,EAAA,OAAA,sBAAA,EAAA,mjBC2BvJ,KAAKd,IAAa,EAAa,CAC3B,KAAM,yBACN,WAAY,CAAE,6BAAiB6B,SAAWD,EAAQ,OAAA1B,EAAA,SAAQ8B,EAAU,uBAAqB,EACzF,MAAO,CAAE,sBAAuB,CAAE,KAAM,OAA2C,SAAU,IAAQ,SAAU,CAAE,KAAM,OAAQ,SAAU,IAAQ,SAAU,CAAE,KAAM,OAAQ,SAAU,GAAO,EAC5L,MAAO,CAAC,SAAS,EACjB,SAAU,CACN,cAAwB,CACpB,GAAI,GAAI,EACH,YAAA,YAAY,QAAQ,AAAC,GAAS,CAC3B,AAAA,EAAK,MAAM,OAAS,GAAQ,IAAA,EAAA,CACnC,EACM,IAAI,EACf,EACA,gBAA0B,CACtB,MAAI,QAAK,GAAG,UAAY,KAAK,aAGjC,CACJ,EACA,MAAO,CACI,MAAA,CACH,GAAIgB,EAAY,EAChB,cAAe,KACf,KAAM,KACN,qBAAsB,CAAC,EACvB,gBAAA,aACAD,EACA,qBAAsB,GACtB,2BAA4B,CAAC,EAC7B,SAAU,CAAC,EACX,WAAY,CAAC,EACb,YAAa,CAAC,EACd,aAAc,KACd,QAAS,CACL,OAAQ,CAAC,CAAa,CAC1B,CAAA,CAER,EACA,MAAO,CACH,sBAAuB,CACnB,SAAU,CACN,KAAK,SAAS,CAClB,EACA,KAAM,EACV,CACJ,EACA,SAAU,CACN,KAAK,SAAS,CAClB,EACA,aAAc,CAIV,KAAM,GAAwC,CAC1C,2BAJqB,AAAC,GACf,CAAC,KAAK,sBAAwB,CAGT,EAKzB,MAHkB,CACrB,SAAU,GAAkB,WAAY,GAAa,YAAY,SAAU,CAAgB,CAAA,CAGnG,EACA,QAAS,CACL,UAAW,CACP,KAAK,KAAO,KAAK,SACjB,KAAK,cAAgB,KAAK,sBAC1B,KAAK,WAAa,KAAK,mBAAmB,KAAK,aAAa,EAC5D,KAAK,6BAA6B,EAClC,KAAK,mCAAmC,CAC5C,EACA,8BAA+B,OACtB,KAAA,qBAAuB,QAAK,wBAAL,cAA4B,cAAc,OAAO,AAAC,GAAA,OAAiB,eAAK,wBAAL,cAA4B,cAAe,EAAa,iBAC3J,EACA,oCAAqC,CACjC,KAAK,2BAA6B,GAC7B,KAAA,SAAS,eAAe,QAAQ,AAAC,GAAO,KAAK,2BAA2B,KAAK,CAAE,CAAC,EAChF,KAAA,SAAS,cAAc,QAAQ,AAAC,GAAO,KAAK,2BAA2B,KAAK,CAAE,CAAC,CACxF,EACA,mBAAmB,EAAM,CACrB,GAAI,GAAM,CAAA,EACL,SAAA,QAAQ,AAAC,GAAU,CAChB,EAAA,KAAK,EAAM,IAAI,GACpB,IAAI,EACA,EAAI,KAAK,IAAI,CACxB,EACA,aAAc,CACV,KAAK,SAAW,GAChB,KAAK,aAAe,KACpB,KAAK,YAAc,GACnB,KAAK,WAAa,KAAK,mBAAmB,KAAK,aAAa,EAC5D,KAAK,qBAAuB,EAChC,EACA,wBAAwB,EAAM,CACrB,KAAA,YAAc,KAAK,mBAAmB,CAAI,CACnD,EACA,mBAAmB,EAAO,CACtB,GAAI,GAAI,CAAA,EACR,MAAI,IACI,EAAM,SACA,EAAA,QAAQ,QAAQ,SAAU,EAAM,CAElC,AAAK,EAAK,eAAe,mBAAmB,GACtC,EAAA,KAAK,CAAE,KAAM,EAAK,KAAM,MAAO,EAAK,WAAY,MAAO,CAAA,CAAI,CAAA,CACjE,CACH,EAEF,CACX,EACA,KAAM,iBAAiB,OACd,KAAA,SAAS,cAAgB,GACzB,KAAA,SAAS,mBAAqB,GAC9B,KAAA,SAAS,gBAAkB,QAAK,gBAAL,cAAoB,WAC/C,KAAA,SAAS,qBAAuB,KAAK,aAAa,WAClD,KAAA,YAAY,QAAQ,AAAC,GAAU,CAC5B,AAAA,EAAM,MAAM,OAAS,GACrB,MAAK,SAAS,mBAAmB,KAAK,EAAM,KAAK,EACjD,KAAK,SAAS,cAAc,KAAK,EAAM,MAAM,GAAG,KAAK,EACzD,CACH,EACK,KAAA,GAAW,CAAE,KAAM,KAAK,SAAU,KAAM,EAAS,KAAK,QAAQ,GAC9D,KAAA,MAAK,MACN,KAAK,gEAAwE,CAAQ,EACrF,KAAK,AAAC,GAAiC,CACpC,KAAK,KAAO,EAAW,KAAK,KAAM,EAAS,IAAI,EAC/C,KAAK,YAAY,EACjB,KAAK,6BAA6B,CAAA,CACrC,EACA,MAAM,IAAM,CAAA,CAAE,EACd,QAAQ,IAAM,EAAS,KAAK,QAAQ,CAAC,CAC9C,EACA,KAAM,gBAAe,EAAM,CACjB,KAAA,GAAW,CAAE,KAAM,EAAM,KAAM,EAAS,KAAK,QAAQ,GACrD,KAAA,MAAK,MACN,KAAK,mEAA2E,CAAQ,EACxF,KAAK,AAAC,GAAiC,CACpC,KAAK,KAAO,EAAW,KAAK,KAAM,EAAS,IAAI,EAC/C,KAAK,6BAA6B,CAAA,CACrC,EACA,MAAM,IAAM,CAAA,CAAE,EACd,QAAQ,IAAM,EAAS,KAAK,QAAQ,CAAC,CAC9C,CACJ,CACJ,CAAC,MA5PqB,MAAM,yBACA1C,GAAA,CAAA,MAAA,8EAoCXe,GAAA,CAAe,GAAA,eAAA,MAAA,qDAEVC,GAAA,CAAA,MAAM,sDAWEC,GAAO,CAAC,IAAK,OAAA,MAAA,2BAKrBC,GAAA,CAAA,MAAM,sDAWEC,GAAS,CAAC,IAAK,SAAA,MAAA,2BAKvBC,GAAA,CAAA,MAAM,sDAEEC,GAAS,CAAC,IAAK,SAAA,MAAA,2BAIvBjB,GAAA,CAAA,MAAM,sDAEE4B,GAAS,CAAC,IAAK,SAAA,MAAA,8OArFzC3B,GAiCY,EAAAQ,EAAAgB,EAAA,KAAA,CAAApB,EAjCO,EAAoB,CAAE,MAAM,EAAA,qBAAiC,MAAA,iCAAyB,iBAAW,QAAgB,WAAS,QAAA,QAAA,EAAA,QAAU,mBAAoB,SAAa,GAAkB,AAAA,GAAA,EAAA,QAAA,GAAA,mBAAA,EAAA,aAAA,kBAC3L,EAAA,CAAA,MAAAD,EAAA,IAAA,wCAGA,CAAA,EAAA,OACPA,EAKM,IAAA,CAAAE,EAJF,MAGOE,GAHP,CAC8BF,EAAA,OAAAV,GAAA,CAC1Bc,GAAAL,EAAiB,EAAmB,CAAA,MAAA,sDAAoC,sBAAe,EAAA,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,QAAA,OAAA,MAAA,GAAA,YAAA,EAAA,GAAA,eAAA,sDAInGD,EAAoE,IAAA,CAAAC,EAAtD,EAAM,CAAE,MAAM,OAAsB,OAAQ,EAAE,GAAI,aAAA,EAAA,SAAA,EACqC,EAAA,KAAA,EAAA,CAAA,QAAA,CAAA,EAAAA,EAAvF,EAAiB,CAAE,MAAM,kBAA4C,OAAQ,EAAE,GAAI,mCAAA,EAAA,SAAA,EAKxF,EAAA,KAAA,EAAA,CAAA,QAAA,CAAA,EAAAA,EAJK,EAAc,CAAE,MAAM,eAA8C,OAAQ,EAAE,GAAI,qCAAA,EAAA,SAAA,EACjF,EAAA,CAAA,KAAAD,EAAA,AAAA,GAAA,CACmEwC,EAAA3C,GAAA,EAAAQ,EAAA,OAAkB,KAAC,CAAAoD,EAAAtD,EAAA,EAAA,mBAAA,EAAA,KAAA,aAAA,CAAA,EAAA,CAAA,OAAxE,EAAA,EAAA,mBAAA,EAAA,KAAA,aAAA,4BAG6E,EAAA,CAAA,QAAA,CAAA,EAAAF,EAA5F,EAAsB,CAAE,MAAM,uBAA4C,OAAQ,EAAE,GAAI,mCAAA,EAAA,SAAA,EAK7F,EAAA,KAAA,EAAA,CAAA,QAAA,CAAA,EAAAA,EAJQ,EAAE,CAA0C,OAAQ,EAAE,GAAI,qCAAA,EAAA,SAAA,EAC5D,EAAA,CAAA,KAAAD,EAAA,AAAA,GAAA,CACwEwC,EAAA3C,GAAA,EAAAQ,EAAA,OAAkB,KAAC,CAAAoD,EAAAtD,EAAA,EAAA,mBAAA,EAAA,KAAA,kBAAA,CAAA,EAAA,CAAA,OAA7E,EAAA,EAAA,mBAAA,EAAA,KAAA,kBAAA,4BAUpB,EAAA,CAAA,QAAA,CAAA,EAAAF,EAPK,EAAE,CAAoC,MAAMF,EAAc,EAAA,aAAA,MAAA,eAAA,EAAA,MAAA,cACzD,EAAA,CAAA,OACPC,EAA4G,IAAA,CAAAC,EAA5F,EAAE,CAAgB,MAAM,EAAA,GAAA,YAAA,EAA8B,MAAK,6BAAA,QAAA,EAAA,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,qBAAA,sBAEpE,CAAA,EAAA,KACPD,EAA2F,AAAA,GAAA,CAAAC,EAA9E,EAAa,CAAC,KAAK,cAAkB,MAAK,gBAAA,QAAA,AAAA,GAAA,EAAA,eAAA,EAAA,IAAA,gDAkE1D,EAAA,EAAA,CAAA,QAAA,UAAA,oBAAA,CAAA,EAAAA,EA7DK,EAAU,CAAE,MAAK,WAAgC,MAAOF,EAAE,EAAoB,aAAA,MAAA,QAAA,EAAG,QAAO,EAAI,qBAAG,MAAA,GAAA,SAAA,EAC9F,EAAA,CAAA,OACPC,EAIU,IAAA,CAAAC,EAHU,EACsC,CAAA,MAAA,8CAAA,EAAA,CAAA,MAAAD,EAAA,IAAA,+DAqDnD,CAAA,EAAA,OACPA,EAA4F,IAAA,CAA9EC,EAAA,EAAA,CAA2B,MAAO,0BAAsB,MAAK,EAAE,GAAW,eAAA,EAAA,QAAA,EAAA,WACuC,EAAA,KAAA,EAAA,CAAA,QAAA,SAAA,CAAA,EAAjHA,EAAA,EAAA,CAAgC,MAAO,+BAAsB,QAAU,GAAc,eAAA,EAAG,SAAO,EAAA,eAAA,QAAA,EAAA,iEAnDjHD,EA6CO,IAAA,CAAAE,EA5CH,OAeMK,GAAA,CAAAL,EAdF,MAYOM,GAZP,CAUMN,EAAA,OAAAT,GAAA,CARWQ,EAAA,EAAA,CACT,GAAA,OAEgE,MAAAmC,EAAA,CAAA,oBAAA,CAAA,YAAA,EAAA,GAAA,SAAA,KAAA,UAAA,EAAA,GAAA,SAAA,KAAA,qEADhE,EAAsC,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,GAAA,SAAA,KAAA,OAAA,GAIrC,eAAI,CAAA,KAAA,EAAA,EACJ,OAAM,iBAAE,GAAK,SAAA,KAAA,OAAA,GAAA,SAAA,EAAA,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,MAAA,SAAA,EAElB,EAAA,KAAA,EAAA,CAAA,aAA2G,OAA3G,CAAA,EAAAlC,EAAA,QAAAO,GAAAN,EAAA,EAAA,GAAA,oCAAA,CAAA,EAAA,KAAA,CAAA,CAEJ,CAAA,EAAAF,EAA4B,EAAQ,CAAE,MAAO,SAAmB,MAAA,EAAA,GAAA,SAAA,KAAA,0BAAA,CAAA,UAAA,EAAA,GAAA,oCAAA,CAAA,gDAEpE,CAAA,EAAAC,EACI,MAYOQ,GAZP,CAUMR,EAAA,OAAAR,GAAA,CAAAO,EARK,EAAQ,CACX,GAAA,SAAA,MAAAmC,EACY,qBAAqB,CAAM,YAAA,EAAA,GAAA,SAAA,YAAA,UAAA,EAAA,GAAA,SAAA,YAAA,MAAA,CAAA,CAAA,EAAA,WAAA,EAAA,GAAA,SAAA,YAAA,OACvC,sBAAkB,EAAA,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,GAAA,SAAA,YAAA,OAAA,GAClB,YAAY,OACX,YAAS,QAET,QAAI,EAAA,aAAA,YAAA,OAAA,EAAA,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,GAAA,SAAA,YAAA,OAAA,EAET,EAAA,KAAA,EAAA,CAAA,aAA8G,UAA9G,OAA8G,CAAA,EAAAlC,EAAA,QAAAS,GAAAR,EAAA,EAAA,GAAA,qCAAA,CAAA,EAAA,KAAA,CAAA,CAElH,CAAA,EAAAF,EAA4B,EAAQ,CAAE,MAAO,SAA0B,MAAA,EAAA,GAAA,SAAA,YAAA,0BAAA,CAAA,UAAA,EAAA,GAAA,qCAAA,CAAA,gDAE3E,CAAA,EAAAC,EACI,MAGOU,GAHP,CACqGV,EAAA,OAAAP,GAAA,CAAAM,EAAnF,EAAQ,CAAC,GAAA,SAAA,MAAA,oDAAwD,sBAAc,EAAA,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,cAAA,KAAA,GAAA,SAAA,EACmB,EAAA,KAAA,EAAA,CAAA,YAAA,CAAA,EAAAC,EAAA,QAAAW,GAAAV,EAAA,EAAA,GAAA,wCAAA,CAAA,EAAA,CAAA,GAGxH,CAAA,EAAAD,EACI,MAGON,GAHP,CACsLM,EAAA,OAAAY,GAAA,CAAAb,EAArK,EAAQ,CAAC,GAAA,SAAA,MAAA,8CAAkD,sBAAS,EAA0B,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,aAAA,GAAE,QAAY,EAAA,2BAAQ,YAAM,OAAA,SAAA,EAAA,KAAA,GAAA,IAAA,AAAA,GAAA,EAAA,wBAAA,EAAA,KAAA,EACvI,EAAA,KAAA,EAAA,CAAA,aAAgH,SAAhH,CAAA,EAAAC,EAAA,QAAAsB,GAAArB,EAAA,EAAA,GAAA,wCAAA,CAAA,EAAA,CAAA,KAKZ,CAAA,EAAAF,EAAuB,EAAS,CAAE,MAAA,UAA0B,YAAa,EAAA,WAAc,YAAA,EAAA,YAAyC,gCAAY,GAAG,OAAA,EAAA,OAAA,sBAAA,EAAA,uZCjDnJ,KAAKd,IAAa,EAAa,CAC3B,KAAM,oCACN,WAAY,CAAE4B,OAAAA,YAAQC,EAAA,OAAW3B,CAAO,EACxC,MAAO,CAAE,QAAS,CAAE,KAAM,SAAW,eAAgB,CAAE,KAAM,KAAS,EAAA,YAAa,CAAE,KAAM,OAAA,EAAW,MAAO,CAAE,KAAM,MAAQ,EAC7H,MAAO,CAAC,QAAS,MAAM,EACvB,MAAO,CACI,MAAA,CACH,2CACA,KAAM,CAAC,EACP,eAAgB,CAAC,EACjB,QAAS,CACL,OAAQ,CAAC,CAAa,CAC1B,EACA,QAAS,EAAA,CAEjB,EACA,MAAO,CACH,gBAAiB,CACb,KAAK,WAAW,CACpB,EACA,aAAc,CACV,KAAK,WAAW,CACpB,CACJ,EACA,SAAU,CACN,KAAK,WAAW,EAChB,KAAK,WAAW,CACpB,EACA,QAAS,CACL,YAAa,CACT,KAAK,eAAiB,GACtB,KAAK,KAAO,KAAK,cACrB,EACA,YAAa,CACT,KAAK,QAAU,KAAK,WACxB,EACA,aAAc,CACV,KAAK,eAAiB,GACtB,KAAK,MAAM,OAAO,CACtB,EACA,MAAO,CACH,KAAK,MAAM,OAAQ,CAAC,GAAG,KAAK,cAAc,CAAC,CAC/C,CACJ,CACJ,CAAC,MArEqB,MAAM,yBACAG,GAAA,CAAA,MAAA,iOAjBjBK,GAAmC,EAAAC,EAAA,EAAA,CAAE,GAAA,oCAA8D,MAAOC,EAAS,EAAA,wCAAA,OAAA,KAAA,EAAG,QAAO,EAAI,QAAG,MAAA,GAAA,SAAA,EAChI,EAAA,CAAA,OACPC,EAIU,IAAA,CAAAC,EAHU,EACuC,CAAA,MAAA,8CAAA,EAAA,CAAA,MAAAD,EAAA,IAAA,gEAsBpD,CAAA,EAAA,OACPA,EAAqG,IAAA,CAAvFC,EAAA,EAAA,CAAgC,MAAK,+BAAA,QAAA,EAAA,kEACyC,EAAA,CAAA,SAAA,CAAA,EAA9EA,EAAA,EAAA,CAAgC,MAAK,+BAAA,QAAA,EAAA,kFApBSD,EAAO,IAAA,CAAA,EAAA,QAAAH,KAAAC,EAAA,EAAA,CAA1D,IAAI,EAAiB,KAAK,gBAAA,MAAA,qBAEvCyB,EAcY,GAAA,EAAA,EAAAtB,EAdO,EAAI,CAAE,MAAM,EAAA,KAAwC,MAAA,gCAAA,UAAA,EAAA,eAA2B,qBAAc,EAAA,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,eAAA,GAAS,QAAS,OAAA,QAAA,EAAA,QAAU,mBAAoB,EAAwC,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,QAAA,GAAA,mBAAA,EAAA,wCAAA,kBACzL,EAAA,CAAA,MAAAD,EAAA,IAAA,wCAGA,CAAA,EAAA,OACPA,EAKM,IAAA,CAAAE,EAJF,MAGOE,GAHP,CAC8BF,EAAA,OAAAV,GAAA,CAC1Bc,GAAAL,EAAiB,EAAmB,CAAA,MAAA,sDAAoC,sBAAe,EAAA,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,QAAA,OAAA,MAAA,GAAA,YAAA,EAAA,GAAA,eAAA,sDAInGD,EAAsG,IAAA,CAAAC,EAA9F,EAAwB,CAAE,cAAK,WAAA,MAAAF,EAAA,EAAA,wCAAA,iBAAA,CACY,EAAA,KAAA,EAAA,CAAA,OAAA,CAAA,EAAAE,EAArC,EAAM,CAAE,MAAM,OAAA,OAAA,EAAA,GAAA,aAAA,gJCwBxC,KAAKd,IAAa,EAAa,CAC3B,KAAM,6BACN,MAAO,CAAE,sBAAuB,CAAE,KAAM,MAA6C,EAAA,SAAU,CAAE,KAAM,QAAU,SAAU,CAAE,KAAM,OAAS,EAC5I,WAAY,CAAE4B,OAAAA,YAAQC,EAAW,gCAA8B,EAC/D,MAAO,CACI,MAAA,CACH,qCACA,KAAM,KACN,cAAe,KACf,eAAgB,CAAC,EACjB,QAAS,CACL,OAAQ,CAAC,CAAa,CAC1B,EACA,wBAAyB,CAAC,EAC1B,sBAAuB,GACvB,QAAS,EAAA,CAEjB,EACA,MAAO,CACH,uBAAwB,CACpB,KAAK,SAAS,CAClB,CACJ,EACA,OAAQ,CAEJ,MAAO,CAAA,MADOzB,GACC,CACnB,EACA,SAAU,CACN,KAAK,SAAS,CAClB,EACA,QAAS,CACL,UAAW,CACP,KAAK,SAAS,EACd,KAAK,kBAAkB,CAC3B,EACA,UAAW,CACP,KAAK,KAAO,KAAK,QACrB,EACA,mBAAoB,CAChB,KAAK,cAAgB,KAAK,sBAC1B,KAAK,mBAAmB,CAC5B,EACA,oBAAqB,OACjB,KAAK,eAAiB,GAClB,KAAK,eACL,SAAK,cAAc,iBAAnB,QAAmC,QAAQ,AAAC,GAAY,KAAK,eAAe,KAAK,KAAK,KAAK,eAAe,EAAG,mBAAmB,GAExI,EACA,4BAA6B,SACzB,KAAK,wBAA0B,CAAC,GAAG,KAAK,KAAK,cAAc,EACrD,KAAA,GAAkB,WAAK,gBAAL,cAAoB,iBAApB,cAAoC,IAAI,AAAC,GAAY,EAAG,oBAAoB,OAEpG,GAAI,EACA,OAAS,GAAI,EAAgB,OAAS,EAAG,GAAK,EAAG,IAC7C,KAAK,wBAAwB,OAAO,EAAgB,GAAI,CAAC,EAIjE,KAAK,sBAAwB,EACjC,EACA,2BAA2B,EAAoB,CAC3C,KAAK,SAAS,QAAQ,CAClB,QAAS,KAAK,GAAG,yCAAyC,EAC1D,OAAQ,KAAK,GAAG,uCAAuC,EACvD,KAAM,6BACN,OAAQ,SAAY,KAAM,MAAK,oBAAoB,CAAa,CAAA,CACnE,CACL,EACA,KAAM,qBAAoB,EAAoB,OAC1C,KAAK,QAAU,GACT,KAAA,GAAW,CAAE,KAAM,CAAE,eAAgB,QAAK,gBAAL,cAAoB,WAAY,cAAe,EAAc,IAAO,CAAA,EACzG,KAAA,MAAK,MACN,KAAK,iFAAyF,CAAQ,EACtG,KAAK,AAAC,GAAiC,CACpC,KAAK,KAAO,EAAW,KAAK,KAAM,EAAS,IAAI,EAAE,YACjD,KAAK,SAAS,EAEd,KAAK,MAAM,QAAQ,CACf,MAAO,KAAK,GAAG,0BAA0B,EACzC,IAAK,KAAK,GAAG,4BAA4B,CAAA,CAC5C,EACD,EAAS,KAAK,QAAQ,CAAA,CACzB,EACA,MAAM,IAAM,CAAA,CAAE,EACnB,KAAK,QAAU,EACnB,EACA,KAAM,sBAAqB,EAAuB,OAC9C,KAAK,QAAU,GACT,KAAA,GAAW,CAAE,KAAM,CAAE,eAAgB,QAAK,gBAAL,cAAoB,WAAY,eAAgB,EAAe,IAAI,AAAC,GAAY,EAAG,IAAI,GAAK,KAAM,EAAS,KAAK,QAAQ,GAC7J,KAAA,MAAK,MACN,KAAK,4EAAoF,CAAQ,EACjG,KAAK,AAAC,GAAiC,CACpC,KAAK,KAAO,EAAW,KAAK,KAAM,EAAS,IAAI,EAAE,YACjD,KAAK,SAAS,EAEd,KAAK,MAAM,QAAQ,CACf,MAAO,KAAK,GAAG,0BAA0B,EACzC,IAAK,KAAK,GAAG,4BAA4B,CAAA,CAC5C,EACD,KAAK,sBAAwB,GAC7B,EAAS,KAAK,QAAQ,CAAA,CACzB,EACA,MAAM,IAAM,CAAA,CAAE,EACnB,KAAK,QAAU,EACnB,CACJ,CACJ,CAAC,MArJyB,MAAM,gBACRC,GAAA,CAAA,MAAA,wBAmBqCU,EAAA,IAAA,CAAA,MAAA,gBAAA,KAAA,EAAA,oMAvBpCL,GAAa,EAAAQ,EAAA,MAAA,KAAA,CAAA,EAAA,cAAAR,KAAAC,EAAA,EAAA,CAAE,IAAK,EAAkC,MAAO,gCAAwB,MAAO,EAAE,eAAA,QAAA,EAAA,QAAU,mBAAoB,eAAiC,EAAC,QAAA,GAAqB,mBAAS,EAAO,kCAAA,mBAAE,QAAQ,EAAC,QAAO,SAAA,OAAyB,iBAAW,QAAA,WAAA,OAC3P,EAAA,CAAA,OACPE,EAKM,IAAA,CAAAE,EAJF,MAGOE,GAHP,CAC8BF,EAAA,OAAAV,GAAA,CAC1Bc,GAAAL,EAAiB,EAAmB,CAAC,MAAK,oBAAA,KAAA,yCAA0C,sBAAe,EAAA,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,QAAA,OAAA,MAAA,GAAmB,YAAS,EAAA,GAAA,eAAA,EAAC,MAAA,IAAA,YAAA,wDAIjI,CAAA,EAAA,MAAAD,EAAA,IAAA,mDAGXA,EAIS,IAAA,CAAAC,EAJK,EAAc,CAAE,MAAM,eAAA,OAAA,EAAA,GAAA,aAAA,CACrB,EAAA,CAAA,KAAAD,EAAA,AAAA,GAAA,UACqD,OAAI,KAAA,CAAAyD,EAAAtD,EAAA,EAAA,KAAA,IAAA,EAAA,CAAA,OAA3C,EAAA,EAAA,KAAA,+BAapB,EAAA,CAAA,QAAA,CAAA,EAAAF,EAVK,EAAE,CAAA,MAAAF,EAAA,EAAA,kCAAA,eAAA,CACD,EAAA,CAAA,OACPC,EAA2I,IAAA,CAA7HC,EAAA,EAAA,CAA0D,MAAK,yDAAA,QAAA,EAAA,4FAGtE,CAAA,EACP,KAAAD,EAAA,AAAA,GAAA,CAAAE,EACI,MAA2IK,GAAA,CAAAiC,EAA9HvC,EAAa,EAAA,CAAC,KAAK,cAAsD,MAAK,gBAAA,QAAA,AAAA,GAAA,EAAA,2BAAA,EAAA,IAAA,yBAA3B,EAAA,EAAA,GAAA,eAAA,yGAMhFsB,EAAqO,GAAA,EAAA,EAAAtB,EAA5L,EAAqB,CAAG,QAAc,EAAA,sBAA4B,eAAa,EAAA,wBAAU,YAAK,EAAA,QAAkC,QAAM,EAAoB,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,sBAAA,IAAA,OAAA,EAAA,iHCQ3M,KAAKd,IAAa,EAAa,CAC3B,KAAM,yBACN,WAAY,CAAE6B,UAAAA,SAAWD,EAAA,0BAAQ2C,EAA0B,EAC3D,MAAO,CACH,sBAAuB,CAAE,KAAM,OAA2C,SAAU,EAAK,EACzF,SAAU,CAAE,KAAM,MAAO,EACzB,SAAU,CAAE,KAAM,MAAO,CAC7B,EACA,MAAO,CAAC,SAAS,EACjB,SAAU,CAAC,EACX,MAAO,CACI,MAAA,CACH,GAAIvB,EAAY,EAChB,cAAe,KACf,uBAAwB,EAAA,CAEhC,EACA,MAAO,CACH,uBAAwB,CACpB,KAAK,SAAS,CAClB,CACJ,EACA,SAAU,CACN,KAAK,SAAS,CAClB,EACA,aAAc,CAAC,EACf,QAAS,CACL,UAAW,CACP,KAAK,cAAgB,KAAK,qBAC9B,CACJ,CACJ,CAAC,EA3D0E/B,GAAA,CAAA,MAAA,+CAApDZ,GAA8BU,EAAA,IAAA,CAAC,MAAA,yBAAA,cAAA,iBAE5BI,GAAA,CAAA,MAAA,yLAbtBT,GAiBY,EAAAQ,EAAAgB,EAAA,KAAA,CAAApB,EAjBO,EAAc,CAAmB,MAAM,EAAA,cAAA,kBAAiC,MAAA,iCAA0B,iBAAW,SAAA,WAAA,kBAC5HD,EAeS,IAAA,CAAAC,EAdY,EACqH,CAAA,MAAA,eAAA,EAAA,CAAA,OAAlID,EAAkI,IAAA,CAAAC,EAAlH,EAAE,CAAoC,MAAM,EAA4B,GAAA,gCAAA,EAAE,MAAK,6BAAA,QAAA,EAAA,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,uBAAA,sBAExF,CAAA,EACP,KAAAD,EAAA,AAAA,GAAA,CAQOH,GAAA,EAAA,EAAAQ,EAAAgB,EAAA,KAAAC,EAAA,EAAA,KAAA,cAAA,CAAA,EAAA,IARgEzB,GAAK,EAAAQ,EAAA,OAAA,CAAE,IAAK,EAAA,MAAA,sEAI/E,EAAA,CACAH,EAAuD,OAAAE,GAAAD,EAAA,EAAA,KAAA,YAAA,IAAA,EAAA,IAAAA,EAAA,EAAA,IAAA,EAAA,CAAA,EACvDX,GACAU,EAAM,OAAAI,GAAAH,EAAA,EAAA,KAAA,iBAAA,IAAA,EAAA,IAAAA,EAAA,EAAA,KAAA,mBAAA,GAAA,IAAA,EAAA,CAAA,EAAAI,0BAOZ,EAAA,EAAA,CAAA,OAAA,CAAA,EAAA,EAAA,uBAAAV,KAAAC,EAAA,EAAA,CACL,IAAA,EACA,sBAAgB,EAAA,sBAChB,eAAM,EAAQ,SAAA,eACd,KAAU,EAAA,SACV,SAAU,EAAI,SACd,SAAA,GACA,uBAAW,EAAA,uBAAA,cAAA,EAAA,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,uBAAA,+ICPpB,KAAKX,IAAa,EAAa,CAC3B,KAAM,qBACN,WAAY,CAAEwE,SAAAA,EAAS,EACvB,MAAO,CAAE,sBAAuB,CAAE,KAAM,MAA0C,EAAG,SAAU,CAAE,KAAM,OAAS,EAChH,MAAO,CAAC,aAAa,EACrB,MAAO,CACI,MAAA,CACH,KAAM,KACN,cAAe,IAAA,CAEvB,EACA,MAAO,CACH,uBAAwB,CACpB,KAAK,SAAS,EACd,KAAK,kBAAkB,CAC3B,CACJ,EACA,SAAU,CACN,KAAK,SAAS,EACd,KAAK,kBAAkB,CAC3B,EACA,QAAS,CACL,UAAW,CACP,KAAK,KAAO,KAAK,QACrB,EACA,mBAAoB,CAChB,KAAK,cAAgB,KAAK,qBAC9B,EACA,YAAa,CACT,WAAW,IAAM,CACb,KAAK,MAAM,aAAa,GACzB,GAAG,CACV,CACJ,CACJ,CAAC,iBApDgB,IAAK,EAAA,MAAA,iCAEC,MAAM,cAER,MAAM,yBACAnD,GAAA,CAAA,MAAM,6JANzB,MAUMJ,GAAA,CAVNP,GAAA,EAAA,EAAAQ,EAAAgB,EAUM,KAVyDC,EAAO,EAAA,cAAA,WAAA,CAAA,EAAA,IACrBzB,GAAQ,EAAAQ,EAAA,MAAA,CAAA,IAAA,GAAA,CAAA,EAAA,wBAAAR,GAG3C,EAAAQ,EAAA,MAAAb,GAAA,CAAAU,EADF,MAAqFI,GAAA,CAAAkC,EAAAtC,EAAA,IAAAK,GAAA,KAAA,GAAA,EAAA,EAArC,EAAA,EAAA,GAAA,2BAAA,oBAEpD,CAAA,EAAAL,EACI,MAAiFM,GAAjF,CACAN,EAA0G,QAAAT,GAAAU,EAAA,EAAA,GAAA,sBAAA,CAAA,EAAA,CAAA,EAAAF,EAA1F,EAAmB,CAAA,MAAA,oBAAkB,WAAA,EAAA,wBAAA,MAAiC,sBAAgB,AAAA,GAAA,EAAA,wBAAA,MAAA,EAAA,OAAA,EAAA,qxLCmE1H,KAAKd,IAAa,EAAa,CAC3B,KAAM,qBACN,WAAY,CAAA,UAAE6B,EAAW,OAAAD,EAAQ,qBAAmBI,SAAAA,CAAS,EAC7D,MAAO,CAAE,sBAAuB,CAAE,KAAM,MAA0C,EAAG,SAAU,CAAE,KAAM,QAAU,oBAAqB,CAAE,KAAM,KAAA,EAAS,SAAU,CAAE,KAAM,OAAQ,SAAU,GAAO,EAClM,MAAO,CAAC,aAAa,EACrB,MAAO,CACI,MAAA,CAAA,OACHyC,GACA,cACA,uBACA,KAAM,KACN,cAAe,KACf,uBAAwB,GACxB,SAAU,GACV,kBAAmB,CAAC,EACpB,iBAAkB,CAAC,EACnB,mBAAoB,CAAC,CAAA,CAE7B,EACA,SAAU,CACN,gBAA0B,SACtB,GAAI,GAAa,GACjB,iBAAK,gBAAL,cAAoB,aAApB,QAAgC,QAAQ,AAAC,GAAY,CACjD,KAAM,GAAM,OAAO,KAAK,CAAE,EAAE,GAC5B,AAAI,IAAQ,wBAA0B,EAAG,GAAK,QAAU,wBACvC,GAAA,GACjB,GAEG,CACX,CACJ,EACA,MAAO,CACH,sBAAuB,CACnB,SAAU,CACN,KAAK,SAAS,EACd,KAAK,kBAAkB,EACvB,KAAK,mBAAqB,KAAK,yBAAyB,GAAoB,mBAAoB,KAAK,mBAAmB,CAC5H,EACA,KAAM,EACV,CACJ,EACA,SAAU,CACN,KAAK,SAAS,EACd,KAAK,kBAAkB,EACvB,KAAK,mBAAqB,KAAK,yBAAyB,GAAoB,mBAAoB,KAAK,mBAAmB,CAC5H,EACA,QAAS,CACL,UAAW,CACP,KAAK,KAAO,KAAK,QACrB,EACA,mBAAoB,CAChB,KAAK,cAAgB,KAAK,qBAC9B,EACA,YAAa,CACT,WAAW,IAAM,CACb,KAAK,MAAM,aAAa,GACzB,GAAG,CACV,EAEA,wBAAyB,OACrB,KAAK,iBAAmB,GACxB,QAAK,gBAAL,QAAoB,sBAAsB,QAAQ,AAAC,GAAU,CACpD,KAAA,iBAAiB,KAAK,CAAE,WAAY,EAAM,KAAM,WAAY,EAAM,IAAA,CAAM,CAAA,EAErF,EAEA,cAAc,EAAW,CACrB,KAAK,uBAAuB,EACvB,KAAA,kBAAoB,KAAK,4BAA4B,CAAS,EACnE,KAAK,uBAAyB,EAClC,EAEA,4BAA4B,EAAW,CACnC,GAAI,GAAc,CAAA,EAElB,EAAY,MAAQ,EAAU,KAC9B,EAAY,WAAa,EAAU,WAEnC,OAAS,GAAI,EAAG,EAAI,EAAU,WAAW,OAAQ,IAAK,CAClD,GAAI,GAAM,OAAO,KAAK,EAAU,WAAW,EAAE,EAAE,GAC/C,AAAI,IAAQ,uBACR,GAAY,KAAO,EAAU,WAAW,GAAG,GAAK,MAAM,eAEtD,IAAQ,yBACR,GAAY,WAAa,EAAU,WAAW,GAAG,GAAK,OAEtD,IAAQ,yBACR,GAAY,OAAS,EAAU,WAAW,GAAG,GAAK,MAAM,cAEhE,CAEO,MAAA,EACX,EAEA,cAAe,CACX,KAAK,uBAAuB,EACvB,KAAA,kBAAoB,CAAE,MAAO,GAAI,WAAY,GAAI,OAAQ,OAAW,OAAQ,YAAa,KAAM,QAAS,EAC7G,KAAK,uBAAyB,EAClC,EAEA,gBAAgB,EAAO,OACnB,GAAI,GAAkB,CAClB,WAAY,EAAM,QAClB,SAAU,KAAK,kBAAkB,KACjC,WAAY,KAAK,kBAAkB,OAAO,YAAY,EACtD,KAAM,EAAM,QACZ,gBAAiB,QAAK,gBAAL,cAAoB,WACrC,SAAU,EAAA,EAGd,EAAgB,UAAY,QAAU,GAAgB,OAAS,KAAK,kBAAkB,QAElF,KAAK,kBAAkB,YACP,GAAA,WAAa,KAAK,kBAAkB,WACpD,EAAgB,SAAW,IAG/B,KAAK,gBAAgB,CAAe,EACpC,KAAK,uBAAyB,EAClC,EAEA,KAAM,iBAAgB,EAAiB,CAC7B,KAAA,GAAW,CAAE,KAAM,EAAiB,KAAM,EAAS,KAAK,QAAQ,GAChE,KAAA,MAAK,MACN,KAAK,+DAAuE,CAAQ,EACpF,KAAK,AAAC,GAAiC,CACpC,KAAK,KAAO,EAAW,KAAK,KAAM,EAAS,IAAI,EAAE,WAAA,CACpD,EACA,MAAM,IAAM,CAAA,CAAE,EACd,QAAQ,IAAM,EAAS,KAAK,QAAQ,CAAC,CAC9C,EAEA,KAAM,iBAAgB,EAAW,OAEvB,KAAA,GAAW,CAAE,KADF,CAAE,KAAM,EAAU,KAAM,gBAAiB,QAAK,gBAAL,cAAoB,YACzC,KAAM,EAAS,KAAK,QAAQ,GAC3D,KAAA,MAAK,MACN,KAAK,kEAA0E,CAAQ,EACvF,KAAK,AAAC,GAAiC,CACpC,KAAK,KAAO,EAAW,KAAK,KAAM,EAAS,IAAI,EAAE,WAAA,CACpD,EACA,MAAM,IAAM,CAAA,CAAE,EACd,QAAQ,IAAM,EAAS,KAAK,QAAQ,CAAC,CAC9C,EACA,yBAAyB,EAAmB,EAAkB,CACtD,GAAA,GAAY,GAAS,CAAiB,EAE1C,MAAI,IACgB,EAAA,QAAQ,AAAC,GAAU,CAC/B,EAAU,KAAK,CAAK,CAAA,CACvB,EAEA,KAAK,gBAEM,GAAA,AADQ,GAAS,CAAS,EACZ,OAAO,AAAC,GACvB,EAAM,WAAa,SAC7B,GAGE,CACX,CACJ,CACJ,CAAC,6BA3M6BpE,GAAO,CAAC,IAAK,OAAA,MAAA,+BAGe,IAAK,EAAA,MAAA,8CAUjCgB,GAAO,CAAC,IAAK,OAAA,MAAA,sDAMbC,GAAa,CAAC,IAAK,aAAA,MAAA,sJApD7CZ,GAcY,EAAAQ,EAAAgB,EAAA,KAAA,CAAApB,EAdO,EAAc,CAA2B,MAAM,EAAA,cAAA,0BAAiC,MAAA,iCAAyB,iBAAW,QAAA,WAAA,OACxH,EAAA,CAAA,MAAAD,EAAA,IAAA,mDAGXA,EAAoE,IAAA,CAAAC,EAAtD,EAAM,CAAE,MAAM,OAAsB,OAAQ,EAAE,GAAI,aAAA,EAAA,SAAA,EASvD,EAAA,KAAA,EAAA,CAAA,QAAA,CAAA,EAAAA,EARK,EAAE,CAAkC,MAAMF,EAAc,EAAA,WAAA,MAAA,eAAA,EAAA,MAAA,cACvD,EAAA,CAAA,OACPC,EAA6F,IAAA,CAAAC,EAA7E,EAAE,CAAgB,MAAM,EAAA,GAAA,YAAA,EAA8B,MAAK,6BAAA,QAAA,EAAA,yCAEpE,CAAA,EAAA,KACPD,EAA0F,AAAA,GAAA,CAAAC,EAA7E,EAAa,CAAC,KAAK,cAAkB,MAAK,gBAAA,QAAA,AAAA,GAAA,EAAA,cAAA,EAAA,IAAA,CACqC,EAAA,KAAA,EAAA,CAAA,SAAA,CAAA,EAAAA,EAA/E,EAAa,CAAC,KAAK,cAAkB,MAAK,gBAAA,QAAA,AAAA,GAAA,EAAA,gBAAA,EAAA,IAAA,gDAMzD,EAAA,EAAA,CAAA,OAAA,CAAA,EAAA,EAAA,uBAAAJ,KAAAC,EAAA,EAAA,CACE,IAAA,EAAA,SAAA,EAAA,kBACA,oBAAY,EAAsB,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,kBAAA,GAAA,WAAA,EAAA,uBACzC,sBAAQ,EAAgB,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,uBAAA,GACxB,OAAY,EAAA,iBACZ,WAAA,EAAA,oBACA,uBAAa,EAAA,mBACb,OAAQ,MACR,SAAO,GACP,MAAI,GACJ,OAAM,EAAA,gBAAA,SAAA,EAAA,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,uBAAA,GAEI,EAAA,CAAA,iBACPE,EAKM,IAAA,CAAAE,EALI,MAAC,CAAA,MAAAkC,EAAA,CAAA,UAAA,CAAA,EAAA,kBAAA,OAAA,OAAA,UAAA,SAAA,CAAA,CAAA,CACP,EAAA,CACwJlC,EAAA,OAAAE,GAAA,CAAjIH,EAAA,EAAA,CAAC,GAAA,OAAA,MAAA,wDAA4D,sBAAS,EAAgB,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,kBAAA,KAAA,GAAE,UAAY,WAAO,MAAC,YAAY,QAAA,YAAA,MAC3I,EAAA,KAAA,EAAA,CAAA,aAAyG,SAAzG,CAAA,EAAAC,EAAA,QAAAV,GAAAW,EAAA,EAAA,GAAA,mCAAA,CAAA,EAAA,CAAA,GAGG,EAAA,CAAA,EAAA,EAAA,kBAAX,mBAWWE,EAAA,MAAAC,GAAA,CAFQJ,EAAA,OAAAK,GAAA,CAPQN,EAAA,EAAA,CAAC,GAAA,OAAA,MAAA,0DAA8D,sBAAS,EAAW,IAAqB,GAAA,GAAA,AAAA,GAAA,EAAA,kBAAA,OAAA,GAAA,QAAA,EAAA,WAAA,qBAC5G,EAAA,CAAA,MACPD,EAA4F,IAAA,CAAAE,EAAA,OAAA,KAAAC,EAAA,EAAA,kBAAA,OAAA,EAAA,OAAA,EAAA,OAAA,EAAA,kBAAA,MAAA,EAAA,EAAA,EAAA,CAAA,CAErF,CAAA,EAAA,OACPH,EAAoD,AAAA,GAAA,CAAAE,EAAA,OAAA,KAAAC,EAAA,EAAA,SAAA,OAAA,EAAA,MAAA,CAAA,EAAA,CAAA,OAG5D,EAAA,EAAA,CAAA,aAAiH,SAAjH,CAAA,EAAAD,EAAA,QAAAM,GAAAL,EAAA,EAAA,GAAA,2CAAA,CAAA,EAAA,CAAA,OAGRoB,EAKM,GAAA,EAAA,EAAArB,EALI,MAAC,CAAA,MAAAkC,EAAA,CAAA,UAAA,CAAA,EAAA,kBAAA,OAAA,OAAA,UAAA,SAAA,CAAA,CAAA,CACP,EAAA,CACsKlC,EAAA,OAAAT,GAAA,CAAAQ,EAArJ,EAAY,CAAC,GAAA,aAAA,MAAA,0DAA8D,sBAAS,EAAW,IAAW,GAAA,GAAA,AAAA,GAAA,EAAA,kBAAA,OAAA,GAAE,UAAY,WAAO,YAAC,YAAY,QAAA,YAAA,MACzJ,EAAA,KAAA,EAAA,CAAA,aAAkH,SAAlH,CAAA,EAAAC,EAAA,QAAAO,GAAAN,EAAA,EAAA,GAAA,sCAAA,CAAA,EAAA,CAAA,gJCwHpB,KAAKhB,IAAa,EAAa,CAC3B,KAAM,yBACN,WAAY,CAAA,KACR0E,GAAA,OACA9C,EAAA,UACAC,EACA,mBACA,4BACA,yBACA,uBACA,sBACA,eAAA,QACA8C,GAAA,SACAC,GAAA,KACAC,GACA,kCACA,wBACA,wBACA,2BACA,mBACJ,EACA,MAAO,CAAE,SAAU,CAAE,KAAM,MAAA,EAAU,SAAU,CAAE,KAAM,QAAU,YAAa,CAAE,KAAM,OAAQ,EAAG,gBAAiB,MAAO,EACzH,MAAO,CAAC,UAAW,aAAa,EAChC,SAAU,CAAC,EACX,MAAO,CACI,MAAA,CACH,eACA,kBACA,KAAM,KACN,YAAa,CAAC,EACd,gBAAiB,CAAC,EAClB,wBAAyB,GACzB,uBAAwB,GACxB,sBAAuB,CAAC,EACxB,MAAO,CAAC,EACR,QAAS,EAAA,CAEjB,EACA,MAAO,CACH,UAAW,CACP,KAAK,SAAS,CAClB,EACA,aAAc,CACV,KAAK,SAAS,CAClB,CACJ,EACA,OAAQ,CAEJ,MAAO,CAAA,MADOzE,GACC,CACnB,EACA,SAAU,CACN,KAAK,SAAS,EACd,KAAK,gBAAgB,EACrB,KAAK,UAAU,EACf,KAAK,oBAAoB,CAC7B,EACA,QAAS,CACL,SAAS,EAAO,CAGP,KAAA,MAAM,YAAY,OAAO,CAAK,CACvC,EACA,iBAAkB,CACd,KAAK,YAAc,GACnB,KAAK,YAAY,KAAK,CAAE,IAAK,IAAK,MAAO,KAAK,GAAG,mCAAmC,EAAG,QAAS,IAAM,KAAK,mBAAoB,EAAG,CAAE,IAAK,IAAK,MAAO,KAAK,GAAG,+BAA+B,EAAG,QAAS,IAAM,KAAK,iBAAA,CAAoB,CAAA,CAC3O,EACA,UAAW,CACP,KAAK,KAAO,KAAK,QACrB,EACA,oBAAoB,EAAO,CACvB,KAAK,sBAAwB,EAAM,IACvC,EACA,mBAAoB,CAChB,KAAK,wBAA0B,EACnC,EACA,kBAAmB,CACf,KAAK,uBAAyB,EAClC,EACA,KAAM,gBAAe,EAAiB,CAClC,KAAM,GAAW,CAAE,KAAM,CAAE,KAAM,EAAgB,UAAW,EAAG,KAAM,EAAS,KAAK,QAAQ,CAAE,EAC7F,GAAI,GAAM,GACM,EAAA,kBAAqB,EAAM,+DAA0E,EAAM,gEACrH,KAAA,MAAK,MACN,KAAK,EAAK,CAAQ,EAClB,KAAK,AAAC,GAAiC,CACpC,KAAK,KAAO,EAAW,KAAK,KAAM,EAAS,IAAI,EAAE,YAEjD,KAAK,MAAM,QAAQ,CACf,MAAO,KAAK,GAAG,0BAA0B,EACzC,IAAK,KAAK,GAAG,4BAA4B,CAAA,CAC5C,EACD,EAAS,KAAK,QAAQ,CAAA,CACzB,EACA,MAAM,IAAM,CAAA,CAAE,CACvB,EACA,KAAM,YAAY,CACd,KAAK,QAAU,GACf,KAAM,MAAK,MAAM,IAAI,qCAAwD,EAAE,KAAK,AAAC,GAAkC,KAAK,MAAQ,EAAS,IAAK,EAClJ,KAAK,QAAU,EACnB,EACA,KAAM,sBAAsB,CACxB,KAAK,QAAU,GACf,KAAM,MAAK,MAAM,IAAI,+EAAkG,KAAK,iBAAiB,EAAE,KAAK,AAAC,GAAiC,CAClL,AAAI,EAAS,KAAK,MAAQ,EAAS,KAAK,KAAK,OAAS,EAC7C,KAAA,gBAAkB,EAAS,KAAK,KAAK,IAAI,AAAC,KAAa,SAAU,SAAU,QAAS,EAAM,MAAO,MAAO,EAAM,MAAO,KAAM,EAAM,KAAM,KAAM,wBAA2B,EAAA,EAC1K,KAAK,gBAAkB,IAAA,CACjC,EACD,KAAK,QAAU,EACnB,EACA,KAAM,cAAa,EAAY,CAC3B,KAAK,QAAU,GACf,KAAM,GAAW,CAAE,KAAM,CAAE,MAAO,EAAM,UAAW,UAAW,EAAM,UAAY,EAAM,WAAa,KAAM,EAAS,KAAK,QAAQ,GACzH,KAAA,MAAK,MACN,KAAK,8DAAsE,CAAQ,EACnF,KAAK,AAAC,GAAiC,CACpC,KAAK,KAAO,EAAW,KAAK,KAAM,EAAS,IAAI,EAAE,WAAA,CACpD,EACA,MAAM,IAAM,CAAA,CAAE,EACd,QAAQ,IAAM,EAAS,KAAK,QAAQ,CAAC,EAC1C,KAAK,QAAU,EACnB,CACJ,CACJ,CAAC,MAtSoB,IAAK,EAAA,MAAA,wBACVC,GAAA,CAAyB,GAAA,yBAAA,MAAA,8DAWpBc,GAAA,CAAA,MAAM,sCACF,MAAM,iFAmBuB,IAAK,EAAA,MAAA,sCAOlC,MAAM,4FA0ByC,IAAK,EAAA,MAAA,0hBAjE9DT,GAAI,EAAAQ,EAAAgB,EAAA,KAAA,CAAA,EAAA,KAAAxB,GAAA,EA0DLQ,EAAA,MAAAD,GAAA,CAxDqEF,EAAA,MAAAV,GAAA,CAAA,EAAA,QAAAK,KAAAC,EAAA,EAAA,CAA1D,IAAI,EAAiB,KAAK,gBAAkC,MAAA,kBAAA,YAAA,cACzE,CAAA,GAAAyB,EA4BM,GA5BN,EAAA,EAAArB,EAQc,MAPDI,GAAA,CAAAL,EACW,EACgD,CAAA,MAAA,gCAAA,EAAA,CAAA,MAA5DD,EAA4D,IAAA,CAAAE,EAAA,OAAA,KAAAC,EAAA,EAAA,GAAA,qCAAA,CAAA,EAAA,CAAA,CAErD,CAAA,EAAA,IACPH,EAAoD,IAAA,CAAAC,EAAlC,EAAa,CAAE,KAAA,cAAA,QAAA,EAAA,mCAGzC,CAAA,EAAAC,EACI,MAgBMK,GAAA,CADUL,EAAA,MAAAM,GAAA,CAdKP,EAAA,EAAA,CAA8D,MAAO,6DAAY,QAAY,EAAA,QAAM,WAAY,GAAS,aAAO,OAAsB,MAAW,EAAA,KAAA,eAAsB,WAAU,EAAE,oBAAc,aAAU,EAAA,aAAA,YAAA,qBACvOD,EAAwD,IAAA,CAAAC,EAArC,EAAM,CAAG,WAAA,GAAA,kBAAA,EAC5B,CAAA,EAAAA,EAAc,EAAE,CAAA,MAAAF,EAAA,EAAA,eAAA,MAAA,UAAA,CACD,EAAA,CAAA,KACPC,EAAsC,AAAA,GAAA,CACtCE,EAAwJ,OAAA,KAAAC,EAAA,EAAA,KAAA,IAAA,EAAA,CAAA,EAAAF,EAA1I,EAAe,CAAuE,MAAM,EAAQ,KAAA,QAAA,OAAA,IAAA,EAAA,GAAA,0CAAA,EAAE,MAAK,SAAA,MAAAF,EAAA,EAAA,eAAA,MAAA,IAAA,oCAQxH,EAAA,CAAA,OAAA,CAAA,EAAAE,EAJK,EAAE,CAAA,MAAAF,EAAA,EAAA,eAAA,MAAA,WAAA,CACD,EAAA,CAAA,KACPC,EAA2F,AAAA,GAAA,CAAAC,EAA9E,EAAa,CAAC,KAAK,cAAkB,MAAK,gBAAA,QAAA,AAAA,IAAA,EAAA,eAAA,EAAA,IAAA,wGAOpE,CAAA,EAAX,EAAA,KAAA,cAAA,OAAA,EAAAJ,KAKcQ,EAAA,MAJIZ,GAAC,CAAAQ,EACK,EAC+C,CAAA,MAAA,gCAAA,EAAA,CAAA,MAA3DD,EAA2D,IAAA,CAAAE,EAAA,OAAA,KAAAC,EAAA,EAAA,GAAA,oCAAA,CAAA,EAAA,CAAA,OAGnE,CAAA,EAAAD,EACI,MAgBMO,GAAA,CADUP,EAAA,MAAAQ,GAAA,CAdKT,EAAA,EAAA,CAA8D,MAAO,6DAAY,QAAY,EAAA,QAAM,WAAY,GAAS,aAAO,OAAqB,MAAW,EAAA,KAAA,cAAsB,WAAU,EAAE,oBAAA,aAAA,EAAA,uBAC9MD,EAAwD,IAAA,CAAAC,EAArC,EAAM,CAAG,WAAA,GAAA,kBAAA,EAC5B,CAAA,EAAAA,EAAc,EAAE,CAAA,MAAAF,EAAA,EAAA,eAAA,MAAA,UAAA,CACD,EAAA,CAAA,KACPC,EAAsC,AAAA,GAAA,CACtCE,EAAwJ,OAAA,KAAAC,EAAA,EAAA,KAAA,IAAA,EAAA,CAAA,EAAAF,EAA1I,EAAe,CAAuE,MAAM,EAAQ,KAAA,QAAA,OAAA,IAAA,EAAA,GAAA,0CAAA,EAAE,MAAK,SAAA,MAAAF,EAAA,EAAA,eAAA,MAAA,IAAA,oCAQxH,EAAA,CAAA,OAAA,CAAA,EAAAE,EAJK,EAAE,CAAA,MAAAF,EAAA,EAAA,eAAA,MAAA,WAAA,CACD,EAAA,CAAA,KACPC,EAA2F,AAAA,GAAA,CAAAC,EAA9E,EAAa,CAAC,KAAK,cAAkB,MAAK,gBAAA,QAAA,AAAA,IAAA,EAAA,eAAA,EAAA,IAAA,oHAQnF,CAAA,EAAQC,EAAA,MAAA,CAA4B,GAAA,4BAAkE,MAAK,2DAAA,MAAAH,EAAA,EAAA,eAAA,MAAA,KAAA,CACvG,EAAA,CAAAE,EACoB,EAC8D,CAAA,MAAA,kCAAA,EAAA,CAA9D,MAAAD,EAAA,IAAA,CAAA,EAAA,sBAAAH,GAAA,EAAAQ,EAAA,OAAAX,GAAAS,EAAA,EAAA,sBAAA,IAAA,EAAA,CAAA,GAAAoB,EAAA,GAAA,EAAA,OAGT,CAAA,EAwEL,OAAA,KAAA,EAAA,qBAAA,EAAA,SAxEN,KAuEc,EAAAlB,EAAA,MAAAM,GAAA,CAtEKV,EAAA,GAAA,CAAiD,MAAA,iDAAA,WAAA,aAC5DD,EAQW,IAAA,CAAAC,EAPU,EACuD,KAAA,CAAA,OAApED,EAAoE,IAAA,CAAAE,EAAA,OAAA,KAAAC,EAAA,EAAA,GAAA,6CAAA,CAAA,EAAA,CAAA,YAGxEH,EAEM,IAAA,CAAAE,EAFK,MAAE,CAAA,MAAAH,EAAA,EAAA,eAAA,MAAA,cAAA,CACT,EAAA,CAAAE,EAAiC,EAA4C,CAAG,sBAAY,EAAA,sBAAG,MAAU,EAAA,MAAO,SAAW,EAAA,KAAA,cAAA,EAAA,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,MAAA,aAAA,kEAInI,CAAA,EAAAA,EACqB,EACoD,KAAA,CAAA,OAAjED,EAAiE,IAAA,CAAAE,EAAA,OAAA,KAAAC,EAAA,EAAA,GAAA,0CAAA,CAAA,EAAA,CAAA,YAGrEH,EAEM,IAAA,CAAAE,EAFK,MAAE,CAAA,MAAAH,EAAA,EAAA,eAAA,MAAA,cAAA,CACT,EAAA,CAAAE,EAAuB,EAAuB,CAAwB,sBAAc,EAAA,sBAAG,SAAU,EAAA,KAAW,SAAO,EAAA,SAAQ,MAAA,EAAA,MAAA,cAAA,EAAA,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,MAAA,aAAA,6EAInI,CAAA,EAAAA,EACqB,EACmD,KAAA,CAAA,OAAhED,EAAgE,IAAA,CAAAE,EAAA,OAAA,KAAAC,EAAA,EAAA,GAAA,yCAAA,CAAA,EAAA,CAAA,YAEpEH,EAEM,IAAA,CAAAE,EAFK,MAAE,CAAA,MAAAH,EAAA,EAAA,eAAA,MAAA,cAAA,CACT,EAAA,CAAAE,EAAkB,EAAuB,CAAwB,sBAAc,EAAA,sBAAG,SAAA,EAAA,KAAuC,oBAAW,EAAA,gBAAyB,cAAU,EAAQ,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,MAAA,aAAA,GAAA,SAAA,EAAA,iGAGvL,CAAA,EAAAA,EACqB,EACiD,KAAA,CAAA,OAA9DD,EAA8D,IAAA,CAAAE,EAAA,OAAA,KAAAC,EAAA,EAAA,GAAA,uCAAA,CAAA,EAAA,CAAA,YAElEH,EAEM,IAAA,CAAAE,EAFK,MAAE,CAAA,MAAAH,EAAA,EAAA,eAAA,MAAA,cAAA,CACT,EAAA,CAAAE,EAAuB,EAAuB,CAAwB,sBAAc,EAAA,sBAAG,SAAU,EAAA,KAAA,SAAA,EAAA,2EAGzG,CAAA,EAAAA,EACqB,EACkD,KAAA,CAAA,OAA/DD,EAA+D,IAAA,CAAAE,EAAA,OAAA,KAAAC,EAAA,EAAA,GAAA,wCAAA,CAAA,EAAA,CAAA,YAEnEH,EAEM,IAAA,CAAAE,EAFK,MAAE,CAAA,MAAAH,EAAA,EAAA,eAAA,MAAA,cAAA,CACT,EAAA,CAAAE,EAAwB,EAAuB,CAAwB,sBAAc,EAAA,sBAAG,SAAU,EAAA,KAAA,SAAA,EAAA,2EAG1G,CAAA,EAAAA,EACqB,EACgD,KAAA,CAAA,OAA7DD,EAA6D,IAAA,CAAAE,EAAA,OAAA,KAAAC,EAAA,EAAA,GAAA,sCAAA,CAAA,EAAA,CAAA,YAEjEH,EAAiM,IAAA,CAAAE,EAAtL,MAAE,CAAA,MAAAH,EAAA,EAAA,eAAA,MAAA,cAAA,CAAqC,EAAA,CAAAE,EAAmB,GAAuB,CAAwB,sBAAc,EAAA,sBAAG,SAAW,EAAA,KAAA,cAAA,EAAA,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,MAAA,aAAA,0DAGpI,CAAA,EAAhB,EAAA,sBAAA,mBAOW,UALqEH,EAAA,EAAA,CAAA,IAAA,CAAA,EAAA,CAAA,OAAxEE,EAAwE,IAAA,CAAAE,EAAA,OAAA,KAAAC,EAAA,EAAA,GAAA,iDAAA,CAAA,EAAA,CAAA,YAE5EH,EAEM,IAAA,CAAAE,EAFK,MAAE,CAAA,MAAAH,EAAA,EAAA,eAAA,MAAA,cAAA,CACT,EAAA,CAAAE,EAA2B,EAAuB,CAAwB,sBAAc,EAAA,sBAAG,SAAU,EAAA,KAAA,SAAA,EAAA,+EAI7FsB,EAAsB,GAAA,EAAA,EAAtC,EAAA,sBAAA,mBAQW,UANyDzB,EAAA,EAAA,CAAA,IAAA,CAAA,EAAA,CAAA,OAA5DE,EAA4D,IAAA,CAAAE,EAAA,OAAA,KAAAC,EAAA,EAAA,GAAA,qCAAA,CAAA,EAAA,CAAA,YAGhEH,EAEM,IAAA,CAAAE,EAFK,MAAE,CAAA,MAAAH,EAAA,EAAA,eAAA,MAAA,cAAA,CACT,EAAA,CAAAE,EAA0B,GAAuB,CAAwB,sBAAc,EAAA,sBAAG,SAAU,EAAA,KAAA,SAAA,EAAA,mHAO5HsB,EAAgE,GAAA,EAAA,EAAAtB,EAAvD,GAAa,CAAC,GAAG,cAAgB,IAAK,cAAA,MAAA,EAAA,WACpB,EAAA,KAAA,EAAA,CAAA,OAAA,CAAA,EAAA,EAAA,wBAAAJ,KAAAC,EAAA,GAAA,CAA0B,IAAI,EAAS,KAAU,EAAA,KAAW,SAAc,EAAA,SAAwB,eAAyB,EAAA,KAAA,eAA0B,wBAAW,EAAA,wBAAA,cAAA,EAAA,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,wBAAA,6EACjKyB,EAAsB,GAAA,EAAA,EAAA,EAAA,uBAAA1B,KAAAC,EAAA,GAAA,CAAG,IAAI,EAAS,KAAU,EAAA,KAAW,SAAA,EAAA,SAAiD,uBAAW,EAAA,uBAAA,cAAA,EAAA,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,uBAAA,iLC3FrJ,KAAKX,IAAa,EAAa,CAC3B,KAAM,0BACN,WAAY,CAAA,OAAE4B,EAAA,UAAQC,CAAU,EAChC,MAAO,CAAE,gBAAiB,CAAE,KAAM,MAAQ,EAC1C,MAAO,CACI,MAAA,CACH,kCACA,YAAa,CAAC,EACd,QAAS,CAAE,OAAQ,CAAC,CAAa,CAAE,CAAA,CAE3C,EACA,MAAO,CACH,iBAAkB,CACd,KAAK,gBAAgB,CACzB,CACJ,EACA,SAAU,CACN,KAAK,gBAAgB,CACzB,EACA,QAAS,CACL,iBAAkB,CACd,KAAK,YAAc,KAAK,eAC5B,EACA,WAAW,EAAyB,EAAoB,CACpD,KAAM,GAAU,CAAA,EAChB,OAAS,GAAI,EAAG,EAAI,EAAW,GAAY,OAAQ,IACvC,EAAA,KAAK,EAAW,GAAY,GAAG,UAAY,IAAM,EAAW,GAAY,GAAG,IAAI,EAGpF,MAAA,GAAQ,KAAK,GAAG,CAC3B,CACJ,CACJ,CAAC,EAnFQZ,GAAY,CAAC,MAAA,OAAA,MAAA,CAAA,OAAA,qBAAA,kDAiBOE,GAAA,CAAmB,GAAA,mBAAA,MAAA,0KAhBxCT,GAsCY,EAAAQ,EAAA,MAAAD,GAAA,CAAAH,EArCA,EAAW,CACnB,MAAM,EAAA,YACN,MAAO,0BACC,QAAS,KAAA,QAAA,EAAA,QAChB,mBAAoB,eAA+B,EAAkB,QAAA,GACtE,mBAAiB,EAAO,+BAAA,mBACxB,iBAAW,QACV,WAAY,QACZ,WAAY,GAAA,aAAA,EAAA,+BAAA,YAEF,EAAA,CAAA,MAAAD,EAAA,IAAA,wCAGA,CAAA,EAAA,OACPA,EAKM,IAAA,CAAAE,EAJF,MAGOV,GAHP,CAC8BU,EAAA,OAAAI,GAAA,CAC1BC,GAAAN,EAAiB,EAAmB,CAAA,MAAA,sDAAoC,sBAAe,EAAA,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,QAAA,OAAA,MAAA,GAAA,YAAA,EAAA,GAAA,eAAA,sDAKnGD,EAIS,IAAA,CAAAC,EAJK,EAAc,CAAC,MAAM,eAAQ,MAAM,OAAqB,OAAI,EAAM,GAAA,aAAA,EAAE,IAAA,OAAA,SAAA,EACnE,EAAA,CAAA,KAAAD,EAAA,AAAA,GAAA,UACqD,OAAI,KAAA,CAAAyD,EAAAtD,EAAA,EAAA,KAAA,IAAA,EAAA,CAAA,OAA3C,EAAA,EAAA,KAAA,+BAOpB,EAAA,CAAA,QAAA,CAAA,EAAAF,EAJK,EAAc,CAAE,MAAM,eAA8C,OAAQ,EAAE,GAAI,qCAAA,EAAA,SAAA,EACjF,EAAA,CAAA,KAAAD,EAAA,AAAA,GAAA,CACwEwC,EAAA3C,GAAA,EAAAQ,EAAA,OAAC,KAAU,CAAAoD,EAAAtD,EAAA,EAAA,WAAA,EAAA,KAAA,eAAA,CAAA,EAAA,CAAA,OAArE,EAAA,EAAA,WAAA,EAAA,KAAA,eAAA,4BAOpB,EAAA,CAAA,QAAA,CAAA,EAAAF,EAJK,EAAc,CAAE,MAAM,eAA8C,OAAQ,EAAE,GAAI,qCAAA,EAAA,SAAA,EACjF,EAAA,CAAA,KAAAD,EAAA,AAAA,GAAA,CAC6EwC,EAAA3C,GAAA,EAAAQ,EAAA,OAAC,KAAU,CAAAoD,EAAAtD,EAAA,EAAA,WAAA,EAAA,KAAA,oBAAA,CAAA,EAAA,CAAA,OAA1E,EAAA,EAAA,WAAA,EAAA,KAAA,oBAAA,2ICRzC,KAAKhB,IAAa,EAAa,CAC3B,KAAM,8BACN,WAAY,CAAE8B,UAAAA,gBAAWC,GAAA,QAAcmB,CAAQ,EAC/C,MAAO,CAAE,SAAU,CAAE,KAAM,OAAS,EACpC,MAAO,CAAC,UAAU,EAClB,MAAO,CACI,MAAA,CACH,KAAM,KACN,sBAAuB,IAAA,CAE/B,EACA,MAAO,CACH,UAAW,CACP,KAAK,SAAS,CAClB,CACJ,EACA,SAAU,CACN,KAAK,SAAS,CAClB,EACA,QAAS,CACL,UAAW,CACP,KAAK,KAAO,KAAK,QACrB,EACA,kBAAmB,CACV,KAAA,MAAM,WAAY,KAAK,qBAAqB,CACrD,EACA,YAAY,EAAe,CAClB,KAAA,sBAAwB,KAAK,KAAK,eAAe,GACjD,KAAA,MAAM,WAAY,KAAK,qBAAqB,CACrD,CACJ,CACJ,CAAC,2EAtD+B7C,GAAA,CAAA,WAAA,2IALJ,IAAA,EAAiB,SAAO,GAA8B,UAAQ,EAAA,IAAA,GAAA,GAAA,AAAA,GAAA,EAAE,YAAW,EAAO,KAAC,GAAA,WAAA,EAAA,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,YAAA,EAAA,KAAA,KACvG,QAAAQ,EAAA,IAAA,CAgBeH,GAAA,EAAA,EAAAQ,EAAAgB,EAAA,KAAAC,EAhByD,EAAE,KAAK,eAAA,CAAA,EAAA,IAC1DzB,GAIP,EAAAC,EAAA,EAAA,CAAA,IAAA,GAAA,CAAA,OAHNE,EAGM,IAAA,CAAAE,EAFF,MAA8FE,GAAA,CAA9EF,EAAA,OAAA,CAAoE,YAAA,sBAAA,EAAA,IACpF,EAAAC,EAAwG,EAAxG,IAAwG,EAAA,EAAAX,EAAA,EAAAU,EAAA,OAAAI,GAAAH,EAAA,EAAA,QAAA,OAAA,IAAA,EAAA,GAAA,mBAAA,CAAA,EAAA,CAAA,cAIhHH,EAOU,IAAA,CAPKC,EAAA,EAAA,CAAA,MAAA,2EAAyE,sBAAuB,EAAO,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,sBAAA,GAAG,QAAM,EAAE,QAAA,SAAA,EAAA,gBAClH,EAAA,CAAA,OACPD,EAGM,AAAA,GAAA,CAAAE,EAFF,MAAoG,KAAA,CAA3FA,EAAA,IAAA,CAAA,MAAAkC,EAAA,CAAA,EAAA,OAAA,WAAA,qBAAA,gBAAA,QAAA,CAAA,CACT,EAAA,KAAA,CAAA,EAAAlC,EAAA,OAAA,KAAAC,EAAA,EAAA,OAAA,IAAA,EAAA,CAAA,o0BC+BxB,KAAKhB,IAAa,EAAa,CAC3B,KAAM,4BACN,WAAY,CAAA,UAAE8B,GAAA,aAAWC,EAAa,EACtC,MAAO,CAAE,sBAAuB,CAAE,KAAM,OAAsD,EAC9F,MAAO,CACI,MAAA,CACH,oCACA,cAAe,KACf,WAAY,CAAC,CAAA,CAErB,EACA,MAAO,CACH,uBAAwB,CACpB,KAAK,kBAAkB,CAC3B,CACJ,EACA,SAAU,CACN,KAAK,kBAAkB,CAC3B,EACA,QAAS,CACL,mBAAoB,CAChB,KAAK,cAAgB,KAAK,sBAE1B,KAAK,eAAe,CACxB,EACA,gBAAiB,OAEb,GADA,KAAK,WAAa,GACd,KAAK,cACL,OAAS,GAAI,EAAG,EAAI,KAAK,cAAc,WAAW,OAAQ,IAAK,CACrD,KAAA,GAAe,QAAK,gBAAL,cAAoB,WAAW,GAC9C,EAAM,OAAO,KAAK,CAAY,EAAE,GAChC,EAAS,iBAAK,MAAM,KAE1B,AAAK,KAAK,WAAW,EAAO,KACnB,MAAA,WAAW,EAAO,IAAM,CAAA,GAEjC,KAAK,WAAW,EAAO,IAAI,KAAK,EAAa,EAAI,CACrD,CAER,CACJ,CACJ,CAAC,EA7EwBd,GAAA,CAAA,MAAM,UACFZ,GAAA,CAAA,MAAM,gCAclBe,GAAA,CAAA,KAAA,EAEQC,GAAA,CAAA,MAAM,UACFf,GAAA,CAAA,MAAM,eACA,MAAM,sKA3BJ,IAAA,EAAiB,SAAA,GAAA,YAAA,CAAA,CAAA,YAC9CO,EAee,IAAA,CAAAC,EAdM,EACsC,KAAA,CAAA,OAAnDD,EAAmD,IAAA,CAAAE,EAAA,OAAA,KAAAC,EAAA,EAAA,GAAA,4BAAA,CAAA,EAAA,CAAA,YAGvDH,EASM,IAAA,CARFE,EAAA,MAAAE,GAAA,CAOMP,GAAA,EAAA,EAAAQ,EAAAgB,EAAA,KAAAC,EAAA,EAAA,iCAAA,kBAAA,CAAA,EAAA,IAPIzB,GAAU,EAAAQ,EAAA,MAAA,CAAmF,MAAK,UAAA,IAAA,CACxG,EAAA,CAAAH,EACI,MAGMV,GAAA,CAAAU,EAFF,MAAgGI,GAAA,CAAAJ,EAAzE,QAAI,CAAE,IAAK,EAAC,KAAA,MAAA,2BAC0HC,EAAA,EAAA,GAAA,EAAA,KAAA,CAAA,EAAA,EAAAI,EAAA,EAAAN,EAA5I,EAAmB,CAAA,MAAA,oBAAU,WAAA,EAAA,cAAA,EAAA,MAAgC,sBAAkB,AAAA,GAAA,EAAA,cAAA,EAAA,MAAA,EAAG,GAAc,EAAA,KAAG,SAAA,GAAA,YAAA,SAAA,EAAA,6FAsBzHJ,GAAA,EAAA,EAAAQ,EAAAgB,EAAA,KAAAC,EAf2D,OAAO,KAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAC5DzB,GACiB,EAAAC,EAAA,EAAA,CAAA,IAAA,GAAA,CAAA,OAA9BE,EAA8B,IAAA,CAAAE,EAAA,OAAA,KAAAC,EAAA,CAAA,EAAA,CAAA,YAGlCH,EASM,IAAA,CARFE,EAAA,MAAAM,GAAA,CAOMX,GAAA,EAAA,EAAAQ,EAAAgB,EAAA,KAAAC,EAAA,EAAA,WAAA,GAAA,CAAA,EAAA,IAPIzB,GAAU,EAAAQ,EAAA,MAAA,CAAmD,MAAK,UAAA,IAAA,CACxE,EAAA,CAAAH,EACI,MAGMT,GAAA,CAAAS,EAFF,MAA6EO,GAA7E,CACAP,EAA4H,QAAAQ,GAAAP,EAAA,EAAA,aAAA,IAAA,EAAA,CAAA,EAAAF,EAA3G,EAAmB,CAAA,MAAA,uCAAuB,sBAAc,AAAA,GAAA,EAAA,MAAA,EAAG,SAAA,GAAA,YAAA,SAAA,EAAA,aAAA,8QCVxG,KAAKd,IAAa,EAAa,CAC3B,KAAM,+BACN,WAAY,CAAEkD,QAAAA,CAAQ,EACtB,MAAO,CAAE,YAAa,CAAE,KAAM,OAA0C,EACxE,MAAO,CACI,MAAA,CACH,KAAM,IAAA,CAEd,EACA,MAAO,CACH,aAAc,CACV,KAAK,SAAS,CAClB,CACJ,EACA,KAAM,UAAU,CACZ,KAAK,SAAS,CAClB,EACA,QAAS,CACL,UAAW,CACP,KAAK,KAAO,KAAK,WACrB,CACJ,CACJ,CAAC,EAvCYjC,GAAA,CAAA,IAAK,OACC,MAAM,gBAIZE,GAAA,CAAA,MAAM,+BACA,MAAM,qHAHX,EAAAD,EAAA,MAAAD,GAAA,CAAAF,EAFF,MAAsLV,GAAtL,CAAAU,EACoB,QAAeI,GAAMH,EAAA,EAAA,KAAA,eAAA,OAAA,EAAA,EAAA,GAAA,2CAAA,EAAA,EAAA,GAAA,0CAAA,CAAA,EAAA,CAAA,EAAA,EAAA,KAAA,eAAzC,OAA8I,EAAAN,GAAA,EAAAC,EAAA,EAAA,CAA/F,IAAK,EAAiC,MAAO,8BAAwB,QAAQ,EAAM,KAAA,eAAA,SAAA,iCAGtI,CAAA,EAAAI,EACI,MAA0LK,GAA1L,CAAAL,EACoB,QAAcM,GAAML,EAAA,EAAA,KAAA,cAAA,OAAA,EAAA,EAAA,GAAA,4CAAA,EAAA,EAAA,GAAA,8CAAA,CAAA,EAAA,CAAA,EAAA,EAAA,KAAA,cAAxC,OAA4I,EAAAN,GAAA,EAAAC,EAAA,EAAA,CAA9F,IAAK,EAAiC,MAAO,8BAAuB,QAAQ,EAAM,KAAA,cAAA,SAAA,6ECkC5I,KAAKX,IAAa,EAAa,CAC3B,KAAM,+BACN,WAAY,CAAA,OAAE4B,EAAA,UAAQC,CAAU,EAChC,MAAO,CAAE,YAAa,CAAE,KAAM,OAA0C,EACxE,MAAO,CAAC,UAAU,EAClB,MAAO,CACI,MAAA,CACH,8CACA,KAAM,KACN,KAAM,CAAC,EACP,eAAgB,CAAC,EACjB,QAAS,CACL,OAAQ,CAAC,CAAa,CAC1B,CAAA,CAER,EACA,MAAO,CACH,aAAc,CACV,KAAK,SAAS,CAClB,CACJ,EACA,KAAM,UAAU,CACZ,KAAK,SAAS,CAClB,EACA,QAAS,CACL,UAAW,CACP,KAAK,KAAO,KAAK,YACjB,KAAK,SAAS,CAClB,EACA,UAAW,SACP,KAAK,KAAO,GACZ,WAAK,OAAL,cAAW,gBAAX,QAA0B,QAAQ,AAAC,GAAY,KAAK,KAAK,KAAK,CAAE,MAAO,CAAG,CAAC,EAC/E,EACA,gBAAiB,CACR,KAAA,MAAM,WAAY,KAAK,cAAc,CAC9C,CACJ,CACJ,CAAC,EA9EYZ,GAAA,CAAA,IAAK,OACC,MAAM,gBAkBAE,GAAA,CAAA,MAAM,+BACD,MAAM,yBACAE,GAAA,CAAA,MAAA,8KAQtB,EAAAH,EAAA,MAAAD,GAAA,CAAAF,EA5BF,MAAgLV,GAAhL,CAEAU,EAyBY,QAAAI,GAAAH,EAAA,EAAA,KAAA,cAAA,OAAA,EAAA,EAAA,GAAA,uCAAA,EAAA,EAAA,GAAA,yCAAA,CAAA,EAAA,CAAA,EAAAF,EAxBA,EAAI,CACZ,MAAM,EAAA,KACE,MAAA,0BAAA,UAAA,EAAA,eACR,qBAAe,EAAA,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,eAAA,GACP,QAAS,QAAA,QAAA,EAAA,QAChB,mBAAoB,EAA2C,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,QAAA,GAC/D,mBAAY,EAAc,2CAAA,mBAC1B,YAAY,EAAE,eACd,cAAc,EAAE,eAChB,eAAgB,EAAE,eAAA,iBAAA,EAAA,cAER,EAAA,CAAA,MAAAD,EAAA,IAAA,wCAGA,CAAA,EAAA,OACPA,EAKM,IAAA,CAAAE,EAJF,MAGOK,GAHP,CAC8BL,EAAA,OAAAM,GAAA,CAC1Bf,GAAAQ,EAAiB,EAAmB,CAAA,MAAA,sDAAoC,sBAAe,EAAA,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,QAAA,OAAA,MAAA,GAAA,YAAA,EAAA,GAAA,eAAA,sDAInGD,EAAyG,IAAA,CAAAC,EAAjG,EAAwB,CAAE,cAAK,WAAA,MAAAF,EAAA,EAAA,2CAAA,iBAAA,CACuH,EAAA,KAAA,EAAA,CAAA,OAAA,CAAA,EAAAE,EAAhJ,EAAO,CAAE,MAAM,QAAA,OAAA,EAAA,KAAA,cAAA,OAAA,EAAA,EAAA,GAAA,uCAAA,EAAA,EAAA,GAAA,yCAAA,kMCK7C,KAAKd,IAAa,EAAa,CAC3B,KAAM,uCACN,WAAY,CAAEE,OAAAA,EAAQ,6BAA2B,oCAAkC,EACnF,MAAO,CAAE,QAAS,CAAE,KAAM,OAAQ,EAAG,YAAa,CAAE,KAAM,OAAmC,EAC7F,MAAO,CAAC,QAAS,SAAS,EAC1B,MAAO,CACI,MAAA,CACH,8CACA,KAAM,KACN,OAAQ,CAAC,EACT,KAAM,EACN,QAAS,EAAA,CAEjB,EACA,MAAO,CACH,aAAc,CACV,KAAK,SAAS,CAClB,CACJ,EACA,OAAQ,CAEJ,MAAO,CAAA,MADOE,GACC,CACnB,EACA,KAAM,UAAU,CACZ,KAAK,SAAS,CAClB,EACA,QAAS,CACL,UAAW,CACP,KAAK,KAAO,KAAK,WACrB,EACA,aAAc,CACV,KAAK,MAAM,OAAO,EAClB,KAAK,KAAO,EACZ,KAAK,OAAS,EAClB,EACA,eAAe,EAAqC,CAChD,KAAK,OAAS,EAAe,IAAI,AAAC,GAAY,EAAG,KAAK,CAC1D,EACA,KAAM,OAAO,CACL,AAAA,KAAK,OAAS,EACd,KAAK,KAAO,EAEZ,KAAM,MAAK,qBAEnB,EACA,KAAM,sBAAsB,CACxB,KAAK,QAAU,GACf,KAAM,MAAK,MACN,KAAK,gEAAwE,CAAE,OAAQ,KAAK,MAAO,CAAC,EACpG,KAAK,AAAC,GAAiC,CACpC,KAAK,MAAM,QAAQ,CACf,MAAO,KAAK,GAAG,0BAA0B,EACzC,IAAK,KAAK,GAAG,4BAA4B,CAAA,CAC5C,EACI,KAAA,MAAM,UAAW,EAAS,IAAI,EACnC,KAAK,OAAS,GACd,KAAK,KAAO,CAAA,CACf,EACA,MAAM,IAAM,CAAA,CAAE,EAEnB,KAAK,QAAU,EACnB,CACJ,CACJ,CAAC,mNAhGgB,MAAAM,GAAA,EAAsCC,EAAA,EAAA,CAAE,MAAA,sCAAwE,aAAS,EAAO,2CAAA,OAAA,MAAG,QAAO,EAAI,QAAG,MAAA,GAAA,SAAA,EAC/I,EAAA,CAAA,OACPE,EAIU,IAAA,CAAAC,EAHU,EACiC,CAAA,MAAA,qDAAA,EAAA,CAAA,MAAAD,EAAA,IAAA,0DAS9C,CAAA,EAAA,OACPA,EAGM,IAAA,CAFmGE,EAAA,MAAAE,GAAA,CAAvFH,EAAA,EAAA,CAAgC,MAAK,+BAAA,QAAA,EAAA,kEACiF,EAAA,CAAA,SAAA,CAAA,EAAtHA,EAAA,EAAA,CAAgC,MAAK,+BAAA,QAAA,EAAA,wHARKD,EAAO,IAAA,CAAA,EAAA,QAAAH,KAAAC,EAAA,EAAA,CAA1D,IAAI,EAAiB,KAAK,gBAAA,MAAA,qBAENyB,EAAI,GAAA,EAAA,EAAA,EAAA,OAAA,EAAA1B,GAAA,EAAAC,EAAA,EAAA,CAAS,IAAA,EAAA,YAAA,EAAA,IAC9C,EAAA,KAAA,EAAA,CAAA,aAAA,CAAA,GAAAD,GAAA,EAAAC,EAAA,EAAA,CAA2C,IAAA,EAAoB,YAAU,EAAA,KAAA,WAAA,EAAA,2RCiDjF,KAAKX,IAAa,EAAa,CAC3B,KAAM,yBACN,WAAY,CAAE,wBAAsB,4BAA0B,0BAAwB,oCAAA,QAAkC2E,YAASC,EAAS,EAC1I,MAAO,CAAE,SAAU,CAAE,KAAM,MAAO,EAAG,SAAU,CAAE,KAAM,OAAS,EAChE,MAAO,CAAC,SAAS,EACjB,MAAO,CACI,MAAA,CACH,kBACA,KAAM,KACN,sBAAuB,KACvB,oBAAqB,GACrB,YAAa,IAAA,CAErB,EACA,MAAO,CACH,UAAW,CACP,KAAK,SAAS,CAClB,CACJ,EACA,SAAU,CACN,KAAK,SAAS,CAClB,EACA,QAAS,CACL,UAAW,CACP,KAAK,KAAO,KAAK,QACrB,EACA,eAAe,EAAiD,CAC5D,KAAK,sBAAwB,CACjC,EACA,KAAM,mBAAmB,CAChB,KAAA,MAAM,UAAW,EAAI,EAC1B,KAAM,MAAK,MAAM,IAAI,+DAAsE,EAAE,KAAK,AAAC,GAAkC,KAAK,YAAc,EAAS,IAAK,EACtK,KAAK,oBAAsB,GACtB,KAAA,MAAM,UAAW,EAAK,CAC/B,EACA,sBAAsB,EAAc,CAChC,KAAK,KAAO,EAAW,KAAK,KAAM,CAAO,EAAE,YAC3C,EAAS,KAAK,QAAQ,EACtB,KAAK,oBAAsB,EAC/B,CACJ,CACJ,CAAC,MApGY,MAAM,wBAQFvE,GAAA,CAAA,MAAM,kEAOV,MAAM,2BAGO,MAA+B,uGAGX,IAAK,EAAA,MAAA,2RArB3CK,GAaM,EAAAQ,EAAA,MAAAD,GAAA,CAAAF,EAPQ,MALDV,GAAA,CAAAS,EACW,EAA0C,CAAA,MAAA,gCAAA,EAAA,CAAA,MAAAD,EAAA,IAAA,6CAC/C,CAAA,EAAA,IACPA,EAAkK,IAAA,CAApJC,EAAA,EAAA,CAA6D,MAAK,4DAAA,QAAA,EAAA,uHAIxF,CAAA,EAAAC,EACI,MAEMI,GAAA,CAFKJ,EAAA,MAAA,CAAwB,MAAK,uBAAA,MAAAH,EAAA,EAAA,eAAA,MAAA,iBAAA,CACpC,EAAA,CAAAE,EAAgC,EAAsB,CAAY,MAAcF,EAAA,EAAA,eAAA,MAAA,QAAA,EAAG,SAAQ,EAAE,KAAA,WAAA,EAAA,+DAKzG,CAAA,EAAAG,EAKc,MAJDK,GAAA,CAAAN,EACW,EACkE,CAAA,MAAA,kCAAA,EAAA,CAAA,MAA9ED,EAA8E,IAAA,OAAA,OAAAE,EAAA,OAAAM,GAAAL,EAAA,KAAA,wBAAA,cAAA,IAAA,EAAA,CAAA,QAG3E,CAAA,EAAA,EAAA,sBAAAN,GAAA,EAgBGQ,EAAA,MAAAZ,GAAA,CAfKQ,EAAA,EAAA,CAAiD,MAAA,iDAAW,WAAS,GAAA,YAAA,qBAChFD,EAMW,IAAA,OAAA,OAAAC,EALU,EAC8C,KAAA,CAAA,OAA3DD,EAA2D,IAAA,CAAAE,EAAA,OAAA,KAAAC,EAAA,EAAA,GAAA,oCAAA,CAAA,EAAA,CAAA,YAG/DH,EAA8G,IAAA,CAAAC,EAAhF,EAAO,CAAE,MAAA,QAAA,sBAAA,EAAA,8DAE3B,CAAA,EAAhB,MAAA,wBAAA,cAAA,QAMW,aAJsDH,EAAA,EAAA,CAAA,IAAA,GAAA,CAAA,OAAzDE,EAAyD,IAAA,CAAAE,EAAA,OAAA,KAAAC,EAAA,EAAA,GAAA,kCAAA,CAAA,EAAA,CAAA,YAG7DH,EAAgH,IAAA,CAAAC,EAApF,EAAO,CAAE,MAAA,QAAA,gBAAA,EAAA,sBAAA,+EAMrD,CAAA,EAAAA,EAA4C,EAAmB,CAAG,QAAa,EAAA,oBAAc,YAAK,EAAA,YAAgC,QAAO,EAAE,IAAqB,GAAA,GAAA,AAAA,GAAA,EAAA,oBAAA,IAAA,UAAA,EAAA,8MCLpK,KAAKd,IAAa,EAAa,CAC3B,KAAM,uCACN,WAAY,CAAA,KAAE0E,GAAA,OAAMxE,CAAO,EAC3B,MAAO,CAAE,QAAS,CAAE,KAAM,OAAQ,EAAG,2BAA4B,CAAE,KAAM,MAAQ,EACjF,MAAO,CAAC,QAAS,MAAM,EACvB,MAAO,CACI,MAAA,CACH,+CACA,uBAAwB,CAAC,CAAA,CAEjC,EACA,MAAO,CACH,4BAA6B,CACzB,KAAK,2BAA2B,CACpC,CACJ,EACA,SAAU,CACN,KAAK,2BAA2B,CACpC,EACA,QAAS,CACL,4BAA6B,CACzB,KAAK,uBAAyB,KAAK,0BACvC,EACA,aAAc,CACV,KAAK,MAAM,OAAO,CACtB,EACA,MAAO,CACH,KAAK,MAAM,MAAM,CACrB,CACJ,CACJ,CAAC,MAnDQ,MAAM,SAGqFG,GAAA,CAAA,MAAA,gCAAjDc,GAAyBJ,EAAA,IAAA,CAAC,MAAA,oBAAA,cAAA,6GAnBlEL,GAAwC,EAAAC,EAAA,EAAA,CAAC,GAAA,yCAA6C,MAAK,sCAA6D,MAAOC,EAAS,EAAA,4CAAA,OAAA,KAAA,EAAG,QAAO,EAAI,QAAG,MAAA,GAAkB,SAAU,GAAO,WAAY,GAAA,WAAA,EACpO,EAAA,CAAA,OACPC,EAIU,IAAA,CAAAC,EAHU,EACc,CAAA,MAAA,qDAAA,EAAA,CAAA,MAAAD,EAAA,IAAA,uCAoB3B,CAAA,EAAA,OACPA,EAAqG,IAAA,CAAvFC,EAAA,EAAA,CAAgC,MAAK,+BAAA,QAAA,EAAA,kEACyC,EAAA,CAAA,SAAA,CAAA,EAA9EA,EAAA,EAAA,CAAgC,MAAK,+BAAA,QAAA,EAAA,kFAjBvDD,EAKM,IAAA,CAAAE,EAJF,MAAyDE,GAAA,CACzDF,EAAwE,YAAlE,EAAE,GAAA,sCAAA,CAAA,EAAA,CAAA,EACRA,EAAwE,WAAlE,EAAE,GAAA,uDAAA,CAAA,EAAA,CAAA,EACRA,EAA0E,WAApE,EAAE,GAAA,uDAAA,CAAA,EAAA,CAAA,EAAAA,EAAA,IAAA,KAAAC,EAAA,EAAA,GAAA,yDAAA,CAAA,EAAA,CAAA,CAGZ,CAAA,EACID,EAAA,MAAAV,GAAA,CAIMK,GAAA,EAAA,EAAAQ,EAAAgB,EAAA,KAAAC,EAAA,EAAA,uBAAA,CAAA,EAAA,IAJyDzB,GAAK,EAAAQ,EAAA,MAAA,CAAE,IAAK,EAAA,MAAA,OACvE,EAAA,CACAH,EAAkI,KAAA,KAAAC,EAAA,EAAA,wBAAA,EAAA,CAAA,EAAAD,EAAA,MAAA,KAAA,CAA9FuD,EAAoDtD,EAAA,EAAA,eAAA,EAAA,IAAA,CAAA,EAAAG,qCACxF,CAAA,EAAwHL,EAAA,EAAA,CAAA,MAAA,OAAA,EAAA,CAAA,QAAAD,EAAA,IAAA,mLC2BxI,KAAKb,IAAa,EAAa,CAC3B,KAAM,UACN,WAAY,CAAE,oBAAkB,gCAAsB2E,GAAS,SAAAC,GAAA,OAAU1E,EAAQ,oCAAkC,EACnH,MAAO,CAAE,QAAS,CAAE,KAAM,OAAW,EAAA,SAAU,CAAE,KAAM,QAAU,cAAe,CAAE,KAAM,OAAS,EACjG,MAAO,CAAC,eAAgB,gBAAgB,EACxC,MAAO,CACI,MAAA,CACH,GAAI8C,EAAY,EAChB,kBACA,KAAM,KACN,SAAU,KACV,YAAa,GACb,kCAAmC,GACnC,uBAAwB,CAAC,EACzB,QAAS,EAAA,CAEjB,EACA,SAAU,CAAC,EACX,MAAO,CACH,UAAW,CACP,KAAK,SAAS,CAClB,CACJ,EACA,SAAU,CACN,KAAK,SAAS,CAClB,EACA,QAAS,CACL,GAAG,GAAW5C,EAAW,CAAC,SAAS,CAAC,EACpC,UAAW,CACP,KAAK,KAAO,KAAK,SAEb,KAAK,MACA,MAAA,SAAW,GAAQ,KAAK,IAAI,EAEzC,EACA,WAAW,EAAkB,CACzB,KAAK,QAAU,CACnB,EACA,KAAM,eAAe,CACX,KAAA,MAAK,mBAAmB,EAAI,CACtC,EACA,eAAgB,CACZ,KAAK,mBAAmB,EAAK,CACjC,EACA,KAAM,oBAAmB,EAAwB,SAC7C,KAAK,QAAU,GACf,KAAM,GAAW,CAAE,KAAM,CAAE,KAAM,QAAK,gBAAL,cAAoB,KAAM,GAAI,QAAK,gBAAL,cAAoB,IAAM,KAAM,EAAS,KAAK,QAAQ,GAC/G,KAAA,MAAK,MACN,KAAK,+DAAuE,CAAQ,EACpF,KAAK,KAAO,IAAiC,CAC1C,KAAK,SAAW,EAAW,KAAK,SAAU,EAAS,IAAI,EAAE,YACpD,KAAA,SAAW,GAAQ,KAAK,IAAI,EAC5B,KAAA,YAAc,CAAC,KAAK,YACrB,GACA,CAAI,EAAS,KAAK,uBAAuB,SAAW,EAChD,KAAM,MAAK,gBAEX,MAAK,kCAAoC,GACpC,KAAA,uBAAyB,EAAS,KAAK,wBAChD,CACP,EACA,MAAM,IAAM,CAAA,CAAE,EACnB,KAAK,QAAU,EACnB,EACA,KAAM,gBAAgB,SAClB,KAAM,GAAW,CAAE,KAAM,CAAE,KAAM,QAAK,gBAAL,cAAoB,KAAM,GAAI,QAAK,gBAAL,cAAoB,IAAM,KAAM,EAAS,KAAK,QAAQ,GAC/G,KAAA,MAAK,MACN,KAAK,0DAAkE,CAAQ,EAC/E,KAAK,IAAM,CACR,KAAK,QAAQ,CACT,MAAO,KAAK,GAAG,0BAA0B,EACzC,IAAK,KAAK,GAAG,sBAAsB,CAAA,CACtC,EACD,KAAK,MAAM,gBAAgB,CAAA,CAC9B,EACA,MAAM,IAAM,CAAE,CAAA,EACd,QAAQ,IAAO,KAAK,kCAAoC,EAAM,CACvE,EACA,qBAAsB,CAClB,KAAK,SAAS,QAAQ,CAClB,OAAQ,KAAK,GAAG,sBAAsB,EACtC,OAAQ,IAAM,CACV,KAAK,MAAM,cAAc,EACzB,KAAK,KAAO,KACZ,KAAK,SAAW,KAChB,KAAK,uBAAyB,EAClC,CAAA,CACH,CACL,CACJ,CACJ,CAAC,mTAzIgBM,GAAC,EAAAC,EAAA,EAAA,CAAqE,MAAA,oEAA0C,aAAS,EAAO,eAAA,MAAA,KAAG,QAAO,EAAK,QAAG,MAAA,GAAiB,SAAS,GAAS,SAAU,QAAM,WAAY,EAAA,WAAA,EAC/M,EAAA,CAAA,OACPE,EAMU,IAAA,CAAAC,EALU,EAA2B,CAAA,MAAA,qDAAA,EAAA,CAAA,MAAAD,EAAA,IAAA,8BAChC,CAAA,EACP,IAAAA,EAAA,IAAA,CAAAwC,EAAavC,EAAY,EAAA,CAAC,KAAK,aAAuF,MAAK,gDAAA,QAAA,EAAA,oCAAzB,EAAA,EAAA,GAAA,aAAA,0BACrFA,EAAa,EAAA,CAAC,KAAK,cAAwF,MAAK,gDAAA,QAAA,EAAA,2CAA1B,EAAA,EAAA,GAAA,cAAA,0CAI/GD,EAiBM,IAAA,CAhBwBE,EAAA,MAAAE,GAAA,CAAA,EAAA,QAAAP,KAAAC,EAAA,EAAA,CAAE,IAAK,EAAmB,MAAK,kBAAgB,KAAA,gBAAA,YAAA,kBACzEyB,EAcU,GAAA,EAAA,EARKtB,EAAA,EAAA,CAAA,MAAA,gDAAA,EAAA,CAAA,QALXD,EAKW,IAAA,CAAAC,EAJU,EACuC,KAAA,CAAA,OAApDD,EAAoD,IAAA,CAAAE,EAAA,OAAA,KAAAC,EAAA,EAAA,GAAA,6BAAA,CAAA,EAAA,CAAA,YAExDH,EAAgK,IAAA,CAAAC,EAA7I,EAA+B,CAAe,gBAAU,EAAI,cAAA,aAAG,SAAU,EAAA,KAAW,SAAa,EAAA,SAAc,YAAW,EAAE,YAAA,cAAA,EAAA,oGAEnJ,CAAA,EAAAA,EACqB,EACuC,KAAA,CAAA,OAApDD,EAAoD,IAAA,CAAAE,EAAA,OAAA,KAAAC,EAAA,EAAA,GAAA,6BAAA,CAAA,EAAA,CAAA,YAGxDH,EAAyG,IAAA,CAAAC,EAAxE,EAAI,CAAG,SAAU,EAAA,KAAW,SAAO,EAAE,SAAA,UAAA,EAAA,uEAKlF,CAAA,EAAAA,EAA6C,EAAiC,CAAG,QAAA,EAAA,kCAAqD,2BAAK,EAAA,uBAA8C,QAAM,EAAa,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,kCAAA,IAAA,OAAA,EAAA,2ICiPpN,KAAKd,IAAa,EAAa,CAC3B,KAAM,8BACN,WAAY,CAAA,KACR8E,GAAA,OACA5E,EAAA,SACA8B,EACA,wBAAA,YACA7B,GACA,eACA,wBACA,yBACA,uBACA,UACJ,EACA,MAAO,CACH,sBAAuB,CACnB,KAAM,OACN,SAAU,EACd,EACA,iBAAkB,CACd,KAAM,MACN,SAAU,EACd,EACA,gBAAiB,CACb,KAAM,MACN,SAAU,EACd,EACA,KAAM,CACF,KAAM,MACV,EACA,WAAY,CACR,KAAM,OACV,EACA,SAAU,CACN,KAAM,OACV,EACA,sBAAuB,CACnB,KAAM,KACV,CACJ,EACA,MAAO,CAAC,eAAgB,eAAgB,oBAAqB,gBAAgB,EAC7E,MAAO,CACH,uBAAwB,CACpB,KAAK,GAAG,SACR,KAAK,kBAAkB,CAC3B,EACA,kBAAmB,CACf,KAAK,eAAe,CACxB,EACA,iBAAkB,CACd,KAAK,gBAAgB,CACzB,CACJ,EACA,SAAU,CACN,cAAoB,OACT,MAAA,6DAA6D,KAAK,cAAc,wBAAyB,QAAK,OAAL,cAAmB,6BAA6B,KAAK,cAAc,aAAa,KAAK,cAAc,MACvN,CACJ,EACA,OAAQ,CAEJ,MAAO,CAAA,MADOC,GACC,CACnB,EACA,SAAU,CACN,KAAK,kBAAkB,EACvB,KAAK,eAAe,EACpB,KAAK,gBAAgB,CACzB,EACA,MAAO,CACI,MAAA,CACH,sCACA,sCACA,cAAe,CAAC,EAChB,WAAY,CAAC,EACb,YAAa,CAAC,EACd,eAAgB,GAChB,wBAAyB,GACzB,2BAA4B,GAC5B,qBAAsB,GACtB,KAAM,KACN,QAAS,GACT,GAAI4C,EAAY,EAChB,QAAS,GACT,gBAAiB,GACjB,mBAAoB,EAAA,CAE5B,EACA,aAAc,CACH,MAAA,CACH,cAAe,GAAkB,gBAAiB,GAAmC,YAAY,aAAa,CAAA,CAEtH,EACA,QAAS,CACL,mBAAoB,CAChB,KAAK,cAAgB,CAAE,GAAG,KAAK,qBAAsB,CACzD,EACA,gBAAiB,CACb,KAAK,WAAa,KAAK,gBAC3B,EACA,iBAAkB,CACd,KAAK,YAAc,KAAK,eAC5B,EACA,WAAW,EAAO,CACd,KAAK,MAAM,eAAgB,EAAM,OAAO,MAAM,EAAE,CACpD,EACA,cAAc,EAAmB,EAAY,CACrC,AAAA,KAAc,mBAAqB,IAAc,uBAAsB,MAAK,gBAAkB,IAClG,KAAK,MAAM,eAAgB,CAAE,YAAW,OAAO,CAAA,CACnD,EACA,gBAAiB,CACR,KAAA,MAAM,eAAgB,CAAE,UAAW,cAAe,MAAO,KAAK,cAAc,WAAA,CAAa,CAClG,EACA,mBAAoB,CACX,KAAA,MAAM,eAAgB,CAAE,UAAW,YAAa,MAAO,KAAK,cAAc,SAAA,CAAW,CAC9F,EACA,KAAM,cAAc,OAChB,AAAI,KAAK,gBACL,KAAK,mBAAqB,GAE1B,MAAK,QAAU,GACf,KAAM,MAAK,gBACP,AAAA,SAAK,wBAAL,cAA4B,UAAW,EACvC,KAAK,2BAA6B,GAElC,KAAM,MAAK,uBAEf,KAAK,QAAU,GAEvB,EACA,qBAAsB,CAClB,KAAK,MAAM,mBAAmB,CAClC,EACA,aAAa,EAAW,CACpB,KAAK,KAAO,EACZ,KAAK,2BAA6B,GAClC,KAAK,qBAAuB,EAChC,EACA,KAAM,uBAAuB,CACnB,KAAA,MAAK,MACN,IAAI,iDAAwD,EAC5D,KAAK,AAAC,GAAiC,CACpC,KAAK,KAAO,EAAS,KACrB,KAAK,qBAAuB,EAAA,CAC/B,EACA,MAAM,IAAM,CAAA,CAAE,CACvB,EACA,KAAM,gBAAgB,WAClB,GAAI,GAAM,gCAAgC,QAAK,gBAAL,cAAoB,wBAAyB,KAAK,MAAM,OAAe,KAAK,6BAA6B,QAAK,gBAAL,cAAoB,aAAa,QAAK,gBAAL,cAAoB,OACxM,AAAI,KAAK,cAAc,iBAAwB,IAAA,oBAAoB,KAAK,cAAc,mBAClF,KAAK,cAAc,oBAA2B,IAAA,uBAAuB,KAAK,cAAc,sBAC5F,KAAM,MAAK,MACN,IAAI,gCAAoC,EAAK,CAC1C,QAAS,CACL,OAAQ,+HACZ,CAAA,CACH,EACA,KAAK,IAAM,CAAA,CAAE,EACb,MAAM,IAAM,CAAA,CAAE,CACvB,CACJ,CACJ,CAAC,EAnaoB/B,GAAA,CAAA,MAAM,qBACD,MAAM,sCAeEG,GAAQ,CAAC,IAAK,QAAA,MAAA,+BAUtB,MAAM,sCAeEE,GAAC,CAAc,IAAK,cAAA,MAAA,gDAYpBf,GAAW,CAAC,IAAK,WAAA,MAAA,2BAkC9BiB,GAAA,CAAA,IAAK,wBAEQhB,GAAC,CAAkB,IAAK,kBAAA,MAAA,2BAkCrCkB,GAAA,CAAA,IAAK,GACDjB,GAAA,CAAA,MAAM,oDACG4B,GAAS,CAAC,IAAK,SAAA,MAAA,2BAIpBC,GAAA,CAAA,MAAM,uCAGNC,GAAA,CAAA,MAAM,aAKV,MAAM,aACF,MAAM,wDAC8B,IAAK,EAAA,MAAA,UAE5BgB,GAAC,CAAkB,IAAK,kBAAA,MAAA,2BAIxBI,GAAa,CAAC,IAAK,aAAA,MAAA,+CAKvBH,GAAa,CAAC,IAAK,aAAA,MAAA,+BAKpC,IAAK,EAAA,MAAA,UASDM,GAAA,CAAA,MAAM,yBACF,MAAM,iBACFE,GAAA,CAAA,MAAM,wBACD,MAAM,6CAgBEC,GAAQ,CAAC,IAAK,QAAA,MAAA,+BAUtB,MAAM,sCAgBE,GAAQ,CAAC,IAAK,QAAA,MAAA,wUA1NnC,MAAAvD,GAKH,EAAAC,EAAA,EAAA,KAAA,CAAA,OAJVE,EAIU,IAAA,CAAAC,EAHU,EACqC,CAAA,MAAA,gCAAA,EAAA,CAAA,MAAAD,EAAA,IAAA,8DAIlD,CAAA,EAAA,QACPA,EA8NO,IAAA,CAAAE,EA7NH,OAwBME,GAAA,CAAAF,EAvBF,MAgBOV,GAhBP,CAcMU,EAAA,OAAAI,GAAA,CAZWL,EAAA,EAAA,CACT,GAAA,OAG2D,MAAAmC,EAAA,CAAA,oBAAA,CAAA,YAAA,EAAA,GAAA,cAAA,KAAA,UAAA,EAAA,GAAA,cAAA,KAAA,MAFhD,CAAA,CAAA,EAAA,KAAA,uEACX,EAA2C,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,GAAA,cAAA,KAAA,OAAA,GAI3C,eAAe,CAAA,KAAA,EAAA,EACd,UAAU,MACV,SAAI,EAAA,cAAA,GACJ,OAAK,EAAE,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,GAAA,cAAa,KAAe,OAAA,GACpC,UAAU,IAAY,GAAA,GAAA,AAAA,GAAA,EAAA,cAAA,OAAA,EAAA,OAAA,KAAA,GAAA,YAAA,YAE1B,EAAA,KAAA,EAAA,CAAA,aAAsF,QAAtF,UAAsF,CAAA,EAAAlC,EAAA,QAAAK,GAAAJ,EAAA,EAAA,GAAA,aAAA,CAAA,EAAA,MAAA,CAAA,CAE1F,CAAA,EAAAF,EACY,EAAqB,CAC5B,MAAyB,EAAA,GAAA,cAAA,KAA4C,0BAAA,CAAA,UAAA,EAAA,GAAA,aAAA,iDAK9E,CAAA,EAAAC,EACI,MAgBOM,GAhBP,CAcMN,EAAA,OAAAT,GAAA,CAAAQ,EAZK,EAAa,CAChB,GAAA,cAG2D,MAAAmC,EAAA,CAAA,oBAAA,CAAA,YAAA,EAAA,GAAA,cAAA,YAAA,UAAA,EAAA,GAAA,cAAA,YAAA,MAFhD,CAAA,CAAA,EAAA,KAAA,8EACX,EAAkD,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,GAAA,cAAA,YAAA,OAAA,GAIlD,eAAe,CAAA,KAAA,EAAA,EACd,UAAI,MACJ,OAAK,EAAE,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,GAAA,cAAa,YAAsB,OAAA,GAC1C,QAAQ,EAAE,IAAQ,GAAA,GAAA,AAAA,GAAA,EAAA,cAAA,cAAA,EAAA,OAAA,KAAA,GACnB,SAAU,EAAA,SAAA,YAAA,mBAEd,EAAA,KAAA,EAAA,CAAA,aAAuH,QAAvH,UAAuH,CAAA,EAAAlC,EAAA,QAAAO,GAAAN,EAAA,EAAA,GAAA,2CAAA,CAAA,EAAA,CAAA,CAE3H,CAAA,EAAAF,EACY,EAA4B,CACnC,MAAyB,EAAA,GAAA,cAAA,YAA4C,0BAAA,CAAA,UAAA,EAAA,GAAA,2CAAA,iDAM9E,CAAA,EAAAC,EACI,MA0BOQ,GAAA,CAAAR,EAzBH,OAA4F,KAA5F,CACAA,EAuBW,QAAAR,GAAAS,EAAA,EAAA,GAAA,iBAAA,CAAA,EAAA,MAAA,CAAA,EAAAF,EAtBJ,EAAU,CACb,GAAA,WAC2D,MAAAmC,EAAA,CAAA,oBAAA,CAAA,YAAA,EAAA,GAAA,cAAA,SAAA,UAAA,EAAA,GAAA,cAAA,SAAA,MAGlD,CAAA,CAAA,EAAA,WAAA,EAAA,GAAA,cAAA,SAAA,OACR,sBAAS,EAAU,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,GAAA,cAAA,SAAA,OAAA,GACnB,QAAa,EAAA,WACb,YAAU,EAAQ,GAAA,iBAAA,EAClB,SAAW,EAAA,SACX,aAAM,EAAA,IAAA,GAAA,GAAA,AAAA,GAAE,EAAa,GAAA,cAAA,SAAa,OAAO,GAAA,SAAA,EAAA,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,cAAA,WAAA,EAAA,MAAA,QAAA,EAE/B,EAAA,CAAA,MACIpC,EAAU,AAAK,GAAA,CAAA,EAAA,MAAAH,GAAA,IACqB,MAAlCc,GAAA,CAAAT,EAAA,OAAA,KAAAC,EAAA,EAAA,MAAA,QAAA,EAAA,CAAA,aAGN,CAAA,EAAA,OACPH,EAEM,AAAA,GAAA,CAAAE,EADF,MAA4C,KAAA,CAAAA,EAAA,OAAA,KAAAC,EAAA,EAAA,OAAA,QAAA,EAAA,CAAA,uEAK5D,CAAA,EAAAF,EACY,EAAyB,CAChC,MAAyB,EAAA,GAAA,cAAA,SAA4C,0BAAA,CAAA,UAAA,EAAA,GAAA,gDAAA,iDAM9E,CAAA,EAAAC,EACI,MA0BOU,GAAA,CAAAV,EAzBH,OAA4H,KAA5H,CACAA,EAuBW,QAAAP,GAAAQ,EAAA,EAAA,GAAA,0CAAA,CAAA,EAAA,MAAA,CAAA,EAAAF,EAtBJ,EAAiB,CACpB,GAAA,kBAC2D,MAAAmC,EAAA,CAAA,oBAAA,CAAA,YAAA,EAAA,GAAA,cAAA,gBAAA,UAAA,EAAA,GAAA,cAAA,gBAAA,MAGlD,CAAA,CAAA,EAAA,WAAA,EAAA,GAAA,cAAA,gBAAA,OACR,sBAAS,EAAW,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,GAAA,cAAA,gBAAA,OAAA,GACpB,QAAa,EAAA,YACb,YAAU,EAAQ,GAAA,0DAAA,EAClB,SAAW,EAAA,SACX,aAAM,EAAA,KAAA,GAAA,IAAA,AAAA,GAAE,EAAa,GAAA,cAAA,gBAAoB,OAAO,GAAA,SAAA,EAAA,KAAA,GAAA,IAAA,AAAA,GAAA,EAAA,cAAA,kBAAA,EAAA,KAAA,EAEtC,EAAA,CAAA,MACIpC,EAAU,AAAK,GAAA,CAAA,EAAA,MAAAH,GAAA,IACY,MAAzBgB,GAAA,CAAAX,EAAA,OAAA,KAAAC,EAAA,EAAA,KAAA,EAAA,CAAA,aAGN,CAAA,EAAA,OACPH,EAEM,AAAA,GAAA,CAAAE,EADF,MAAmC,KAAA,CAAAA,EAAA,OAAA,KAAAC,EAAA,EAAA,MAAA,EAAA,CAAA,uEAKnD,CAAA,EAAAF,EACY,EAAgC,CACvC,MAAyB,EAAA,GAAA,cAAA,gBAA4C,0BAAA,CAAA,UAAA,EAAA,GAAA,0CAAA,iDAM9E,CAAA,EAAAC,EACI,MAGMN,GAAA,CAAA4C,EAFFtC,EAAiH,MAAAY,GAAA,CACjHZ,EAA+D,QAAAsB,GAAArB,EAAA,EAAA,GAAA,0CAAA,CAAA,EAAA,IAAA,CAAA,EAAAF,EAAjD,EAA0B,CAAG,eAAgB,EAAA,WAAA,WAAA,yEAE/D,CAAA,EAAAC,EACI,MAEMuB,GAAA,CAAAvB,EADF,MAAmLwB,GAAA,CAAAc,EAA7IvC,EAA8B,EAAA,CAAE,MAAO,+BAA8C,MAAK,EAAE,GAAW,uCAAA,EAAE,QAAU,EAAA,YAAA,YAAA,yBAAzI,CAAc,QAAA,SAAA,CAAA,EAAA,CAAA,CAAAwC,GAAA,EAAA,cAAA,MAG0KD,EAAAtC,EAAA,MAAAyB,GAAA,CAAAa,EAAlKvC,EAA8B,EAAA,CAAE,MAAO,+BAA+C,MAAK,EAAE,GAAA,wCAAA,EAAgC,UAAU,KAAiB,GAAA,IAAA,AAAA,GAAA,EAAA,wBAAA,IAAA,YAAA,iBAA9K,EAAA,KAAA,EAAA,CAAA,OAAA,CAAA,EAAA,CAAA,CAAAwC,GAAA,EAAA,cAAA,8BAIxB,CAAA,EAAAvC,EACI,MASM0B,GAAA,CAAA1B,EARS,MAAwB2B,GAAA,CAAA,EAAA,sBAAnC,MACgI,EAAAxB,EAAA,MAAAyB,GAAA,CAAA7B,EAA5G,EAAiB,CAAC,GAAA,kBAAA,MAAA,qCAAyC,sBAAkB,EAAA,KAAA,GAAA,IAAA,AAAA,GAAA,EAAA,eAAA,GAAE,SAAU,EAAA,SAAA,YAAA,gBACzG,EAAA,KAAA,EAAA,CAAA,aAA4H,UAA5H,CAAA,EAAAC,EAAA,QAAAwC,GAAAvC,EAAA,EAAA,GAAA,6CAAA,CAAA,EAAA,CAAA,KAEJoB,EAGM,GAAA,EAAA,EAF8HrB,EAAA,MAAA,KAAA,CAAAD,EAAhH,EAAY,CAAC,GAAA,aAAA,MAAA,gDAAoD,sBAAkB,EAAA,KAAA,GAAA,IAAA,AAAA,GAAA,EAAA,cAAA,YAAA,GAAG,SAAQ,EAAA,SAAA,SAAA,EAAA,cAC9G,EAAA,KAAA,EAAA,CAAA,aAAiM,WAAjM,UAAiM,CAAA,EAAAC,EAAA,QAAA4C,GAAA3C,EAAA,EAAA,cAAA,YAAA,EAAA,GAAA,2CAAA,EAAA,EAAA,GAAA,yCAAA,CAAA,EAAA,CAAA,GAGzM,CAAA,EACqID,EAAA,MAAA6C,GAAA,CAAA9C,EAAjH,EAAY,CAAC,GAAA,aAAA,MAAA,8CAAkD,sBAAkB,EAAA,KAAA,GAAA,IAAA,AAAA,GAAA,EAAA,cAAA,UAAA,GAAG,SAAQ,EAAA,SAAA,SAAA,EAAA,iBAC5G,EAAA,KAAA,EAAA,CAAA,aAAA,WAAA,UAAA,CAAA,EAAAuC,EAAA3C,GAAA,EAAAQ,EAAmI,QAAcsC,GAAY,CAAAc,EAAAtD,EAAA,EAAA,cAAA,UAAA,EAAA,GAAA,yCAAA,EAAA,EAAA,GAAA,4CAAA,CAAA,EAAA,CAAA,OAAnF,GAAA,EAAA,GAAA,gDAAA,2BAK5D,CAAA,EACtB,EAAA,eAAAN,GAAA,EAOUQ,QAPI2C,GAAC,CAAA/C,EACK,EAC2D,CAAA,MAAA,kCAAA,EAAA,CAAA,MAAAD,EAAA,IAAA,4EAEhE,CAAA,EACP,IAAAA,EAAA,IAAA,CAAAwC,EAAAtC,EAAA,IAAA+C,GAAA,KAAA,GAAA,EAAA,EAA+C,GAAA,EAAA,GAAA,6CAAA,6BAGvD,CAAA,EAAA/C,EACI,MAqDMgD,GAAA,CAAAhD,EApDF,MAyBMiD,GAAA,CAAAjD,EAxBF,MAiBO0C,GAjBP,CAAA1C,EACI,OAcE2C,GAAA,CAAAL,EAbKvC,EAAiB,EAAA,CACpB,GAAA,kBAGuE,MAAAmC,EAAA,CAAA,oBAAA,CAAA,YAAA,EAAA,GAAA,cAAA,gBAAA,UAAA,EAAA,GAAA,cAAA,gBAAA,MAF5D,CAAA,CAAA,EAAA,KAAA,kFACX,EAAsD,KAAA,GAAA,IAAA,AAAA,GAAA,EAAA,GAAA,cAAA,gBAAA,OAAA,GAItD,eAAe,CAAA,KAAA,EAAA,EAEd,UAAU,MACV,SAAI,EAAA,SACJ,OAAK,EAAE,KAAA,GAAA,IAAA,AAAA,GAAA,EAAA,GAAA,cAAa,gBAA0B,OAAA,GAC/C,UAAU,KAAc,GAAA,IAAA,AAAA,GAAA,EAAA,cAAA,kBAAA,EAAA,OAAA,KAAA,GAAA,YAAA,4DAJN,GAAA,EAAA,GAAA,6DAAA,qBAMtB,CAAA,EAAAlC,EAAA,QAAAkD,GAAAjD,EAAA,EAAA,GAAA,+CAAA,CAAA,EAAA,CAAA,CAEJ,CAAA,EAAAF,EACY,EAAgC,CACvC,MAAyB,EAAA,GAAA,cAAA,gBAAA,0BAAA,gHAKlC,CAAA,EAAAC,EACI,MAiBOmD,GAjBP,CAAAnD,EACI,OAcE,GAAA,CAAAsC,EAbKvC,EAAoB,EAAA,CACvB,GAAA,qBAGuE,MAAAmC,EAAA,CAAA,oBAAA,CAAA,YAAA,EAAA,GAAA,cAAA,mBAAA,UAAA,EAAA,GAAA,cAAA,mBAAA,MAF5D,CAAA,CAAA,EAAA,KAAA,qFACX,EAAyD,KAAA,GAAA,IAAA,AAAA,GAAA,EAAA,GAAA,cAAA,mBAAA,OAAA,GAIzD,eAAe,CAAA,KAAA,EAAA,EAEd,UAAU,MACV,SAAI,EAAA,SACJ,OAAK,EAAE,KAAA,GAAA,IAAA,AAAA,GAAA,EAAA,GAAA,cAAa,mBAA6B,OAAA,GAClD,UAAU,KAAuB,GAAA,IAAA,AAAA,GAAA,EAAA,cAAA,qBAAA,EAAA,OAAA,KAAA,GAAA,YAAA,qEAJf,GAAA,EAAA,GAAA,gEAAA,qBAMtB,CAAA,EAAAlC,EAAA,QAAA,GAAAC,EAAA,EAAA,GAAA,kDAAA,CAAA,EAAA,CAAA,CAEJ,CAAA,EAAAF,EACY,EAAiB,CACxB,MAAyB,EAAA,GAAA,cAAA,mBAAA,0BAAA,qIAUtB,CAAA,EAAA,EAAA,wBAAAJ,KAAAC,EAAA,EAAA,CAA0B,IAAA,EAAuC,cAAU,EAAA,sBAAG,KAAK,EAAA,KAAoC,UAAW,KAAmB,GAAA,IAAA,AAAA,GAAA,EAAA,wBAAA,IAAA,YAAA,EAAA,qEAEjLyB,EAAyM,GAAA,EAAA,EAAAtB,EAA1K,EAA0B,CAAG,QAAA,EAAA,2BAA+C,sBAAK,EAAA,sBAAuC,UAAc,KAAY,GAAA,IAAA,AAAA,GAAA,EAAA,2BAAA,IAAA,eAAA,EAAA,cAEC,KAAA,EAAA,CAAA,UAAA,wBAAA,gBAAA,CAAA,EAA/JA,EAAA,EAAA,CAAuB,QAAQ,EAAE,qBAAO,SAAe,EAAA,KAAgB,cAAY,EAAA,cAAiC,eAAc,mBAAE,qBAAK,IAAA,iBAAA,EAAA,KAAA,GAAA,IAAA,AAAA,GAAA,EAAA,MAAA,gBAAA,IACxF,KAAA,EAAA,CAAA,UAAA,WAAA,eAAA,CAAA,EAAAA,EAA1C,EAAiB,CAAE,GAAA,kBAAA,WAAA,EAAA,OAOpC,EAAA,KAAA,EAAA,CAAA,YAAA,CAAA,EALSA,EAAA,EAAA,CAAqB,QAAO,EAAI,mBAAG,MAAA,GAAA,SAAA,EAEtC,EAAA,CAAA,OACPD,EAAgH,IAAA,CAAlGC,EAAA,EAAA,CAAgC,MAAK,+BAAA,QAAA,EAAA,KAAA,GAAA,IAAA,AAAA,GAAA,EAAA,mBAAA,i1CCAvE,KAAKd,IAAa,EAAa,CAC3B,KAAM,oCACN,WAAY,CAAA,KACR8E,GAAA,SACA7E,GAAA,OACAC,EAAA,SACA8B,EAAA,YACA7B,GACA,UACA,wBAAA,QACA+C,CACJ,EACA,MAAO,CACH,gBAAiB,CACb,KAAM,MACV,EACA,eAAgB,CACZ,MAAO,CAAC,OAAQ,IAAI,EACpB,SAAU,EACd,EACA,YAAa,CACT,KAAM,OACV,EACA,cAAe,CACX,KAAM,MACN,SAAU,EACd,EACA,qBAAsB,CAClB,KAAM,MACN,SAAU,EACd,EACA,SAAU,CACN,KAAM,OACV,CACJ,EACA,MAAO,CAAC,SAAS,EACjB,MAAO,CACH,KAAM,iBAAiB,CACnB,KAAK,mBAAmB,EACpB,KAAK,QACL,MAAM,MAAK,uBACP,KAAK,OAAO,WACZ,MAAM,MAAK,YACX,KAAM,MAAK,YAGvB,EACA,eAAgB,CACZ,KAAK,sBAAsB,CAC/B,EACA,sBAAuB,CACnB,KAAK,yBAAyB,CAClC,CACJ,EACA,OAAQ,CAEJ,MAAO,CAAA,MADO9C,GACC,CACnB,EACA,KAAM,UAAU,CACZ,KAAK,mBAAmB,EACxB,KAAK,sBAAsB,EAC3B,KAAK,yBAAyB,EAC1B,KAAK,gBACL,MAAM,MAAK,uBACX,KAAM,MAAK,YACX,KAAM,MAAK,WAEnB,EACA,MAAO,CACI,MAAA,CACH,uCACA,iDACA,OAAQ,KACR,QAAS,CAAC,EACV,iBAAkB,KAClB,kBAAmB,CAAC,EACpB,UAAW,CAAC,EACZ,WAAY,CAAC,EACb,mBAAoB,CAAC,EACrB,KAAM,CAAC,EACP,MAAO,CAAC,EACR,cAAe,CAAC,EAChB,cAAe,CAAC,EAChB,WAAY,CAAC,EACb,QAAS,GACT,qBAAsB,GACtB,UAAW,SACX,aAAc,GACd,eAAgB,GAChB,GAAI4C,EAAY,CAAA,CAExB,EACA,aAAc,CACV,KAAM,GAAwC,CAC1C,gBAAiB,AAAC,GACP,KAAK,aAAa,CAAK,CAClC,EAOG,MAJkB,CACrB,OAAQ,GAAkB,SAAU,GAA8C,YAAY,OAAQ,CAAgB,CAAA,CAI9H,EACA,QAAS,CACL,oBAAqB,CACjB,KAAK,iBAAmB,KACxB,KAAK,OAAS,KAAK,eAEf,KAAK,QACD,MAAK,OAAO,WACP,MAAA,iBAAmB,KAAK,OAAO,WAEnC,KAAK,OAAO,IACR,MAAA,GAAG,OAAO,MAAM,OAAO,EACvB,KAAA,GAAG,OAAO,UAAU,OAAO,EAC3B,KAAA,GAAG,OAAO,iBAAiB,OAAO,GAGnD,EACA,uBAAwB,CACpB,KAAK,kBAAoB,KAAK,aAClC,EACA,0BAA2B,CACvB,KAAK,QAAU,KAAK,oBACxB,EACA,KAAM,uBAAuB,CACzB,KAAK,WAAa,GACd,KAAK,QAAU,KAAK,OAAO,IACrB,KAAA,MAAK,MAAM,IAAI,gDAAmE,KAAK,6CAA6C,KAAK,OAAO,IAAI,EAAE,KAAK,AAAC,GAC9J,EAAS,KAAK,QAAQ,AAAC,GAAmB,CACtC,KAAM,GAAQ,KAAK,WAAW,UAAU,AAAC,GAAS,EAAK,cAAgB,EAAU,aAAe,EAAK,iBAAmB,EAAU,iBAAmB,EAAK,eAAiB,EAAU,aAAa,EAClM,EAAU,WAAa,GACvB,EAAU,WAAW,KAAK,CAAE,YAAa,EAAU,GAAI,UAAW,EAAU,UAAW,aAAc,EAAU,YAAc,CAAA,EAC7H,AAAI,EAAQ,GACR,KAAK,WAAW,GAAO,WAAW,KAAK,CAAE,YAAa,EAAU,GAAI,UAAW,EAAU,UAAW,aAAc,EAAU,aAAc,EAErI,KAAA,WAAW,KAAK,CAAS,CAErC,CAAA,CACL,CAER,EACA,KAAM,YAAY,SACd,KAAM,MAAK,MAAM,IAAI,mDAAsE,WAAK,SAAL,cAAa,YAAb,cAAwB,UAAU,EAAE,KAAK,AAAC,GAAkC,KAAK,MAAQ,EAAS,IAAK,CACtM,EACA,KAAM,WAAW,SACb,KAAM,MAAK,MAAM,IAAI,mDAAsE,WAAK,SAAL,cAAa,YAAb,cAAwB,SAAS,EAAE,KAAK,AAAC,GAAkC,KAAK,KAAO,EAAS,IAAK,CACpM,EACA,QAAQ,EAAe,CACb,KAAA,GAAQ,KAAK,KAAK,UAAU,AAAC,GAAQ,EAAI,KAAO,CAAK,EAC3D,GAAI,EAAQ,GAAI,CACZ,KAAM,GAAM,KAAK,MAAM,KAAK,KAAK,GAAO,eAAe,EAChD,MAAA,GAAI,MAAQ,EAAI,MAAM,mBAAmB,MAAM,GAAG,EAAI,EACjE,CACJ,EACA,aAAa,EAAgB,CAIzB,MAAO,AAHO,MAAK,cAAc,UAAU,AAAC,GACjC,IAAO,CACjB,IACgB,EACrB,EACA,aAAa,EAAa,CAEtB,MAAO,AADO,MAAK,QAAQ,UAAU,AAAC,GAAA,OAAW,SAAO,mBAAqB,GAAO,EAAO,IAAM,SAAK,SAAL,cAAa,IAAE,IAC/F,EACrB,EACA,+BAAgC,CAC5B,AAAI,KAAK,kBACL,KAAK,SAAS,QAAQ,CAClB,QAAS,KAAK,GAAG,yDAAyD,EAC1E,OAAQ,KAAK,GAAG,0BAA0B,EAC1C,KAAM,6BACN,OAAQ,IAAM,KAAK,oBAAoB,EACvC,OAAQ,IAAM,KAAK,mBAAmB,CAAA,CACzC,EAEL,KAAK,WAAW,CACpB,EACA,oBAAqB,CACjB,AAAI,KAAK,QACA,MAAA,OAAO,UAAY,KAAK,iBAErC,EACA,KAAM,eAAc,EAAgB,CAChC,KAAM,MAAK,MAAM,KAAK,gDAAmE,KAAK,mCAAoC,CAAS,EAAE,QAAQ,IAAO,KAAK,qBAAuB,EAAM,CAClM,EACA,KAAM,eAAe,CACb,AAAA,KAAK,UAAU,IACf,MAAK,UAAY,UAGrB,KAAM,GAAe,OAAO,KAAK,KAAK,UAAU,EAChD,OAAS,GAAI,EAAG,EAAI,KAAK,cAAc,OAAQ,IAC3C,OAAS,GAAI,EAAG,EAAI,EAAa,OAAQ,IACrC,GAAI,KAAK,cAAc,KAAO,CAAC,EAAa,GAAI,CAC5C,KAAM,GAAmB,CACrB,GAAG,KAAK,UACR,YAAa,GAAK,KAAK,UAAU,YACjC,iBAAkB,KAAK,kBAAkB,KAAK,UAAU,YAAa,kBAAkB,EACvF,MAAQ,KAAK,eAAwC,GACrD,UAAW,CAAC,EAAa,GACzB,aAAc,KAAK,WAAW,KAAK,cAAc,GAAA,EAGjD,GAAA,KAAK,YAAc,SAAU,CAC7B,KAAM,GAAQ,KAAK,mBAAmB,UAAU,AAAC,GACtC,EAAS,cAAgB,EAAiB,EACpD,EACD,AAAI,EAAQ,IACH,KAAA,mBAAmB,OAAO,EAAO,CAAC,CAE/C,CAEI,AAAC,EAAiB,MAClB,GAAiB,KAAO,GAEX,EAAA,OACjB,MAAO,GAAiB,UACxB,MAAO,GAAiB,WACxB,KAAM,MAAK,YAAY,gDAAmE,KAAK,mCAAoC,CAAgB,EAAE,KAAK,AAAC,GAAiC,CACpL,AAAA,EAAS,KAAK,OACd,MAAK,aAAe,EAAS,KAAK,OAAO,GAAG,QAC5C,KAAK,eAAiB,IAEtB,KAAK,MAAM,QAAQ,CACf,MAAO,KAAK,GAAG,KAAK,oCAAoC,UAAU,KAAK,WAAW,UAAU,EAC5F,IAAK,KAAK,GAAG,KAAK,oCAAoC,UAAU,OAAO,CAAA,CAC1E,CACL,CACH,CACL,CAIH,KAAA,mBAAmB,QAAQ,AAAC,GAAa,CAC1C,KAAK,gBAAgB,CACjB,GAAG,KAAK,UACR,GAAI,EAAS,YACb,YAAa,KAAK,UAAU,YAC5B,iBAAmB,KAAK,eAAwC,iBAChE,MAAQ,KAAK,eAAwC,GACrD,UAAW,EAAS,UACpB,aAAc,EAAS,YAAA,CAC1B,CAAA,CACJ,EACD,KAAK,mBAAqB,GAE1B,KAAK,SAAS,CAClB,EACA,YAAY,EAAa,EAAgB,CACjC,MAAA,MAAK,YAAc,SACZ,KAAK,MAAM,KAAK,EAAK,CAAS,EAE9B,KAAK,MAAM,IAAI,EAAK,CAAS,CAE5C,EACA,SAAS,EAAY,CACjB,KAAK,mBAAqB,GAC1B,KAAK,cAAgB,GACrB,AAAI,EAAM,MACN,MAAK,UAAY,CAAE,GAAG,EAAM,MAAO,UAAW,KAAK,gBACnD,KAAK,UAAU,WAAW,QAAQ,AAAC,GAAkB,CAC5C,KAAA,mBAAmB,KAAK,CAAQ,EAChC,KAAA,cAAc,KAAK,EAAS,SAAS,EACrC,KAAA,WAAW,EAAS,WAAa,EAAS,YAAA,CAClD,GAED,KAAK,UAAY,CACb,UAAW,KAAK,QAAQ,GACxB,gBAAiB,QACjB,cAAe,KAAA,EAGvB,KAAK,qBAAuB,EAChC,EACA,YAAa,CACT,AAAI,KAAK,QACL,MAAK,OAAO,OAAS,UACrB,KAAK,OAAO,eAAiB,KAAK,GAAG,QAAQ,OAErD,EACA,WAAY,CACR,KAAK,qBAAuB,EAChC,EACA,0BAA0B,EAAW,CACjC,KAAK,SAAS,QAAQ,CAClB,QAAS,KAAK,GAAG,4BAA4B,EAC7C,OAAQ,KAAK,GAAG,iCAAiC,EACjD,KAAM,6BACN,OAAQ,IAAM,KAAK,iBAAiB,CAAS,CAAA,CAChD,CACL,EACA,KAAM,kBAAiB,EAAgB,CACzB,EAAA,WAAW,QAAQ,AAAC,GAAc,CACxC,KAAK,gBAAgB,CAAE,GAAG,EAAW,GAAI,EAAK,YAAa,UAAW,EAAK,UAAW,aAAc,EAAK,YAAc,CAAA,CAAA,CAC1H,CACL,EACA,KAAM,iBAAgB,EAAgB,CAClC,MAAO,GAAU,UACjB,MAAO,GAAU,WACjB,KAAM,MAAK,MAAM,KAAK,gDAAmE,KAAK,0CAA2C,CAAS,EAAE,KAAK,IAAM,CAC3J,KAAK,MAAM,QAAQ,CACf,MAAO,KAAK,GAAG,0BAA0B,EACzC,IAAK,KAAK,GAAG,4BAA4B,CAAA,CAC5C,EACD,KAAK,SAAS,CAAA,CACjB,CACL,EACA,qBAAsB,OAClB,KAAK,WAAW,EACX,KAAA,iBAAmB,QAAK,SAAL,cAAa,UACrC,KAAK,WAAW,QAAQ,AAAC,GAAc,KAAK,gBAAgB,CAAS,CAAC,CAC1E,EACA,UAAW,CACP,KAAK,qBAAqB,EAC1B,KAAK,UAAU,EACf,KAAK,SAAS,EACd,KAAK,cAAgB,GACrB,KAAK,UAAY,GACjB,KAAK,UAAY,SACjB,KAAK,qBAAuB,EAChC,EACA,kBAAkB,EAAkB,EAAkB,CAC5C,KAAA,GAAQ,KAAK,QAAQ,UAAU,AAAC,GAAgB,EAAO,KAAO,CAAQ,EAC5E,MAAO,KAAU,GAAK,KAAK,QAAQ,GAAO,GAAY,EAC1D,CACJ,CACJ,CAAC,iDAjjBiB,IAAK,EAAA,MAAA,qBAEG,MAAM,sCAeE5B,GAAQ,CAAC,IAAK,QAAA,MAAA,gDAYd,GAAY,CAAC,IAAK,YAAA,MAAA,2BAuC/B,GAAA,CAAA,IAAK,OACA,MAAM,sCAeE,GAAC,CAAmB,IAAK,mBAAA,MAAA,6GAc7B,GAAC,CAAqB,IAAK,qBAAA,MAAA,2BAmBpC,GAAA,CAAA,MAAM,uBAIM,MAAM,aACF,MAAM,mDAc1B,IAAG,OAIF,GAAM,qBACH,MAAM,iBAEG,GAAA,CAAA,MAAM,0DAaE,GAAY,CAAC,IAAK,YAAA,MAAA,sDAOlB,GAAC,CAAkB,IAAK,kBAAA,MAAA,sDAOxB,GAAC,CAAgB,IAAK,gBAAA,MAAA,8BAOP,GAAA,IAAAL,EAAA,KAAA,KAAA,KAAA,EAAA,CAAA,EACxB,GAAA,CAAA,MAAM,wBAIN,GAAA,CAAA,MAAM,mBACA,MAAM,wRAjMrCL,GAgHO,EAAAQ,EAAAgB,EAAA,KAAA,CAAApB,EA/Gc,EAKH,KAAA,CAAA,OAJVD,EAIU,IAAA,CAAAC,EAHU,EAC4C,CAAA,MAAA,gCAAA,EAAA,CAAA,MAAAD,EAAA,IAAA,qEAIzD,CAAA,EAAA,QACkHA,EAAc,IAAA,CAAA,AAAA,EAAA,eACvIH,KAyBUQ,EAAA,OAAAD,GAAA,CAAAF,EAvBF,MAgBOV,GAhBP,CAcMU,EAAA,OAAAI,GAAA,CAZYL,EAAA,EAAA,CACV,GAAA,QAGuE,MAAAmC,EAAA,CAAA,oBAAA,CAAA,YAAA,EAAA,GAAA,OAAA,MAAA,UAAA,EAAA,GAAA,OAAA,MAAA,MAFlE,CAAA,CAAA,EAAA,KAAA,iEACL,EAAqC,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,GAAA,OAAA,MAAA,OAAA,GAIrC,eAAc,CAAA,KAAA,EAAA,EACb,UAAI,KACJ,OAAK,EAAE,IAAU,GAAA,GAAA,AAAA,GAAA,EAAA,GAAA,OAAA,MAAA,OAAA,GACjB,QAAQ,EAAE,WACX,SAAU,EAAA,SAAA,YAAA,eAEsG,KAAA,EAAA,CAAA,aAAA,QAApH,UAAoH,UAA7D,CAAA,EAAAlC,EAAA,QAAAK,GAAAJ,EAAA,EAAA,GAAA,2CAAA,CAAA,EAAA,MAAA,CAAA,CAE3D,CAAA,EAAAF,EACY,EAAe,CACtB,MAAA,EAAA,GAAA,OAAA,MAAqE,0BAAA,CAAA,UAAA,EAAA,GAAA,2CAAA,iDAM9E,CAAA,EAAAC,EACI,MA6BOM,GAAA,CAAAN,EA5BH,OAA4H,KAA5H,CACAA,EA0BW,QAAA,GAAAC,EAAA,EAAA,GAAA,gDAAA,CAAA,EAAA,MAAA,CAAA,EAAAF,EAzBJ,EAAW,CACd,GAAA,YACkE,MAAAmC,EAAA,CAAA,oBAAA,CAAA,YAAA,EAAA,GAAA,OAAA,UAAA,UAAA,EAAA,GAAA,OAAA,UAAA,kDAIjE,sBAAS,EAAiB,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,GAAA,OAAA,UAAA,OAAA,GAC1B,QAAa,EAAA,kBACb,YAAY,EAAA,GAAA,2DAAA,EACb,OAAA,GACC,gBAAc,WACd,aAAU,CAAA,OAAA,EACV,SAAW,EAAA,SACX,aAAQ,EAA6B,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,GAAA,OAAA,UAAA,OAAA,GAAA,SAAA,EAAA,6BAE3B,EAAA,CAAA,MACIpC,EAAU,AAAK,GAAA,CAAA,EAAA,MAAAH,GAAA,IACkB,MAA/B,GAAA,CAAAK,EAAA,OAAA,KAAAC,EAAA,EAAA,MAAA,KAAA,EAAA,CAAA,aAGN,CAAA,EAAA,OACPH,EAEM,AAAA,GAAA,CAAAE,EADF,MAAyC,KAAA,CAAAA,EAAA,OAAA,KAAAC,EAAA,EAAA,OAAA,KAAA,EAAA,CAAA,kFAMzD,CAAA,EAAAF,EACY,EAAmB,CAC1B,MAAA,EAAA,GAAA,OAAA,UAAqE,0BAAA,CAAA,UAAA,EAAA,GAAA,gDAAA,iDAO9E,CAAA,EAAAC,EACI,MAgBO,GAhBP,CAcMA,EAAA,OAAA,GAAA,CAAAD,EAZK,EAAkB,CACrB,GAAA,mBAGkE,MAAAmC,EAAA,CAAA,oBAAA,CAAA,YAAA,EAAA,GAAA,OAAA,iBAAA,UAAA,EAAA,GAAA,OAAA,iBAAA,MAF7D,CAAA,CAAA,EAAA,KAAA,4EACL,EAAgD,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,GAAA,OAAA,iBAAA,OAAA,GAIhD,eAAc,CAAA,KAAA,EAAA,EACb,UAAU,KACV,SAAI,EAAA,SACJ,OAAK,EAAE,IAAU,GAAA,GAAA,AAAA,GAAA,EAAA,GAAA,OAAA,iBAAA,OAAA,GAClB,QAAU,EAAA,WAAA,YAAA,wBAEd,EAAA,KAAA,EAAA,CAAA,aAA8H,QAA9H,WAA8H,SAAA,CAAA,EAAAlC,EAAA,QAAA,GAAAC,EAAA,EAAA,GAAA,0CAAA,CAAA,EAAA,MAAA,CAAA,CAElI,CAAA,EAAAF,EACY,EAA0B,CACjC,MAAA,EAAA,GAAA,OAAA,iBAAqE,0BAAA,CAAA,UAAA,EAAA,GAAA,0CAAA,CAGrE,EAAA,sBAAA,CAAA,cAAA,mDAAA,wEAIT,CAAA,EACgIC,EAAA,MAAA,GAAA,CAAAD,EAA5G,EAAoB,CAAC,GAAA,qBAAA,MAAA,wCAA4C,sBAAkB,EAAA,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,OAAA,WAAA,GAAG,SAAQ,EAAA,SAAA,SAAA,EAAA,YAC/E,KAAA,EAAA,CAAA,aAAA,WAAA,UAAA,CAAA,EAC/B,GAAAC,EAAA,QAAA,GAAAC,EAAA,EAAA,GAAA,0CAAA,CAAA,EAAA,CAAA,OAnG+HN,GAAA,EAAAC,EAAA,EAAA,CAA9H,IAAK,EAA4C,MAAM,wCAAyE,KAAA,iDAAA,YAAA,aACzI,EAAA,KAAA,EAAA,CAAA,QAAA,MAAA,CAAA,QAwGI,CAAA,EAAA,EAAA,eAAAD,KASMC,EAAA,EAAA,CAAA,IAAA,GAAA,CAAA,OAPVE,EAOU,IAAA,CAAAC,EANU,EACkD,CAAA,MAAA,gCAAA,EAAA,CAAA,MAAAD,EAAA,IAAA,mEAEvD,CAAA,EAAA,IACPA,EAAkL,IAAA,CAApKC,EAAA,EAAA,CAA2B,MAAK,0BAAa,QAAQ,EAAE,SAAA,SAAA,EAAA,MAAA,SAAA,GAAA,CAAA,EAAA,OAAA,IAAA,EAAA,6HAItE,CAAA,EAAA,QACPD,EAcM,IAAA,CAAAE,EAbF,MAYM,GAAA,CADQA,EAAA,MAAA,GAAA,CAAAD,EAVK,EAAS,CAAE,MAAO,UAAc,QAAS,EAAC,WAAgC,UAAQ,+BAAA,SAAA,EAAA,QAClF,EAAA,CAAA,MAAAD,EAAA,IAAA,wCACA,CAAA,EACP,OAAAA,EAAA,AAAA,GAAA,CAAAE,EACI,MAEM,GAAA,CAAAA,EADF,MAA+I,GAAA,CAAAA,EAAA,OAAA,KAAAC,EAAA,EAAA,OAAA,gBAAA,IAAA,EAAA,GAAA,qCAAA,EAAA,IAAA,EAAA,OAAA,gBAAA,EAAA,CAAA,CAEnJ,CAAA,EAAAF,EAAa,EAAkB,CAAC,KAAK,mBAA8B,MAAA,4BAAqB,SAAK,EAAA,SAAA,QAAAsC,EAAA,AAAA,GAAA,EAAA,0BAAA,EAAA,MAAA,EAAA,CAAA,MAAA,CAAA,kFAS9GhB,EAAoB,GAAA,EAAA,EAAA,EAAA,qBAAA1B,GAAA,EAsElBQ,EAAA,MAAA,GAAA,CArEKJ,EAAA,EAAA,CAAuC,MAAK,sCAA8D,MAAOF,EAAM,EAAA,oCAAA,gBAAA,KAAA,EAAG,QAAO,GAAO,MAAM,GAA6D,OAAQ,EAAE,GAAK,oDAAA,EAAA,SAAA,EAiEzN,EAAA,CAAA,OACPC,EAAuG,IAAA,CAAzFC,EAAA,EAAA,CAAkC,MAAO,iCAAqB,MAAK,EAAE,GAAS,cAAA,EAAA,QAAA,EAAA,SACgC,EAAA,KAAA,EAAA,CAAA,QAAA,SAAA,CAAA,EAA9GA,EAAA,EAAA,CAAgC,MAAO,+BAAoB,QAAU,GAAQ,aAAA,EAAG,SAAO,EAAA,SAAA,QAAA,EAAA,+DAlEzGD,EAEM,IAAA,CAAAE,EADF,MAAwF,GAAA,CAAAA,EAAA,IAAA,KAAAC,EAAA,EAAA,GAAA,8CAAA,CAAA,OAAA,EAAA,OAAA,KAAA,CAAA,CAAA,EAAA,CAAA,CAG5F,CAAA,EAAAD,EACI,OAgCM,GAAA,CAAAA,EA/BF,MAgBM,GAAA,CAAAA,EAhBK,MAAE,CAAA,MAAAH,EAAA,EAAA,oCAAA,MAAA,UAAA,KAAA,CACT,EAAA,CAYeG,EAAA,OAAA,GAAA,CAAAD,EAXE,EAAW,CAAC,GAAA,YAAA,MAAA,uDAA2D,sBAAgB,EAAA,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,UAAA,YAAA,GAAE,QAAY,EAAA,QAAI,YAAY,IAAM,YAAU,KAAA,SAAA,EAAA,QACnI,EAAA,CAAA,MACID,EAAU,AAAK,GAAA,CAAA,EAAA,MAAAH,GAAA,IACwC,MAArD,GAAA,CAAAK,EAAA,OAAA,KAAAC,EAAA,EAAA,kBAAA,EAAA,MAAA,OAAA,CAAA,EAAA,CAAA,aAGN,CAAA,EAAA,OACPH,EAEM,AAAA,GAAA,CAAAE,EADF,MAAyC,KAAA,CAAAA,EAAA,OAAA,KAAAC,EAAA,EAAA,OAAA,KAAA,EAAA,CAAA,SAIrD,EAAA,EAAA,CAAA,aAAsH,UAAtH,UAAsH,CAAA,EAAAD,EAAA,QAAA,GAAAC,EAAA,EAAA,GAAA,6CAAA,CAAA,EAAA,CAAA,GAI9H,EAAA,CAAA,EAAAD,EAAW,MAAE,CAAA,MAAAH,EAAA,EAAA,oCAAA,MAAA,gBAAA,KAAA,CACT,EAAA,CACyNG,EAAA,OAAA,GAAA,CAAAD,EAAxM,EAAiB,CAAC,GAAA,kBAAA,MAAA,2DAA+D,sBAAS,YAAmC,AAAW,GAAA,EAAA,UAAA,gBAAA,GAAE,UAAY,oCAAM,WAAC,YAAY,OAAS,YAAU,QAAA,SAAA,EAAA,QACzM,EAAA,KAAA,EAAA,CAAA,aAA6H,UAA7H,UAA6H,CAAA,EAAAC,EAAA,QAAA,GAAAC,EAAA,EAAA,GAAA,8CAAA,CAAA,EAAA,CAAA,GAIrI,EAAA,CAAA,EAAAD,EAAW,MAAE,CAAA,MAAAH,EAAA,EAAA,oCAAA,MAAA,cAAA,KAAA,CACT,EAAA,CACwNG,EAAA,OAAA,GAAA,CAAAD,EAAvM,EAAe,CAAC,GAAA,gBAAA,MAAA,yDAA6D,sBAAS,EAAA,IAAA,GAAA,GAAmC,GAAC,EAAa,UAAA,cAAA,GAAE,UAAY,oCAAM,cAAC,YAAY,OAAS,YAAU,QAAA,SAAA,EAAA,QACxM,EAAA,KAAA,EAAA,CAAA,aAA0H,UAA1H,UAA0H,CAAA,EAAAC,EAAA,QAAA,GAAAC,EAAA,EAAA,GAAA,6CAAA,CAAA,EAAA,CAAA,mBAItIkB,EAwBM,KAAAC,EAAA,EAAA,MAAA,AAAA,GAxB2BzB,GAAU,EAAAQ,EAAA,MAAA,CAAA,IAAA,EAAA,KACvC,EAAA,CACA,GACAH,EAoBM,SApBNC,EAoBM,EAAA,GAAA,wCAAA,EAAA,KAAA,EAAA,IAAA,EAAA,CAAA,EAAAD,EAnBF,MAGM,GAAA,CAF0FA,EAAA,MAAA,GAAA,CAAAD,EAA5E,EAAQ,CAAE,MAAO,SAAqB,MAAA,EAAA,MAAA,WAAA,EAAA,cAAgB,sBAAkB,EAAA,KAAA,GAAA,IAAA,AAAA,GAAA,EAAA,cAAA,GAAA,SAAA,EAAA,UAC1B,KAAA,EAAA,CAAA,QAAA,aAAA,UAAA,CAAA,EAAAC,EAAA,QAAA,KAAAC,EAAA,EAAA,GAAA,qCAAA,CAAA,EAAA,CAAA,CAElE,CAAA,EAAAD,EACI,MAAmG,GAAnG,CACAA,EAWW,QAAA,GAAAC,EAAA,EAAA,GAAA,0CAAA,CAAA,EAAA,CAAA,EAAAF,EAXE,EAAW,CAAC,GAAA,YAAA,MAAA,qDAA4D,sBAAiB,AAAU,GAAA,EAAA,WAAA,EAAA,OAAA,EAAI,UAAa,QAAE,EAAA,KAAA,EAAqD,YAAU,EAAoC,GAAA,gDAAA,EAAA,SAAA,EAAA,aAAA,EAAA,KAAA,GAAA,EAAA,QACvN,EAAA,CAAA,MACID,EAAU,AAAK,GAAA,CAAA,EAAA,MAAAH,GAAA,IACY,MAAzB,GAAA,CAAAK,EAAA,OAAA,KAAAC,EAAA,EAAA,KAAA,EAAA,CAAA,aAGN,CAAA,EAAA,OACPH,EAEM,AAAA,GAAA,CAAAE,EADF,MAAmC,KAAA,CAAAA,EAAA,OAAA,KAAAC,EAAA,EAAA,MAAA,EAAA,CAAA,yIAevEoB,EAKS,GAAA,EAAA,EAAAtB,EALM,EAAO,CAAS,OAAO,QAAA,QAAA,EAAA,sEAEvB,EAAA,CAAA,OACPD,EAAwE,IAAA,CAAtDC,EAAA,EAAA,CAAC,MAAK,KAAe,KAAA,cAAA,QAAA,EAAA,KAAA,GAAA,IAAA,AAAA,GAAA,EAAA,eAAA,gBAF3CD,EAAyB,IAAA,CAAAE,EAAA,IAAA,KAAAC,EAAA,EAAA,YAAA,EAAA,CAAA,0FC1K7B,KAAKhB,IAAa,EAAa,CAC3B,KAAM,8BACN,WAAY,CACR,6BAAA,KACA8E,GAAA,QACA5B,CACJ,EACA,MAAO,CACH,GAAI,CACA,KAAM,OACN,SAAU,EACd,EACA,QAAS,CACL,KAAM,MACN,SAAU,EACd,EACA,eAAgB,CACZ,KAAM,MACN,SAAU,EACd,EACA,SAAU,CACN,KAAM,OACV,CACJ,EACA,MAAO,CAAC,QAAQ,EAChB,MAAO,CACI,MAAA,CACH,qBAAsB,CAAC,EACvB,iBAAkB,CAAC,EACnB,kBAAmB,CAAC,EACpB,eAAgB,KAChB,YAAa,EAAA,CAErB,EACA,MAAO,CACH,SAAU,CACN,KAAK,eAAiB,KACtB,KAAK,YAAY,CACrB,EACA,gBAAiB,CACb,KAAK,sBAAsB,CAC/B,CACJ,EACA,SAAU,CACN,KAAK,YAAY,EACjB,KAAK,sBAAsB,CAC/B,EACA,QAAS,CACL,aAAc,CACV,KAAK,qBAAuB,KAAK,OACrC,EACA,uBAAwB,CACpB,KAAK,kBAAoB,KAAK,cAClC,EACA,SAAS,EAAY,CACjB,AAAI,EAAM,MACN,KAAK,eAAiB,EAAM,MAE5B,MAAK,eAAiB,CAAE,cAAe,KAAK,GAAI,WAAY,EAAG,SAAU,KAAK,qBAAqB,OAAS,EAAG,SAAU,GAAM,QAAS,GAAM,WAAY,GAAO,eAAgB,GAC5K,KAAA,qBAAqB,KAAK,KAAK,cAAc,GAGlD,KAAK,gBAAkB,KAAK,eAAe,WAC3C,MAAK,eAAe,UAAY,KAAK,kBAAkB,KAAK,AAAC,GAAW,SACpE,MAAO,GAAO,KAAO,YAAK,iBAAL,cAAqB,YAArB,cAAgC,GAAA,CACxD,GAGL,KAAK,YAAc,EACvB,EACA,aAAa,EAAkB,EAA0B,CAC/C,KAAA,GAAqB,KAAK,qBAAqB,UAAU,AAAC,GAAW,EAAO,KAAO,CAAQ,EAEjG,GAAI,IAAc,KAAM,CACf,KAAA,qBAAqB,EAAqB,GAAG,WAC7C,KAAA,qBAAqB,EAAqB,GAAG,OAAS,UAC3D,KAAK,qBAAqB,GAAoB,WACzC,KAAA,qBAAqB,GAAoB,OAAS,UAEjD,KAAA,GAAO,KAAK,qBAAqB,EAAqB,GAC5D,KAAK,qBAAqB,EAAqB,GAAK,KAAK,qBAAqB,GAC9E,KAAK,qBAAqB,GAAsB,CAAA,KAC7C,CACE,KAAA,qBAAqB,EAAqB,GAAG,WAC7C,KAAA,qBAAqB,EAAqB,GAAG,OAAS,UAC3D,KAAK,qBAAqB,GAAoB,WACzC,KAAA,qBAAqB,GAAoB,OAAS,UAEjD,KAAA,GAAO,KAAK,qBAAqB,EAAqB,GAC5D,KAAK,qBAAqB,EAAqB,GAAK,KAAK,qBAAqB,GAC9E,KAAK,qBAAqB,GAAsB,CACpD,CACJ,EACA,oBAAoB,EAAe,CAC/B,KAAK,SAAS,QAAQ,CAClB,QAAS,KAAK,GAAG,4BAA4B,EAC7C,OAAQ,KAAK,GAAG,0BAA0B,EAC1C,KAAM,6BACN,OAAQ,IAAM,KAAK,aAAa,CAAK,CAAA,CACxC,CACL,EACA,aAAa,EAAe,CACpB,AAAA,KAAK,qBAAqB,GAAO,IACjC,KAAK,iBAAiB,KAAK,KAAK,qBAAqB,EAAM,EAE1D,KAAA,qBAAqB,OAAO,EAAO,CAAC,EACpC,KAAA,MAAM,SAAU,KAAK,gBAAgB,EAC1C,KAAK,eAAiB,IAC1B,CACJ,CACJ,CAAC,EA9IwBjC,GAAA,CAAA,MAAM,oCACF,MAAM,oBAOD,MAAM,qBAW/BG,GAAA,CAAA,MAAM,qMAlCX,MAAAV,OAAY,MAAeO,GAAA,CAAAH,EACN,EAQH,CAAA,MAAA,eAAA,EAAA,CAAA,OAPVD,EAOU,IAAA,CAAAC,EANU,EACqC,CAAA,MAAA,gCAAA,EAAA,CAAA,MAAAD,EAAA,IAAA,sDAE1C,CAAA,EAAA,IACPA,EAAqI,IAAA,CAAvHC,EAAA,EAAA,CAA2B,MAAA,0BAAqB,SAAO,EAAA,SAAA,QAAA,EAAA,oHAItE,CAAA,EAAA,QACPD,EAkBU,IAAA,CAAAC,EAlBK,EAAS,CAAE,MAAO,UAAwB,QAAS,EAAC,qBAAgC,UAAQ,+BAAU,SAAU,EAAA,SAAA,YAAA,aAChH,EAAA,CAAA,MAAAD,EAAA,IAAA,wCACA,CAAA,EACP,OAAAA,EAAA,AAAA,GAAA,CAAAE,EACI,MAQMV,GAAA,CAAAU,EAPF,MAKCI,GAAA,CAJSJ,EAAA,OAAA,CAAA,MAAAkC,EAAA,2CAGF,CAAA,CAER,EAAAjC,EAAqG,EAArG,OAAqG,KAAA,EAAA,CAAA,EAAAD,EAAA,OAAAK,GAAAJ,EAAA,EAAA,OAAA,gBAAA,EAAA,CAAA,CAE3F,CAAA,EAAA,EAAA,OAAA,KAAd,EAA+L,qBAAA,GAAA,IAAA,CAAA,EAAA,SAAAN,GAAA,EAAAC,EAAA,EAAA,CAAhH,IAAI,EAAkB,KAAK,iBAA8B,MAAK,4BAAA,QAAAyC,EAAA,AAAA,GAAA,EAAA,aAAA,EAAA,OAAA,GAAA,IAAA,EAAA,CAAA,MAAA,CAAA,CAC/H,EAAA,KAAA,EAAA,CAAA,SAAA,CAAA,GAAAhB,EAAmB,GAAK,EAAA,EAAA,EAAA,OAAA,KAAtC,EAAiO,qBAAA,EAAA,qBAAA,OAAA,GAAA,IAAA,CAAA,EAAA,SAAA1B,GAAA,EAAAC,EAAA,EAAA,CAApH,IAAI,EAAoB,KAAK,mBAA8B,MAAK,4BAAA,QAAAyC,EAAA,AAAA,GAAA,EAAA,aAAA,EAAA,OAAA,GAAA,MAAA,EAAA,CAAA,MAAA,CAAA,wBAC9JhB,EAAQ,GAAA,EAAA,EAAA,AAAA,EAAA,kBAAA1B,GAAA,EAAAC,EAAA,EAAA,CAAE,IAAI,EAAoB,KAAK,mBAA8B,MAAK,4BAAA,QAAAyC,EAAA,AAAA,GAAA,EAAA,oBAAA,EAAA,KAAA,EAAA,CAAA,MAAA,CAAA,gEAO7G,CAAA,EACkPrC,EAAA,MAAA,GAAA,CAAAD,EAAlN,EAAmB,CAAG,gBAAgB,EAAA,GAAiB,eAAa,EAAA,eAAc,YAAa,EAAE,YAAoB,cAAoB,EAAA,kBAAyB,qBAAU,EAAQ,qBAAA,SAAA,EAAA,wLCM5N,KAAKd,IAAa,EAAa,CAC3B,KAAM,gCACN,WAAY,CAAA,KACR8E,GAAA,QACA5B,EAAA,KACA2B,GAAA,YACAE,EACJ,EACA,MAAO,CACH,GAAI,CACA,KAAM,MACV,EACA,SAAU,CACN,KAAM,MACN,SAAU,EACd,EACA,SAAU,CACN,KAAM,OACV,CACJ,EACA,MAAO,CAAC,UAAW,SAAS,EAC5B,MAAO,CACH,UAAW,CACP,KAAK,aAAa,CACtB,CACJ,EACA,OAAQ,CAEJ,MAAO,CAAA,MADO3E,GACC,CACnB,EACA,SAAU,CACN,KAAK,aAAa,CACtB,EACA,MAAO,CACI,MAAA,CACH,sBAAuB,CAAC,EACxB,MAAO,CAAC,EACR,sBAAuB,CAAE,OAAQ,EAAM,EACvC,cAAe,CAAE,OAAQ,EAAM,CAAA,CAEvC,EACA,QAAS,CACL,cAAe,CACX,KAAK,sBAAwB,GACxB,KAAA,SAAS,QAAQ,AAAC,GAAiB,CACpC,AAAI,EAAQ,QACR,MAAK,sBAAwB,EAC7B,KAAK,cAAgB,GAEpB,KAAA,sBAAsB,KAAK,CAAO,CAAA,CAC1C,CACL,EACA,aAAa,EAAc,CACvB,MAAO,IAAqB,EAAM,CAAE,KAAM,UAAW,MAAO,UAAW,IAAK,UAAW,KAAM,UAAW,OAAQ,UAAW,OAAQ,UAAW,CAClJ,EACA,OAAO,EAAY,EAAgC,CAC/C,KAAK,gBAAgB,CAAO,EAG5B,AADa,KAAK,MAAM,KACnB,OAAO,CAAK,CACrB,EACA,gBAAgB,EAAgC,CAC5C,KAAK,MAAQ,GACT,EAAQ,YAAc,CAAC,EAAQ,QAC/B,KAAK,MAAM,KAAK,CAAE,MAAO,KAAK,GAAG,2CAA2C,EAAG,KAAM,uBAAwB,QAAS,IAAM,KAAK,aAAa,EAAQ,GAAI,KAAK,EAAG,EAElK,EAAQ,QACR,KAAK,MAAM,KAAK,CAAE,MAAO,KAAK,GAAG,2CAA2C,EAAG,KAAM,oBAAqB,QAAS,IAAM,KAAK,aAAa,EAAQ,GAAI,KAAK,EAAG,EAE/J,EAAQ,cACR,KAAK,MAAM,KAAK,CAAE,MAAO,KAAK,GAAG,6CAA6C,EAAG,KAAM,oBAAqB,QAAS,IAAM,KAAK,aAAa,EAAQ,GAAI,UAAU,EAAG,EAErK,KAAK,UACN,KAAK,MAAM,KAAK,CAAE,MAAO,KAAK,GAAG,eAAe,EAAG,KAAM,mBAAoB,QAAS,IAAM,KAAK,qBAAqB,EAAQ,EAAE,EAAG,CAE3I,EACA,WAAY,CACR,KAAK,sBAAsB,OAAS,GACpC,KAAK,sBAAwB,KAAK,cAClC,KAAK,cAAc,OAAS,GAC5B,KAAK,MAAM,SAAS,CACxB,EACA,KAAM,cAAa,EAAmB,EAAkB,CAC9C,KAAA,MAAK,MACN,IAAI,gDAAmE,KAAK,eAAe,KAAa,SAAiB,CACtH,aAAc,cACd,QAAS,CACL,OAAQ,yIACZ,CAAA,CACH,EACA,KAAK,AAAC,GAAiC,CAChC,GAAA,EAAS,KAAK,OACd,KAAK,MAAM,SAAS,CAChB,MAAO,KAAK,GAAG,0BAA0B,EACzC,IAAK,KAAK,GAAG,mCAAmC,CAAA,CACnD,MACE,CACH,GAAI,EAAS,QAAS,CAEZ,KAAA,GAA4B,AADP,EAAS,QAAQ,uBACS,MAAM,yCAAyC,EAChG,GAAA,GAA6B,EAA0B,OAAS,EAAG,CAEnE,KAAM,GAAmB,AADA,EAA0B,GACT,WAAW,IAAK,EAAE,EAC5D,GAAe,EAAS,KAAM,EAAkB,EAAS,QAAQ,eAAe,CACpF,CACJ,CACK,KAAA,MAAM,QAAQ,CAAE,MAAO,KAAK,GAAG,sBAAsB,EAAG,CACjE,CAAA,CACH,CACT,EACA,qBAAqB,EAAmB,CACpC,KAAK,SAAS,QAAQ,CAClB,QAAS,KAAK,GAAG,4BAA4B,EAC7C,OAAQ,KAAK,GAAG,0BAA0B,EAC1C,KAAM,6BACN,OAAQ,IAAM,CACV,KAAK,cAAc,CAAS,CAChC,CAAA,CACH,CACL,EACA,KAAM,eAAc,EAAmB,CACnC,KAAM,MAAK,MAAM,OAAO,gDAAmE,KAAK,eAAe,IAAY,EAAE,KAAK,IAAM,CACpI,KAAK,MAAM,QAAQ,CACf,MAAO,KAAK,GAAG,0BAA0B,EACzC,IAAK,KAAK,GAAG,4BAA4B,CAAA,CAC5C,EACD,KAAK,MAAM,SAAS,CAAA,CACvB,CACL,CACJ,CACJ,CAAC,EA9JkCa,GAAA,CAAA,WAAA,MAED,MAAM,qBAEXE,GAAA,CAAA,MAAM,oLAjBV,MAAAT,GAKH,EAAAC,EAAA,EAAA,CAAA,MAAA,SAAA,CAAA,OAJVE,EAIU,IAAA,CAAAC,EAHU,EAC2C,CAAA,MAAA,gCAAA,EAAA,CAAA,MAAAD,EAAA,IAAA,oEAIxD,CAAA,EAAA,QACPA,EAgBU,IAAA,CAAAC,EAhBK,EAAS,CAAE,MAAO,UAAyB,QAAU,EAAA,sBAAA,YAAA,eACrD,EAAA,CAAA,MAAAD,EAAA,IAAA,8DACA,CAAA,EAAA,OACPA,EAWM,AAAA,GAAA,CAAAE,EAXK,MAAc,CAAE,MAAA,eAAA,YAAA,WAAA,EAAA,OAAA,EACvB,EAAA,CAAAD,EAAkB,EAAQ,CAAE,KAAK,SAA6B,MAAA,EAAA,OAAA,WAAA,EAAA,cAAgB,sBAAkB,EAAA,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,cAAA,GAAG,SAAQ,EAAA,SAAA,SAAA,EAAA,SAC3G,EAAA,KAAA,EAAA,CAAA,QAGM,aAHN,WAGM,UAAA,CAAA,EAAAC,EAFF,MAA4CV,GAAA,CAC5CU,EAAkG,OAAlG,KAAkGC,EAAA,EAArD,OAAa,QAAA,EAAA,CAAA,EAAAD,EAAA,OAAAI,GAAAH,EAAA,EAAA,aAAA,EAAA,OAAA,YAAA,CAAA,EAAA,CAAA,CAE9D,CAAA,EAAAD,EACI,MAAgDK,GAAA,CAAAL,EAAA,OAAA,KAAAC,EAAA,EAAA,OAAA,YAAA,EAAA,CAAA,CAEpD,CAAA,EAAcF,EAAA,EAAA,CAA4B,MAAK,4BAAoB,KAAA,mBAAyC,WAAc,EAAM,OAAA,EAAA,EAAA,MAAA,EAAC,gBAAc,OAAA,gBAAA,cAC/F,EAAA,KAAA,EAAA,CAAA,SAAA,CAAA,EAAhCA,EAAA,EAAA,CAAE,IAAK,OAAU,MAAO,EAAI,MAAA,MAAA,wFCOpE,KAAKd,IAAa,EAAa,CAC3B,KAAM,gBACN,WAAY,CAAA,KACR8E,GAAA,gBACAE,EACJ,EACA,MAAO,CACH,GAAI,CACA,KAAM,OACN,SAAU,EACd,CACJ,EACA,MAAO,CACI,MAAA,CACH,UAAW,EAAA,CAEnB,EACA,OAAQ,CAEJ,MAAO,CAAA,MADO5E,GACC,CACnB,EACA,QAAS,CACL,eAAgB,CACZ,KAAK,SAAS,QAAQ,CAClB,QAAS,KAAK,GAAG,6CAA6C,EAC9D,OAAQ,KAAK,GAAG,8CAA8C,EAC9D,KAAM,6BACN,OAAQ,IAAM,KAAK,eAAe,CAAA,CACrC,CACL,EACA,KAAM,iBAAiB,CACnB,KAAK,UAAY,GACX,KAAA,MAAK,MACN,KAAK,0CAA6D,KAAK,gBAAiB,OAAW,CAAE,QAAS,CAAE,mBAAoB,MAAS,CAAA,CAAC,EAC9I,KAAK,IACF,KAAK,MAAM,QAAQ,CACf,MAAO,KAAK,GAAG,0BAA0B,EACzC,IAAK,KAAK,GAAG,sBAAsB,CAAA,CACtC,CACL,EACC,MAAM,AAAC,GACJ,KAAK,MAAM,SAAS,CAChB,MAAO,KAAK,GAAG,sBAAsB,EACrC,IAAK,EAAM,OAAA,CACd,CACL,EACC,QAAQ,IAAO,KAAK,UAAY,EAAM,CAC/C,CACJ,CACJ,CAAC,yBAnEqC,IAAK,EAAA,MAAA,4CAKf,GAAA,CAA0B,GAAA,0BAAA,MAAA,sJAf7B,MAAAM,GAKH,EAAAC,EAAA,EAAA,CAAA,MAAA,SAAA,CAAA,OAJVE,EAIU,IAAA,CAAAC,EAHU,EACsC,CAAA,MAAA,gCAAA,EAAA,CAAA,MAAAD,EAAA,IAAA,+DAInD,CAAA,EAAA,QACPA,EASM,IAAA,CARuIE,EAAA,MAAA,GAAA,CAAAD,EAA9H,EAAiB,CAAC,GAAA,kBAAqB,MAAK,cAAA,QAAA,EAAA,mGAC5C,EAAS,CAAA,SAAA,CAAA,EAAA,EAAA,UAAAJ,GAAA,EAGVQ,EAAA,MAAA,GAAA,CADiBH,EAAA,MAAA,GAAA,CAAAD,EAAA,CAAA,CAEvB,CAAA,EAAAA,EAAkB,EAAe,CAAC,KAAK,gBAAA,MAAA,iBACvC,CAAA,EAAAC,EAAA,MAAA,GAAAC,EAAA,EAAA,GAAA,8CAAA,CAAA,EAAA,CAAA,qFCuDpB,KAAK,IAAa,EAAa,CAC3B,KAAM,kCACN,WAAY,CAAA,MACRiE,GACA,4BACA,4BACA,6BACA,gBAAA,QACAN,GAAA,SACAC,EACJ,EACA,MAAO,CACH,GAAI,CACA,KAAM,OACN,SAAU,EACd,CACJ,EACA,MAAO,CAAC,UAAW,SAAU,UAAU,EACvC,MAAO,CACI,MAAA,CACH,KAAM,KACN,sBAAuB,CAAC,EACxB,sBAAuB,CAAC,EACxB,kBAAmB,CAAC,EACpB,QAAS,CAAC,EACV,iBAAkB,CAAC,EACnB,WAAY,CAAC,EACb,YAAa,CAAC,EACd,WAAY,GACZ,aAAc,KACd,QAAS,GACT,QAAS,GACT,eAAgB,GAChB,GAAI5B,EAAY,CAAA,CAExB,EACA,SAAU,CACN,gBAAsB,CAClB,MAAO,MAAK,eAAiB,GAAK,CAAC,KAAK,sBAAsB,MAAQ,CAAC,KAAK,sBAAsB,UAAY,CAAC,KAAK,sBAAsB,iBAAmB,KAAK,QACtK,EACA,gBAAyB,CACd,MAAA,MAAK,QAAQ,OAAO,AAAC,GAAgB,EAAO,eAAiB,CAAC,EAAE,MAC3E,EACA,UAAgB,CACZ,MAAO,MAAK,sBAAsB,IAAM,KAAK,sBAAsB,aAAe,KAAK,MAAQ,KAAK,sBAAsB,aAAe,KAAK,sBAAsB,aAAe,KAAK,sBAAsB,cAAgB,KAAK,KAAK,MAC5O,CACJ,EACA,MAAO,CACH,KAAM,KAAK,CACP,KAAM,MAAK,UACf,CACJ,EACA,OAAQ,CAEJ,MAAO,CAAA,MADO5C,GACC,CACnB,EACA,KAAM,UAAU,CACZ,KAAM,MAAK,WACX,KAAM,MAAK,UACf,EACA,QAAS,CACL,KAAM,WAAW,CACb,KAAM,MAAK,MAAM,IAAI,2CAA8D,EAAE,KAAK,AAAC,GAAkC,KAAK,KAAO,EAAS,IAAK,CAC3J,EACA,KAAM,gCAAgC,CAClC,AAAI,KAAK,GACL,MAAM,MAAK,4BACX,KAAM,MAAK,eACX,KAAM,MAAK,cAEX,KAAK,oCAAoC,GAEzC,MAAK,sBAAwB,CAAE,YAAa,GAAO,UAAW,IAC9D,KAAK,sBAAwB,GAC7B,KAAK,QAAU,GACf,KAAK,kBAAoB,GAEjC,EACA,KAAM,4BAA4B,CAC9B,KAAM,MAAK,MAAM,IAAI,gDAAmE,KAAK,IAAI,EAAE,KAAK,AAAC,GAAkC,KAAK,sBAAwB,EAAS,IAAK,CAC1L,EACA,KAAM,eAAe,CACjB,KAAM,MAAK,MAAM,IAAI,gDAAmE,KAAK,cAAc,EAAE,KAAK,AAAC,GAAiC,CAC3I,KAAA,sBAAwB,EAAS,KAAK,SACtC,KAAA,WAAa,EAAS,KAAK,UAAA,CACnC,CACL,EACA,KAAM,cAAc,CAChB,KAAK,QAAU,GACf,KAAM,MAAK,MAAM,IAAI,gDAAmE,KAAK,YAAY,EAAE,KAAK,AAAC,GAC7G,EAAS,KAAK,QAAQ,AAAC,GAAgB,CAC9B,KAAA,QAAQ,KAAK,CAAE,GAAG,EAAQ,OAAQ,cAAe,eAAgB,CAAA,CAAG,CAC5E,CAAA,CACL,CACJ,EACA,KAAM,wBAAwB,CAC1B,KAAM,MAAK,MAAM,IAAI,kDAAqE,EAAE,KAAK,AAAC,GAAkC,KAAK,kBAAoB,EAAS,IAAK,CAC/K,EACA,KAAM,iBAAiB,CACnB,KAAM,MAAK,MAAM,IAAI,sFAAyG,EAAE,KAAK,AAAC,GAAkC,KAAK,WAAa,EAAS,IAAK,CAC5M,EACA,KAAM,kBAAkB,CACpB,KAAK,YAAc,GACb,KAAA,MAAK,MAAM,IAAI,sDAAyE,EAAE,KAAK,AAAC,GAAiC,EAAS,KAAK,QAAQ,AAAC,GAAe,KAAK,YAAY,KAAK,EAAW,KAAK,CAAC,CAAC,CACzN,EACA,qCAAsC,OAC9B,GAAA,QAAK,sBAAsB,WAA3B,QAAqC,SAAU,OAC7C,KAAA,GAAQ,KAAK,WAAW,UAAU,AAAC,GAAa,EAAS,WAAa,KAAK,sBAAsB,QAAQ,EAC1G,KAAA,sBAAwB,CAAE,GAAG,KAAK,sBAAuB,SAAU,KAAK,WAAW,GAC5F,EACA,oBAAoB,EAAc,CAC9B,KAAK,iBAAmB,CAC5B,EACA,KAAM,eAAe,CAQjB,GAPA,KAAK,QAAU,GACX,AAAA,KAAK,sBAAsB,GAC3B,KAAM,MAAK,sBAEX,KAAM,MAAK,oBAGX,KAAK,eAAgB,CACrB,KAAK,QAAU,GACf,MACJ,CAMA,GAJI,KAAK,sBAAsB,IAAM,KAAK,cAAgB,CAAC,KAAK,gBAC5D,KAAM,MAAK,aAGX,KAAK,sBAAsB,OAAS,GAAK,CAAC,KAAK,eAAgB,CACzD,KAAA,GAA6B,KAAK,sBAAsB,KAAK,AAAC,GAAY,EAAQ,SAAW,EAAI,EACvG,KAAK,kBAAkB,CAA0B,CACrD,CAEK,KAAA,iBAAiB,QAAQ,AAAC,GAAW,CAClC,AAAC,KAAK,gBACD,KAAA,aAAa,EAAO,EAAE,CAC/B,CACH,EAEI,KAAA,QAAQ,QAAQ,AAAC,GAAW,CAC7B,AAAI,EAAO,SAAW,WAAa,CAAC,KAAK,gBACrC,OAAO,GAAO,OACd,MAAO,GAAO,eACd,AAAI,EAAO,GACP,KAAK,aAAa,CAAM,EAExB,KAAK,WAAW,CAAM,EAE9B,CACH,EAEI,KAAK,gBACN,MAAK,MAAM,QAAQ,CACf,MAAO,KAAK,GAAG,0BAA0B,EACzC,IAAK,KAAK,GAAG,sBAAsB,CAAA,CACtC,EACD,KAAK,QAAQ,QAAQ,6BAA6B,KAAK,sBAAsB,IAAI,GAErF,KAAK,SAAS,EACd,KAAK,QAAU,GACf,KAAK,MAAM,UAAU,EACrB,KAAK,eAAiB,GACtB,KAAK,QAAU,EACnB,EACA,kBAAkB,EAAe,EAAiB,CAC9C,KAAK,eAAiB,GACjB,KAAA,MAAM,SAAS,CAAE,MAAO,KAAK,GAAG,gBAAkB,CAAK,EAAG,IAAK,CAAS,CAAA,CACjF,EACA,KAAM,oBAAoB,CACtB,KAAM,MAAK,MACN,KAAK,gDAAoE,CAAE,GAAG,KAAK,sBAAuB,YAAa,KAAK,KAAK,MAAQ,CAAA,EACzI,KAAK,AAAC,GAAiC,CAChC,AAAA,EAAS,KAAK,OACd,KAAK,kBAAkB,cAAe,EAAS,KAAK,OAAO,GAAG,OAAO,EAErE,MAAK,sBAAwB,EAAS,KACtC,KAAK,oCAAoC,EAC7C,CACH,EACA,MAAM,IAAM,CACT,KAAK,eAAiB,EAAA,CACzB,CACT,EACA,KAAM,sBAAsB,CACpB,AAAA,KAAK,sBAAsB,SAAS,UACpC,MAAK,sBAAsB,SAAW,KAAK,sBAAsB,SAAS,UAExE,KAAA,MAAK,MACN,IAAI,gDAAmE,KAAK,sBAAsB,KAAM,CAAE,GAAG,KAAK,sBAAuB,YAAa,KAAK,KAAK,OAAQ,EACxK,KAAK,AAAC,GAAiC,CAChC,AAAA,EAAS,KAAK,OACd,KAAK,kBAAkB,cAAe,EAAS,KAAK,OAAO,GAAG,OAAO,EAErE,KAAK,sBAAwB,EAAS,IAC1C,CACH,EACA,MAAM,IAAM,CACT,KAAK,eAAiB,EACzB,CAAA,EACA,QAAQ,IAAM,KAAK,oCAAqC,CAAA,CACjE,EACA,kBAAkB,EAAsB,CACpC,KAAK,MAAM,IAAI,gDAAmE,KAAK,eAAe,EAAqB,KAAK,EAAE,KAAK,AAAC,GAAiC,CACjK,AAAA,EAAS,KAAK,QACd,KAAK,kBAAkB,cAAe,EAAS,KAAK,OAAO,GAAG,OAAO,CACzE,CACH,CACL,EACA,KAAM,aAAa,CACT,KAAA,GAAW,GAAI,UACZ,EAAA,OAAO,OAAQ,KAAK,YAAY,EACnC,KAAA,MAAK,MAAM,KAAK,gDAAmE,KAAK,sBAAsB,cAAe,EAAU,CAAE,QAAS,CAAE,eAAgB,qBAAA,EAAyB,EAAE,KAAK,AAAC,GAAiC,CACpO,AAAA,EAAS,KAAK,OACd,KAAK,MAAM,SAAS,CAAE,MAAO,KAAK,GAAG,gDAAgD,EAAG,IAAK,EAAS,KAAK,MAAQ,CAAA,EAEnH,MAAK,MAAM,QAAQ,CAAE,MAAO,KAAK,GAAG,0CAA0C,EAAG,IAAK,KAAK,GAAG,iDAAiD,CAAG,CAAA,EAClJ,KAAK,aAAe,KACxB,CACH,CACL,EACA,WAAW,EAAa,CACpB,KAAK,MAAM,KAAK,gDAAmE,KAAK,aAAc,CAAE,GAAG,EAAQ,MAAO,EAAO,UAAU,EAAA,CAAI,EAAE,KAAK,AAAC,GAAiC,CAChL,AAAA,EAAS,KAAK,QACd,KAAK,kBAAkB,YAAa,EAAS,KAAK,OAAO,GAAG,OAAO,CACvE,CACH,CACL,EACA,aAAa,EAAa,CACjB,KAAA,MAAM,IAAI,gDAAmE,KAAK,cAAc,EAAO,KAAM,CAAE,GAAG,EAAQ,MAAO,EAAO,UAAU,GAAI,EAAE,KAAK,AAAC,GAAiC,CAC5L,AAAA,EAAS,KAAK,QACd,KAAK,kBAAkB,cAAe,EAAS,KAAK,OAAO,GAAG,OAAO,CACzE,CACH,CACL,EACA,aAAa,EAAkB,CAC3B,KAAK,MAAM,OAAO,gDAAmE,KAAK,cAAc,GAAU,EAAE,KAAK,AAAC,GAAiC,CACnJ,AAAA,EAAS,KAAK,QACd,KAAK,kBAAkB,cAAe,EAAS,KAAK,OAAO,GAAG,OAAO,CACzE,CACH,CACL,EACA,KAAM,WAAW,CACb,KAAK,QAAU,GACf,KAAM,MAAK,wBACX,KAAM,MAAK,iBACX,KAAM,MAAK,kBACX,KAAM,MAAK,gCACX,KAAK,QAAU,EACnB,EACA,cAAc,EAAY,CACjB,KAAA,sBAAsB,EAAM,WAAa,EAAM,MAChD,EAAM,YAAc,eACf,MAAA,sBAAsB,YAAc,KAAK,KAAK,QAEvD,KAAK,QAAU,GACf,KAAK,MAAM,SAAS,CACxB,EACA,UAAW,CACP,KAAK,MAAM,SAAS,CACxB,EACA,eAAgB,CACP,KAAA,QAAQ,KAAK,2BAA2B,EAC7C,KAAK,MAAM,QAAQ,CACvB,CACJ,CACJ,CAAC,kPAlVG,MAAAM,OAAcwB,EAAC,KAAA,CAAApB,EACK,EAAiC,CAAA,MAAA,sCAAA,EAAA,CAAA,MAAAD,EAAA,IAAA,qCACtC,CAAA,EAAA,IACPA,EAA6J,IAAA,CAAAC,EAAhJ,EAAY,CAAC,KAAK,aAAkD,MAAA,gDAA2B,SAAO,EAAA,eAAc,QAAU,EAAA,aAAA,YAAA,eACR,EAAA,KAAA,EAAA,CAAA,WAAA,SAAA,CAAA,EAAAA,EAAtH,EAAa,CAAC,KAAK,cAAkD,MAAK,gDAAiB,QAAU,EAAA,cAAA,YAAA,yCAG1D,CAAA,EAAA,EAAA,QAAAJ,KAAAC,EAAA,EAAA,CAAnD,IAAI,EAAiB,KAAK,gBAAA,MAAA,+BAC9B,IAAK,EAAA,MAAA,2CACVE,EAkBW,IAAA,CAAAC,EAjBU,EACiD,KAAA,CAAA,OAA9DD,EAA8D,IAAA,CAAAE,EAAA,OAAA,KAAAC,EAAA,EAAA,GAAA,uCAAA,CAAA,EAAA,CAAA,YAGlEH,EAY4B,IAAA,CAAAC,EAXvB,EAAuB,CACvB,sBAAkB,EAAA,sBAClB,iBAAiB,EAAA,WACjB,gBAAU,EAAA,YACV,KAAU,EAAA,KACV,WAAU,EAAA,WACV,SAAA,EAAA,SACA,sBAAc,EAAA,sBACd,eAAY,EAAA,cACZ,iBAAmB,IAAQ,GAAA,GAAA,AAAA,GAAA,EAAA,aAAA,GAC3B,oBAAgB,EAAA,SAAA,iBAAA,EAAA,2MAIzB,CAAA,EAAAA,EACqB,EACkD,KAAA,CAAA,OAA/DD,EAA+D,IAAA,CAAAE,EAAA,OAAA,KAAAC,EAAA,EAAA,GAAA,wCAAA,CAAA,EAAA,CAAA,IAG/C,QAAAH,EAAA,IAAA,OAAA,OAAA,MAAA,wBAAA,cAApB,QAAkH,GAAA,CAAA,EAAA,SAAAH,GAAA,EAAAC,EAAA,EAAA,CAA7C,IAAI,EAAA,GAAA,EAAA,sBAAA,mCAG7E,CAAA,EAAAG,EACqB,EACuD,KAAA,CAAA,OAApED,EAAoE,IAAA,CAAAE,EAAA,OAAA,KAAAC,EAAA,EAAA,GAAA,6CAAA,CAAA,EAAA,CAAA,YAGxEH,EAAyL,IAAA,CAAAC,EAAzJ,EAAwB,CAAG,KAAQ,sBAAE,GAAwB,SAAU,EAAA,sBAAW,SAAO,EAAE,SAAW,UAAS,EAAA,SAAA,UAAA,EAAA,gFAGnI,CAAA,EAM4L,EAAA,GAAAJ,GAAA,EAAAC,EAAA,EAAA,CAAA,IAAA,CAAA,EAAAuE,GAAA,CAAA,QAAxKrE,EAAE,IAAA,CAAA,EAAA,GAAAH,KAAAC,EAAA,EAAA,CAAG,IAAI,EAA2B,KAAS,sBAAO,GAAG,QAAc,EAAA,QAAsB,eAAU,EAAA,kBAAW,SAAQ,EAAA,SAAA,SAAA,EAAA,oGALhI,EAAA,CAAA,EAAA,GAAA,eACpB,GAAAE,EAAA,IAAA,CACoFE,EAAA,OAAA,KAAAC,EAAA,EAAA,GAAA,uCAAA,CAAA,EAAA,CAAA,EAApF,EAAA,eAAA,EAAAN,GAAA,EAAAC,EAAA,EAAA,CAAQ,IAAK,EAAkB,MAAM,EAAA,eAAS,MAAA,SAAA,SAAA"}