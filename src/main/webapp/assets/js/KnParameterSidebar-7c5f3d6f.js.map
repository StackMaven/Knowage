{"version":3,"file":"KnParameterSidebar-7c5f3d6f.js","sources":["../../../../components/UI/KnParameterSidebar/KnParameterSidebarVisualDependency.ts","../../../../components/UI/KnParameterSidebar/KnParameterSidebarDataDependency.ts","../../../../components/UI/KnParameterSidebar/KnParameterSidebarLovsDependency.ts","../../../../components/UI/KnParameterSidebar/dialogs/KnParameterPopupTable.vue","../../../../components/UI/KnParameterSidebar/dialogs/KnParameterPopupDialog.vue","../../../../components/UI/KnParameterSidebar/dialogs/KnParameterTreeDialog.vue","../../../../components/UI/KnParameterSidebar/dialogs/KnParameterSaveDialog.vue","../../../../components/UI/KnParameterSidebar/dialogs/KnParameterSavedParametersDialog.vue","../../../../components/UI/KnParameterSidebar/KnParameterSidebar.vue"],"sourcesContent":["import { iParameter, } from './KnParameterSidebar'\r\n\r\nexport function setVisualDependency(loadedParameters: { filterStatus: iParameter[], isReadyForExecution: boolean }, parameter: iParameter) {\r\n    if (parameter.dependencies?.visual.length !== 0) {\r\n        parameter.dependencies?.visual.forEach((dependency: any) => {\r\n            const index = loadedParameters.filterStatus.findIndex((param: any) => {\r\n                return param.urlName === dependency.parFatherUrlName\r\n            })\r\n            if (index !== -1) {\r\n                const tempParameter = loadedParameters.filterStatus[index]\r\n                parameter.dependsOnParameters ? parameter.dependsOnParameters.push(tempParameter) : (parameter.dependsOnParameters = [tempParameter])\r\n                tempParameter.dependentParameters ? tempParameter.dependentParameters.push(parameter) : (tempParameter.dependentParameters = [parameter])\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport function updateVisualDependency(parameter: iParameter) {\r\n    parameter.dependentParameters?.forEach((dependentParameter: iParameter) => visualDependencyCheck(dependentParameter, parameter))\r\n}\r\n\r\nexport function visualDependencyCheck(parameter: iParameter, changedParameter: any) {\r\n    let showOnPanel = 'false'\r\n    for (let i = 0; i < parameter.dependencies.visual.length; i++) {\r\n        let itemFound = false\r\n        const visualDependency = parameter.dependencies.visual[i]\r\n\r\n        if (parameter.dependsOnParameters) {\r\n            const index = parameter.dependsOnParameters.findIndex((el: any) => {\r\n                return el.urlName === visualDependency.parFatherUrlName\r\n            })\r\n            const parentParameter = parameter.dependsOnParameters[index]\r\n\r\n            for (let i = 0; i < parentParameter?.parameterValue?.length; i++) {\r\n                if (parentParameter.parameterValue[i].value === visualDependency.compareValue) {\r\n                    if (changedParameter.urlName === visualDependency.parFatherUrlName) {\r\n                        parameter.label = visualDependency.viewLabel\r\n                    }\r\n                    itemFound = true\r\n                    break\r\n                }\r\n            }\r\n\r\n            if (visualDependency.operation === 'not contains') {\r\n                if (itemFound) {\r\n                    showOnPanel = 'false'\r\n                    break;\r\n\r\n                } else {\r\n                    showOnPanel = 'true'\r\n                }\r\n            } else {\r\n                showOnPanel = itemFound ? 'true' : 'false'\r\n                if (itemFound) break;\r\n            }\r\n\r\n        }\r\n    }\r\n    parameter.showOnPanel = showOnPanel\r\n    parameter.visible = showOnPanel === 'true'\r\n}","import { AxiosResponse } from 'axios'\r\nimport { iParameter } from './KnParameterSidebar'\r\n\r\nexport function setDataDependency(loadedParameters: { filterStatus: iParameter[]; isReadyForExecution: boolean }, parameter: iParameter) {\r\n    if (parameter.dependencies?.data.length !== 0) {\r\n        parameter.dependencies?.data.forEach((dependency: any) => {\r\n            const index = loadedParameters.filterStatus.findIndex((param: any) => {\r\n                return param.urlName === dependency.parFatherUrlName\r\n            })\r\n            if (index !== -1) {\r\n                const tempParameter = loadedParameters.filterStatus[index]\r\n                parameter.dataDependsOnParameters ? parameter.dataDependsOnParameters.push(tempParameter) : (parameter.dataDependsOnParameters = [tempParameter])\r\n                tempParameter.dataDependentParameters ? tempParameter.dataDependentParameters.push(parameter) : (tempParameter.dataDependentParameters = [parameter])\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport async function updateDataDependency(loadedParameters: { filterStatus: iParameter[]; isReadyForExecution: boolean }, parameter: iParameter, loading: boolean, document: any, sessionRole: string | null, $http: any, mode: string) {\r\n    if (parameter && parameter.dataDependentParameters) {\r\n        for (let i = 0; i < parameter.dataDependentParameters.length; i++) {\r\n            await dataDependencyCheck(loadedParameters, parameter.dataDependentParameters[i], loading, document, sessionRole, $http, mode)\r\n        }\r\n    }\r\n}\r\n\r\nexport async function dataDependencyCheck(loadedParameters: { filterStatus: iParameter[]; isReadyForExecution: boolean }, parameter: iParameter, loading: boolean, document: any, sessionRole: string | null, $http: any, mode: string) {\r\n    loading = true\r\n\r\n    const postData = { label: document?.label, parameters: getFormattedParameters(loadedParameters), paramId: parameter.urlName, role: sessionRole }\r\n    let url = '2.0/documentExeParameters/admissibleValues'\r\n\r\n    if (mode !== 'execution' && document) {\r\n        url = document.type === 'businessModel' ? `1.0/businessmodel/${document.name}/admissibleValues` : `/3.0/datasets/${document.label}/admissibleValues`\r\n    }\r\n\r\n    await $http.post(import.meta.env.VITE_RESTFUL_SERVICES_PATH + url, postData).then((response: AxiosResponse<any>) => {\r\n        parameter.data = response.data.result.data\r\n        parameter.metadata = response.data.result.metadata\r\n        formatParameterAfterDataDependencyCheck(parameter)\r\n    })\r\n    loading = false\r\n}\r\n\r\nexport function formatParameterAfterDataDependencyCheck(parameter: any) {\r\n    if (!checkIfParameterDataContainsNewValue(parameter)) {\r\n        parameter.parameterValue = parameter.multivalue ? [] : [{ value: '', description: '' }]\r\n    }\r\n\r\n    if (parameter.data) {\r\n        parameter.data = parameter.data.map((data: any) => {\r\n            return formatParameterDataOptions(parameter, data)\r\n        })\r\n\r\n        if (parameter.data.length === 1) {\r\n            parameter.parameterValue = [...parameter.data]\r\n        }\r\n    }\r\n\r\n    if ((parameter.selectionType === 'COMBOBOX' || parameter.selectionType === 'LIST') && parameter.multivalue && parameter.mandatory && parameter.data.length === 1) {\r\n        parameter.showOnPanel = 'false'\r\n        parameter.visible = false\r\n    }\r\n\r\n    if (parameter.parameterValue[0] && !parameter.parameterValue[0].description) {\r\n        parameter.parameterValue[0].description = ''\r\n    }\r\n}\r\n\r\nexport function formatParameterDataOptions(parameter: iParameter, data: any) {\r\n    const valueColumn = parameter.metadata.valueColumn\r\n    const descriptionColumn = parameter.metadata.descriptionColumn\r\n    const valueIndex = Object.keys(parameter.metadata.colsMap).find((key: string) => parameter.metadata.colsMap[key] === valueColumn)\r\n    const descriptionIndex = Object.keys(parameter.metadata.colsMap).find((key: string) => parameter.metadata.colsMap[key] === descriptionColumn)\r\n\r\n    return { value: valueIndex ? data[valueIndex] : '', description: descriptionIndex ? data[descriptionIndex] : '' }\r\n}\r\n\r\nexport function getFormattedParameters(loadedParameters: { filterStatus: iParameter[]; isReadyForExecution: boolean }) {\r\n    let parameters = [] as any[]\r\n\r\n    Object.keys(loadedParameters.filterStatus).forEach((key: any) => {\r\n        const parameter = loadedParameters.filterStatus[key]\r\n\r\n        if (!parameter.multivalue) {\r\n            parameters.push({ label: parameter.label, value: parameter.parameterValue[0].value, description: parameter.parameterValue[0].description })\r\n        } else {\r\n            parameters.push({ label: parameter.label, value: parameter.parameterValue?.map((el: any) => el.value), description: parameter.parameterDescription ?? '' })\r\n        }\r\n    })\r\n\r\n    return parameters\r\n}\r\n\r\nfunction checkIfParameterDataContainsNewValue(parameter: iParameter) {\r\n    const valueColumn = parameter.metadata.valueColumn\r\n    const descriptionColumn = parameter.metadata.descriptionColumn\r\n    let valueIndex = null as any\r\n    if (parameter.metadata.colsMap) {\r\n        valueIndex = Object.keys(parameter.metadata.colsMap).find((key: string) => parameter.metadata.colsMap[key] === valueColumn)\r\n    }\r\n    let descriptionIndex = null as any\r\n    if (parameter.metadata.colsMap) {\r\n        descriptionIndex = Object.keys(parameter.metadata.colsMap).find((key: string) => parameter.metadata.colsMap[key] === descriptionColumn)\r\n    }\r\n\r\n    const index = parameter.data.findIndex((option: any) => {\r\n        if (option.value || option.description) {\r\n            return parameter.parameterValue[0].value === option.value && parameter.parameterValue[0].description === option.description\r\n        } else {\r\n            return parameter.parameterValue[0].value === option[valueIndex] && parameter.parameterValue[0].description === option[descriptionIndex]\r\n        }\r\n    })\r\n    return index !== -1\r\n}\r\n","import { AxiosResponse } from 'axios'\r\nimport { iParameter } from './KnParameterSidebar'\r\n\r\nexport function setLovsDependency(loadedParameters: { filterStatus: iParameter[]; isReadyForExecution: boolean }, parameter: iParameter) {\r\n    if (parameter.dependencies.lov.length !== 0) {\r\n        parameter.dependencies.lov.forEach((dependency: any) => {\r\n            const index = loadedParameters.filterStatus.findIndex((param: any) => {\r\n                return param.urlName === dependency\r\n            })\r\n            if (index !== -1) {\r\n                const tempParameter = loadedParameters.filterStatus[index]\r\n                parameter.lovDependsOnParameters ? parameter.lovDependsOnParameters.push(tempParameter) : (parameter.lovDependsOnParameters = [tempParameter])\r\n                tempParameter.lovDependentParameters ? tempParameter.lovDependentParameters.push(parameter) : (tempParameter.lovDependentParameters = [parameter])\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport async function updateLovDependency(loadedParameters: { filterStatus: iParameter[]; isReadyForExecution: boolean }, parameter: iParameter, loading: boolean, document: any, sessionRole: string | null, $http: any, mode: string) {\r\n    if (parameter && parameter.lovDependentParameters) {\r\n        for (let i = 0; i < parameter.lovDependentParameters.length; i++) {\r\n            await lovDependencyCheck(loadedParameters, parameter.lovDependentParameters[i], loading, document, sessionRole, $http, mode)\r\n        }\r\n    }\r\n}\r\n\r\nexport async function lovDependencyCheck(loadedParameters: { filterStatus: iParameter[]; isReadyForExecution: boolean }, parameter: iParameter, loading: boolean, document: any, sessionRole: string | null, $http: any, mode: string) {\r\n    loading = true\r\n    if (parameter.parameterValue[0]) {\r\n        parameter.parameterValue[0] = { value: '', description: '' }\r\n    } else {\r\n        parameter.parameterValue = [{ value: '', description: '' }]\r\n    }\r\n\r\n    const postData = { label: document?.label, parameters: getFormattedParameters(loadedParameters), paramId: parameter.urlName, role: sessionRole }\r\n    let url = '2.0/documentExeParameters/admissibleValues'\r\n\r\n    if (mode !== 'execution' && document) {\r\n        url = document.type === 'businessModel' ? `1.0/businessmodel/${document.name}/admissibleValues` : `/3.0/datasets/${document.label}/admissibleValues`\r\n    }\r\n\r\n    await $http\r\n        .post(import.meta.env.VITE_RESTFUL_SERVICES_PATH + url, postData)\r\n        .then((response: AxiosResponse<any>) => {\r\n            parameter.data = response.data.result.data\r\n            parameter.metadata = response.data.result.metadata\r\n            formatParameterAfterDataDependencyCheck(parameter)\r\n        })\r\n        .catch(() => {})\r\n    loading = false\r\n}\r\n\r\nexport function formatParameterAfterDataDependencyCheck(parameter: any) {\r\n    parameter.parameterValue = parameter.multivalue ? [] : [{ value: '', description: '' }]\r\n    if (parameter.data) {\r\n        parameter.data = parameter.data.map((data: any) => {\r\n            return formatParameterDataOptions(parameter, data)\r\n        })\r\n\r\n        if (parameter.data.length === 1) {\r\n            parameter.parameterValue = [...parameter.data]\r\n        }\r\n    }\r\n\r\n    if ((parameter.selectionType === 'COMBOBOX' || parameter.selectionType === 'LIST') && parameter.multivalue && parameter.mandatory && parameter.data.length === 1) {\r\n        parameter.showOnPanel = 'false'\r\n        parameter.visible = false\r\n    }\r\n\r\n    if (parameter.parameterValue[0] && !parameter.parameterValue[0].description) {\r\n        parameter.parameterValue[0].description = ''\r\n    }\r\n}\r\n\r\nexport function formatParameterDataOptions(parameter: iParameter, data: any) {\r\n    const valueColumn = parameter.metadata.valueColumn\r\n    const descriptionColumn = parameter.metadata.descriptionColumn\r\n    const valueIndex = Object.keys(parameter.metadata.colsMap).find((key: string) => parameter.metadata.colsMap[key] === valueColumn)\r\n    const descriptionIndex = Object.keys(parameter.metadata.colsMap).find((key: string) => parameter.metadata.colsMap[key] === descriptionColumn)\r\n\r\n    return { value: valueIndex ? data[valueIndex] : '', description: descriptionIndex ? data[descriptionIndex] : '' }\r\n}\r\n\r\nexport function getFormattedParameters(loadedParameters: { filterStatus: iParameter[]; isReadyForExecution: boolean }) {\r\n    let parameters = [] as any[]\r\n\r\n    Object.keys(loadedParameters.filterStatus).forEach((key: any) => {\r\n        const parameter = loadedParameters.filterStatus[key]\r\n\r\n        if (!parameter.multivalue) {\r\n            parameters.push({ label: parameter.label, value: parameter.parameterValue[0].value, description: parameter.parameterValue[0].description })\r\n        } else {\r\n            parameters.push({ label: parameter.label, value: parameter.parameterValue?.map((el: any) => el.value), description: parameter.parameterDescription ?? '' })\r\n        }\r\n    })\r\n\r\n    return parameters\r\n}\r\n","<template>\r\n    <DataTable\r\n        :value=\"rows\"\r\n        class=\"p-datatable-sm kn-table\"\r\n        v-model:selection=\"selectedRow\"\r\n        :selectionMode=\"multivalue ? false : 'single'\"\r\n        v-model:filters=\"filters\"\r\n        :globalFilterFields=\"globalFilterFields\"\r\n        :paginator=\"rows.length > 20\"\r\n        :rows=\"20\"\r\n        responsiveLayout=\"stack\"\r\n        breakpoint=\"600px\"\r\n        :scrollable=\"true\"\r\n        :scrollHeight=\"knParameterPopupDialogDescriptor.dialog.scrollHeight\"\r\n        @row-select=\"$emit('selected', selectedRow)\"\r\n        @row-unselect=\"$emit('selected', selectedRow)\"\r\n        @row-select-all=\"$emit('selected', selectedRow)\"\r\n        @row-unselect-all=\"$emit('selected', selectedRow)\"\r\n    >\r\n        <template #empty>\r\n            <Message class=\"p-m-2\" severity=\"info\" :closable=\"false\" :style=\"knParameterPopupDialogDescriptor.styles.message\">\r\n                {{ $t('common.info.noDataFound') }}\r\n            </Message>\r\n        </template>\r\n\r\n        <template #header>\r\n            <div class=\"table-header p-d-flex p-ai-center\">\r\n                <span id=\"search-container\" class=\"p-input-icon-left p-mr-3\">\r\n                    <i class=\"pi pi-search\" />\r\n                    <InputText class=\"kn-material-input\" v-model=\"filters['global'].value\" type=\"text\" :placeholder=\"$t('common.search')\" />\r\n                </span>\r\n            </div>\r\n        </template>\r\n\r\n        <Column v-if=\"multivalue\" selectionMode=\"multiple\" :style=\"knParameterPopupDialogDescriptor.styles.checkboxColumn\"></Column>\r\n        <Column class=\"kn-truncated\" v-for=\"col of columns\" :field=\"col.field\" :header=\"col.header\" :key=\"col.field\" :sortable=\"true\"> </Column>\r\n    </DataTable>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport { filterDefault } from '@/helpers/commons/filterHelper'\r\nimport Column from 'primevue/column'\r\nimport DataTable from 'primevue/datatable'\r\nimport knParameterPopupDialogDescriptor from './KnParameterPopupDialogDescriptor.json'\r\nimport Message from 'primevue/message'\r\n\r\nexport default defineComponent({\r\n    name: 'kn-parameter-popup-dialog',\r\n    components: { Column, DataTable, Message },\r\n    props: { parameterPopUpData: { type: Object }, multivalue: { type: Boolean }, multipleSelectedRows: { type: Array } },\r\n    data() {\r\n        return {\r\n            knParameterPopupDialogDescriptor,\r\n            rows: [] as any[],\r\n            columns: [] as { header: string; field: string }[],\r\n            filters: { global: [filterDefault] } as Object,\r\n            globalFilterFields: [] as string[],\r\n            selectedRow: null as any\r\n        }\r\n    },\r\n    watch: {\r\n        parameterPopUpData() {\r\n            this.loadData()\r\n        }\r\n    },\r\n    created() {\r\n        this.loadData()\r\n    },\r\n    methods: {\r\n        loadData() {\r\n            this.rows = this.parameterPopUpData?.result.data\r\n\r\n            this.columns = []\r\n            Object.keys(this.parameterPopUpData?.result.metadata.colsMap).forEach((key: string) => {\r\n                this.columns.push({ header: this.parameterPopUpData?.result.metadata.colsMap[key], field: key })\r\n            })\r\n\r\n            this.columns.forEach((el: any) => this.globalFilterFields.push(el.field))\r\n\r\n            this.selectedRow = this.multipleSelectedRows\r\n        }\r\n    }\r\n})\r\n</script>\r\n","<template>\r\n    <Dialog class=\"p-fluid kn-dialog--toolbar--primary\" :contentStyle=\"knParameterPopupDialogDescriptor.dialog.style\" :visible=\"visible\" :modal=\"true\" :closable=\"false\">\r\n        <template #header>\r\n            <Toolbar class=\"kn-toolbar kn-toolbar--primary p-p-0 p-m-0 p-col-12\">\r\n                <template #start> {{ $t('common.parameter') + ': ' }} {{ popupData ? popupData.idParam : '' }} </template>\r\n            </Toolbar>\r\n        </template>\r\n        <ProgressBar mode=\"indeterminate\" class=\"kn-progress-bar\" v-if=\"loading\" />\r\n\r\n        <KnParameterPopupTable v-if=\"parameterPopUpData && !loading\" :parameterPopUpData=\"popupData\" :multivalue=\"multivalue\" :multipleSelectedRows=\"multipleSelectedRows\" @selected=\"onRowSelected\"></KnParameterPopupTable>\r\n\r\n        <template #footer>\r\n            <div class=\"p-d-flex p-flex-row p-jc-end\">\r\n                <Button class=\"kn-button kn-button--primary\" @click=\"closeDialog\"> {{ $t('common.cancel') }}</Button>\r\n                <Button class=\"kn-button kn-button--primary\" @click=\"save\"> {{ $t('common.save') }}</Button>\r\n            </div>\r\n        </template>\r\n    </Dialog>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport { iAdmissibleValues, iParameter } from '../KnParameterSidebar'\r\nimport Dialog from 'primevue/dialog'\r\nimport knParameterPopupDialogDescriptor from './KnParameterPopupDialogDescriptor.json'\r\nimport KnParameterPopupTable from './KnParameterPopupTable.vue'\r\n\r\nexport default defineComponent({\r\n    name: 'kn-parameter-popup-dialog',\r\n    components: { Dialog, KnParameterPopupTable },\r\n    props: { visible: { type: Boolean }, selectedParameter: { type: Object }, propLoading: { type: Boolean }, parameterPopUpData: { type: Object } },\r\n    emits: ['close', 'save'],\r\n    data() {\r\n        return {\r\n            knParameterPopupDialogDescriptor,\r\n            parameter: null as iParameter | null,\r\n            popupData: null as iAdmissibleValues | null,\r\n            selectedRow: null as any,\r\n            multipleSelectedRows: [] as any[],\r\n            multivalue: false,\r\n            loading: false\r\n        }\r\n    },\r\n    watch: {\r\n        visible() {\r\n            this.loadParamaterData()\r\n        },\r\n        selectedParameter() {\r\n            this.loadParamaterData()\r\n        },\r\n        propLoading() {\r\n            this.setLoading()\r\n        },\r\n        parameterPopUpData() {\r\n            this.loadPopupData()\r\n            this.loadParamaterData()\r\n        }\r\n    },\r\n    created() {\r\n        this.setLoading()\r\n        this.loadParamaterData()\r\n    },\r\n    methods: {\r\n        loadParamaterData() {\r\n            this.loading = true\r\n            this.loadParameter()\r\n            this.loadPopupData()\r\n            if (this.multivalue) {\r\n                this.setMultipleSelectedRows()\r\n            } else {\r\n                this.setSelectedRow()\r\n            }\r\n            this.loading = false\r\n        },\r\n        loadParameter() {\r\n            this.parameter = this.selectedParameter as iParameter\r\n            this.multivalue = this.selectedParameter?.multivalue\r\n        },\r\n        setMultipleSelectedRows() {\r\n            this.multipleSelectedRows = []\r\n            const valueColumn = this.popupData?.result.metadata.valueColumn\r\n            const descriptionColumn = this.popupData?.result.metadata.descriptionColumn\r\n\r\n            const valueIndex = Object.keys(this.parameter?.metadata.colsMap).find((key: string) => this.parameter?.metadata.colsMap[key] === valueColumn)\r\n            const descriptionIndex = Object.keys(this.parameter?.metadata.colsMap).find((key: string) => this.parameter?.metadata.colsMap[key] === descriptionColumn)\r\n\r\n            const parameterValues = this.parameter?.parameterValue as any\r\n\r\n            for (let i = 0; i < parameterValues.length; i++) {\r\n                const tempParameter = parameterValues[i]\r\n\r\n                if (valueIndex && descriptionIndex) {\r\n                    const selectedIndex = this.parameterPopUpData?.result.data.findIndex((el: any) => {\r\n                        return el[valueIndex] === tempParameter.value && el[descriptionIndex] === tempParameter.description\r\n                    }) as any\r\n                    if (selectedIndex !== -1) {\r\n                        this.multipleSelectedRows.push(this.parameterPopUpData?.result.data[selectedIndex])\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        setSelectedRow() {\r\n            const valueColumn = this.popupData?.result.metadata.valueColumn\r\n            const descriptionColumn = this.popupData?.result.metadata.descriptionColumn\r\n\r\n            if (this.parameter?.metadata.colsMap) {\r\n                const valueIndex = Object.keys(this.parameter?.metadata.colsMap).find((key: string) => this.parameter?.metadata.colsMap[key] === valueColumn)\r\n                const descriptionIndex = Object.keys(this.parameter?.metadata.colsMap).find((key: string) => this.parameter?.metadata.colsMap[key] === descriptionColumn)\r\n\r\n                if (valueIndex && descriptionIndex) {\r\n                    const selectedIndex = this.parameterPopUpData?.result.data.findIndex((el: any) => {\r\n                        return el[valueIndex] === this.parameter?.parameterValue[0].value && el[descriptionIndex] === this.parameter?.parameterValue[0].description\r\n                    }) as any\r\n                    if (selectedIndex !== -1 && this.popupData) {\r\n                        this.multipleSelectedRows = [this.popupData?.result.data[selectedIndex]]\r\n                        this.popupData.result.data = this.popupData?.result.data.filter((el: any) => {\r\n                            return el[valueIndex] !== this.multipleSelectedRows[0][valueIndex] || el[descriptionIndex] !== this.multipleSelectedRows[0][descriptionIndex]\r\n                        })\r\n                        this.popupData?.result.data.unshift(this.multipleSelectedRows[0])\r\n                        this.selectedRow = this.multipleSelectedRows[0]\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        loadPopupData() {\r\n            this.popupData = this.parameterPopUpData as iAdmissibleValues\r\n        },\r\n\r\n        setLoading() {\r\n            this.loading = this.propLoading\r\n        },\r\n        closeDialog() {\r\n            this.$emit('close')\r\n            this.loadParameter()\r\n            this.popupData = null\r\n            this.selectedRow = null\r\n        },\r\n        onRowSelected(selectedRows: any) {\r\n            if (!this.multivalue) {\r\n                this.selectedRow = selectedRows\r\n            } else {\r\n                this.multipleSelectedRows = selectedRows\r\n            }\r\n        },\r\n        save() {\r\n            if (!this.parameter) return\r\n\r\n            const valueColumn = this.popupData?.result.metadata.valueColumn\r\n            const descriptionColumn = this.popupData?.result.metadata.descriptionColumn\r\n\r\n            const valueIndex = Object.keys(this.parameter.metadata.colsMap).find((key: string) => this.parameter?.metadata.colsMap[key] === valueColumn)\r\n            const descriptionIndex = Object.keys(this.parameter.metadata.colsMap).find((key: string) => this.parameter?.metadata.colsMap[key] === descriptionColumn)\r\n\r\n            if (!this.multivalue) {\r\n                this.parameter.parameterValue = this.selectedRow ? [{ value: valueIndex ? this.selectedRow[valueIndex] : '', description: descriptionIndex ? this.selectedRow[descriptionIndex] : '' }] : []\r\n\r\n                this.selectedRow = null\r\n            } else {\r\n                this.parameter.parameterValue = []\r\n                this.multipleSelectedRows?.forEach((el: any) => this.parameter?.parameterValue.push({ value: valueIndex ? el[valueIndex] : '', description: descriptionIndex ? el[descriptionIndex] : '' }))\r\n            }\r\n\r\n            this.popupData = null\r\n            this.$emit('save', this.parameter)\r\n        }\r\n    }\r\n})\r\n</script>\r\n","<template>\r\n    <Dialog class=\"p-fluid kn-dialog--toolbar--primary\" :contentStyle=\"knParameterTreeDialogDescriptor.dialog.style\" :visible=\"visible\" :modal=\"true\" :closable=\"false\">\r\n        <template #header>\r\n            <Toolbar class=\"kn-toolbar kn-toolbar--primary p-p-0 p-m-0 p-col-12\">\r\n                <template #start>\r\n                    {{ $t('common.parameter') + ': ' + parameter?.urlName }}\r\n                </template>\r\n            </Toolbar>\r\n        </template>\r\n        <ProgressBar mode=\"indeterminate\" class=\"kn-progress-bar\" v-if=\"loading\" />\r\n\r\n        <Tree\r\n            id=\"kn-parameter-tree\"\r\n            :value=\"nodes\"\r\n            :selectionMode=\"!multivalue ? 'single' : null\"\r\n            v-model:selectionKeys=\"selectedValuesKeys\"\r\n            :metaKeySelection=\"false\"\r\n            @node-select=\"setSelectedValue($event)\"\r\n            @node-unselect=\"removeSelectedValue($event)\"\r\n            @nodeExpand=\"loadLeaf($event)\"\r\n            @node-collapse=\"setClosedFolderIcon($event)\"\r\n        >\r\n            <template #default=\"slotProps\">\r\n                <Checkbox v-if=\"multivalue && slotProps.node.selectable\" class=\"p-ml-2\" v-model=\"selectedNodes\" :value=\"slotProps.node.data\" @change=\"onNodeChange($event)\" />\r\n                <span>{{ slotProps.node.label }}</span\r\n                >\r\n            </template>\r\n        </Tree>\r\n\r\n        <template #footer>\r\n            <div class=\"p-d-flex p-flex-row p-jc-end\">\r\n                <Button class=\"kn-button kn-button--primary\" @click=\"closeDialog\"> {{ $t('common.cancel') }}</Button>\r\n                <Button class=\"kn-button kn-button--primary\" @click=\"save\"> {{ $t('common.save') }}</Button>\r\n            </div>\r\n        </template>\r\n    </Dialog>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport { AxiosResponse } from 'axios'\r\nimport { iNode, iParameter } from '../KnParameterSidebar'\r\nimport Checkbox from 'primevue/checkbox'\r\nimport Dialog from 'primevue/dialog'\r\nimport knParameterTreeDialogDescriptor from './KnParameterTreeDialogDescriptor.json'\r\nimport Tree from 'primevue/tree'\r\n\r\nimport deepcopy from 'deepcopy'\r\n\r\nexport default defineComponent({\r\n    name: 'kn-parameter-tree-dialog',\r\n    components: { Checkbox, Dialog, Tree },\r\n    props: { visible: { type: Boolean }, selectedParameter: { type: Object }, formatedParameterValues: { type: Object }, document: { type: Object }, mode: { type: String }, selectedRole: { type: String } },\r\n    emits: ['close', 'save'],\r\n    data() {\r\n        return {\r\n            knParameterTreeDialogDescriptor,\r\n            parameter: null as iParameter | null,\r\n            nodes: [] as iNode[],\r\n            selectedValuesKeys: {} as any,\r\n            selectedValue: null as any,\r\n            multipleSelectedValues: [] as any[],\r\n            multivalue: false,\r\n            selectedNodes: [] as any[],\r\n            loading: false\r\n        }\r\n    },\r\n    watch: {\r\n        async visible() {\r\n            await this.loadTree()\r\n        },\r\n        async selectedParameter() {\r\n            await this.loadTree()\r\n        }\r\n    },\r\n    async created() {\r\n        await this.loadTree()\r\n    },\r\n    methods: {\r\n        async loadTree() {\r\n            this.loadParameter()\r\n            if (this.parameter && this.formatedParameterValues && this.visible) {\r\n                await this.loadLeaf(null)\r\n            }\r\n        },\r\n        loadParameter() {\r\n            this.parameter = this.selectedParameter as iParameter\r\n            this.multivalue = this.selectedParameter?.multivalue\r\n            if (this.multivalue) {\r\n                this.setMultipleSelectedRows()\r\n            } else {\r\n                this.selectedValue = this.selectedParameter?.parameterValue[0]\r\n                this.selectedNodes = [this.selectedValue]\r\n                if (this.selectedValue) {\r\n                    this.selectedValuesKeys[this.selectedValue.description] = true\r\n                }\r\n            }\r\n        },\r\n        setMultipleSelectedRows() {\r\n            if (!this.selectedParameter) return\r\n            this.multipleSelectedValues = deepcopy(this.selectedParameter.parameterValue)\r\n            this.selectedNodes = [...this.multipleSelectedValues]\r\n        },\r\n        async loadLeaf(parent: any) {\r\n            this.loading = true\r\n\r\n            if (!this.document) return\r\n\r\n            if (parent && parent.leaf) {\r\n                this.loading = false\r\n                return\r\n            }\r\n\r\n            const sessionRole = (this.store.$state as any).user.sessionRole\r\n            const role = sessionRole && sessionRole !== this.$t('role.defaultRolePlaceholder') ? sessionRole : this.selectedRole\r\n\r\n            let url = '2.0/documentexecution/admissibleValuesTree'\r\n            if (this.mode !== 'execution') {\r\n                url = this.document.type === 'businessModel' ? `1.0/businessmodel/${this.document.name}/admissibleValuesTree` : `/3.0/datasets/${this.document.label}/admissibleValuesTree`\r\n            }\r\n\r\n            const postData = { label: this.document.label ?? this.document.name, role: role, parameterId: this.parameter?.urlName, mode: 'complete', treeLovNode: parent ? parent.id : 'lovroot', parameters: this.formatedParameterValues }\r\n            let content = [] as any[]\r\n            await this.$http\r\n                .post(import.meta.env.VITE_RESTFUL_SERVICES_PATH + url, postData)\r\n                .then((response: AxiosResponse<any>) =>\r\n                    response.data.rows.forEach((el: any) => {\r\n                        content.push(this.createNode(el, parent))\r\n                    })\r\n                )\r\n                .catch((error: any) => console.log('ERROR: ', error))\r\n            this.attachContentToTree(parent, content)\r\n            content.forEach((el: any) => this.checkIfNodeIsSelected(el))\r\n            this.loading = false\r\n            if (parent) this.setOpenFolderIcon(parent)\r\n        },\r\n        checkIfNodeIsSelected(node: iNode) {\r\n            if (node.leaf) {\r\n                const index = this.parameter?.parameterValue.findIndex((el: any) => el.value === node.data.value)\r\n                if (index !== -1) {\r\n                    this.selectedValuesKeys[node.key] = { checked: true, partialyChecked: false }\r\n                    if (this.checkIfAllChildrensAreSelected(node.parent)) this.selectedValuesKeys[node.parent.key] = { checked: true, partialyChecked: false }\r\n                }\r\n            }\r\n        },\r\n        checkIfAllChildrensAreSelected(node: iNode) {\r\n            let allChecked = true\r\n            for (let i = 0; i < node.children.length; i++) {\r\n                if (!this.selectedValuesKeys[node.children[i].key] || !this.selectedValuesKeys[node.children[i].key].checked) {\r\n                    allChecked = false\r\n                    break\r\n                }\r\n            }\r\n\r\n            return allChecked\r\n        },\r\n        attachContentToTree(parent: iNode, content: iNode[]) {\r\n            if (parent) {\r\n                parent.children = []\r\n                parent.children = content\r\n            } else {\r\n                this.nodes = []\r\n                this.nodes = content\r\n            }\r\n        },\r\n        createNode(el: iNode, parent: iNode) {\r\n            return {\r\n                key: el.label,\r\n                id: el.id,\r\n                label: el.label,\r\n                children: [] as iNode[],\r\n                data: { value: el.data, description: el.label },\r\n                style: this.knParameterTreeDialogDescriptor.node.style,\r\n                leaf: el.leaf,\r\n                selectable: this.isNodeSelectable(el),\r\n                parent: parent,\r\n                icon: el.leaf ? 'pi pi-file' : 'pi pi-folder'\r\n            }\r\n        },\r\n        isNodeSelectable(el) {\r\n            if (!this.multivalue || !this.parameter) return true\r\n\r\n            return this.parameter.allowInternalNodeSelection || el.leaf\r\n        },\r\n        setOpenFolderIcon(node: iNode) {\r\n            node.icon = 'pi pi-folder-open'\r\n        },\r\n        setClosedFolderIcon(node: iNode) {\r\n            node.icon = 'pi pi-folder'\r\n        },\r\n        onNodeChange() {\r\n            this.multipleSelectedValues = [...this.selectedNodes]\r\n        },\r\n        setSelectedValue(node: iNode) {\r\n            if (!this.multivalue) {\r\n                this.selectedValue = node.data\r\n            } else if (node.leaf) {\r\n                this.multipleSelectedValues.push(node.data)\r\n            } else {\r\n                node?.children.forEach((child: iNode) => {\r\n                    const index = this.multipleSelectedValues.findIndex((el: { value: string; description: string }) => el.value === child.data.value && el.description === child.data.description)\r\n                    if (index === -1) this.multipleSelectedValues.push(child.data)\r\n                })\r\n            }\r\n        },\r\n        removeSelectedValue(node: iNode) {\r\n            if (!this.multivalue) {\r\n                this.selectedValue = null\r\n            } else if (node.leaf) {\r\n                this.removeSelectedNode(node)\r\n            } else {\r\n                node?.children.forEach((child: iNode) => {\r\n                    this.removeSelectedNode(child)\r\n                })\r\n            }\r\n        },\r\n        removeSelectedNode(node: iNode) {\r\n            const index = this.multipleSelectedValues.findIndex((el: any) => el.value === node.data.value)\r\n            if (index !== -1) this.multipleSelectedValues.splice(index, 1)\r\n        },\r\n        closeDialog() {\r\n            this.$emit('close')\r\n            this.loadParameter()\r\n            this.selectedValue = null\r\n            this.multipleSelectedValues = []\r\n            this.nodes = []\r\n        },\r\n        save() {\r\n            if (!this.parameter) return\r\n            if (!this.multivalue) {\r\n                this.parameter.parameterValue = this.selectedValue ? [{ value: this.selectedValue.value, description: this.selectedValue.description ?? '' }] : []\r\n                this.selectedValuesKeys = {}\r\n                this.selectedValue = null\r\n            } else {\r\n                this.parameter.parameterValue = []\r\n                this.multipleSelectedValues?.forEach((el: any) => this.parameter?.parameterValue.push({ value: el.value, description: el.description ?? '' }))\r\n                this.multipleSelectedValues = []\r\n            }\r\n            this.nodes = []\r\n            this.$emit('save', this.parameter)\r\n        }\r\n    }\r\n})\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n#kn-parameter-tree {\r\n    border: none;\r\n}\r\n</style>\r\n","<template>\r\n    <Dialog class=\"p-fluid kn-dialog--toolbar--primary\" :contentStyle=\"knParameterSaveDialogDescriptor.dialog.style\" :visible=\"visible\" :modal=\"true\" :closable=\"false\">\r\n        <template #header>\r\n            <Toolbar class=\"kn-toolbar kn-toolbar--primary p-p-0 p-m-0 p-col-12\">\r\n                <template #start> {{ $t('common.saveAs') + ' ... ' }} </template>\r\n            </Toolbar>\r\n        </template>\r\n        <ProgressBar mode=\"indeterminate\" class=\"kn-progress-bar\" v-if=\"loading\" />\r\n\r\n        <div class=\"p-fluid p-formgrid p-grid p-m-4\">\r\n            <div class=\"p-field p-col-12\">\r\n                <span class=\"p-float-label\">\r\n                    <InputText\r\n                        id=\"name\"\r\n                        class=\"kn-material-input\"\r\n                        :maxLength=\"knParameterSaveDialogDescriptor.nameMaxLength\"\r\n                        v-model.trim=\"v$.viewpoint.NAME.$model\"\r\n                        :class=\"{\r\n                            'p-invalid': v$.viewpoint.NAME.$invalid && v$.viewpoint.NAME.$dirty\r\n                        }\"\r\n                        @blur=\"v$.viewpoint.NAME.$touch()\"\r\n                    />\r\n                    <label for=\"name\" class=\"kn-material-input-label\">{{ $t('common.name') }} * </label>\r\n                </span>\r\n                <div class=\"p-d-flex p-flex-row p-jc-around\">\r\n                    <KnValidationMessages\r\n                        :vComp=\"v$.viewpoint.NAME\"\r\n                        :additionalTranslateParams=\"{\r\n                            fieldName: $t('common.name')\r\n                        }\"\r\n                    />\r\n                    <p class=\"input-help\">{{ nameHelp }}</p>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"p-field p-col-12\">\r\n                <span class=\"p-float-label\">\r\n                    <InputText\r\n                        id=\"description\"\r\n                        class=\"kn-material-input\"\r\n                        :maxLength=\"knParameterSaveDialogDescriptor.descriptionMaxLength\"\r\n                        v-model.trim=\"v$.viewpoint.DESCRIPTION.$model\"\r\n                        :class=\"{\r\n                            'p-invalid': v$.viewpoint.DESCRIPTION.$invalid && v$.viewpoint.DESCRIPTION.$dirty\r\n                        }\"\r\n                        @blur=\"v$.viewpoint.DESCRIPTION.$touch()\"\r\n                    />\r\n                    <label for=\"description\" class=\"kn-material-input-label\">{{ $t('common.description') }} * </label>\r\n                </span>\r\n                <div class=\"p-d-flex p-flex-row p-jc-around\">\r\n                    <KnValidationMessages\r\n                        :vComp=\"v$.viewpoint.DESCRIPTION\"\r\n                        :additionalTranslateParams=\"{\r\n                            fieldName: $t('common.description')\r\n                        }\"\r\n                    />\r\n                    <p class=\"input-help\">{{ descriptionHelp }}</p>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"p-field p-col-12\">\r\n                <label for=\"scope\" class=\"kn-material-input-label\">{{ $t('common.scope') }} * </label>\r\n                <Dropdown\r\n                    id=\"scope\"\r\n                    class=\"kn-material-input\"\r\n                    v-model=\"v$.viewpoint.SCOPE.$model\"\r\n                    :class=\"{\r\n                        'p-invalid': v$.viewpoint.SCOPE.$invalid && v$.viewpoint.SCOPE.$dirty\r\n                    }\"\r\n                    :options=\"knParameterSaveDialogDescriptor.scopeOptions\"\r\n                    @blur=\"v$.viewpoint.SCOPE.$touch()\"\r\n                />\r\n                <div class=\"p-d-flex p-flex-row\">\r\n                    <KnValidationMessages\r\n                        :vComp=\"v$.viewpoint.SCOPE\"\r\n                        :additionalTranslateParams=\"{\r\n                            fieldName: $t('common.scope')\r\n                        }\"\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <template #footer>\r\n            <div class=\"p-d-flex p-flex-row p-jc-end\">\r\n                <Button class=\"kn-button kn-button--primary\" @click=\"closeDialog\"> {{ $t('common.cancel') }}</Button>\r\n                <Button class=\"kn-button kn-button--primary\" @click=\"saveViewpoint\" :disabled=\"saveButtonDisabled\"> {{ $t('common.save') }}</Button>\r\n            </div>\r\n        </template>\r\n    </Dialog>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import { defineComponent } from 'vue'\r\n    import { createValidations } from '@/helpers/commons/validationHelper'\r\n    import Dialog from 'primevue/dialog'\r\n    import Dropdown from 'primevue/dropdown'\r\n    import knParameterSaveDialogDescriptor from './KnParameterSaveDialogDescriptor.json'\r\n    import KnValidationMessages from '@/components/UI/KnValidatonMessages.vue'\r\n    import useValidate from '@vuelidate/core'\r\n\r\n    export default defineComponent({\r\n        name: 'kn-parameter-save-dialog',\r\n        components: { Dialog, Dropdown, KnValidationMessages },\r\n        props: { visible: { type: Boolean }, propLoading: { type: Boolean } },\r\n        emits: ['close', 'saveViewpoint'],\r\n        data() {\r\n            return {\r\n                knParameterSaveDialogDescriptor,\r\n                viewpoint: {} as any,\r\n                loading: false,\r\n                v$: useValidate() as any\r\n            }\r\n        },\r\n        validations() {\r\n            return {\r\n                viewpoint: createValidations('viewpoint', this.knParameterSaveDialogDescriptor.validations.viewpoint)\r\n            }\r\n        },\r\n        computed: {\r\n            nameHelp(): string {\r\n                return (this.viewpoint.NAME?.length ?? '0') + ' / ' + this.knParameterSaveDialogDescriptor.nameMaxLength\r\n            },\r\n            descriptionHelp(): string {\r\n                return (this.viewpoint.DESCRIPTION?.length ?? '0') + ' / ' + this.knParameterSaveDialogDescriptor.descriptionMaxLength\r\n            },\r\n            saveButtonDisabled(): any {\r\n                return this.v$.$invalid\r\n            }\r\n        },\r\n        watch: {\r\n            visible() {\r\n                this.v$.$reset()\r\n                this.viewpoint = {}\r\n            },\r\n            propLoading() {\r\n                this.setLoading()\r\n            }\r\n        },\r\n        created() {\r\n            this.setLoading()\r\n        },\r\n        methods: {\r\n            setLoading() {\r\n                this.loading = this.propLoading\r\n            },\r\n            closeDialog() {\r\n                this.viewpoint = {}\r\n                this.v$.$reset()\r\n                this.$emit('close')\r\n            },\r\n            saveViewpoint() {\r\n                this.$emit('saveViewpoint', this.viewpoint)\r\n            }\r\n        }\r\n    })\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n    .input-help {\r\n        font-size: smaller;\r\n        margin-top: auto;\r\n        margin-left: auto;\r\n    }\r\n</style>\r\n","<template>\r\n    <Dialog class=\"p-fluid kn-dialog--toolbar--primary\" :contentStyle=\"knParameterSavedParametersDialogDescriptor.dialog.style\" :visible=\"visible\" :modal=\"true\" :closable=\"false\">\r\n        <template #header>\r\n            <Toolbar class=\"kn-toolbar kn-toolbar--primary p-p-0 p-m-0 p-col-12\">\r\n                <template #start> {{ $t('documentExecution.main.savedParameters') }} </template>\r\n                <template #end>\r\n                    <Button id=\"saved-parameters-dialog-close-button\" class=\"kn-button kn-button--primary\" @click=\"closeDialog\"> {{ $t('common.close') }}</Button>\r\n                </template>\r\n            </Toolbar>\r\n        </template>\r\n\r\n        <DataTable :value=\"viewpoints\" class=\"p-datatable-sm kn-table\" :paginator=\"viewpoints.length > 20\" dataKey=\"id\" v-model:filters=\"filters\" :globalFilterFields=\"knParameterSavedParametersDialogDescriptor.globalFilterFields\" responsiveLayout=\"stack\" breakpoint=\"600px\">\r\n            <template #header>\r\n                <div class=\"table-header p-d-flex p-ai-center\">\r\n                    <span id=\"search-container\" class=\"p-input-icon-left p-mr-3\">\r\n                        <i class=\"pi pi-search\" />\r\n                        <InputText class=\"kn-material-input\" v-model=\"filters['global'].value\" :placeholder=\"$t('common.search')\" />\r\n                    </span>\r\n                </div>\r\n            </template>\r\n\r\n            <template #empty>\r\n                <Message class=\"p-m-2\" severity=\"info\" :closable=\"false\" :style=\"knParameterSavedParametersDialogDescriptor.styles.message\">\r\n                    {{ $t('common.info.noDataFound') }}\r\n                </Message>\r\n            </template>\r\n\r\n            <Column class=\"kn-truncated\" v-for=\"col of knParameterSavedParametersDialogDescriptor.columns\" :field=\"col.field\" :header=\"$t(col.header)\" :key=\"col.field\" :sortable=\"true\"></Column>\r\n            <Column :style=\"knParameterSavedParametersDialogDescriptor.iconColumn.style\">\r\n                <template #body=\"slotProps\">\r\n                    <div class=\"p-d-flex p-flex-row\">\r\n                        <Button icon=\"fas fa-file-signature\" class=\"p-button-link p-mr-2\" v-tooltip.left=\"$t('documentExecution.main.fillForm')\" @click.stop=\"$emit('fillForm', slotProps.data)\" />\r\n                        <Button icon=\"fa fa-play-circle\" class=\"p-button-link p-mr-2\" v-tooltip.left=\"$t('common.execute')\" @click.stop=\"$emit('executeViewpoint', slotProps.data)\" />\r\n                        <Button icon=\"fas fa-trash-alt\" class=\"p-button-link\" v-tooltip.left=\"$t('common.delete')\" @click.stop=\"deleteViewpointConfirm(slotProps.data)\" />\r\n                    </div>\r\n                </template>\r\n            </Column>\r\n        </DataTable>\r\n    </Dialog>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport { filterDefault } from '@/helpers/commons/filterHelper'\r\nimport Column from 'primevue/column'\r\nimport DataTable from 'primevue/datatable'\r\nimport Dialog from 'primevue/dialog'\r\nimport Message from 'primevue/message'\r\nimport knParameterSavedParametersDialogDescriptor from './KnParameterSavedParametersDialogDescriptor.json'\r\n\r\nexport default defineComponent({\r\n    name: 'kn-parameter-saved-parameters-dialog',\r\n    components: { Column, DataTable, Dialog, Message },\r\n    props: { visible: { type: Boolean }, propViewpoints: { type: Array } },\r\n    emits: ['close', 'fillForm', 'executeViewpoint', 'deleteViewpoint'],\r\n    data() {\r\n        return {\r\n            knParameterSavedParametersDialogDescriptor,\r\n            viewpoints: [] as any[],\r\n            filters: { global: [filterDefault] } as Object\r\n        }\r\n    },\r\n    computed: {},\r\n    watch: {\r\n        propViewpoints() {\r\n            this.loadViewpoints()\r\n        }\r\n    },\r\n    created() {\r\n        this.loadViewpoints()\r\n    },\r\n    methods: {\r\n        loadViewpoints() {\r\n            this.viewpoints = this.propViewpoints as any[]\r\n        },\r\n        closeDialog() {\r\n            this.$emit('close')\r\n        },\r\n        deleteViewpointConfirm(viewpoint: any) {\r\n            this.$confirm.require({\r\n                message: this.$t('documentExecution.dossier.deleteConfirm'),\r\n                header: this.$t('documentExecution.dossier.deleteTitle'),\r\n                icon: 'pi pi-exclamation-triangle',\r\n                accept: () => this.$emit('deleteViewpoint', viewpoint)\r\n            })\r\n        }\r\n    }\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n#saved-parameters-dialog-close-button {\r\n    font-size: 0.75rem;\r\n}\r\n</style>\r\n","<template>\r\n    <div id=\"kn-parameter-sidebar\" :class=\"positionClass\">\r\n        <Toolbar v-if=\"mode !== 'workspaceView' && mode !== 'qbeView' && mode !== 'datasetManagement'\" id=\"kn-parameter-sidebar-toolbar\" class=\"kn-toolbar kn-toolbar--secondary\">\r\n            <template #start>\r\n                <div id=\"kn-parameter-sidebar-toolbar-icons-container\" class=\"p-d-flex p-flex-row p-jc-around\">\r\n                    <Button icon=\"fa fa-eraser\" class=\"p-button-text p-button-rounded p-button-plain p-mx-2\" v-tooltip.top=\"$t('documentExecution.main.resetParametersTooltip')\" @click=\"resetAllParameters\"></Button>\r\n                    <Button icon=\"pi pi-pencil\" class=\"p-button-text p-button-rounded p-button-plain p-mx-2\" v-tooltip.top=\"$t('documentExecution.main.savedParametersTooltip')\" @click=\"openSavedParametersDialog\"></Button>\r\n                    <Button icon=\"fas fa-save\" class=\"p-button-text p-button-rounded p-button-plain p-mx-2\" v-tooltip.top=\"$t('documentExecution.main.saveParametersFromStateTooltip')\" @click=\"openSaveParameterDialog\"></Button>\r\n                </div>\r\n            </template>\r\n        </Toolbar>\r\n\r\n        <div class=\"p-fluid kn-parameter-sidebar-content kn-alternated-rows\">\r\n            <div class=\"p-field p-my-1 p-p-2\" v-if=\"user && (!sessionRole || sessionRole === $t('role.defaultRolePlaceholder')) && (mode === 'execution' || mode === 'qbeView' || (mode === 'workspaceView' && dataset?.drivers?.length > 0))\">\r\n                <div class=\"p-d-flex\">\r\n                    <label class=\"kn-material-input-label\">{{ $t('common.roles') }}</label>\r\n                </div>\r\n                <Dropdown class=\"kn-material-input\" v-model=\"role\" :options=\"user.roles\" @change=\"setNewSessionRole\" />\r\n            </div>\r\n\r\n            <template v-if=\"mode === 'qbeView' || mode === 'workspaceView' || mode === 'datasetManagement'\">\r\n                <div v-for=\"(qbeParameter, index) in qbeParameters\" :key=\"index\">\r\n                    <div class=\"p-field p-m-4\">\r\n                        <div class=\"p-d-flex\">\r\n                            <label class=\"kn-material-input-label\"\r\n                                >{{ qbeParameter.name }}\r\n                                <span v-if=\"mode !== 'datasetManagement'\"> *</span>\r\n                            </label>\r\n                            <i class=\"fa fa-eraser parameter-clear-icon kn-cursor-pointer\" v-tooltip.left=\"$t('documentExecution.main.parameterClearTooltip')\" @click=\"qbeParameter.value = qbeParameter.defaultValue\"></i>\r\n                        </div>\r\n                        <Chips v-if=\"qbeParameter.multiValue\" v-model=\"qbeParameter.value\" />\r\n                        <InputText\r\n                            v-else\r\n                            class=\"kn-material-input p-inputtext-sm\"\r\n                            v-model=\"qbeParameter.value\"\r\n                            :class=\"{\r\n                                'p-invalid': !qbeParameter.value && mode !== 'datasetManagement'\r\n                            }\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </template>\r\n\r\n            <template v-for=\"(parameter, index) in parameters.filterStatus\" :key=\"index\">\r\n                <div class=\"p-field p-my-1 p-p-2\" v-if=\"(parameter.type === 'STRING' || parameter.type === 'NUM') && !parameter.selectionType && parameter.valueSelection === 'man_in' && parameter.showOnPanel === 'true' && parameter.visible\">\r\n                    <div class=\"p-d-flex\">\r\n                        <label\r\n                            class=\"kn-material-input-label\"\r\n                            :class=\"{\r\n                                'p-text-italic': parameter.dependsOnParameters || parameter.lovDependsOnParameters\r\n                            }\"\r\n                            :data-test=\"'parameter-input-label-' + parameter.id\"\r\n                            >{{ parameter.label }} {{ parameter.mandatory ? '*' : '' }}</label\r\n                        >\r\n                        <i class=\"fa fa-eraser parameter-clear-icon kn-cursor-pointer\" v-tooltip.left=\"$t('documentExecution.main.parameterClearTooltip')\" @click=\"resetParameterValue(parameter)\" :data-test=\"'parameter-input-clear-' + parameter.id\"></i>\r\n                    </div>\r\n                    <InputText\r\n                        v-if=\"parameter.parameterValue\"\r\n                        class=\"kn-material-input p-inputtext-sm\"\r\n                        :type=\"parameter.type === 'NUM' ? 'number' : 'text'\"\r\n                        v-model=\"parameter.parameterValue[0].value\"\r\n                        :class=\"{\r\n                            'p-invalid': parameter.mandatory && parameter.parameterValue && !parameter.parameterValue[0]?.value\r\n                        }\"\r\n                        @input=\"updateDependency(parameter)\"\r\n                        :data-test=\"'parameter-input-' + parameter.id\"\r\n                    />\r\n                </div>\r\n                <div class=\"p-field p-my-1 p-p-2\" v-if=\"parameter.type === 'DATE' && !parameter.selectionType && parameter.valueSelection === 'man_in' && parameter.showOnPanel === 'true' && parameter.visible\">\r\n                    <div class=\"p-d-flex\">\r\n                        <label\r\n                            class=\"kn-material-input-label\"\r\n                            :class=\"{\r\n                                'p-text-italic': parameter.dependsOnParameters || parameter.lovDependsOnParameters\r\n                            }\"\r\n                            :data-test=\"'parameter-date-label-' + parameter.id\"\r\n                            >{{ parameter.label }} {{ parameter.mandatory ? '*' : '' }}</label\r\n                        >\r\n                        <i class=\"fa fa-eraser parameter-clear-icon kn-cursor-pointer\" v-tooltip.left=\"$t('documentExecution.main.parameterClearTooltip')\" @click=\"resetParameterValue(parameter)\" :data-test=\"'parameter-date-clear-' + parameter.id\"></i>\r\n                    </div>\r\n                    <Calendar\r\n                        v-if=\"parameter.parameterValue\"\r\n                        v-model=\"parameter.parameterValue[0].value\"\r\n                        :showButtonBar=\"true\"\r\n                        :showIcon=\"true\"\r\n                        :manualInput=\"true\"\r\n                        class=\"kn-material-input custom-timepicker\"\r\n                        :class=\"{\r\n                            'p-invalid': parameter.mandatory && parameter.parameterValue && !parameter.parameterValue[0]?.value\r\n                        }\"\r\n                        @change=\"updateDependency(parameter)\"\r\n                        @date-select=\"updateDependency(parameter)\"\r\n                        :data-test=\"'parameter-date-input-' + parameter.id\"\r\n                    />\r\n                </div>\r\n                <div class=\"p-field p-my-1 p-p-2\" v-if=\"parameter.selectionType === 'LIST' && parameter.showOnPanel === 'true' && parameter.visible\">\r\n                    <div class=\"p-d-flex\">\r\n                        <label\r\n                            class=\"kn-material-input-label\"\r\n                            :class=\"{\r\n                                'kn-required-alert': parameter.mandatory && ((!parameter.multivalue && parameter.parameterValue && !parameter.parameterValue[0]?.value) || (parameter.multivalue && parameter.parameterValue && parameter.parameterValue.length === 0)),\r\n                                'p-text-italic': parameter.dependsOnParameters || parameter.lovDependsOnParameters\r\n                            }\"\r\n                            :data-test=\"'parameter-checkbox-label-' + parameter.id\"\r\n                            >{{ parameter.label }} {{ parameter.mandatory ? '*' : '' }}</label\r\n                        >\r\n                        <i class=\"fa fa-eraser parameter-clear-icon kn-cursor-pointer\" v-tooltip.left=\"$t('documentExecution.main.parameterClearTooltip')\" @click=\"resetParameterValue(parameter)\" :data-test=\"'parameter-checkbox-clear-' + parameter.id\"></i>\r\n                    </div>\r\n                    <ScrollPanel class=\"inputScrollPanel\">\r\n                        <div class=\"p-field-radiobutton\" v-for=\"(option, index) in parameter.data\" :key=\"index\" :data-test=\"'parameter-list-' + parameter.id\">\r\n                            <RadioButton v-if=\"!parameter.multivalue && parameter.parameterValue\" :value=\"option.value\" v-model=\"parameter.parameterValue[0].value\" @change=\"setRadioButtonValue(parameter)\" />\r\n                            <Checkbox v-if=\"parameter.multivalue && parameter.parameterValue\" :value=\"option.value\" v-model=\"selectedParameterCheckbox[parameter.id]\" @change=\"setCheckboxValue(parameter)\" />\r\n                            <label>{{ option.description }}</label>\r\n                        </div>\r\n                    </ScrollPanel>\r\n                </div>\r\n                <div class=\"p-field p-my-1 p-p-2\" v-if=\"parameter.selectionType === 'COMBOBOX' && parameter.showOnPanel === 'true' && parameter.visible\">\r\n                    <div class=\"p-d-flex\">\r\n                        <label\r\n                            class=\"kn-material-input-label\"\r\n                            :class=\"{\r\n                                'kn-required-alert': parameter.mandatory && ((!parameter.multivalue && parameter.parameterValue && !parameter.parameterValue[0]?.value) || (parameter.multivalue && parameter.parameterValue?.length === 0)),\r\n                                'p-text-italic': parameter.dependsOnParameters || parameter.lovDependsOnParameters\r\n                            }\"\r\n                            >{{ parameter.label }} {{ parameter.mandatory ? '*' : '' }}</label\r\n                        >\r\n                        <i class=\"fa fa-eraser parameter-clear-icon kn-cursor-pointer\" v-tooltip.left=\"$t('documentExecution.main.parameterClearTooltip')\" @click=\"resetParameterValue(parameter)\"></i>\r\n                    </div>\r\n                    <Dropdown v-if=\"!parameter.multivalue && parameter.parameterValue\" class=\"kn-material-input\" v-model=\"parameter.parameterValue[0].value\" :options=\"parameter.data\" optionValue=\"value\" optionLabel=\"description\" @change=\"onDropdownChange(parameter)\" />\r\n\r\n                    <MultiSelect v-else v-model=\"parameter.parameterValue\" :options=\"parameter.data\" optionLabel=\"description\" @change=\"updateDependency(parameter)\" />\r\n                </div>\r\n                <div class=\"p-field p-my-1 p-p-2\" v-if=\"parameter.selectionType === 'LOOKUP' && parameter.showOnPanel === 'true' && parameter.visible\">\r\n                    <div class=\"p-d-flex\">\r\n                        <label\r\n                            class=\"kn-material-input-label\"\r\n                            :class=\"{\r\n                                'kn-required-alert': parameter.mandatory && ((!parameter.multivalue && parameter.parameterValue && !parameter.parameterValue[0]?.value) || (parameter.multivalue && parameter.parameterValue?.length === 0)),\r\n                                'p-text-italic': parameter.dependsOnParameters || parameter.lovDependsOnParameters\r\n                            }\"\r\n                            >{{ parameter.label }} {{ parameter.mandatory ? '*' : '' }}</label\r\n                        >\r\n                        <i class=\"fa fa-eraser parameter-clear-icon kn-cursor-pointer\" v-tooltip.left=\"$t('documentExecution.main.parameterClearTooltip')\" @click=\"resetParameterValue(parameter)\"></i>\r\n                    </div>\r\n                    <div class=\"p-d-flex p-flex-row\">\r\n                        <i class=\"pi pi-external-link kn-cursor-pointer p-mr-2\" @click=\"openPopupDialog(parameter)\"></i>\r\n                        <ScrollPanel class=\"lookupScrollPanel\">\r\n                            <Chip class=\"parameterValueChip\" v-for=\"(parameterValue, index) in parameter.parameterValue\" :key=\"index\">{{ parameterValue.description ?? parameterValue.value }}</Chip>\r\n                        </ScrollPanel>\r\n                    </div>\r\n                </div>\r\n                <div class=\"p-field p-my-1 p-p-2\" v-if=\"parameter.selectionType === 'TREE' && parameter.showOnPanel === 'true' && parameter.visible\">\r\n                    <div class=\"p-d-flex\">\r\n                        <label\r\n                            class=\"kn-material-input-label\"\r\n                            :class=\"{\r\n                                'kn-required-alert': parameter.mandatory && ((!parameter.multivalue && parameter.parameterValue && !parameter.parameterValue[0]?.value) || (parameter.multivalue && parameter.parameterValue?.length === 0)),\r\n                                'p-text-italic': parameter.dependsOnParameters || parameter.lovDependsOnParameters\r\n                            }\"\r\n                            >{{ parameter.label }} {{ parameter.mandatory ? '*' : '' }}</label\r\n                        >\r\n                        <i class=\"fa fa-eraser parameter-clear-icon kn-cursor-pointer\" v-tooltip.left=\"$t('documentExecution.main.parameterClearTooltip')\" @click=\"resetParameterValue(parameter)\"></i>\r\n                    </div>\r\n                    <div class=\"p-d-flex p-flex-row\">\r\n                        <i class=\"pi pi-external-link kn-cursor-pointer p-mr-2\" @click=\"openTreeDialog(parameter)\"></i>\r\n                        <div>\r\n                            <Chip v-for=\"(parameterValue, index) in parameter.parameterValue\" :key=\"index\">{{ parameterValue.description ?? parameterValue.value }}</Chip>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </template>\r\n        </div>\r\n        <div v-if=\"(parameters && parameters.filterStatus.length > 0) || mode === 'qbeView' || mode === 'workspaceView' || mode === 'datasetManagement'\" class=\"p-fluid p-d-flex p-flex-row p-m-2 kn-parameter-sidebar-buttons\">\r\n            <Button class=\"kn-button kn-button--primary\" :disabled=\"buttonsDisabled\" @click=\"$emit('execute', qbeParameters, parameters)\"> {{ $t('common.execute') }}</Button>\r\n            <Button v-if=\"mode !== 'qbeView' && mode !== 'workspaceView' && mode !== 'datasetManagement'\" class=\"kn-button kn-button--primary p-ml-1\" icon=\"fa fa-chevron-down\" :disabled=\"buttonsDisabled\" @click=\"toggle($event)\" />\r\n            <Menu ref=\"executeButtonMenu\" :model=\"executeMenuItems\" :popup=\"true\" />\r\n        </div>\r\n        <KnParameterPopupDialog v-if=\"popupDialogVisible\" :visible=\"popupDialogVisible\" :selectedParameter=\"selectedParameter\" :propLoading=\"loading\" :parameterPopUpData=\"parameterPopUpData\" @close=\"popupDialogVisible = false\" @save=\"onPopupSave\"></KnParameterPopupDialog>\r\n        <KnParameterTreeDialog v-if=\"treeDialogVisible\" :visible=\"treeDialogVisible\" :selectedParameter=\"selectedParameter\" :formatedParameterValues=\"formatedParameterValues\" :document=\"document\" :mode=\"mode\" :selectedRole=\"role\" @close=\"onTreeClose\" @save=\"onTreeSave\"></KnParameterTreeDialog>\r\n        <KnParameterSaveDialog :visible=\"parameterSaveDialogVisible\" :propLoading=\"loading\" @close=\"parameterSaveDialogVisible = false\" @saveViewpoint=\"saveViewpoint\"></KnParameterSaveDialog>\r\n        <KnParameterSavedParametersDialog :visible=\"savedParametersDialogVisible\" :propViewpoints=\"viewpoints\" @close=\"savedParametersDialogVisible = false\" @fillForm=\"fillParameterForm\" @executeViewpoint=\"executeViewpoint\" @deleteViewpoint=\"deleteViewpoint\"></KnParameterSavedParametersDialog>\r\n    </div>\r\n</template>\r\n<script lang=\"ts\">\r\nimport { defineComponent, PropType } from 'vue'\r\nimport { AxiosResponse } from 'axios'\r\nimport { formatDate } from '@/helpers/commons/localeHelper'\r\nimport { iDocument, iParameter, iAdmissibleValues } from './KnParameterSidebar'\r\nimport { setVisualDependency, updateVisualDependency } from './KnParameterSidebarVisualDependency'\r\nimport { setDataDependency, updateDataDependency } from './KnParameterSidebarDataDependency'\r\nimport { setLovsDependency, updateLovDependency } from './KnParameterSidebarLovsDependency'\r\nimport Calendar from 'primevue/calendar'\r\nimport Chip from 'primevue/chip'\r\nimport Chips from 'primevue/chips'\r\nimport Checkbox from 'primevue/checkbox'\r\nimport Dropdown from 'primevue/dropdown'\r\nimport KnParameterPopupDialog from './dialogs/KnParameterPopupDialog.vue'\r\nimport KnParameterTreeDialog from './dialogs/KnParameterTreeDialog.vue'\r\nimport KnParameterSaveDialog from './dialogs/KnParameterSaveDialog.vue'\r\nimport KnParameterSavedParametersDialog from './dialogs/KnParameterSavedParametersDialog.vue'\r\nimport Menu from 'primevue/menu'\r\nimport MultiSelect from 'primevue/multiselect'\r\nimport RadioButton from 'primevue/radiobutton'\r\nimport ScrollPanel from 'primevue/scrollpanel'\r\nimport mainStore from '../../../App.store'\r\n\r\nexport default defineComponent({\r\n    name: 'kn-parameter-sidebar',\r\n    components: { Calendar, Chip, Chips, Checkbox, Dropdown, KnParameterPopupDialog, KnParameterTreeDialog, KnParameterSaveDialog, KnParameterSavedParametersDialog, Menu, MultiSelect, RadioButton, ScrollPanel },\r\n    props: { filtersData: { type: Object }, propDocument: { type: Object }, userRole: { type: Object as PropType<String | null> }, propMode: { type: String }, propQBEParameters: { type: Array }, dateFormat: { type: String }, dataset: { type: Object } },\r\n    emits: ['execute', 'exportCSV', 'roleChanged', 'parametersChanged'],\r\n    data() {\r\n        return {\r\n            document: null as iDocument | null,\r\n            parameters: { isReadyForExecution: false, filterStatus: [] } as { filterStatus: iParameter[]; isReadyForExecution: boolean },\r\n            executeMenuItems: [] as { label: string; command: Function }[],\r\n            selectedParameterCheckbox: {} as any,\r\n            popupDialogVisible: false,\r\n            selectedParameter: null as iParameter | null,\r\n            parameterPopUpData: null as iAdmissibleValues | null,\r\n            treeDialogVisible: false,\r\n            formatedParameterValues: null as any,\r\n            parameterSaveDialogVisible: false,\r\n            savedParametersDialogVisible: false,\r\n            viewpoints: [],\r\n            user: null as any,\r\n            role: null as string | null,\r\n            loading: false,\r\n            updateVisualDependency,\r\n            mode: 'execution',\r\n            qbeParameters: [] as any,\r\n            primary: true,\r\n            userDateFormat: '' as string\r\n        }\r\n    },\r\n    watch: {\r\n        sessionRole() {\r\n            this.role = ''\r\n            this.parameters = { isReadyForExecution: false, filterStatus: [] }\r\n        },\r\n        filtersData() {\r\n            this.loadDocument()\r\n            this.loadParameters()\r\n        },\r\n        userRole() {\r\n            this.role = this.userRole as string\r\n        },\r\n        propMode() {\r\n            this.loadMode()\r\n        },\r\n        propQBEParameters() {\r\n            this.loadQBEParameters()\r\n        },\r\n        dateFormat() {\r\n            this.userDateFormat = this.dateFormat as string\r\n        }\r\n    },\r\n    computed: {\r\n        sessionRole(): string {\r\n            return (this.store.$state as any).user.sessionRole\r\n        },\r\n        buttonsDisabled(): boolean {\r\n            return this.requiredFiledMissing()\r\n        },\r\n        positionClass(): string {\r\n            return this.document?.parametersRegion ? 'kn-parameter-sidebar-' + this.document.parametersRegion : 'kn-parameter-sidebar'\r\n        }\r\n    },\r\n    setup() {\r\n        const store = mainStore()\r\n        return { store }\r\n    },\r\n    created() {\r\n        this.loadMode()\r\n        if (this.mode === 'qbeView' || this.mode === 'workspaceView' || this.mode === 'datasetManagement') this.loadQBEParameters()\r\n\r\n        this.user = (this.store.$state as any).user\r\n        this.role = this.userRole as string\r\n        this.loadDocument()\r\n        this.loadParameters()\r\n        this.userDateFormat = this.dateFormat as string\r\n    },\r\n    methods: {\r\n        applyFieldClass(cssClass: string): string {\r\n            let cssCompleteClass = this.primary ? cssClass + ' fieldBackgroundColorPrimary' : cssClass + ' fieldBackgroundColorSecondary'\r\n            this.primary = !this.primary\r\n            return cssCompleteClass\r\n        },\r\n        setNewSessionRole() {\r\n            this.$emit('roleChanged', this.role)\r\n            this.parameters = { isReadyForExecution: false, filterStatus: [] }\r\n        },\r\n        loadDocument() {\r\n            this.document = this.propDocument as iDocument\r\n        },\r\n        loadParameters() {\r\n            this.parameters.isReadyForExecution = this.filtersData?.isReadyForExecution\r\n            this.parameters.filterStatus = []\r\n            this.filtersData?.filterStatus?.forEach((el: iParameter) => {\r\n                if (el.selectionType == 'LIST' && el.showOnPanel == 'true' && el.multivalue) {\r\n                    this.selectedParameterCheckbox[el.id] = el.parameterValue?.map((parameterValue: any) => parameterValue.value)\r\n                }\r\n                this.parameters.filterStatus.push(el)\r\n            })\r\n            this.parameters?.filterStatus.forEach((el: any) => setVisualDependency(this.parameters, el))\r\n            this.parameters?.filterStatus.forEach((el: any) => setDataDependency(this.parameters, el))\r\n            this.parameters?.filterStatus.forEach((el: any) => setLovsDependency(this.parameters, el))\r\n            this.parameters?.filterStatus.forEach((el: any) => this.updateVisualDependency(el))\r\n        },\r\n        setDataDependency(parameter: iParameter) {\r\n            if (parameter.dependencies.data.length !== 0) {\r\n                parameter.dependencies.data.forEach((dependency: any) => {\r\n                    const index = this.parameters.filterStatus.findIndex((param: any) => {\r\n                        return param.urlName === dependency.parFatherUrlName\r\n                    })\r\n                    if (index !== -1) {\r\n                        const tempParameter = this.parameters.filterStatus[index]\r\n                        parameter.dataDependsOnParameters ? parameter.dataDependsOnParameters.push(tempParameter) : (parameter.dataDependsOnParameters = [tempParameter])\r\n                        tempParameter.dataDependentParameters ? tempParameter.dataDependentParameters.push(parameter) : (tempParameter.dataDependentParameters = [parameter])\r\n                    }\r\n                })\r\n            }\r\n        },\r\n        resetParameterValue(parameter: any) {\r\n            if (!parameter.driverDefaultValue) {\r\n                if (parameter.multivalue) {\r\n                    parameter.parameterValue = []\r\n                    this.selectedParameterCheckbox[parameter.id] = []\r\n                } else {\r\n                    parameter.parameterValue[0] = { value: '', description: '' }\r\n                }\r\n                this.parameters.filterStatus.forEach((el: any) => this.updateDependency(el))\r\n                return\r\n            }\r\n\r\n            const valueColumn = parameter.metadata.valueColumn\r\n            const descriptionColumn = parameter.metadata.descriptionColumn\r\n            let valueIndex = null as any\r\n            if (parameter.metadata.colsMap) {\r\n                valueIndex = Object.keys(parameter.metadata.colsMap).find((key: string) => parameter.metadata.colsMap[key] === valueColumn)\r\n            }\r\n            let descriptionIndex = null as any\r\n            if (parameter.metadata.colsMap) {\r\n                descriptionIndex = Object.keys(parameter.metadata.colsMap).find((key: string) => parameter.metadata.colsMap[key] === descriptionColumn)\r\n            }\r\n            if ((parameter.selectionType === 'LIST' || parameter.selectionType === 'COMBOBOX') && parameter.showOnPanel === 'true' && parameter.multivalue) {\r\n                parameter.parameterValue = [] as { value: string; description: string }[]\r\n                this.selectedParameterCheckbox[parameter.id] = []\r\n                for (let i = 0; i < parameter.driverDefaultValue.length; i++) {\r\n                    const temp = parameter.driverDefaultValue[i]\r\n                    parameter.parameterValue.push({ value: valueIndex ? temp[valueIndex] : '', description: descriptionIndex ? temp[descriptionIndex] : '' })\r\n                    if (valueIndex) {\r\n                        this.selectedParameterCheckbox[parameter.id].push(temp[valueIndex])\r\n                    }\r\n                }\r\n            } else if (parameter.selectionType === 'TREE' && parameter.showOnPanel === 'true' && parameter.multivalue) {\r\n                parameter.parameterValue = parameter.driverDefaultValue?.map((el: { value: string; desc: string }) => {\r\n                    return { value: el.value, description: el.desc }\r\n                })\r\n            } else if (parameter.selectionType === 'TREE' && parameter.showOnPanel === 'true' && !parameter.multivalue) {\r\n                parameter.parameterValue[0] = { value: parameter.driverDefaultValue[0].value, description: parameter.driverDefaultValue[0].desc }\r\n            } else if ((parameter.selectionType === 'COMBOBOX' || parameter.selectionType === 'LOOKUP') && parameter.showOnPanel === 'true' && !parameter.multivalue) {\r\n                parameter.parameterValue[0] = { value: parameter.driverDefaultValue[0][valueIndex], description: parameter.driverDefaultValue[0][descriptionIndex] }\r\n            } else if (parameter.selectionType === 'LOOKUP' && parameter.showOnPanel === 'true' && parameter.multivalue) {\r\n                parameter.parameterValue = parameter.driverDefaultValue.map((el: any) => {\r\n                    return { value: valueIndex ? el[valueIndex] : '', description: descriptionIndex ? el[descriptionIndex] : '' }\r\n                })\r\n            } else if (parameter.type === 'DATE' && parameter.showOnPanel === 'true') {\r\n                if (parameter.driverDefaultValue[0].desc?.split('#')[0]) {\r\n                    parameter.parameterValue[0].value = this.getFormattedDate(parameter.driverDefaultValue[0].desc?.split('#')[0], undefined)\r\n                }\r\n            } else {\r\n                if (!parameter.parameterValue[0]) {\r\n                    parameter.parameterValue[0] = { value: '', description: '' }\r\n                }\r\n                parameter.parameterValue[0].value = parameter.driverDefaultValue[0].value ?? parameter.driverDefaultValue[0][valueIndex]\r\n            }\r\n            this.parameters.filterStatus.forEach((el: any) => this.updateDependency(el))\r\n        },\r\n        resetAllParameters() {\r\n            this.parameters.filterStatus.forEach((el: any) => this.resetParameterValue(el))\r\n            this.parameters.filterStatus.forEach((el: any) => this.updateDependency(el))\r\n        },\r\n        toggle(event: Event) {\r\n            this.createMenuItems()\r\n            const menu = this.$refs.executeButtonMenu as any\r\n            menu.toggle(event)\r\n        },\r\n        createMenuItems() {\r\n            this.executeMenuItems = []\r\n            this.executeMenuItems.push({ label: this.$t('common.exportCSV'), command: () => this.$emit('exportCSV') })\r\n        },\r\n        requiredFiledMissing() {\r\n            if (this.mode === 'qbeView' || this.mode === 'workspaceView') {\r\n                for (let i = 0; i < this.qbeParameters.length; i++) {\r\n                    if (!this.qbeParameters[i].value) {\r\n                        return true\r\n                    }\r\n                }\r\n            }\r\n\r\n            for (let i = 0; i < this.parameters.filterStatus.length; i++) {\r\n                const parameter = this.parameters.filterStatus[i]\r\n                if (parameter.mandatory && parameter.showOnPanel == 'true') {\r\n                    if (!parameter.parameterValue || parameter.parameterValue.length === 0) {\r\n                        return true\r\n                    } else {\r\n                        for (let i = 0; i < parameter.parameterValue.length; i++) {\r\n                            if (!parameter.parameterValue[i].value) {\r\n                                return true\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return false\r\n        },\r\n        setRadioButtonValue(parameter: iParameter) {\r\n            const index = parameter.data?.findIndex((el: any) => el.value === parameter.parameterValue[0].value)\r\n            if (index !== -1) parameter.parameterValue[0].description = parameter.data[index].description\r\n            this.updateDependency(parameter)\r\n        },\r\n        setCheckboxValue(parameter: iParameter) {\r\n            parameter.parameterValue = this.selectedParameterCheckbox[parameter.id].map((el: any) => {\r\n                return { value: el, description: el }\r\n            })\r\n            this.updateDependency(parameter)\r\n        },\r\n        openPopupDialog(parameter: iParameter) {\r\n            this.selectedParameter = parameter\r\n            this.getParameterPopupInfo(parameter)\r\n            this.popupDialogVisible = true\r\n        },\r\n        openTreeDialog(parameter: iParameter) {\r\n            this.selectedParameter = parameter\r\n            this.formatedParameterValues = this.getFormattedParameters()\r\n            this.treeDialogVisible = true\r\n        },\r\n        onTreeClose() {\r\n            this.selectedParameter = null\r\n            this.formatedParameterValues = null\r\n            this.treeDialogVisible = false\r\n        },\r\n        async getParameterPopupInfo(parameter: iParameter) {\r\n            this.loading = true\r\n            const role = this.sessionRole && this.sessionRole !== this.$t('role.defaultRolePlaceholder') ? this.sessionRole : this.role\r\n            const postData = { label: this.document?.label, parameters: this.getFormattedParameters(), paramId: parameter.urlName, role: role }\r\n\r\n            let url = '2.0/documentExeParameters/admissibleValues'\r\n            if (this.mode !== 'execution' && this.document) {\r\n                url = this.document.type === 'businessModel' ? `1.0/businessmodel/${this.document.name}/admissibleValues` : `/3.0/datasets/${this.document.label}/admissibleValues`\r\n            }\r\n\r\n            await this.$http\r\n                .post(import.meta.env.VITE_RESTFUL_SERVICES_PATH + url, postData)\r\n                .then((response: AxiosResponse<any>) => (this.parameterPopUpData = response.data))\r\n                .catch((error: any) => console.log('ERROR: ', error))\r\n            this.loading = false\r\n        },\r\n        getFormattedParameters() {\r\n            let parameters = [] as any[]\r\n            Object.keys(this.parameters.filterStatus).forEach((key: any) => {\r\n                const parameter = this.parameters.filterStatus[key]\r\n                if (!parameter.multivalue) {\r\n                    parameters.push({ label: parameter.label, value: parameter.parameterValue[0].value, description: parameter.parameterValue[0].description ?? '' })\r\n                } else {\r\n                    parameters.push({ label: parameter.label, value: parameter.parameterValue?.map((el: any) => el.value), description: parameter.parameterDescription ?? '' })\r\n                }\r\n            })\r\n            return parameters\r\n        },\r\n        getParameterValues() {\r\n            let parameters = {} as any\r\n            Object.keys(this.parameters.filterStatus).forEach((key: any) => {\r\n                const parameter = this.parameters.filterStatus[key]\r\n                if (parameter.type === 'DATE') {\r\n                    parameters[parameter.urlName] = parameter.parameterValue[0].value\r\n                    parameters[parameter.urlName + '_field_visible_description'] = parameter.parameterValue[0].value\r\n                } else if (parameter.valueSelection === 'man_in' && !parameter.multivalue) {\r\n                    parameters[parameter.urlName] = parameter.type === 'NUM' ? +parameter.parameterValue[0].value : parameter.parameterValue[0].value\r\n                    parameters[parameter.urlName + '_field_visible_description'] = parameter.type === 'NUM' ? +parameter.parameterValue[0].description : parameter.parameterValue[0].description\r\n                } else if (parameter.selectionType === 'TREE' || parameter.selectionType === 'LOOKUP' || parameter.multivalue) {\r\n                    parameters[parameter.urlName] = parameter.parameterValue.map((el: any) => el.value)\r\n                    let tempString = ''\r\n                    for (let i = 0; i < parameter.parameterValue.length; i++) {\r\n                        tempString += parameter.parameterValue[i].description\r\n                        tempString += i === parameter.parameterValue.length - 1 ? '' : ';'\r\n                    }\r\n                    parameters[parameter.urlName + '_field_visible_description'] = tempString\r\n                } else {\r\n                    parameters[parameter.urlName] = parameter.parameterValue[0].value\r\n                    parameters[parameter.urlName + '_field_visible_description'] = parameter.parameterValue[0].description\r\n                }\r\n            })\r\n            return parameters\r\n        },\r\n        onPopupSave(parameter: iParameter) {\r\n            this.updateDependency(parameter)\r\n            this.popupDialogVisible = false\r\n        },\r\n        onTreeSave(parameter: iParameter) {\r\n            this.updateVisualDependency(parameter)\r\n            this.treeDialogVisible = false\r\n        },\r\n        updateDependency(parameter: iParameter) {\r\n            const role = this.sessionRole && this.sessionRole !== this.$t('role.defaultRolePlaceholder') ? this.sessionRole : this.role\r\n            this.updateVisualDependency(parameter)\r\n            updateDataDependency(this.parameters, parameter, this.loading, this.document, role, this.$http, this.mode)\r\n            updateLovDependency(this.parameters, parameter, this.loading, this.document, role, this.$http, this.mode)\r\n            this.$emit('parametersChanged', { parameters: this.parameters, document: this.propDocument })\r\n        },\r\n        openSaveParameterDialog() {\r\n            this.parameterSaveDialogVisible = true\r\n        },\r\n        async saveViewpoint(viewpoint: any) {\r\n            const role = this.sessionRole && this.sessionRole !== this.$t('role.defaultRolePlaceholder') ? this.sessionRole : this.role\r\n\r\n            if (!role) return\r\n\r\n            const postData = { ...viewpoint, OBJECT_LABEL: this.document?.label, ROLE: role, VIEWPOINT: this.getParameterValues() }\r\n            this.loading = true\r\n            await this.$http\r\n                .post(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `1.0/documentviewpoint/addViewpoint`, postData)\r\n                .then(() => {\r\n                    this.store.setInfo({\r\n                        title: this.$t('common.toast.createTitle'),\r\n                        msg: this.$t('common.toast.success')\r\n                    })\r\n                    this.parameterSaveDialogVisible = false\r\n                })\r\n                .catch(() => {})\r\n            this.loading = false\r\n        },\r\n        async openSavedParametersDialog() {\r\n            const role = this.sessionRole && this.sessionRole !== this.$t('role.defaultRolePlaceholder') ? this.sessionRole : this.role\r\n            if (!role) return\r\n            this.loading = true\r\n            await this.$http.get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `1.0/documentviewpoint/getViewpoints?label=${this.document?.label}&role=${role}`).then((response: AxiosResponse<any>) => {\r\n                this.viewpoints = response.data.viewpoints\r\n                this.savedParametersDialogVisible = true\r\n            })\r\n            this.loading = false\r\n        },\r\n        fillParameterForm(viewpoint: any) {\r\n            const tempParameters = this.decodeViewpointPrameterValues(viewpoint.vpValueParams)\r\n\r\n            Object.keys(tempParameters)?.forEach((key: any) => {\r\n                const index = this.parameters.filterStatus.findIndex((el: any) => el.urlName === key)\r\n                if (index !== -1) {\r\n                    const parameter = this.parameters.filterStatus[index]\r\n                    if (parameter.type === 'DATE') {\r\n                        const temp = new Date(tempParameters[key])\r\n                        parameter.parameterValue[0].value = temp instanceof Date && !isNaN(temp as any) ? temp : this.getFormattedDate(tempParameters[key], 'DD/MM/YYYY')\r\n                        parameter.parameterValue[0].value = temp as any\r\n                    } else if ((parameter.valueSelection === 'man_in' || parameter.selectionType === 'COMBOBOX') && !parameter.multivalue) {\r\n                        parameter.parameterValue[0].value = tempParameters[key]\r\n                        parameter.parameterValue[0].description = tempParameters[key + '_field_visible_description']\r\n                    } else if (parameter.selectionType === 'TREE' || parameter.selectionType === 'LOOKUP' || parameter.multivalue) {\r\n                        const tempArrayValues = JSON.parse(tempParameters[key])\r\n                        const tempArrayDescriptions = tempParameters[key + '_field_visible_description'].split(';')\r\n                        parameter.parameterValue = []\r\n                        for (let i = 0; i < tempArrayValues.length; i++) {\r\n                            parameter.parameterValue[i] = { value: tempArrayValues[i], description: tempArrayDescriptions[i] ?? '' }\r\n                        }\r\n                        if (parameter.selectionType === 'LIST') {\r\n                            this.selectedParameterCheckbox[parameter.id] = parameter.parameterValue?.map((parameterValue: any) => parameterValue.value)\r\n                        }\r\n                    } else {\r\n                        parameter.parameterValue[0].value = tempParameters[key]\r\n                        parameter.parameterValue[0].description = tempParameters[key + '_field_visible_description']\r\n                    }\r\n                }\r\n                this.savedParametersDialogVisible = false\r\n            })\r\n        },\r\n        getFormattedDate(date: any, format: any) {\r\n            return formatDate(date, 'l', format)\r\n        },\r\n        decodeViewpointPrameterValues(string: string) {\r\n            const parametersJson = {}\r\n            const parameterArray = string.split('%26')\r\n            for (let i = 0; i < parameterArray.length; i++) {\r\n                const temp = parameterArray[i].split('%3D')\r\n                parametersJson[temp[0]] = temp[1]\r\n            }\r\n            return parametersJson\r\n        },\r\n        executeViewpoint(viewpoint: any) {\r\n            this.fillParameterForm(viewpoint)\r\n            this.$emit('execute')\r\n            this.savedParametersDialogVisible = false\r\n        },\r\n        async deleteViewpoint(viewpoint: any) {\r\n            this.loading = true\r\n            await this.$http\r\n                .post(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `1.0/documentviewpoint/deleteViewpoint`, { VIEWPOINT: '' + viewpoint.vpId })\r\n                .then(async () => {\r\n                    this.removeViewpoint(viewpoint)\r\n                    this.store.setInfo({\r\n                        title: this.$t('common.toast.deleteTitle'),\r\n                        msg: this.$t('common.toast.deleteSuccess')\r\n                    })\r\n                })\r\n                .catch(() => {})\r\n            this.loading = false\r\n        },\r\n        removeViewpoint(viewpoint: any) {\r\n            const index = this.viewpoints.findIndex((el: any) => el.vpId === viewpoint.vpId)\r\n            if (index !== -1) this.viewpoints.splice(index, 1)\r\n        },\r\n        loadMode() {\r\n            this.mode = this.propMode ? this.propMode : 'execution'\r\n        },\r\n        loadQBEParameters() {\r\n            this.qbeParameters = []\r\n            this.propQBEParameters?.forEach((parameter: any) => {\r\n                if (parameter.multiValue && parameter.defaultValue && !Array.isArray(parameter.defaultValue)) {\r\n                    parameter.defaultValue = parameter.defaultValue?.split(',').map((el: any) => el.trim())\r\n                }\r\n                if (!parameter.value) parameter.value = parameter.defaultValue\r\n                this.qbeParameters.push(parameter)\r\n            })\r\n        },\r\n        onDropdownChange(parameter: any) {\r\n            this.updateParameterDescriptionOnDropdownChange(parameter)\r\n            this.updateDependency(parameter)\r\n        },\r\n        updateParameterDescriptionOnDropdownChange(parameter: any) {\r\n            if (!parameter.parameterValue[0]) return\r\n            const index = parameter.data?.findIndex((el: { value: string; description: string }) => el.value === parameter.parameterValue[0].value)\r\n            if (index !== -1) parameter.parameterValue[0].description = parameter.data[index].description\r\n        }\r\n    }\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n#kn-parameter-sidebar-toolbar .p-toolbar-group-left {\r\n    width: 100%;\r\n}\r\n#kn-parameter-sidebar-toolbar-icons-container {\r\n    width: 100%;\r\n}\r\n#kn-parameter-sidebar {\r\n    z-index: 100;\r\n    background-color: white;\r\n    height: 100%;\r\n    min-height: 0;\r\n    width: 350px;\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    display: flex;\r\n    flex-direction: column;\r\n    font-size: 0.9rem;\r\n    border-left: 1px solid var(--kn-color-borders);\r\n    .kn-parameter-sidebar-content {\r\n        min-height: 0;\r\n        flex: 1;\r\n        overflow: auto;\r\n        position: relative;\r\n        .p-field {\r\n            label {\r\n                padding: 4px 0;\r\n            }\r\n            display: flex;\r\n            flex-direction: column;\r\n            min-height: 70px;\r\n            .inputScrollPanel {\r\n                height: 150px;\r\n            }\r\n            .lookupScrollPanel {\r\n                height: 50px;\r\n            }\r\n            .p-flex-row {\r\n                min-height: 0;\r\n                flex: 1;\r\n            }\r\n        }\r\n    }\r\n    &.kn-parameter-sidebar-west {\r\n        right: unset;\r\n        border-left: unset;\r\n        border-right: 1px solid var(--kn-color-borders);\r\n    }\r\n    &.kn-parameter-sidebar-north {\r\n        right: unset;\r\n        border-left: unset;\r\n        border-bottom: 1px solid var(--kn-color-borders);\r\n        width: 100%;\r\n        height: 200px;\r\n        .kn-parameter-sidebar-content {\r\n            display: flex;\r\n            flex-direction: row;\r\n            overflow-y: clip;\r\n            .p-field {\r\n                margin: 0 !important;\r\n                min-width: 300px;\r\n                max-width: 300px;\r\n                .inputScrollPanel,\r\n                .lookupScrollPanel {\r\n                    height: 75px;\r\n                }\r\n                .p-flex-row,\r\n                .p-flex-column {\r\n                    overflow-y: auto;\r\n                    overflow-x: clip;\r\n                    max-height: 79px;\r\n                }\r\n            }\r\n        }\r\n\r\n        .kn-parameter-sidebar-buttons {\r\n            justify-content: flex-end;\r\n            .kn-button {\r\n                width: auto;\r\n            }\r\n        }\r\n    }\r\n    &.kn-parameter-sidebar-south {\r\n        right: unset;\r\n        top: unset;\r\n        bottom: 0;\r\n        border-left: unset;\r\n        border-top: 1px solid var(--kn-color-borders);\r\n        width: 100%;\r\n        height: 200px;\r\n        .kn-parameter-sidebar-content {\r\n            display: flex;\r\n            flex-direction: row;\r\n            overflow-y: clip;\r\n            .p-field {\r\n                margin: 0 !important;\r\n                min-width: 300px;\r\n                max-width: 300px;\r\n                .inputScrollPanel,\r\n                .lookupScrollPanel {\r\n                    height: 75px;\r\n                }\r\n                .p-flex-row,\r\n                .p-flex-column {\r\n                    overflow-y: auto;\r\n                    overflow-x: clip;\r\n                    max-height: 79px;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    .parameter-clear-icon {\r\n        margin-left: auto;\r\n        line-height: 22px;\r\n    }\r\n    .p-calendar {\r\n        background-color: transparent;\r\n    }\r\n    .p-field-radiobutton {\r\n        font-size: 1rem;\r\n        margin: 0.1rem;\r\n        width: calc(100% - 3px);\r\n        height: 15px;\r\n        .p-radiobutton {\r\n            width: 15px;\r\n            height: 15px;\r\n            .p-radiobutton-box {\r\n                width: 15px;\r\n                height: 15px;\r\n                .p-radiobutton-icon {\r\n                    width: 5px;\r\n                    height: 5px;\r\n                }\r\n            }\r\n        }\r\n        .p-checkbox {\r\n            width: 15px;\r\n            height: 15px;\r\n            .p-checkbox-box {\r\n                width: 15px;\r\n                height: 15px;\r\n                .p-checkbox-icon {\r\n                    width: 5px;\r\n                    height: 5px;\r\n                    &.pi-check::before {\r\n                        top: 4px;\r\n                        left: -1px;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    .p-dropdown {\r\n        background-color: transparent;\r\n        font-size: 0.9rem;\r\n    }\r\n    .p-inputtext {\r\n        padding: 0.5rem 0.5rem;\r\n        background-color: transparent;\r\n        &.p-inputtext-sm {\r\n            padding: 0.5rem 0.5rem;\r\n        }\r\n    }\r\n    .parameterValueChip {\r\n        font-size: 0.9rem;\r\n        margin: 2px;\r\n    }\r\n}\r\n</style>\r\n"],"names":["getFormattedParameters","formatParameterAfterDataDependencyCheck","formatParameterDataOptions","_sfc_main","Column","DataTable","Message","_hoisted_2","_openBlock","_createBlock","_withCtx","_createVNode","_normalizeStyle","_createElementVNode","_hoisted_1","_hoisted_3","_createCommentVNode","_createElementBlock","_Fragment","_renderList","Dialog","Checkbox","Tree","_toDisplayString","Dropdown","useValidate","_hoisted_4","_hoisted_5","_hoisted_7","_hoisted_9","_hoisted_10","_hoisted_13","_hoisted_15","_normalizeClass","_hoisted_6","_hoisted_8","_hoisted_11","_hoisted_12","_hoisted_14","_popScopeId","_withDirectives","_withModifiers","Calendar","Chip","Chips","Menu","MultiSelect","RadioButton","ScrollPanel","mainStore","_createTextVNode"],"mappings":"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"}