{"version":3,"file":"Olap-345cdd86.js","sources":["../../../../modules/documentExecution/olap/olapSidebar/OlapSidebar.vue","../../../../modules/documentExecution/olap/sortingDialog/OlapSortingDialog.vue","../../../../modules/documentExecution/olap/customView/OlapCustomViewTable.vue","../../../../modules/documentExecution/olap/customViewSaveDialog/OlapCustomViewSaveDialog.vue","../../../../modules/documentExecution/olap/mdxQueryDialog/OlapMDXQueryDialog.vue","../../../../modules/documentExecution/olap/filterPanel/OlapFilterCard.vue","../../../../modules/documentExecution/olap/filterPanel/OlapFilterPanel.vue","../../../../modules/documentExecution/olap/filterToolbar/OlapTopFilterToolbar.vue","../../../../modules/documentExecution/olap/filterToolbar/OlapLeftFilterToolbar.vue","../../../../modules/documentExecution/olap/crossNavigationDefinition/OlapCrossNavigationStepOne.vue","../../../../modules/documentExecution/olap/crossNavigationDefinition/OlapCrossNavigationStepTwo.vue","../../../../modules/documentExecution/olap/crossNavigationDefinition/OlapCrossNavigationDefinitionDialog.vue","../../../../modules/documentExecution/olap/buttonWizard/OlapButtonWizardDialog.vue","../../../../modules/documentExecution/olap/multiHierarchyDialog/OlapMultiHierarchyDialog.vue","../../../../modules/documentExecution/olap/drillThroughDialog/OlapDrillThroughDialog.vue","../../../../modules/documentExecution/olap/outputWizard/OlapOutputWizard.vue","../../../../modules/documentExecution/olap/scenarioWizard/OlapScenarioWizard.vue","../../../../modules/documentExecution/olap/filterDialog/OlapFilterTree.vue","../../../../modules/documentExecution/olap/filterDialog/OlapFilterTable.vue","../../../../modules/documentExecution/olap/filterDialog/OlapFilterDialog.vue","../../../../modules/documentExecution/olap/newVersionDialog/OlapSaveNewVersionDialog.vue","../../../../modules/documentExecution/olap/algorithmDialog/OlapAlgorithmDialog.vue","../../../../modules/documentExecution/olap/deleteVersionsDialog/OlapDeleteVersionsDialog.vue","../../../../modules/documentExecution/olap/Olap.vue"],"sourcesContent":["<template>\r\n    <div id=\"olap-sidebar\">\r\n        <Toolbar id=\"kn-parameter-sidebar-toolbar\" class=\"kn-toolbar kn-toolbar--secondary\">\r\n            <template #start>\r\n                {{ $t('common.settings') }}\r\n            </template>\r\n        </Toolbar>\r\n\r\n        <div v-if=\"olap\" class=\"p-d-flex p-flex-column kn-flex p-m-3\">\r\n            <div>\r\n                <label class=\"kn-material-input-label\">{{ $t('documentExecution.olap.sidebar.drillOnDimension') }}</label>\r\n                <SelectButton class=\"p-mt-2\" v-model=\"drillOn\" :options=\"olapSidebarDescriptor.drillOnOptions\" @click=\"$emit('drillTypeChanged', drillOn)\"></SelectButton>\r\n            </div>\r\n            <div v-if=\"!olapDesignerMode\" class=\"kn-flex-0\">\r\n                <div v-if=\"isButtonVisible('BUTTON_DRILL_THROUGH')\" class=\"p-d-flex p-flex-column p-my-3\">\r\n                    <label class=\"kn-material-input-label\">{{ $t('documentExecution.olap.sidebar.drillOnData') }}</label>\r\n                    <Button class=\"p-button-sm kn-button kn-button--secondary p-as-center p-mt-2\" :class=\"{ 'olap-sidebar-button-active': enableDrillThrough }\" :label=\"$t('documentExecution.olap.sidebar.drillThrough')\" @click=\"onDrillThroughClick\" />\r\n                </div>\r\n\r\n                <div>\r\n                    <label v-if=\"isButtonVisible('BUTTON_MDX') || isButtonVisible('BUTTON_FLUSH_CACHE') || olap.modelConfig.crossNavigation\" class=\"kn-material-input-label\">{{ $t('documentExecution.olap.sidebar.olapFunctions') }}</label>\r\n                    <div class=\"p-grid p-mt-1\">\r\n                        <div class=\"p-col-4\">\r\n                            <Button icon=\"far fa-eye\" class=\"p-button-plain kn-button--secondary\" v-tooltip.top=\"$t('documentExecution.olap.sidebar.mdxQuery')\" v-if=\"isButtonVisible('BUTTON_MDX')\" @click=\"$emit('openMdxQueryDialog')\" />\r\n                        </div>\r\n                        <div class=\"p-col-4\">\r\n                            <Button icon=\"fas fa-sync-alt\" class=\"p-button-plain kn-button--secondary\" v-tooltip.top=\"$t('documentExecution.olap.sidebar.reloadSchema')\" v-if=\"isButtonVisible('BUTTON_FLUSH_CACHE')\" @click=\"$emit('reloadSchema')\" />\r\n                        </div>\r\n                        <div class=\"p-col-4\">\r\n                            <Button v-if=\"olap.modelConfig.crossNavigation\" icon=\"fas fa-arrow-right\" class=\"p-button-plain kn-button--secondary\" v-tooltip.top=\"$t('documentExecution.olap.sidebar.enableCrossNavigation')\" @click=\"onEnableCrossNavigationClick\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"p-my-3\">\r\n                    <label v-if=\"tableFunctionsVisible\" class=\"kn-material-input-label\">{{ $t('documentExecution.olap.sidebar.tableFunctions') }}</label>\r\n                    <div class=\"p-grid p-mt-1\">\r\n                        <div class=\"p-col-4\">\r\n                            <Button\r\n                                icon=\"far fa-caret-square-up\"\r\n                                class=\"p-button-plain kn-button--secondary\"\r\n                                :class=\"{ 'olap-sidebar-button-active': showParentMembers }\"\r\n                                v-tooltip.top=\"$t('documentExecution.olap.sidebar.showParentMembers')\"\r\n                                v-if=\"isButtonVisible('BUTTON_FATHER_MEMBERS')\"\r\n                                @click=\"onShowParentMemberClick\"\r\n                            />\r\n                        </div>\r\n                        <div class=\"p-col-4\">\r\n                            <Button icon=\"fas fa-eye-slash\" class=\"p-button-plain kn-button--secondary\" :class=\"{ 'olap-sidebar-button-active': hideSpans }\" v-tooltip.top=\"$t('documentExecution.olap.sidebar.hideSpans')\" v-if=\"isButtonVisible('BUTTON_HIDE_SPANS')\" @click=\"onHideSpansClick\" />\r\n                        </div>\r\n                        <div class=\"p-col-4\">\r\n                            <Button icon=\"fas fa-sort-amount-down-alt\" class=\"p-button-plain kn-button--secondary\" v-tooltip.top=\"$t('documentExecution.olap.sidebar.sortingSettings')\" v-if=\"isButtonVisible('BUTTON_SORTING_SETTINGS')\" @click=\"$emit('openSortingDialog')\" />\r\n                        </div>\r\n                        <div class=\"p-col-4\">\r\n                            <Button\r\n                                icon=\"fas fa-cogs\"\r\n                                class=\"p-button-plain kn-button--secondary\"\r\n                                :class=\"{ 'olap-sidebar-button-active': showProperties }\"\r\n                                v-tooltip.top=\"$t('documentExecution.olap.sidebar.showProperties')\"\r\n                                v-if=\"isButtonVisible('BUTTON_SHOW_PROPERTIES')\"\r\n                                @click=\"onShowPropertiesClick\"\r\n                            />\r\n                        </div>\r\n                        <div class=\"p-col-4\">\r\n                            <Button\r\n                                icon=\"fas fa-border-none\"\r\n                                class=\"p-button-plain kn-button--secondary\"\r\n                                :class=\"{ 'olap-sidebar-button-active': suppressEmpty }\"\r\n                                v-tooltip.top=\"$t('documentExecution.olap.sidebar.suppressEmptyRowsColumns')\"\r\n                                v-if=\"isButtonVisible('BUTTON_HIDE_EMPTY')\"\r\n                                @click=\"onSuppressRowsColumnsClick\"\r\n                            />\r\n                        </div>\r\n                        <div class=\"p-col-4\">\r\n                            <Button icon=\"fas fa-save\" class=\"p-button-plain kn-button--secondary\" v-tooltip.top=\"$t('documentExecution.olap.sidebar.saveCustomizedView')\" v-if=\"isButtonVisible('BUTTON_SAVE_SUBOBJECT')\" @click=\"$emit('openCustomViewDialog')\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div v-if=\"olapHasScenario && !olapDesignerMode\" id=\"whatif-container\" class=\"kn-flex\">\r\n                <label class=\"kn-material-input-label\">{{ $t('documentExecution.olap.sidebar.whatIfTitle') }}</label>\r\n                <div class=\"p-grid p-mt-1\">\r\n                    <div v-if=\"olapLocked\" class=\"p-col-4\">\r\n                        <Button :icon=\"olapLocked ? 'fas fa-lock-open' : 'fas fa-lock'\" class=\"p-button-plain kn-button--secondary\" v-tooltip.top=\"olapLocked ? $t('documentExecution.olap.sidebar.unlockSchema') : $t('documentExecution.olap.sidebar.lockSchema')\" @click=\"changeLock\" />\r\n                    </div>\r\n                    <div v-if=\"olapLocked\" class=\"p-col-4\">\r\n                        <Button icon=\"fa-solid fa-floppy-disk\" class=\"p-button-plain kn-button--secondary\" v-tooltip.top=\"$t('documentExecution.olap.sidebar.saveAsNewVersion')\" v-if=\"isButtonVisible('BUTTON_SAVE_SUBOBJECT')\" @click=\"$emit('showSaveAsNewVersion')\" />\r\n                    </div>\r\n                    <div v-if=\"olapLocked\" class=\"p-col-4\">\r\n                        <Button icon=\"fa-solid fa-rotate-left\" class=\"p-button-plain kn-button--secondary\" v-tooltip.top=\"$t('documentExecution.olap.sidebar.undo')\" v-if=\"isButtonVisible('BUTTON_UNDO')\" @click=\"$emit('undo')\" />\r\n                    </div>\r\n                    <div v-if=\"olapLocked\" class=\"p-col-4\">\r\n                        <Button icon=\"fa-solid fa-trash\" class=\"p-button-plain kn-button--secondary\" v-tooltip.top=\"$t('documentExecution.olap.sidebar.deleteVersions')\" v-if=\"isButtonVisible('BUTTON_VERSION_MANAGER')\" @click=\"$emit('showDeleteVersions')\" />\r\n                    </div>\r\n                    <div class=\"p-col-4\">\r\n                        <Button icon=\"fa-solid fa-share-from-square\" class=\"p-button-plain kn-button--secondary\" v-tooltip.top=\"$t('documentExecution.olap.sidebar.outputWizard')\" v-if=\"isButtonVisible('BUTTON_EXPORT_OUTPUT')\" @click=\"$emit('showOutputWizard')\" />\r\n                    </div>\r\n                    <div v-if=\"olapLocked\" class=\"p-col-4\">\r\n                        <Button icon=\"fa-solid fa-network-wired\" class=\"p-button-plain kn-button--secondary\" v-tooltip.top=\"$t('documentExecution.olap.sidebar.alg')\" v-if=\"isButtonVisible('BUTTON_ALGORITHMS')\" @click=\"$emit('showAlgorithmDialog')\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div v-if=\"olapDesignerMode\" class=\"kn-flex p-mt-3\">\r\n                <label class=\"kn-material-input-label\">{{ $t('documentExecution.olap.sidebar.templateEditing') }}</label>\r\n                <div class=\"p-grid p-mt-1\">\r\n                    <div class=\"p-col-4\">\r\n                        <Button icon=\"far fa-eye\" class=\"p-button-plain kn-button--secondary\" v-tooltip.top=\"$t('documentExecution.olap.sidebar.mdxQuery')\" @click=\"$emit('openMdxQueryDialog')\" />\r\n                    </div>\r\n                    <div v-if=\"whatIfMode\" class=\"p-col-4\">\r\n                        <Button icon=\"fa-solid fa-note-sticky\" class=\"p-button-plain kn-button--secondary\" v-tooltip.top=\"$t('documentExecution.olap.sidebar.scenario')\" @click=\"$emit('showScenarioWizard')\" />\r\n                    </div>\r\n                    <div class=\"p-col-4\">\r\n                        <Button icon=\"fas fa-arrow-right\" class=\"p-button-plain kn-button--secondary\" :class=\"{ 'olap-sidebar-button-active': crossNavigation }\" v-tooltip.top=\"$t('documentExecution.olap.sidebar.defineCrossNavigation')\" @click=\"$emit('openCrossNavigationDefinitionDialog')\" />\r\n                    </div>\r\n                    <div class=\"p-col-4\">\r\n                        <Button icon=\"far fa-check-square\" class=\"p-button-plain kn-button--secondary\" v-tooltip.top=\"$t('documentExecution.olap.sidebar.configureButtonsVisiblity')\" @click=\"$emit('openButtonWizardDialog')\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"p-fluid\" v-if=\"olapDesignerMode\">\r\n                <Button :label=\"$t('documentExecution.olap.sidebar.closeDesigner')\" class=\"p-button-plain kn-button--secondary\" @click=\"closeOlapDesigner\" />\r\n                <Button :label=\"$t('documentExecution.olap.sidebar.saveTemplate')\" class=\"p-button-plain kn-button--primary p-mt-2\" @click=\"$emit('saveOlapDesigner')\" />\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport { AxiosResponse } from 'axios'\r\nimport olapSidebarDescriptor from './OlapSidebarDescriptor.json'\r\nimport SelectButton from 'primevue/selectbutton'\r\nimport mainStore from '../../../../App.store'\r\n\r\nexport default defineComponent({\r\n    name: 'olap-sidebar',\r\n    components: { SelectButton },\r\n    props: { olap: { type: Object }, olapDesignerMode: { type: Boolean }, propButtons: { type: Array }, whatIfMode: { type: Boolean }, olapHasScenario: { type: Boolean } },\r\n    emits: [\r\n        'openCustomViewDialog',\r\n        'drillTypeChanged',\r\n        'showParentMemberChanged',\r\n        'hideSpansChanged',\r\n        'suppressEmptyChanged',\r\n        'showPropertiesChanged',\r\n        'openSortingDialog',\r\n        'openMdxQueryDialog',\r\n        'reloadSchema',\r\n        'enableCrossNavigation',\r\n        'openCrossNavigationDefinitionDialog',\r\n        'openButtonWizardDialog',\r\n        'drillThroughChanged',\r\n        'saveOlapDesigner',\r\n        'showOutputWizard',\r\n        'showScenarioWizard',\r\n        'showSaveAsNewVersion',\r\n        'undo',\r\n        'showAlgorithmDialog',\r\n        'showDeleteVersions',\r\n        'loading',\r\n        'exportExcel'\r\n    ],\r\n    computed: {\r\n        tableFunctionsVisible(): boolean {\r\n            return (\r\n                this.isButtonVisible('BUTTON_FATHER_MEMBERS') ||\r\n                this.isButtonVisible('BUTTON_HIDE_SPANS') ||\r\n                this.isButtonVisible('BUTTON_SORTING_SETTINGS') ||\r\n                this.isButtonVisible('BUTTON_SHOW_PROPERTIES') ||\r\n                this.isButtonVisible('BUTTON_HIDE_EMPTY') ||\r\n                this.isButtonVisible('BUTTON_SAVE_SUBOBJECT')\r\n            )\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            olapSidebarDescriptor,\r\n            buttons: [] as any[],\r\n            drillOn: 'position',\r\n            enableDrillThrough: false,\r\n            showParentMembers: false,\r\n            hideSpans: false,\r\n            suppressEmpty: false,\r\n            showProperties: false,\r\n            crossNavigation: false,\r\n            mode: 'designer',\r\n            olapLocked: false\r\n        }\r\n    },\r\n    watch: {\r\n        propButtons() {\r\n            this.loadButtons()\r\n        },\r\n        olap() {\r\n            this.loadOlapModelConfigValues()\r\n        }\r\n    },\r\n    setup() {\r\n        const store = mainStore()\r\n        return { store }\r\n    },\r\n\r\n    created() {\r\n        this.loadButtons()\r\n        this.loadOlapModelConfigValues()\r\n    },\r\n    methods: {\r\n        loadButtons() {\r\n            this.buttons = this.propButtons as any[]\r\n        },\r\n        isButtonVisible(buttonName: string) {\r\n            let isVisible = false\r\n            const index = this.olap?.modelConfig.toolbarVisibleButtons?.findIndex((el: any) => el === buttonName)\r\n            if (index !== -1) isVisible = true\r\n\r\n            return isVisible\r\n        },\r\n        loadOlapModelConfigValues() {\r\n            if (this.olap) {\r\n                this.drillOn = this.olap.modelConfig.drillType\r\n                this.enableDrillThrough = this.olap.modelConfig.enableDrillThrough\r\n                this.showParentMembers = this.olap.modelConfig.showParentMembers\r\n                this.hideSpans = this.olap.modelConfig.hideSpans\r\n                this.suppressEmpty = this.olap.modelConfig.suppressEmpty\r\n                this.showProperties = this.olap.modelConfig.showProperties\r\n                this.crossNavigation = this.olap.modelConfig?.crossNavigation?.buttonClicked\r\n                this.olapLocked = this.olap.modelConfig?.status === 'locked_by_user'\r\n            }\r\n        },\r\n        onDrillThroughClick() {\r\n            this.enableDrillThrough = !this.enableDrillThrough\r\n            this.$emit('drillThroughChanged', this.enableDrillThrough)\r\n        },\r\n        onShowParentMemberClick() {\r\n            this.showParentMembers = !this.showParentMembers\r\n            this.$emit('showParentMemberChanged', this.showParentMembers)\r\n        },\r\n        onHideSpansClick() {\r\n            this.hideSpans = !this.hideSpans\r\n            this.$emit('hideSpansChanged', this.hideSpans)\r\n        },\r\n        onSuppressRowsColumnsClick() {\r\n            this.suppressEmpty = !this.suppressEmpty\r\n            this.$emit('suppressEmptyChanged', this.suppressEmpty)\r\n        },\r\n        onShowPropertiesClick() {\r\n            this.showProperties = !this.showProperties\r\n            this.$emit('showPropertiesChanged', this.showProperties)\r\n        },\r\n        onEnableCrossNavigationClick() {\r\n            this.crossNavigation = !this.crossNavigation\r\n            this.$emit('enableCrossNavigation', this.crossNavigation)\r\n        },\r\n        closeOlapDesigner() {\r\n            this.$router.push('/document-browser')\r\n        },\r\n        async changeLock() {\r\n            if (!this.olap) return\r\n            this.$emit('loading', true)\r\n            await this.$http\r\n                .post(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `1.0/locker/${this.olap.modelConfig.artifactId}`, null, { headers: { Accept: 'application/json, text/plain, */*', 'Content-Type': 'application/json;charset=UTF-8', 'X-Disable-Errors': 'true' } })\r\n                .then((response: AxiosResponse<any>) => {\r\n                    if ((response.data.status === 'unlocked' || response.data.status === 'locked_by_user' || response.data.status === 'locked_by_other') && this.olap) {\r\n                        this.store.setInfo({\r\n                            msg: this.$t('common.toast.success')\r\n                        })\r\n                        this.olapLocked = true\r\n                    }\r\n                })\r\n                .catch(() => {})\r\n            this.$emit('loading', false)\r\n        }\r\n    }\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n#olap-sidebar {\r\n    z-index: 100;\r\n    background-color: white;\r\n    height: 100%;\r\n    width: 250px;\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    display: flex;\r\n    flex-direction: column;\r\n}\r\n.olap-sidebar-button-active {\r\n    background-color: #43749e !important;\r\n}\r\n.olap-sidebar-button-active:hover {\r\n    color: white !important;\r\n}\r\n</style>\r\n","<template>\r\n    <Dialog id=\"olap-sorting-dialog\" class=\"p-fluid kn-dialog--toolbar--primary\" :style=\"olapSortingDialogDescriptor.dialog.style\" :visible=\"visible\" :modal=\"true\" :closable=\"false\">\r\n        <template #header>\r\n            <Toolbar class=\"kn-toolbar kn-toolbar--primary p-p-0 p-m-2 p-col-12\">\r\n                <template #start>\r\n                    {{ $t('documentExecution.olap.sidebar.sortingSettings') }}\r\n                </template>\r\n            </Toolbar>\r\n        </template>\r\n\r\n        <div v-if=\"olap\" class=\"p-m-4\">\r\n            <div class=\"p-field-radiobutton\" v-for=\"(mode, index) in olapSortingDialogDescriptor.sortingModes\" :key=\"index\">\r\n                <RadioButton name=\"sorting\" :value=\"mode\" v-model=\"sortingMode\" />\r\n                <label>{{ mode }}</label>\r\n            </div>\r\n\r\n            <div class=\"p-field\" v-if=\"sortingMode === 'count'\">\r\n                <span class=\"p-float-label\">\r\n                    <InputText id=\"sortingCount\" type=\"number\" class=\"kn-material-input\" v-model.trim=\"sortingCount\" :min=\"1\" />\r\n                </span>\r\n            </div>\r\n        </div>\r\n\r\n        <template #footer>\r\n            <Button class=\"kn-button kn-button--primary\" @click=\"save\"> {{ $t('common.save') }}</Button>\r\n        </template>\r\n    </Dialog>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import { defineComponent, PropType } from 'vue'\r\n    import { iOlap } from '../Olap'\r\n    import Dialog from 'primevue/dialog'\r\n    import olapSortingDialogDescriptor from './OlapSortingDialogDescriptor.json'\r\n    import RadioButton from 'primevue/radiobutton'\r\n\r\n    export default defineComponent({\r\n        name: 'olap-custom-view-save-dialog',\r\n        components: { Dialog, RadioButton },\r\n        props: { sbiExecutionId: { type: String }, olap: { type: Object as PropType<iOlap> } },\r\n        emits: ['save'],\r\n        data() {\r\n            return {\r\n                olapSortingDialogDescriptor,\r\n                sortingMode: 'no sorting',\r\n                sortingCount: 10\r\n            }\r\n        },\r\n        created() {},\r\n        methods: {\r\n            save() {\r\n                if (this.sortingMode !== 'count' || this.sortingCount < 1) {\r\n                    this.sortingCount = 10\r\n                }\r\n                this.$emit('save', { sortingMode: this.sortingMode, sortingCount: this.sortingCount })\r\n            }\r\n        }\r\n    })\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n    #olap-sorting-dialog .p-dialog-header,\r\n    #olap-sorting-dialog .p-dialog-content {\r\n        padding: 0;\r\n    }\r\n\r\n    #olap-sorting-dialog .p-dialog-content {\r\n        display: flex;\r\n        flex-direction: column;\r\n        flex: 1;\r\n    }\r\n</style>\r\n","<template>\r\n    <div class=\"p-d-flex p-flex-column\">\r\n        <Toolbar class=\"kn-toolbar kn-toolbar--primary p-col-12 kn-flex-0\">\r\n            <template #start>{{ $t('documentExecution.olap.customView.title') }} </template>\r\n\r\n            <template #end>\r\n                <Button id=\"document-execution-schedulations-close-button\" class=\"kn-button kn-button--primary\" @click=\"close\"> {{ $t('common.close') }}</Button>\r\n            </template>\r\n        </Toolbar>\r\n\r\n        <DataTable\r\n            :value=\"customViews\"\r\n            id=\"olap-custom-views-table\"\r\n            class=\"p-datatable-sm kn-table\"\r\n            dataKey=\"id\"\r\n            v-model:filters=\"filters\"\r\n            :globalFilterFields=\"olapCustomViewTableDescriptor.globalFilterFields\"\r\n            :paginator=\"customViews.length > 20\"\r\n            :rows=\"20\"\r\n            :loading=\"loading\"\r\n            responsiveLayout=\"stack\"\r\n            breakpoint=\"600px\"\r\n        >\r\n            <template #empty>\r\n                {{ $t('common.info.noDataFound') }}\r\n            </template>\r\n            <template #header>\r\n                <div class=\"table-header p-d-flex p-ai-center\">\r\n                    <span id=\"search-container\" class=\"p-input-icon-left p-mr-3\">\r\n                        <i class=\"pi pi-search\" />\r\n                        <InputText class=\"kn-material-input\" v-model=\"filters['global'].value\" :placeholder=\"$t('common.search')\" />\r\n                    </span>\r\n                </div>\r\n            </template>\r\n\r\n            <Column class=\"kn-truncated\" v-for=\"(column, index) in olapCustomViewTableDescriptor.columns\" :key=\"index\" :field=\"column.field\" :header=\"$t(column.label)\" :sortable=\"true\"></Column>\r\n            <Column :style=\"olapCustomViewTableDescriptor.iconColumn.style\">\r\n                <template #body=\"slotProps\">\r\n                    <Button icon=\"pi pi-file\" class=\"p-button-link\" v-tooltip.top=\"$t('common.apply')\" @click=\"applyCustomView(slotProps.data)\" />\r\n                    <Button icon=\"pi pi-trash\" class=\"p-button-link\" v-tooltip.top=\"$t('common.delete')\" @click=\"deleteCustomViewsConfirm(slotProps.data)\" />\r\n                </template>\r\n            </Column>\r\n        </DataTable>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent, PropType } from 'vue'\r\nimport { iOlapCustomView } from '../Olap'\r\nimport { filterDefault } from '@/helpers/commons/filterHelper'\r\nimport Column from 'primevue/column'\r\nimport DataTable from 'primevue/datatable'\r\nimport olapCustomViewTableDescriptor from './OlapCustomViewTableDescriptor.json'\r\nimport mainStore from '../../../../App.store'\r\n\r\nexport default defineComponent({\r\n    name: 'olap-custom-view-table',\r\n    components: { Column, DataTable },\r\n    props: { olapCustomViews: { type: Object as PropType<iOlapCustomView[]> } },\r\n    emits: ['close', 'applyCustomView'],\r\n    data() {\r\n        return {\r\n            olapCustomViewTableDescriptor,\r\n            customViews: [] as iOlapCustomView[],\r\n            filters: { global: [filterDefault] } as Object,\r\n            loading: false\r\n        }\r\n    },\r\n    watch: {\r\n        olapCustomViews() {\r\n            this.loadCustomViews()\r\n        }\r\n    },\r\n    setup() {\r\n        const store = mainStore()\r\n        return { store }\r\n    },\r\n    created() {\r\n        this.loadCustomViews()\r\n    },\r\n    methods: {\r\n        loadCustomViews() {\r\n            this.customViews = this.olapCustomViews as iOlapCustomView[]\r\n        },\r\n        applyCustomView(customView: iOlapCustomView) {\r\n            this.$emit('applyCustomView', { subobj_id: customView.id, subobj_name: customView.name, subobj_description: customView.description, subobj_visibility: customView.isPublic })\r\n        },\r\n        deleteCustomViewsConfirm(customView: iOlapCustomView) {\r\n            this.$confirm.require({\r\n                message: this.$t('common.toast.deleteMessage'),\r\n                header: this.$t('common.toast.deleteConfirmTitle'),\r\n                icon: 'pi pi-exclamation-triangle',\r\n                accept: async () => this.deleteCustomView(customView)\r\n            })\r\n        },\r\n        async deleteCustomView(customView: iOlapCustomView) {\r\n            this.loading = true\r\n            await this.$http\r\n                .delete(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `/1.0/olapsubobjects/removeOlapSubObject?idObj=${customView.id}`)\r\n                .then(() => {\r\n                    this.removeCustomView(customView)\r\n                    this.store.setInfo({\r\n                        title: this.$t('common.toast.deleteTitle'),\r\n                        msg: this.$t('common.toast.deleteSuccess')\r\n                    })\r\n                })\r\n                .catch(() => {})\r\n            this.loading = false\r\n        },\r\n        removeCustomView(customView: iOlapCustomView) {\r\n            const index = this.customViews.findIndex((el: iOlapCustomView) => el.id === customView.id)\r\n            if (index !== -1) this.customViews.splice(index, 1)\r\n        },\r\n        close() {\r\n            this.$emit('close')\r\n            this.customViews = []\r\n        }\r\n    }\r\n})\r\n</script>\r\n","<template>\r\n    <Dialog id=\"olap-custom-view-save-dialog\" class=\"p-fluid kn-dialog--toolbar--secondary\" :style=\"olapCustomViewSaveDialogDescriptor.dialog.style\" :visible=\"visible\" :modal=\"true\" :closable=\"false\">\r\n        <template #header>\r\n            <Toolbar class=\"kn-toolbar kn-toolbar--primary p-p-0 p-m-2 p-col-12\">\r\n                <template #start>\r\n                    {{ $t('documentExecution.olap.savingCustomizedView') }}\r\n                </template>\r\n            </Toolbar>\r\n        </template>\r\n        <ProgressBar mode=\"indeterminate\" class=\"kn-progress-bar\" v-if=\"loading\" />\r\n\r\n        <div class=\"p-formgrid p-grid p-m-4\">\r\n            <div class=\"p-fluid p-col-12 p-md-12 p-mt-2\">\r\n                <span class=\"p-float-label\">\r\n                    <InputText\r\n                        id=\"name\"\r\n                        class=\"kn-material-input\"\r\n                        v-model.trim=\"view.name\"\r\n                        :class=\"{\r\n                            'p-invalid': !view.name && viewNameTouched\r\n                        }\"\r\n                        @blur=\"viewNameTouched = true\"\r\n                    />\r\n                    <label for=\"name\" class=\"kn-material-input-label\">{{ $t('common.name') }} *</label>\r\n                </span>\r\n                <div v-if=\"!view.name && viewNameTouched\" class=\"p-error\">\r\n                    <small class=\"p-col-12\">\r\n                        {{ $t('common.validation.required', { fieldName: $t('common.name') }) }}\r\n                    </small>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"p-field p-col-12 p-md-12 p-mt-2\">\r\n                <span class=\"p-float-label\">\r\n                    <InputText id=\"description\" class=\"kn-material-input\" v-model.trim=\"view.description\" />\r\n                    <label for=\"description\" class=\"kn-material-input-label\">{{ $t('common.description') }}</label>\r\n                </span>\r\n            </div>\r\n\r\n            <div class=\"p-field p-col-12 p-md-12 p-mt-2\">\r\n                <span class=\"p-float-label\">\r\n                    <Dropdown class=\"kn-material-input\" v-model=\"view.scope\" :options=\"olapCustomViewSaveDialogDescriptor.scopeOptions\"> </Dropdown>\r\n                    <label class=\"kn-material-input-label\"> {{ $t('common.scope') }}</label>\r\n                </span>\r\n            </div>\r\n        </div>\r\n\r\n        <template #footer>\r\n            <Button class=\"kn-button kn-button--primary\" @click=\"closeDialog\"> {{ $t('common.cancel') }}</Button>\r\n            <Button class=\"kn-button kn-button--primary\" :disabled=\"!view.name\" @click=\"saveCustomizedView\"> {{ $t('common.save') }}</Button>\r\n        </template>\r\n    </Dialog>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport Dialog from 'primevue/dialog'\r\nimport Dropdown from 'primevue/dropdown'\r\nimport olapCustomViewSaveDialogDescriptor from './OlapCustomViewSaveDialogDescriptor.json'\r\nimport mainStore from '../../../../App.store'\r\n\r\nexport default defineComponent({\r\n    name: 'olap-custom-view-save-dialog',\r\n    components: { Dialog, Dropdown },\r\n    props: { sbiExecutionId: { type: String } },\r\n    data() {\r\n        return {\r\n            olapCustomViewSaveDialogDescriptor,\r\n            view: { name: '', description: '', scope: 'public' },\r\n            viewNameTouched: false,\r\n            loading: false\r\n        }\r\n    },\r\n    setup() {\r\n        const store = mainStore()\r\n        return { store }\r\n    },\r\n    created() {},\r\n    methods: {\r\n        closeDialog() {\r\n            this.$emit('close')\r\n            this.viewNameTouched = false\r\n            this.view = { name: '', description: '', scope: 'public' }\r\n        },\r\n        async saveCustomizedView() {\r\n            this.loading = true\r\n            await this.$http\r\n                .post(import.meta.env.VITE_OLAP_PATH + `1.0/subobject?SBI_EXECUTION_ID=${this.sbiExecutionId}`, this.view)\r\n                .then(() => {\r\n                    this.store.setInfo({\r\n                        title: this.$t('common.toast.createTitle'),\r\n                        msg: this.$t('common.toast.success')\r\n                    })\r\n                    this.closeDialog()\r\n                })\r\n                .catch(() => {})\r\n            this.loading = false\r\n        }\r\n    }\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n#olap-custom-view-save-dialog .p-dialog-header,\r\n#olap-custom-view-save-dialog .p-dialog-content {\r\n    padding: 0;\r\n}\r\n#olap-custom-view-save-dialog .p-dialog-content {\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex: 1;\r\n}\r\n</style>\r\n","<template>\r\n    <Dialog id=\"olap-mdx-query-dialog\" class=\"p-fluid kn-dialog--toolbar--primary\" :style=\"olapMDXQueryDialogDescriptor.dialog.style\" :visible=\"visible\" :modal=\"true\" :closable=\"false\">\r\n        <template #header>\r\n            <Toolbar class=\"kn-toolbar kn-toolbar--primary p-p-0 p-m-2 p-col-12\">\r\n                <template #start>\r\n                    {{ $t('documentExecution.olap.showMdxQuery') }}\r\n                </template>\r\n            </Toolbar>\r\n        </template>\r\n\r\n        <VCodeMirror ref=\"codeMirror\" class=\"p-m-2\" v-model:value=\"query\" :options=\"options\" />\r\n\r\n        <template #footer>\r\n            <Button class=\"kn-button kn-button--primary\" @click=\"$emit('close')\"> {{ $t('common.close') }}</Button>\r\n        </template>\r\n    </Dialog>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import { defineComponent, PropType } from 'vue'\r\n    import Dialog from 'primevue/dialog'\r\n    import olapMDXQueryDialogDescriptor from './OlapMDXQueryDialogDescriptor.json'\r\n    import VCodeMirror, { CodeMirror  } from 'codemirror-editor-vue3'\r\n\r\n    export default defineComponent({\r\n        name: 'olap-custom-view-save-dialog',\r\n        components: {\r\n            Dialog,\r\n            VCodeMirror\r\n        },\r\n        props: { mdxQuery: { type: String as PropType<String | null> } },\r\n        emits: ['close'],\r\n        data() {\r\n            return {\r\n                olapMDXQueryDialogDescriptor,\r\n                query: null as string | null,\r\n                codeMirror: {} as any,\r\n                options: {\r\n                    mode: 'text/x-sql',\r\n                    lineWrapping: true,\r\n                    theme: 'eclipse',\r\n                    lineNumbers: true,\r\n                    readOnly: true\r\n                },\r\n                loading: false\r\n            }\r\n        },\r\n        watch: {\r\n            mdxQuery() {\r\n                this.loadMdxQuery()\r\n            }\r\n        },\r\n        created() {\r\n            this.loadMdxQuery()\r\n        },\r\n        methods: {\r\n            loadMdxQuery() {\r\n                this.query = this.mdxQuery as string\r\n            },\r\n            setupCodeMirror() {\r\n                const interval = setInterval(() => {\r\n                    if (!this.$refs.codeMirror) return\r\n                    this.codeMirror = (this.$refs.codeMirror as any).cminstance as any\r\n                    setTimeout(() => {\r\n                        this.codeMirror.refresh()\r\n                    }, 0)\r\n                    clearInterval(interval)\r\n                }, 200)\r\n            }\r\n        }\r\n    })\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n    #olap-mdx-query-dialog .p-dialog-header,\r\n    #olap-mdx-query-dialog .p-dialog-content {\r\n        padding: 0;\r\n    }\r\n    #olap-mdx-query-dialog .p-dialog-content {\r\n        display: flex;\r\n        flex-direction: column;\r\n        flex: 1;\r\n    }\r\n</style>\r\n","<template>\r\n    <div id=\"filterCard\" class=\"p-d-flex p-flex-row\" v-for=\"(filter, index) in filterCardList\" :key=\"index\" v-tooltip=\"{ value: $t('documentExecution.olap.filterPanel.activeLevels') + ': ' + getNumberOfActiveLevels(filter), disabled: getNumberOfActiveLevels(filter) === 0 }\">\r\n        <div :id=\"'filter-' + filter.name\" :ref=\"'filter-' + filter.name\" :style=\"panelDescriptor.style.filterCard\" draggable=\"true\" @dragstart=\"onDragStart($event, filter, 'filter-' + filter.name)\" @dragend=\"removeDragClass('filter-' + filter.name)\">\r\n            <Button v-if=\"filter.hierarchies.length > 1\" icon=\"fas fa-sitemap\" class=\"p-button-text p-button-rounded p-button-plain\" @click=\"$emit('showMultiHierarchy', filter)\" />\r\n            <span class=\"p-ml-1\"> {{ filter.caption }} </span>\r\n            <Button\r\n                icon=\"fas fa-filter\"\r\n                :class=\"{ 'olap-active-filter-icon': filterIsActive(filter) }\"\r\n                class=\"p-button-text p-button-rounded p-button-plain p-ml-auto\"\r\n                v-tooltip=\"{ value: getSlicersTooltip(filter), disabled: !filter || !filter.hierarchies[0].slicers || filter.hierarchies[0].slicers.length === 0 }\"\r\n                @click=\"openFilterDialog(filter)\"\r\n            />\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport panelDescriptor from './OlapFilterPanelDescriptor.json'\r\n\r\nexport default defineComponent({\r\n    components: {},\r\n    props: { filterCardList: { type: Array, required: true }, olapDesigner: { type: Object } },\r\n    emits: ['dragging', 'dragend', 'showMultiHierarchy', 'openFilterDialog'],\r\n    data() {\r\n        return {\r\n            panelDescriptor\r\n        }\r\n    },\r\n    created() {},\r\n    methods: {\r\n        onDragStart(event, filter, filterId) {\r\n            event.dataTransfer.setData('text', JSON.stringify(filter))\r\n            event.dataTransfer.dropEffect = 'move'\r\n            event.dataTransfer.effectAllowed = 'move'\r\n            // @ts-ignore\r\n            this.$refs[`${filterId}`].classList?.add('filter-dragging')\r\n            this.$emit('dragging')\r\n        },\r\n        removeDragClass(filterId) {\r\n            // @ts-ignore\r\n            this.$refs[`${filterId}`].classList?.remove('filter-dragging')\r\n            this.$emit('dragend')\r\n        },\r\n        openFilterDialog(filter: any) {\r\n            this.$emit('openFilterDialog', { filter: filter, type: 'slicer' })\r\n        },\r\n        filterIsActive(filter: any) {\r\n            let isActive = false\r\n            for (let i = 0; i < filter.hierarchies.length; i++) {\r\n                if (filter.hierarchies[i].slicers && filter.hierarchies[i].slicers.length > 0) {\r\n                    isActive = true\r\n                    break\r\n                }\r\n            }\r\n            return isActive\r\n        },\r\n        getNumberOfActiveLevels(filter: any) {\r\n            const dynamicSlicers = this.olapDesigner?.template?.wrappedObject.olap.DYNAMIC_SLICER\r\n            if (!dynamicSlicers) return 0\r\n            let numberOfActiveLevels = 0\r\n            for (let i = 0; i < dynamicSlicers.length; i++) {\r\n                if (dynamicSlicers[i].HIERARCHY === filter.uniqueName) numberOfActiveLevels++\r\n            }\r\n            return numberOfActiveLevels\r\n        },\r\n        getSlicersTooltip(filter: any) {\r\n            let values = ''\r\n            if (!filter || !filter.hierarchies[0] || !filter.hierarchies[0].slicers) return values\r\n\r\n            for (let i = 0; i < filter.hierarchies[0].slicers.length; i++) {\r\n                values += filter.hierarchies[0].slicers[i].name\r\n                values += i === filter.hierarchies[0].slicers.length - 1 ? ' ' : ', '\r\n            }\r\n\r\n            return values\r\n        }\r\n    }\r\n})\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.filter-dragging {\r\n    background-color: #bbd6ed !important;\r\n}\r\n\r\n.olap-active-filter-icon {\r\n    color: red !important;\r\n}\r\n</style>\r\n","<template>\r\n    <div id=\"filterPanelContainer\" ref=\"filterPanelContainer\" :style=\"panelDescriptor.style.filterPanelContainer\">\r\n        <div id=\"filterPanel\" ref=\"filterPanel\" class=\"p-d-flex filterPanel p-ai-center\" :style=\"panelDescriptor.style.filterPanel\" @drop=\"onDrop($event)\" @dragover.prevent @dragenter=\"displayDropzone\">\r\n            <Button v-if=\"showScroll\" icon=\"fas fa-arrow-circle-left\" class=\"p-button-text p-button-rounded p-button-plain p-ml-1\" @click=\"scrollLeft\" />\r\n            <div ref=\"filterItemsContainer\" class=\"p-d-flex p-ai-center kn-flex\" :style=\"panelDescriptor.style.containerScroll\" @dragover.prevent @dragenter.prevent @dragleave=\"hideDropzone\">\r\n                <div v-if=\"filterCardList?.length == 0\" class=\"p-d-flex p-flex-row p-jc-center kn-flex\">\r\n                    <InlineMessage class=\"kn-flex p-m-1\" :style=\"panelDescriptor.style.noFilters\" severity=\"info\" closable=\"false\">{{ $t('documentExecution.olap.filterPanel.filterPanelEmpty') }}</InlineMessage>\r\n                </div>\r\n                <FilterCard v-else :filterCardList=\"filterCardList\" :olapDesigner=\"olapDesigner\" @showMultiHierarchy=\"emitMultiHierarchy\" @openFilterDialog=\"$emit('openFilterDialog', $event)\" />\r\n                <div ref=\"axisDropzone\" class=\"kn-flex kn-truncated p-mr-1\" :style=\"panelDescriptor.style.filterAxisDropzone\">{{ $t('documentExecution.olap.filterPanel.drop') }}</div>\r\n            </div>\r\n            <Button v-if=\"showScroll\" icon=\"fas fa-arrow-circle-right\" class=\"p-button-text p-button-rounded p-button-plain p-mr-1\" @click=\"scrollRight\" />\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent, PropType } from 'vue'\r\nimport { iOlapFilter, iOlap } from '@/modules/documentExecution/olap/Olap'\r\nimport panelDescriptor from './OlapFilterPanelDescriptor.json'\r\nimport InlineMessage from 'primevue/inlinemessage'\r\nimport FilterCard from './OlapFilterCard.vue'\r\nimport mainStore from '../../../../App.store'\r\n\r\nexport default defineComponent({\r\n    components: { InlineMessage, FilterCard },\r\n    props: { olapProp: { type: Object as PropType<iOlap | null>, required: true }, olapDesigner: { type: Object } },\r\n    emits: ['putFilterOnAxis', 'showMultiHierarchy', 'openFilterDialog'],\r\n    computed: {\r\n        showScroll(): Boolean {\r\n            return this.scrollContainerWidth < this.scrollContentWidth\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            panelDescriptor,\r\n            filterCardList: [] as iOlapFilter[],\r\n            scrollContainerWidth: 0,\r\n            scrollContentWidth: 0\r\n        }\r\n    },\r\n    watch: {\r\n        olapProp() {\r\n            this.loadData()\r\n        }\r\n    },\r\n    setup() {\r\n        const store = mainStore()\r\n        return { store }\r\n    },\r\n    created() {\r\n        this.loadData()\r\n    },\r\n    methods: {\r\n        loadData() {\r\n            this.filterCardList = this.olapProp?.filters as iOlapFilter[]\r\n            window.addEventListener('resize', this.assignScrollValues)\r\n            this.assignScrollValues()\r\n        },\r\n        displayDropzone() {\r\n            // @ts-ignore\r\n            this.$refs.axisDropzone.classList?.add('display-axis-dropzone')\r\n        },\r\n        hideDropzone() {\r\n            // @ts-ignore\r\n            this.$refs.axisDropzone.classList?.remove('display-axis-dropzone')\r\n        },\r\n        onDrop(event) {\r\n            // @ts-ignore\r\n            this.$refs.axisDropzone.classList?.remove('display-axis-dropzone')\r\n            var data = JSON.parse(event.dataTransfer.getData('text/plain'))\r\n            var topLength = this.olapProp?.columns.length\r\n            var leftLength = this.olapProp?.rows.length\r\n            var fromAxis\r\n            if (data != null) {\r\n                fromAxis = data.axis\r\n                if (data.measure) {\r\n                    this.store.setInfo({ title: this.$t('common.toast.warning'), msg: this.$t('documentExecution.olap.filterToolbar.noMeasure') })\r\n                    return null\r\n                }\r\n                if (fromAxis != -1) {\r\n                    if ((fromAxis === 0 && topLength == 1) || (fromAxis === 1 && leftLength == 1)) {\r\n                        this.store.setInfo({ title: this.$t('common.toast.warning'), msg: this.$t('documentExecution.olap.filterToolbar.dragEmptyWarning') })\r\n                    } else {\r\n                        data.positionInAxis = this.filterCardList.length\r\n                        data.axis = -1\r\n                        this.$emit('putFilterOnAxis', fromAxis, data)\r\n                    }\r\n                }\r\n            }\r\n            setTimeout(() => {\r\n                this.assignScrollValues()\r\n            }, 100)\r\n        },\r\n        emitMultiHierarchy(filter) {\r\n            this.$emit('showMultiHierarchy', filter)\r\n        },\r\n        scrollLeft() {\r\n            // @ts-ignore\r\n            this.$refs.filterItemsContainer.scrollLeft -= 50\r\n        },\r\n        scrollRight() {\r\n            // @ts-ignore\r\n            this.$refs.filterItemsContainer.scrollLeft += 50\r\n        },\r\n        assignScrollValues() {\r\n            // @ts-ignore\r\n            this.scrollContainerWidth = this.$refs?.filterPanelContainer?.clientWidth\r\n            // @ts-ignore\r\n            this.scrollContentWidth = this.$refs?.filterItemsContainer?.scrollWidth\r\n        }\r\n    }\r\n})\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n#filterPanel {\r\n    min-height: 45px;\r\n}\r\n.display-axis-dropzone {\r\n    display: flex !important;\r\n}\r\n</style>\r\n","<template>\r\n    <div id=\"top-toolbar-container\" class=\"p-d-flex\" :style=\"toolbarDescriptor.style.topToolbarContainer\">\r\n        <span id=\"topaxis\" ref=\"filterPanelContainer\" class=\"kn-flex p-d-flex\" :style=\"toolbarDescriptor.style.topAxis\" @drop=\"onDrop($event)\" @dragover.prevent @dragenter=\"displayDropzone\" @dragleave=\"hideDropzone\">\r\n            <Button icon=\"fa-solid fa-repeat\" class=\"p-button-text p-button-rounded p-button-plain\" :style=\"toolbarDescriptor.style.whiteColor\" @click=\"$emit('swapAxis')\" />\r\n            <Button v-if=\"showScroll\" icon=\"fas fa-arrow-circle-left\" class=\"p-button-text p-button-rounded p-button-plain p-ml-1 p-as-center\" :style=\"toolbarDescriptor.style.whiteColor\" @click=\"scrollLeft\" />\r\n            <div ref=\"filterItemsContainer\" class=\"p-d-flex p-ai-center kn-flex\" :style=\"toolbarDescriptor.style.scroll\">\r\n                <div v-for=\"(column, index) in columns\" :key=\"index\" class=\"p-d-flex\">\r\n                    <div :id=\"'top-' + column.name\" :ref=\"'top-' + column.name\" :style=\"toolbarDescriptor.style.topAxisCard\" draggable=\"true\" @dragstart=\"onDragStart($event, column, 'top-' + column.name)\" @dragend=\"removeDragClass('top-' + column.name)\">\r\n                        <Button v-if=\"column.hierarchies.length > 1\" icon=\"fas fa-sitemap\" class=\"p-button-text p-button-rounded p-button-plain\" :style=\"toolbarDescriptor.style.whiteColor\" @click=\"$emit('showMultiHierarchy', column)\" />\r\n                        <span class=\"kn-flex kn-truncated\" :class=\"{ 'p-ml-2': column.hierarchies.length == 1 }\" v-tooltip.top=\"column.caption\">{{ cutName(column.caption, 0, column.hierarchies.length > 1) }} </span>\r\n                        <div id=\"whitespace\" :style=\"toolbarDescriptor.style.whitespace\" />\r\n                        <Button icon=\"fas fa-filter\" class=\"p-button-text p-button-rounded p-button-plain\" :style=\"toolbarDescriptor.style.whiteColor\" @click=\"openFilterDialog(column)\" />\r\n                    </div>\r\n                    <i v-if=\"column.positionInAxis < columns.length - 1\" class=\"fas fa-arrows-alt-h p-as-center p-mx-2\" style=\"cursor: pointer\" @click=\"$emit('switchPosition', column)\" />\r\n                </div>\r\n                <div ref=\"axisDropzone\" class=\"kn-flex kn-truncated p-mx-1\" :style=\"toolbarDescriptor.style.topAxisDropzone\">{{ $t('documentExecution.olap.filterToolbar.drop') }}</div>\r\n            </div>\r\n            <Button v-if=\"showScroll\" icon=\"fas fa-arrow-circle-right\" class=\"p-button-text p-button-rounded p-button-plain p-mr-1 p-as-center\" :style=\"toolbarDescriptor.style.whiteColor\" @click=\"scrollRight\" />\r\n            <div id=\"whitespace\" :style=\"toolbarDescriptor.style.whitespace\" />\r\n            <Button icon=\"fas fa-bars\" class=\"p-button-text p-button-rounded p-button-plain\" :style=\"toolbarDescriptor.style.sidebarButton\" @click=\"$emit('openSidebar')\" />\r\n        </span>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport { iOlapFilter } from '@/modules/documentExecution/olap/Olap'\r\nimport toolbarDescriptor from './OlapFilterToolbarDescriptor.json'\r\nimport mainStore from '../../../../App.store'\r\n\r\nexport default defineComponent({\r\n    components: {},\r\n    props: { olapProp: { type: Object, required: true } },\r\n    emits: ['openSidebar', 'putFilterOnAxis', 'swapAxis', 'switchPosition', 'showMultiHierarchy', 'openFilterDialog'],\r\n    computed: {\r\n        showScroll(): Boolean {\r\n            return this.scrollContainerWidth < this.scrollContentWidth\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            toolbarDescriptor,\r\n            columns: [] as iOlapFilter[],\r\n            rows: [] as iOlapFilter[],\r\n            cutArray: [12, 11, 10, 9, 6],\r\n            scrollContainerWidth: 0,\r\n            scrollContentWidth: 0\r\n        }\r\n    },\r\n    watch: {\r\n        olapProp() {\r\n            this.loadData()\r\n        }\r\n    },\r\n    setup() {\r\n        const store = mainStore()\r\n        return { store }\r\n    },\r\n    created() {\r\n        this.loadData()\r\n        window.addEventListener('resize', this.assignScrollValues)\r\n        this.assignScrollValues()\r\n    },\r\n    methods: {\r\n        loadData() {\r\n            this.columns = this.olapProp?.columns as iOlapFilter[]\r\n            this.rows = this.olapProp?.rows as iOlapFilter[]\r\n        },\r\n        cutName(name, axis, multi) {\r\n            var ind = axis\r\n            if (multi) ind = ind + 2\r\n            ind = ind + 1\r\n            var cutProp = this.cutArray[ind]\r\n            if (name == undefined) {\r\n                name = '...'\r\n            }\r\n            if (name.length <= cutProp) return name\r\n            else return name.substring(0, cutProp) + '...'\r\n        },\r\n        onDragStart(event, filter, filterId) {\r\n            event.dataTransfer.setData('text', JSON.stringify(filter))\r\n            event.dataTransfer.dropEffect = 'move'\r\n            event.dataTransfer.effectAllowed = 'move'\r\n            // @ts-ignore\r\n            this.$refs[`${filterId}`].classList?.add('filter-dragging')\r\n        },\r\n        removeDragClass(filterId) {\r\n            // @ts-ignore\r\n            this.$refs[`${filterId}`].classList?.remove('filter-dragging')\r\n        },\r\n        displayDropzone() {\r\n            // @ts-ignore\r\n            this.$refs.axisDropzone.classList?.add('display-axis-dropzone')\r\n        },\r\n        hideDropzone() {\r\n            // @ts-ignore\r\n            this.$refs.axisDropzone.classList?.remove('display-axis-dropzone')\r\n        },\r\n        onDrop(event) {\r\n            // @ts-ignore\r\n            this.$refs.axisDropzone.classList?.remove('display-axis-dropzone')\r\n            var data = JSON.parse(event.dataTransfer.getData('text/plain'))\r\n\r\n            var leftLength = this.rows.length\r\n            var topLength = this.columns.length\r\n            var fromAxis\r\n            if (data != null) {\r\n                fromAxis = data.axis\r\n                if (fromAxis != 0) {\r\n                    if (data.axis === 1 && leftLength == 1) {\r\n                        this.store.setInfo({ title: this.$t('common.toast.warning'), msg: this.$t('documentExecution.olap.filterToolbar.dragEmptyWarning') })\r\n                    } else {\r\n                        data.positionInAxis = topLength\r\n                        data.axis = 0\r\n                        this.$emit('putFilterOnAxis', fromAxis, data)\r\n                    }\r\n                }\r\n            }\r\n            setTimeout(() => {\r\n                this.assignScrollValues()\r\n            }, 100)\r\n        },\r\n        scrollLeft() {\r\n            // @ts-ignore\r\n            this.$refs.filterItemsContainer.scrollLeft -= 50\r\n        },\r\n        scrollRight() {\r\n            // @ts-ignore\r\n            this.$refs.filterItemsContainer.scrollLeft += 50\r\n        },\r\n        assignScrollValues() {\r\n            // @ts-ignore\r\n            this.scrollContainerWidth = this.$refs?.filterPanelContainer?.clientWidth - 83\r\n            // @ts-ignore\r\n            this.scrollContentWidth = this.$refs?.filterItemsContainer?.scrollWidth\r\n        },\r\n        openFilterDialog(filter: any) {\r\n            this.$emit('openFilterDialog', { filter: filter, type: 'visible' })\r\n        }\r\n    }\r\n})\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.filter-dragging {\r\n    background-color: #bbd6ed !important;\r\n}\r\n.display-axis-dropzone {\r\n    display: flex !important;\r\n}\r\n</style>\r\n","<template>\r\n    <div id=\"filterPanelContainer\" :style=\"toolbarDescriptor.style.leftToolbarContainer\">\r\n        <div id=\"leftaxis\" ref=\"filterPanelContainer\" class=\"p-d-flex p-flex-column p-ai-center\" :style=\"toolbarDescriptor.style.topAxis\" @drop=\"onDrop($event)\" @dragover.prevent @dragenter=\"displayDropzone\">\r\n            <Button v-if=\"showScroll\" icon=\"fas fa-arrow-circle-up\" class=\"p-button-text p-button-rounded p-button-plain p-mb-1\" :style=\"toolbarDescriptor.style.whiteColor\" @click=\"scrollUp\" />\r\n            <div ref=\"filterItemsContainer\" class=\"p-d-flex p-flex-column p-ai-center kn-flex\" :style=\"toolbarDescriptor.style.scroll\" @dragover.prevent @dragenter.prevent @dragleave=\"hideDropzone\">\r\n                <div v-for=\"(row, index) in rows\" :key=\"index\" class=\"p-d-flex p-flex-column p-ai-center\">\r\n                    <div :id=\"'left-' + row.name\" :ref=\"'left-' + row.name\" class=\"p-d-flex p-flex-column p-ai-center\" :style=\"toolbarDescriptor.style.leftAxisCard\" draggable=\"true\" @dragstart=\"onDragStart($event, row, 'left-' + row.name)\" @dragend=\"removeDragClass('left-' + row.name)\">\r\n                        <Button v-if=\"row.hierarchies.length > 1\" icon=\"fas fa-sitemap\" class=\"p-button-text p-button-rounded p-button-plain\" :style=\"toolbarDescriptor.style.whiteColor\" @click=\"$emit('showMultiHierarchy', row)\" />\r\n                        <div class=\"olap-rotate-text kn-flex kn-truncated\" :class=\"{ 'p-mt-2': row.hierarchies.length == 1 }\" v-tooltip.right=\"row.caption\" flex>{{ cutName(row.caption, 0, row.hierarchies.length > 1) }}</div>\r\n                        <div id=\"whitespace\" class=\"p-mt-auto\" :style=\"toolbarDescriptor.style.whitespaceLeft\" />\r\n                        <Button icon=\"fas fa-filter\" class=\"p-button-text p-button-rounded p-button-plain p-mt-auto p-m-0\" :style=\"toolbarDescriptor.style.whiteColor\" @click=\"openFilterDialog(row)\" />\r\n                    </div>\r\n                    <i v-if=\"row.positionInAxis < rows.length - 1\" class=\"fas fa-arrows-alt-v p-my-2\" style=\"cursor: pointer\" @click=\"$emit('switchPosition', row)\" />\r\n                </div>\r\n                <div ref=\"axisDropzone\" class=\"kn-flex kn-truncated olap-rotate-text p-my-1\" :style=\"toolbarDescriptor.style.leftAxisDropzone\">{{ $t('documentExecution.olap.filterToolbar.drop') }}</div>\r\n            </div>\r\n            <Button v-if=\"showScroll\" icon=\"fas fa-arrow-circle-down\" class=\"p-button-text p-button-rounded p-button-plain p-mt-1\" :style=\"toolbarDescriptor.style.whiteColor\" @click=\"scrollDown\" />\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport { iOlapFilter } from '@/modules/documentExecution/olap/Olap'\r\nimport toolbarDescriptor from './OlapFilterToolbarDescriptor.json'\r\nimport mainStore from '../../../../App.store'\r\n\r\nexport default defineComponent({\r\n    components: {},\r\n    props: { olapProp: { type: Object, required: true } },\r\n    emits: ['openSidebar', 'putFilterOnAxis', 'switchPosition', 'showMultiHierarchy', 'openFilterDialog'],\r\n    computed: {\r\n        showScroll(): Boolean {\r\n            return this.scrollContainerHeight < this.scrollContentHeight\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            toolbarDescriptor,\r\n            columns: [] as iOlapFilter[],\r\n            rows: [] as iOlapFilter[],\r\n            cutArray: [12, 11, 10, 9, 6],\r\n            scrollContainerHeight: 0,\r\n            scrollContentHeight: 0\r\n        }\r\n    },\r\n    watch: {\r\n        olapProp() {\r\n            this.loadData()\r\n        }\r\n    },\r\n    setup() {\r\n        const store = mainStore()\r\n        return { store }\r\n    },\r\n    created() {\r\n        this.loadData()\r\n        window.addEventListener('resize', this.assignScrollValues)\r\n        this.assignScrollValues()\r\n    },\r\n    methods: {\r\n        loadData() {\r\n            this.columns = this.olapProp?.columns as iOlapFilter[]\r\n            this.rows = this.olapProp?.rows as iOlapFilter[]\r\n        },\r\n        cutName(name, axis, multi) {\r\n            var ind = axis\r\n            if (multi) ind = ind + 2\r\n            ind = ind + 1\r\n            var cutProp = this.cutArray[ind]\r\n            if (name == undefined) {\r\n                name = '...'\r\n            }\r\n            if (name.length <= cutProp) return name\r\n            else return name.substring(0, cutProp) + '...'\r\n        },\r\n        onDragStart(event, filter, filterId) {\r\n            event.dataTransfer.setData('text', JSON.stringify(filter))\r\n            event.dataTransfer.dropEffect = 'move'\r\n            event.dataTransfer.effectAllowed = 'move'\r\n            // @ts-ignore\r\n            this.$refs[`${filterId}`].classList?.add('filter-dragging')\r\n        },\r\n        removeDragClass(filterId) {\r\n            // @ts-ignore\r\n            this.$refs[`${filterId}`].classList?.remove('filter-dragging')\r\n        },\r\n        displayDropzone() {\r\n            // @ts-ignore\r\n            this.$refs.axisDropzone.classList?.add('display-axis-dropzone')\r\n        },\r\n        hideDropzone() {\r\n            // @ts-ignore\r\n            this.$refs.axisDropzone.classList?.remove('display-axis-dropzone')\r\n        },\r\n        onDrop(event) {\r\n            console.log('DROPPED _-----------------------')\r\n            // @ts-ignore\r\n            this.$refs.axisDropzone.classList?.remove('display-axis-dropzone')\r\n            var data = JSON.parse(event.dataTransfer.getData('text/plain'))\r\n\r\n            var leftLength = this.rows.length\r\n            var topLength = this.columns.length\r\n            var fromAxis\r\n            if (data != null) {\r\n                fromAxis = data.axis\r\n                if (fromAxis != 1) {\r\n                    if (data.axis === 0 && topLength == 1) {\r\n                        this.store.setInfo({ title: this.$t('common.toast.warning'), msg: this.$t('documentExecution.olap.filterToolbar.dragEmptyWarning') })\r\n                    } else {\r\n                        data.positionInAxis = leftLength\r\n                        data.axis = 1\r\n                        this.$emit('putFilterOnAxis', fromAxis, data)\r\n                    }\r\n                }\r\n            }\r\n            setTimeout(() => {\r\n                this.assignScrollValues()\r\n            }, 100)\r\n        },\r\n        scrollUp() {\r\n            // @ts-ignore\r\n            this.$refs.filterItemsContainer.scrollTop -= 50\r\n        },\r\n        scrollDown() {\r\n            // @ts-ignore\r\n            this.$refs.filterItemsContainer.scrollTop += 50\r\n        },\r\n        assignScrollValues() {\r\n            console.log('CALLED ASSING VALUES --------------------------------')\r\n            // @ts-ignore\r\n            this.scrollContainerHeight = this.$refs?.filterPanelContainer?.clientHeight\r\n            // @ts-ignore\r\n            this.scrollContentHeight = this.$refs?.filterItemsContainer?.scrollHeight\r\n        },\r\n        openFilterDialog(filter: any) {\r\n            this.$emit('openFilterDialog', { filter: filter, type: 'visible' })\r\n        }\r\n    }\r\n})\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.olap-rotate-text {\r\n    writing-mode: vertical-rl;\r\n}\r\n.filter-dragging {\r\n    background-color: #bbd6ed !important;\r\n}\r\n.display-axis-dropzone {\r\n    display: flex !important;\r\n}\r\n</style>\r\n","<template>\r\n    <div class=\"p-m-4\">\r\n        <DataTable :value=\"parameters\" class=\"p-datatable-sm kn-table p-m-2\" dataKey=\"name\" responsiveLayout=\"stack\" breakpoint=\"600px\" @rowClick=\"$emit('parameterSelected', $event.data)\">\r\n            <template #empty>\r\n                {{ $t('common.info.noDataFound') }}\r\n            </template>\r\n\r\n            <Column class=\"kn-truncated\" v-for=\"(column, index) in olapCrossNavigationDefinitionDialogDescriptor.columns\" :key=\"index\" :field=\"column.field\" :header=\"$t(column.label)\" :sortable=\"true\"></Column>\r\n            <Column :style=\"olapCrossNavigationDefinitionDialogDescriptor.iconColumn.style\">\r\n                <template #body=\"slotProps\">\r\n                    <Button icon=\"pi pi-trash\" class=\"p-button-link\" v-tooltip.top=\"$t('common.delete')\" @click=\"deleteParameterConfirm(slotProps.data)\" />\r\n                </template>\r\n            </Column>\r\n        </DataTable>\r\n\r\n        <div v-if=\"addNewParameterVisible\">\r\n            <label for=\"type\" class=\"kn-material-input-label\"> {{ $t('documentExecution.olap.crossNavigationDefinition.crossNavigationType') }} </label>\r\n            <Dropdown id=\"type\" class=\"kn-material-input\" v-model=\"selectedParameter.type\" :options=\"olapCrossNavigationDefinitionDialogDescriptor.typeList\" optionLabel=\"label\" optionValue=\"value\" />\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent, PropType } from 'vue'\r\nimport { iOlapCrossNavigationParameter } from '../Olap'\r\nimport Column from 'primevue/column'\r\nimport DataTable from 'primevue/datatable'\r\nimport Dropdown from 'primevue/dropdown'\r\nimport olapCrossNavigationDefinitionDialogDescriptor from './OlapCrossNavigationDefinitionDialogDescriptor.json'\r\n\r\nexport default defineComponent({\r\n    name: 'olap-cross-navigation-step-one',\r\n    components: { Column, DataTable, Dropdown },\r\n    props: { propParameters: { type: Array as PropType<iOlapCrossNavigationParameter[]> }, addNewParameterVisible: { type: Boolean }, propSelectedParameter: { type: Object as PropType<iOlapCrossNavigationParameter | null> } },\r\n    emits: ['parameterSelected', 'deleteParameter'],\r\n    data() {\r\n        return {\r\n            olapCrossNavigationDefinitionDialogDescriptor,\r\n            parameters: [] as iOlapCrossNavigationParameter[],\r\n            selectedParameter: {} as iOlapCrossNavigationParameter\r\n        }\r\n    },\r\n    watch: {\r\n        propParameters() {\r\n            this.loadParameters()\r\n        },\r\n        propSelectedParameter() {\r\n            this.loadSelectedParameter()\r\n        }\r\n    },\r\n    created() {\r\n        this.loadParameters()\r\n        this.loadSelectedParameter()\r\n    },\r\n    methods: {\r\n        loadParameters() {\r\n            this.parameters = this.propParameters as iOlapCrossNavigationParameter[]\r\n        },\r\n        loadSelectedParameter() {\r\n            this.selectedParameter = this.propSelectedParameter as iOlapCrossNavigationParameter\r\n        },\r\n        deleteParameterConfirm(parameter: iOlapCrossNavigationParameter) {\r\n            this.$confirm.require({\r\n                message: this.$t('common.toast.deleteMessage'),\r\n                header: this.$t('common.toast.deleteConfirmTitle'),\r\n                icon: 'pi pi-exclamation-triangle',\r\n                accept: async () => this.$emit('deleteParameter', parameter)\r\n            })\r\n        }\r\n    }\r\n})\r\n</script>\r\n","<template>\r\n    <div class=\"p-m-4\">\r\n        <Message v-if=\"selectedParameter.type === 'cell'\" class=\"p-m-4\" severity=\"info\" :closable=\"false\" :style=\"olapCrossNavigationDefinitionDialogDescriptor.styles.message\">\r\n            {{ $t('documentExecution.olap.crossNavigationDefinition.hint') }}\r\n        </Message>\r\n\r\n        <div class=\"p-fluid p-col-12 p-md-12 p-mt-4\">\r\n            <span class=\"p-float-label\">\r\n                <InputText id=\"value\" class=\"kn-material-input\" v-model.trim=\"selectedParameter.value\" />\r\n                <label for=\"value\" class=\"kn-material-input-label\">{{ $t('common.value') }}</label>\r\n            </span>\r\n        </div>\r\n\r\n        <Button id=\"olap-select-from-table-button\" class=\"kn-button kn-button--primary p-mt-4\" @click=\"selectFromTable\"> {{ $t('documentExecution.olap.crossNavigationDefinition.selectFromTable') }}</Button>\r\n\r\n        <div class=\"p-fluid p-col-12 p-md-12 p-mt-4\">\r\n            <span class=\"p-float-label\">\r\n                <InputText\r\n                    id=\"name\"\r\n                    class=\"kn-material-input\"\r\n                    v-model.trim=\"selectedParameter.name\"\r\n                    :class=\"{\r\n                        'p-invalid': !selectedParameter.name && nameTouched\r\n                    }\"\r\n                    @blur=\"nameTouched = true\"\r\n                />\r\n                <label for=\"name\" class=\"kn-material-input-label\">{{ $t('documentExecution.olap.crossNavigationDefinition.parameterName') }} *</label>\r\n            </span>\r\n            <div v-if=\"!selectedParameter.name && nameTouched\" class=\"p-error\">\r\n                <small class=\"p-col-12\"> {{ $t('common.validation.required', { fieldName: $t('documentExecution.olap.crossNavigationDefinition.parameterName') }) }} </small>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent, PropType } from 'vue'\r\nimport { iOlapCrossNavigationParameter } from '../Olap'\r\nimport Message from 'primevue/message'\r\nimport olapCrossNavigationDefinitionDialogDescriptor from './OlapCrossNavigationDefinitionDialogDescriptor.json'\r\n\r\nexport default defineComponent({\r\n    name: 'olap-cross-navigation-step-two',\r\n    components: { Message },\r\n    props: { propSelectedParameter: { type: Object as PropType<iOlapCrossNavigationParameter | null> }, cell: { type: Object } },\r\n    emits: ['selectFromTable'],\r\n    data() {\r\n        return {\r\n            olapCrossNavigationDefinitionDialogDescriptor,\r\n            selectedParameter: {} as iOlapCrossNavigationParameter,\r\n            value: '',\r\n            nameTouched: false\r\n        }\r\n    },\r\n    watch: {\r\n        propSelectedParameter() {\r\n            this.loadSelectedParameter()\r\n        },\r\n        cell() {\r\n            this.loadValueFromCell()\r\n        }\r\n    },\r\n    created() {\r\n        this.loadSelectedParameter()\r\n        this.loadValueFromCell()\r\n    },\r\n    methods: {\r\n        loadSelectedParameter() {\r\n            this.selectedParameter = this.propSelectedParameter ?? ({} as iOlapCrossNavigationParameter)\r\n            if (this.selectedParameter.name) {\r\n                this.selectedParameter.value = this.selectedParameter.type === 'From Cell' ? `dimension=${this.selectedParameter.dimension} hierarchy=${this.selectedParameter.hierarchy} level=${this.selectedParameter.level}` : (this.selectedParameter.uniqueName as string)\r\n            } else {\r\n                this.selectedParameter.value = ''\r\n            }\r\n        },\r\n        selectFromTable() {\r\n            this.$emit('selectFromTable')\r\n        },\r\n        loadValueFromCell() {\r\n            if (this.cell) {\r\n                this.selectedParameter.value = this.selectedParameter.type === 'From Cell' ? `dimension=${this.cell.dimensionuniquename} hierarchy=${this.cell.hierarchyuniquename} level=${this.cell.level}` : this.cell.level\r\n            }\r\n        }\r\n    }\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n#olap-select-from-table-button {\r\n    max-width: 200px;\r\n}\r\n</style>\r\n","<template>\r\n    <Dialog id=\"olap-cross-naviagtion-definition-dialog\" class=\"p-fluid kn-dialog--toolbar--primary\" :style=\"olapCrossNavigationDefinitionDialogDescriptor.dialog.style\" :visible=\"visible\" :modal=\"true\" :closable=\"false\">\r\n        <template #header>\r\n            <Toolbar class=\"kn-toolbar kn-toolbar--primary p-p-0 p-m-2 p-col-12\">\r\n                <template #start>\r\n                    {{ $t('documentExecution.olap.crossNavigationDefinition.title') }}\r\n                </template>\r\n                <template #end>\r\n                    <Button v-if=\"step === 0\" id=\"olap-add-new-cross-navigation-button\" class=\"kn-button kn-button--primary\" @click=\"addNewParameter\"> {{ $t('common.addNew') }}</Button>\r\n                </template>\r\n            </Toolbar>\r\n        </template>\r\n\r\n        <OlapCrossNavigationStepOne v-if=\"step === 0\" :propParameters=\"parameters\" :addNewParameterVisible=\"addNewParameterVisible\" :propSelectedParameter=\"selectedParameter\" @parameterSelected=\"onParameterSelect\" @deleteParameter=\"deleteParameter\"></OlapCrossNavigationStepOne>\r\n        <OlapCrossNavigationStepTwo v-else :propSelectedParameter=\"selectedParameter\" :cell=\"cell\" @selectFromTable=\"$emit('selectFromTable', selectedParameter?.type)\"></OlapCrossNavigationStepTwo>\r\n\r\n        <template #footer>\r\n            <Button class=\"kn-button kn-button--primary\" @click=\"closeDialog\"> {{ $t('common.cancel') }}</Button>\r\n            <Button v-if=\"step === 0\" class=\"kn-button kn-button--primary\" :disabled=\"!selectedParameter || !selectedParameter.type\" @click=\"step = 1\"> {{ $t('common.next') }}</Button>\r\n            <Button v-else class=\"kn-button kn-button--primary\" :disabled=\"!selectedParameter || !selectedParameter.name\" @click=\"save\"> {{ $t('common.save') }}</Button>\r\n        </template>\r\n    </Dialog>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport { iOlapCrossNavigationParameter } from '../Olap'\r\nimport Dialog from 'primevue/dialog'\r\nimport olapCrossNavigationDefinitionDialogDescriptor from './OlapCrossNavigationDefinitionDialogDescriptor.json'\r\nimport OlapCrossNavigationStepOne from './OlapCrossNavigationStepOne.vue'\r\nimport OlapCrossNavigationStepTwo from './OlapCrossNavigationStepTwo.vue'\r\n\r\nexport default defineComponent({\r\n    name: 'olap-cross-naviagtion-definition-dialog',\r\n    components: { Dialog, OlapCrossNavigationStepOne, OlapCrossNavigationStepTwo },\r\n    props: { visible: { type: Boolean }, sbiExecutionId: { type: String }, selectedCell: { type: Object }, propOlapDesigner: { type: Object } },\r\n    emits: ['selectFromTable', 'close', 'save'],\r\n    data() {\r\n        return {\r\n            olapCrossNavigationDefinitionDialogDescriptor,\r\n            parameters: [] as iOlapCrossNavigationParameter[],\r\n            selectedParameter: null as iOlapCrossNavigationParameter | null,\r\n            cell: null as any,\r\n            olapDesigner: null as any,\r\n            step: 0,\r\n            addNewParameterVisible: false\r\n        }\r\n    },\r\n    watch: {\r\n        propOlapDesigner() {\r\n            this.loadDesigner()\r\n        },\r\n        selectedCell() {\r\n            this.loadCell()\r\n        },\r\n        visible(value: boolean) {\r\n            if (value) {\r\n                this.loadDesigner()\r\n            }\r\n        }\r\n    },\r\n    created() {\r\n        this.loadDesigner()\r\n        this.loadCell()\r\n    },\r\n    methods: {\r\n        loadDesigner() {\r\n            this.olapDesigner = this.propOlapDesigner as any\r\n            if (this.olapDesigner) {\r\n                this.loadCrossNavigationParameters()\r\n            }\r\n        },\r\n        loadCrossNavigationParameters() {\r\n            const fromCellParameters = this.olapDesigner.template?.wrappedObject?.olap?.CROSS_NAVIGATION?.PARAMETERS?.PARAMETER\r\n            const fromMemberParameters = [] as iOlapCrossNavigationParameter[]\r\n            this.olapDesigner?.template?.wrappedObject?.olap?.MDXQUERY?.clickable?.forEach((el: any) => fromMemberParameters.push({ ...el, name: el.clickParameter.name, type: 'From Member' }))\r\n\r\n            this.parameters = []\r\n            if (fromCellParameters?.length > 0) this.parameters = this.parameters.concat(fromCellParameters)\r\n            if (fromMemberParameters?.length > 0) this.parameters = this.parameters.concat(fromMemberParameters)\r\n        },\r\n        addNewParameter() {\r\n            this.selectedParameter = {} as iOlapCrossNavigationParameter\r\n            this.addNewParameterVisible = true\r\n        },\r\n        onParameterSelect(parameter: iOlapCrossNavigationParameter) {\r\n            this.selectedParameter = parameter\r\n            this.step = 1\r\n        },\r\n        loadCell() {\r\n            this.cell = this.selectedCell?.cell as any\r\n        },\r\n        deleteParameter(parameter: iOlapCrossNavigationParameter) {\r\n            parameter.type === 'From Cell' ? this.removeCellParameter(parameter) : this.removeMemberParameter(parameter)\r\n            this.loadCrossNavigationParameters()\r\n        },\r\n        removeCellParameter(parameter) {\r\n            const olapDesignerParameters = this.olapDesigner.template.wrappedObject.olap.CROSS_NAVIGATION.PARAMETERS.PARAMETER\r\n            const index = olapDesignerParameters.findIndex((el: any) => el.name === parameter?.name)\r\n            if (index !== -1) olapDesignerParameters.splice(index, 1)\r\n        },\r\n        removeMemberParameter(parameter) {\r\n            const clickable = this.olapDesigner.template.wrappedObject.olap.MDXQUERY.clickable\r\n            const index = clickable.findIndex((el: any) => el.clickParameter.name === parameter.name)\r\n            if (index !== -1) clickable.splice(index, 1)\r\n        },\r\n        closeDialog() {\r\n            this.$emit('close')\r\n            this.step = 0\r\n            this.selectedParameter = {} as iOlapCrossNavigationParameter\r\n            this.cell = null\r\n            this.addNewParameterVisible = false\r\n        },\r\n        save() {\r\n            if (this.selectedParameter) {\r\n                this.selectedParameter.type === 'From Cell' ? this.addFromCellParameter() : this.addFromMemberParameter()\r\n            }\r\n\r\n            this.closeDialog()\r\n        },\r\n        addFromCellParameter() {\r\n            const value = this.selectedParameter?.value\r\n\r\n            const dimension = value?.substring(value.indexOf('dimension'), value.indexOf('hierarchy'))\r\n            const hierarchy = value?.substring(value.indexOf('hierarchy'), value.indexOf('level'))\r\n            const level = value?.substring(value.indexOf('level') + 1)\r\n\r\n            const tempParameter = {\r\n                dimension: dimension?.substring(dimension.indexOf('=') + 1).trim(),\r\n                hierarchy: hierarchy?.substring(hierarchy.indexOf('=') + 1).trim(),\r\n                level: level?.substring(level.indexOf('=') + 1).trim(),\r\n                name: this.selectedParameter?.name,\r\n                type: this.selectedParameter?.type\r\n            }\r\n\r\n            if (!this.olapDesigner.template.wrappedObject.olap.CROSS_NAVIGATION) {\r\n                this.olapDesigner.template.wrappedObject.olap.CROSS_NAVIGATION = {\r\n                    PARAMETERS: {\r\n                        PARAMETER: []\r\n                    }\r\n                }\r\n            }\r\n\r\n            const olapDesignerParameters = this.olapDesigner.template.wrappedObject.olap.CROSS_NAVIGATION.PARAMETERS.PARAMETER\r\n\r\n            const index = olapDesignerParameters.findIndex((el: any) => el.name === this.selectedParameter?.name)\r\n            index !== -1 ? (olapDesignerParameters[index] = tempParameter) : olapDesignerParameters.push(tempParameter)\r\n        },\r\n        addFromMemberParameter() {\r\n            if (!this.selectedParameter) {\r\n                return\r\n            }\r\n\r\n            if (!this.olapDesigner.template.wrappedObject.olap.MDXQUERY.clickable) {\r\n                this.olapDesigner.template.wrappedObject.olap.MDXQUERY.clickable = []\r\n            }\r\n            const clickable = this.olapDesigner.template.wrappedObject.olap.MDXQUERY.clickable\r\n            const tempParameter = { clickParameter: { name: this.selectedParameter.name, value: '{0}' }, name: this.selectedParameter.name, type: this.selectedParameter.type, uniqueName: this.selectedParameter.value }\r\n\r\n            const index = clickable.findIndex((el: any) => el.clickParameter.name === this.selectedParameter?.name)\r\n            index !== -1 ? (clickable[index] = tempParameter) : clickable.push(tempParameter)\r\n        }\r\n    }\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n#olap-cross-naviagtion-definition-dialog .p-dialog-header,\r\n#olap-cross-naviagtion-definition-dialog .p-dialog-content {\r\n    padding: 0;\r\n}\r\n\r\n#olap-cross-naviagtion-definition-dialog .p-dialog-content {\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex: 1;\r\n}\r\n\r\n#olap-add-new-cross-navigation-button {\r\n    font-size: 0.75rem;\r\n}\r\n</style>\r\n","<template>\r\n    <Dialog id=\"olap-button-wizard-dialog\" class=\"p-fluid kn-dialog--toolbar--primary\" :style=\"olapButtonWizardDialogDescriptor.dialog.style\" :visible=\"visible\" :modal=\"true\" :closable=\"false\">\r\n        <template #header>\r\n            <Toolbar class=\"kn-toolbar kn-toolbar--primary p-p-0 p-m-2 p-col-12\">\r\n                <template #start>\r\n                    {{ $t('documentExecution.olap.buttonsWizard.title') }}\r\n                </template>\r\n            </Toolbar>\r\n        </template>\r\n\r\n        <DataTable :value=\"wizardButtons\" class=\"p-datatable-sm kn-table p-m-4\" :scrollable=\"true\" scrollHeight=\"100%\">\r\n            <template #empty>\r\n                {{ $t('common.info.noDataFound') }}\r\n            </template>\r\n\r\n            <Column :header=\"$t('common.name')\">\r\n                <template #body=\"slotProps\">\r\n                    {{ $t(olapButtonWizardDialogDescriptor.buttonLabels[slotProps.data.name]) }}\r\n                    <!-- olapButtonWizardDialogDescriptor -->\r\n                </template>\r\n            </Column>\r\n            <Column :header=\"$t('common.visible')\">\r\n                <template #header>\r\n                    <Checkbox class=\"p-mr-2\" v-model=\"allVisibleSelected\" :binary=\"true\" @change=\"setAllChecked('visible')\" />\r\n                </template>\r\n                <template #body=\"slotProps\">\r\n                    <Checkbox v-model=\"slotProps.data.visible\" :binary=\"true\" @change=\"setChecked(slotProps.data, 'visible')\" />\r\n                </template>\r\n            </Column>\r\n            <Column :header=\"$t('common.clicked')\">\r\n                <template #header>\r\n                    <Checkbox class=\"p-mr-2\" v-model=\"allClickedSelected\" :binary=\"true\" @change=\"setAllChecked('clicked')\" />\r\n                </template>\r\n                <template #body=\"slotProps\">\r\n                    <Checkbox v-model=\"slotProps.data.clicked\" :binary=\"true\" :disabled=\"!slotProps.data.clickable\" @change=\"setChecked(slotProps.data, 'clicked')\" />\r\n                </template>\r\n            </Column>\r\n        </DataTable>\r\n\r\n        <template #footer>\r\n            <Button class=\"kn-button kn-button--primary\" @click=\"closeDialog\"> {{ $t('common.cancel') }}</Button>\r\n            <Button class=\"kn-button kn-button--primary\" @click=\"save\"> {{ $t('common.save') }}</Button>\r\n        </template>\r\n    </Dialog>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent, PropType } from 'vue'\r\nimport { iButton } from '../Olap'\r\nimport Checkbox from 'primevue/checkbox'\r\nimport Column from 'primevue/column'\r\nimport DataTable from 'primevue/datatable'\r\nimport Dialog from 'primevue/dialog'\r\nimport olapButtonWizardDialogDescriptor from './OlapButtonWizardDialogDescriptor.json'\r\n\r\nexport default defineComponent({\r\n    name: 'olap-button-wizard-dialog',\r\n    components: { Checkbox, Column, DataTable, Dialog },\r\n    props: { visible: { type: Boolean }, sbiExecutionId: { type: String }, propButtons: { type: Array as PropType<iButton[]> }, propOlapDesigner: { type: Object } },\r\n    data() {\r\n        return {\r\n            olapButtonWizardDialogDescriptor,\r\n            buttons: [] as iButton[],\r\n            wizardButtons: [] as any[],\r\n            selected: {} as any,\r\n            allVisibleSelected: false,\r\n            allClickedSelected: false,\r\n            olapDesigner: null as any\r\n        }\r\n    },\r\n    watch: {\r\n        propButtons() {\r\n            this.loadButtons()\r\n        },\r\n        propOlapDesigner() {\r\n            this.loadDesigner()\r\n        },\r\n        visible(value: boolean) {\r\n            if (value) {\r\n                this.loadButtons()\r\n                this.loadDesigner()\r\n            }\r\n        }\r\n    },\r\n    created() {\r\n        this.loadButtons()\r\n        this.loadDesigner()\r\n    },\r\n    methods: {\r\n        loadButtons() {\r\n            this.buttons = this.propButtons as iButton[]\r\n        },\r\n        loadDesigner() {\r\n            this.olapDesigner = this.propOlapDesigner as any\r\n            if (this.olapDesigner) {\r\n                this.loadWizardButtons()\r\n            }\r\n        },\r\n        loadWizardButtons() {\r\n            this.wizardButtons = this.buttons.filter((el: iButton) => el.category !== 'OLAP_DESIGNER')\r\n\r\n            if (this.olapDesigner?.ENGINE === 'knowageolapengine') {\r\n                this.wizardButtons = this.wizardButtons.filter((el: iButton) => el.category !== 'WHAT_IF')\r\n            }\r\n\r\n            this.checkIfAllSelected()\r\n        },\r\n        checkIfColumnSelected(property: string) {\r\n            let allChecked = true\r\n            for (let i = 0; i < this.wizardButtons.length; i++) {\r\n                if ((property === 'visible' || (property === 'clicked' && this.wizardButtons[i].clickable)) && !this.wizardButtons[i][property]) {\r\n                    allChecked = false\r\n                    break\r\n                }\r\n            }\r\n            return allChecked\r\n        },\r\n        checkIfAllSelected() {\r\n            this.allVisibleSelected = this.checkIfColumnSelected('visible')\r\n            this.allClickedSelected = this.checkIfColumnSelected('clicked')\r\n        },\r\n        setAllChecked(type: string) {\r\n            this.wizardButtons.forEach((button: iButton) => {\r\n                if (type === 'clicked' && button.clickable) {\r\n                    button.clicked = this.allClickedSelected\r\n                } else if (type === 'visible') {\r\n                    button.visible = this.allVisibleSelected\r\n                }\r\n                this.changeCheckedValue(button, type)\r\n            })\r\n\r\n            this.checkIfAllSelected()\r\n        },\r\n        setChecked(button: any, type: string) {\r\n            this.changeCheckedValue(button, type)\r\n            this.checkIfAllSelected()\r\n        },\r\n        changeCheckedValue(button: any, type: string) {\r\n            if (type === 'clicked' && button.clicked) {\r\n                button.visible = true\r\n            } else if (type === 'visible' && !button.visible) {\r\n                button.clicked = false\r\n            }\r\n        },\r\n        closeDialog() {\r\n            this.$emit('close')\r\n            this.wizardButtons = []\r\n        },\r\n        save() {\r\n            if (!this.olapDesigner.template.wrappedObject.olap.TOOLBAR) this.olapDesigner.template.wrappedObject.olap.TOOLBAR = {}\r\n            const toolbarButtonKeys = Object.keys(this.olapDesigner.template.wrappedObject.olap.TOOLBAR)\r\n\r\n            this.wizardButtons.forEach((tempButton: iButton) => {\r\n                const index = toolbarButtonKeys.indexOf(tempButton.name)\r\n                if (index >= 0) {\r\n                    this.olapDesigner.template.wrappedObject.olap.TOOLBAR[toolbarButtonKeys[index]].visible = tempButton.visible\r\n                    this.olapDesigner.template.wrappedObject.olap.TOOLBAR[toolbarButtonKeys[index]].clicked = tempButton.clicked\r\n                } else {\r\n                    this.olapDesigner.template.wrappedObject.olap.TOOLBAR[tempButton.name] = { visible: tempButton.visible, clicked: tempButton.clicked }\r\n                }\r\n            })\r\n            this.$emit('close')\r\n        }\r\n    }\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n#olap-button-wizard-dialog .p-dialog-header,\r\n#olap-button-wizard-dialog .p-dialog-content {\r\n    padding: 0;\r\n}\r\n#olap-button-wizard-dialog .p-dialog-content {\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex: 1;\r\n}\r\n</style>\r\n","<template>\r\n    <Dialog id=\"olap-sorting-dialog\" class=\"p-fluid kn-dialog--toolbar--primary\" :visible=\"visible\" :modal=\"true\" :closable=\"false\">\r\n        <template #header>\r\n            <Toolbar class=\"kn-toolbar kn-toolbar--primary\">\r\n                <template #start> {{ member.caption }} </template>\r\n            </Toolbar>\r\n        </template>\r\n        <span class=\"p-m-3\">\r\n            {{ $t('documentExecution.olap.multiHierarchy.detail1') }}\r\n            <b>{{ member.hierarchies[member.selectedHierarchyPosition].caption }}.</b>\r\n            {{ $t('documentExecution.olap.multiHierarchy.detail2') }}\r\n        </span>\r\n        <div class=\"p-col-12\">\r\n            <span class=\"p-float-label\">\r\n                <Dropdown id=\"hier\" class=\"kn-material-input\" v-model=\"selecetedMultiHierUN\" :options=\"member.hierarchies\" optionLabel=\"caption\" optionValue=\"uniqueName\" @change=\"$emit('setMultiHierUN', selecetedMultiHierUN)\" />\r\n                <label for=\"hier\" class=\"kn-material-input-label\">{{ $t('documentExecution.olap.multiHierarchy.dropdownLabel') }} </label>\r\n            </span>\r\n        </div>\r\n        <template #footer>\r\n            <Button class=\"kn-button kn-button--secondary\" @click=\"$emit('close')\"> {{ $t('common.cancel') }}</Button>\r\n            <Button class=\"kn-button kn-button--primary\" @click=\"$emit('updateHierarchy')\"> {{ $t('common.save') }}</Button>\r\n        </template>\r\n    </Dialog>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import { defineComponent } from 'vue'\r\n    import { iOlapFilter } from '@/modules/documentExecution/olap/Olap'\r\n    import Dropdown from 'primevue/dropdown'\r\n    import Dialog from 'primevue/dialog'\r\n\r\n    export default defineComponent({\r\n        components: { Dialog, Dropdown },\r\n        props: { selectedFilter: { type: Object, required: true }, multiHierUN: { type: String, required: true } },\r\n        emits: ['save', 'updateHierarchy', 'setMultiHierUN'],\r\n        data() {\r\n            return {\r\n                member: {} as iOlapFilter,\r\n                selecetedMultiHierUN: '' as any\r\n            }\r\n        },\r\n        watch: {\r\n            selectedFilter() {\r\n                this.loadData()\r\n            }\r\n        },\r\n        created() {\r\n            this.loadData()\r\n        },\r\n        methods: {\r\n            loadData() {\r\n                this.member = this.selectedFilter as iOlapFilter\r\n                this.selecetedMultiHierUN = this.multiHierUN\r\n            }\r\n        }\r\n    })\r\n</script>\r\n","<template>\r\n    <div class=\"p-d-flex p-flex-column kn-width-full\">\r\n        <Toolbar class=\"kn-toolbar kn-toolbar--secondary p-col-12 kn-flex-0\">\r\n            <template #start>{{ $t('documentExecution.olap.drillTru.title') }} </template>\r\n        </Toolbar>\r\n\r\n        <Card class=\"p-m-2\">\r\n            <template #content>\r\n                <b>{{ $t('documentExecution.olap.drillTru.selectLevels') }}:</b>\r\n                <div class=\"p-d-flex p-flex-row p-mt-2\">\r\n                    <div v-for=\"(parent, index) in dtTree\" :key=\"index\" class=\"p-d-flex p-flex-column\">\r\n                        <Button class=\"p-button-text p-button-plain\" :label=\"parent.caption\" @click=\"showMenu($event, parent)\" />\r\n                    </div>\r\n                    <Button class=\"kn-button kn-button--primary p-ml-auto\" :label=\"$t('documentExecution.olap.drillTru.clearAll')\" @click=\"clearLevels\" />\r\n                </div>\r\n            </template>\r\n        </Card>\r\n\r\n        <DataTable :value=\"dtData\" id=\"olap-custom-views-table\" class=\"p-datatable-sm kn-table p-m-2\" v-model:filters=\"filters\" :paginator=\"drillData.length > 20\" :rows=\"18\" responsiveLayout=\"stack\" breakpoint=\"600px\" stripedRows=\"true\" rowHover=\"true\">\r\n            <template #empty>\r\n                {{ $t('common.info.noDataFound') }}\r\n            </template>\r\n            <template #header>\r\n                <div class=\"table-header p-d-flex p-ai-center\">\r\n                    <span id=\"search-container\" class=\"p-input-icon-left p-mr-3\">\r\n                        <i class=\"pi pi-search\" />\r\n                        <InputText class=\"kn-material-input\" v-model=\"filters['global'].value\" :placeholder=\"$t('common.search')\" />\r\n                    </span>\r\n                    <span class=\"p-float-label p-as-end p-ml-auto\">\r\n                        <Dropdown id=\"rows\" class=\"kn-material-input\" v-model=\"maxRows\" :options=\"maxRowsOptions\" :style=\"dtDescriptor.style.dropdown\" @change=\"$emit('rowsChanged', maxRows)\" />\r\n                        <label for=\"rows\" class=\"kn-material-input-label\"> {{ $t('documentExecution.olap.drillTru.maxRows') }} </label>\r\n                    </span>\r\n                </div>\r\n            </template>\r\n\r\n            <Column class=\"kn-truncated\" v-for=\"(column, index) in tableColumns\" :key=\"index\" :field=\"column.name\" :header=\"$t(column.label)\" :sortable=\"true\"></Column>\r\n        </DataTable>\r\n\r\n        <div class=\"p-mt-auto p-ml-auto p-mb-3 p-mr-3\">\r\n            <Button class=\"kn-button kn-button--secondary\" :label=\"$t('common.cancel')\" @click=\"closeDialog\" />\r\n            <Button class=\"kn-button kn-button--primary p-mx-2\" :label=\"$t('common.export')\" @click=\"exportDrill(dtData, 'DrillTrough Table', true)\" />\r\n            <Button class=\"kn-button kn-button--primary\" :label=\"$t('common.apply')\" @click=\"$emit('drill')\" />\r\n        </div>\r\n\r\n        <Menu id=\"optionsMenu\" ref=\"optionsMenu\" :model=\"menuButtons\">\r\n            <template #item=\"{ item }\">\r\n                <span class=\"p-m-2\">\r\n                    <Checkbox v-model=\"item.checked\" :binary=\"true\" @click=\"$emit('checkCheckboxes', item, dtAssociatedLevels)\" />\r\n                    <text class=\"p-ml-2\">{{ item.caption }}</text>\r\n                </span>\r\n            </template>\r\n        </Menu>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { filterDefault } from '@/helpers/commons/filterHelper'\r\nimport { defineComponent } from 'vue'\r\nimport Column from 'primevue/column'\r\nimport DataTable from 'primevue/datatable'\r\nimport dtDescriptor from './OlapDrillThroughDialogDescriptor.json'\r\nimport Menu from 'primevue/contextmenu'\r\nimport Checkbox from 'primevue/checkbox'\r\nimport Dropdown from 'primevue/dropdown'\r\nimport mainStore from '../../../../App.store'\r\n\r\nexport default defineComponent({\r\n    components: { Column, DataTable, Menu, Checkbox, Dropdown },\r\n    props: { drillData: { type: Array, required: true }, tableColumns: { type: Array, required: true }, dtLevels: { type: Array, required: true }, menuTree: { type: Array, required: true }, dtMaxRows: { type: Number, required: true } },\r\n    emits: ['close', 'applyCustomView', 'checkCheckboxes', 'clearLevels', 'drill', 'rowsChanged'],\r\n    data() {\r\n        return {\r\n            dtDescriptor,\r\n            dtData: [] as any,\r\n            formattedColumns: [] as any,\r\n            dtAssociatedLevels: [] as any,\r\n            dtTree: [] as any,\r\n            menuButtons: [] as any,\r\n            filters: { global: [filterDefault] } as Object,\r\n            maxRowsOptions: [0, 10, 25, 50, 100, 250, 500, 1000],\r\n            maxRows: 0\r\n        }\r\n    },\r\n    watch: {\r\n        drillData() {\r\n            this.dtData = this.drillData\r\n            this.maxRows = this.dtMaxRows\r\n        },\r\n        tableColumns() {\r\n            this.formattedColumns = this.tableColumns\r\n        },\r\n        dtLevels() {\r\n            this.dtAssociatedLevels = this.dtLevels\r\n        },\r\n        menuTree() {\r\n            this.dtTree = this.menuTree\r\n        }\r\n    },\r\n    setup() {\r\n        const store = mainStore()\r\n        return { store }\r\n    },\r\n    created() {\r\n        this.loadData()\r\n    },\r\n    methods: {\r\n        loadData() {\r\n            this.dtData = this.drillData\r\n            this.formattedColumns = this.tableColumns\r\n            this.dtAssociatedLevels = this.dtLevels\r\n            this.dtTree = this.menuTree\r\n        },\r\n        closeDialog() {\r\n            this.$emit('close')\r\n        },\r\n        showMenu(event, parent) {\r\n            this.createMenuItems(parent.children)\r\n            // eslint-disable-next-line\r\n            // @ts-ignore\r\n            this.$refs.optionsMenu.toggle(event)\r\n        },\r\n        createMenuItems(items) {\r\n            this.menuButtons = []\r\n            items.forEach((item) => {\r\n                this.menuButtons.push(item)\r\n            })\r\n        },\r\n        clearLevels() {\r\n            this.$emit('clearLevels')\r\n            this.dtTree.forEach((parent) => {\r\n                parent.children.forEach((child) => {\r\n                    child.checked = false\r\n                })\r\n            })\r\n        },\r\n        exportDrill(JSONData, ReportTitle, ShowLabel) {\r\n            var arrData = typeof JSONData != 'object' ? JSON.parse(JSONData) : JSONData\r\n            var CSV = ''\r\n            CSV += ReportTitle + '\\r\\n\\n'\r\n            if (ShowLabel) {\r\n                var row = ''\r\n                for (var index in arrData[0]) {\r\n                    row += index + ','\r\n                }\r\n                row = row.slice(0, -1)\r\n                CSV += row + '\\r\\n'\r\n            }\r\n            for (var i = 0; i < arrData.length; i++) {\r\n                row = ''\r\n                for (index in arrData[i]) {\r\n                    row += '\"' + arrData[i][index] + '\",'\r\n                }\r\n                row.slice(0, row.length - 1)\r\n                CSV += row + '\\r\\n'\r\n            }\r\n            if (CSV == '') {\r\n                this.store.setError({ title: this.$t('common.toast.error'), msg: this.$t('documentExecution.olap.drillTru.invalidData') })\r\n                return\r\n            }\r\n            var fileName = 'MyReport_'\r\n            fileName += ReportTitle.replace(/ /g, '_')\r\n            var uri = 'data:text/csv;charset=utf-8,' + escape(CSV)\r\n            var link = document.createElement('a') as any\r\n            link.href = uri\r\n            link.style = 'visibility:hidden'\r\n            link.download = fileName + '.csv'\r\n            document.body.appendChild(link)\r\n            link.click()\r\n            document.body.removeChild(link)\r\n        }\r\n    }\r\n})\r\n</script>\r\n","<template>\r\n    <Dialog id=\"olap-wizard-dialog\" class=\"p-fluid kn-dialog--toolbar--primary\" :style=\"descriptor.style.dialog\" :visible=\"visible\" :modal=\"true\" :closable=\"false\">\r\n        <template #header>\r\n            <Toolbar class=\"kn-toolbar kn-toolbar--primary p-p-0 p-m-2 p-col-12\">\r\n                <template #start>\r\n                    {{ $t('documentExecution.olap.outputWizard.title') }}\r\n                </template>\r\n            </Toolbar>\r\n        </template>\r\n\r\n        <ProgressSpinner class=\"wizard-overlay-spinner\" v-if=\"loading\" :style=\"descriptor.style.spinner\" />\r\n\r\n        <form class=\"p-fluid p-formgrid p-grid p-m-1\">\r\n            <InlineMessage class=\"p-m-1\" severity=\"info\" closable=\"false\">{{ $t('documentExecution.olap.outputWizard.infoMsg') }}</InlineMessage>\r\n            <div id=\"type-container\" class=\"p-field p-d-flex p-ai-center p-m-2 p-col-11\">\r\n                <span>{{ $t('managers.workspaceManagement.dataPreparation.transformations.outputType') }}: </span>\r\n                <div class=\"p-mx-2\">\r\n                    <RadioButton id=\"fileType\" name=\"file\" value=\"file\" v-model=\"selectedType\" />\r\n                    <label for=\"fileType\" class=\"p-ml-1\">{{ $t('common.file') }}</label>\r\n                </div>\r\n                <div>\r\n                    <RadioButton id=\"tableType\" name=\"table\" value=\"table\" v-model=\"selectedType\" />\r\n                    <label for=\"tableType\" class=\"p-ml-1\">{{ $t('common.table.table') }}</label>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"p-field p-float-label p-col-6 p-mt-2\">\r\n                <Dropdown id=\"version\" class=\"kn-material-input\" v-model=\"selectedVersion\" :options=\"olapVersionsProp\" optionLabel=\"name\" />\r\n                <label for=\"version\" class=\"kn-material-input-label\"> {{ $t('documentExecution.olap.outputWizard.version') }} </label>\r\n            </div>\r\n\r\n            <div v-if=\"selectedType === 'file' && selectedVersion\" class=\"p-field p-col-6 p-mt-2\">\r\n                <span class=\"p-float-label\">\r\n                    <InputText id=\"fieldDelimiter\" class=\"kn-material-input\" v-model=\"fieldDelimiter\" />\r\n                    <label for=\"fieldDelimiter\" class=\"kn-material-input-label\"> {{ $t('documentExecution.olap.outputWizard.fieldDelimiter') }} </label>\r\n                </span>\r\n                <small>{{ $t('documentExecution.olap.outputWizard.fileInfo') }}</small>\r\n            </div>\r\n            <div v-if=\"selectedType === 'table' && selectedVersion\" class=\"p-field p-col-6 p-mt-2\">\r\n                <span class=\"p-float-label\">\r\n                    <InputText id=\"tableName\" class=\"kn-material-input\" v-model=\"tableName\" />\r\n                    <label for=\"tableName\" class=\"kn-material-input-label\"> {{ $t('managers.datasetManagement.flatTableName') }} </label>\r\n                </span>\r\n                <small>{{ $t('documentExecution.olap.outputWizard.tableInfo') }}</small>\r\n            </div>\r\n        </form>\r\n\r\n        <template #footer>\r\n            <Button class=\"kn-button kn-button--secondary\" @click=\"$emit('close')\"> {{ $t('common.close') }}</Button>\r\n            <Button class=\"kn-button kn-button--primary\" :disabled=\"saveDisabled\" @click=\"saveRequest\"> {{ $t('common.save') }}</Button>\r\n        </template>\r\n    </Dialog>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport { downloadDirectFromResponse } from '@/helpers/commons/fileHelper'\r\nimport { AxiosResponse } from 'axios'\r\nimport Dialog from 'primevue/dialog'\r\nimport descriptor from './OlapOutputWizardDescriptor.json'\r\nimport Dropdown from 'primevue/dropdown'\r\nimport InlineMessage from 'primevue/inlinemessage'\r\nimport RadioButton from 'primevue/radiobutton'\r\nimport ProgressSpinner from 'primevue/progressspinner'\r\nimport mainStore from '../../../../App.store'\r\n\r\nexport default defineComponent({\r\n    name: 'olap-custom-view-save-dialog',\r\n    components: { Dialog, Dropdown, InlineMessage, RadioButton, ProgressSpinner },\r\n    props: { olapVersionsProp: { type: Boolean, required: true }, sbiExecutionId: { type: String } },\r\n    emits: ['close'],\r\n    computed: {\r\n        saveDisabled(): any {\r\n            if ((this.selectedType === 'file' && this.fieldDelimiter.length > 0) || (this.selectedType === 'table' && this.tableName.length > 0)) {\r\n                return false\r\n            } else return true\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            descriptor,\r\n            loading: false,\r\n            selectedVersion: null as any,\r\n            selectedType: 'file' as any,\r\n            tableName: 'WHATIFOUTPUTTABLE',\r\n            fieldDelimiter: '|'\r\n        }\r\n    },\r\n    watch: {},\r\n    setup() {\r\n        const store = mainStore()\r\n        return { store }\r\n    },\r\n\r\n    created() {},\r\n    methods: {\r\n        saveRequest() {\r\n            if (this.selectedType === 'file') {\r\n                this.loading = true\r\n                this.$http\r\n                    .get(import.meta.env.VITE_OLAP_PATH + `1.0/analysis/csv/${this.selectedVersion.id}/${this.fieldDelimiter}?SBI_EXECUTION_ID=${this.sbiExecutionId}`, {\r\n                        responseType: 'arraybuffer',\r\n                        headers: {\r\n                            'Content-Type': 'application/json',\r\n                            Accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9'\r\n                        }\r\n                    })\r\n                    .then((response: AxiosResponse<any>) => {\r\n                        downloadDirectFromResponse(response)\r\n                        this.store.setInfo({ title: this.$t('common.downloading'), msg: this.$t('managers.mondrianSchemasManagement.toast.downloadFile.downloaded') })\r\n                    })\r\n                    .catch(() => {\r\n                        this.store.setError({ title: this.$t('common.error.downloading'), msg: this.$t('common.error.downloading') })\r\n                    })\r\n                    .finally(() => (this.loading = false))\r\n            } else {\r\n                this.loading = true\r\n                this.$http\r\n                    .get(import.meta.env.VITE_OLAP_PATH + `1.0/analysis/table/${this.selectedVersion.id}/${this.tableName}?SBI_EXECUTION_ID=${this.sbiExecutionId}`, { headers: { Accept: 'application/json, text/plain, */*' } })\r\n                    .then(async () => {\r\n                        this.store.setInfo({ title: this.$t('common.information'), msg: this.$t('common.toast.updateSuccess') })\r\n                    })\r\n                    .catch(() => {})\r\n                    .finally(() => (this.loading = false))\r\n            }\r\n        },\r\n        resetFields() {\r\n            this.tableName = 'WHATIFOUTPUTTABLE'\r\n            this.fieldDelimiter = '|'\r\n            this.selectedVersion = null\r\n        }\r\n    }\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n#olap-wizard-dialog .p-dialog-header,\r\n#olap-wizard-dialog .p-dialog-content {\r\n    padding: 0;\r\n}\r\n#olap-wizard-dialog .p-dialog-content {\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex: 1;\r\n}\r\n.wizard-overlay-spinner .p-progress-spinner-svg {\r\n    width: 125px;\r\n}\r\n</style>\r\n","<template>\r\n    <Dialog id=\"olap-scenario-dialog\" class=\"p-fluid kn-dialog--toolbar--primary\" :style=\"descriptor.style.dialog\" :visible=\"visible\" :modal=\"true\" :closable=\"false\" :draggable=\"false\">\r\n        <template #header>\r\n            <Toolbar class=\"kn-toolbar kn-toolbar--primary p-p-0 p-m-2 p-col-12\">\r\n                <template #start>\r\n                    {{ $t('documentExecution.olap.scenarioWizard.title') }}\r\n                </template>\r\n                <template #end>\r\n                    <Button icon=\"fas fa-info-circle\" class=\"p-button-text p-button-rounded p-button-plain\" @click=\"showInfo = !showInfo\" />\r\n                </template>\r\n            </Toolbar>\r\n        </template>\r\n\r\n        <div class=\"p-d-flex p-flex-column\">\r\n            <InlineMessage v-if=\"showInfo\" class=\"p-m-2\" severity=\"info\">{{ $t('documentExecution.olap.scenarioWizard.longInfo') }}</InlineMessage>\r\n            <div class=\"p-float-label p-col-12 p-mt-2\">\r\n                <Dropdown id=\"selectedCube\" class=\"kn-material-input\" v-model=\"selectedCube\" :options=\"cubes\" optionLabel=\"name\" @change=\"onCubeChange\" />\r\n                <label for=\"selectedCube\" class=\"kn-material-input-label\"> {{ $t('documentExecution.olap.scenarioWizard.selectedCube') }} </label>\r\n            </div>\r\n\r\n            <Card class=\"p-m-2\">\r\n                <template #header>\r\n                    <Toolbar class=\"kn-toolbar kn-toolbar--secondary\">\r\n                        <template #start>\r\n                            {{ $t('documentExecution.olap.scenarioWizard.editableMeasures') }}\r\n                        </template>\r\n                    </Toolbar>\r\n                </template>\r\n                <template #content>\r\n                    <DataTable :value=\"measures\" v-model:selection=\"scenario.MEASURE\" class=\"p-datatable-sm kn-table\" dataKey=\"XML_TAG_TEXT_CONTENT\" responsiveLayout=\"stack\" breakpoint=\"960px\" :scrollable=\"true\" scrollHeight=\"flex\">\r\n                        <template #empty>\r\n                            {{ $t('common.info.noDataFound') }}\r\n                        </template>\r\n                        <Column class=\"kn-column-checkbox\" selectionMode=\"multiple\" dataKey=\"XML_TAG_TEXT_CONTENT\"></Column>\r\n                        <Column field=\"XML_TAG_TEXT_CONTENT\" :header=\"$t('common.name')\"></Column>\r\n                    </DataTable>\r\n                </template>\r\n            </Card>\r\n            <Toolbar class=\"kn-toolbar kn-toolbar--secondary p-mx-2\">\r\n                <template #start>\r\n                    <Button v-if=\"!expandParamsCard\" icon=\"fas fa-chevron-right\" class=\"p-button-text p-button-rounded p-button-plain\" style=\"color: white\" @click=\"expandParamsCard = true\" />\r\n                    <Button v-else icon=\"fas fa-chevron-down\" class=\"p-button-text p-button-rounded p-button-plain\" style=\"color: white\" @click=\"expandParamsCard = false\" />\r\n                    {{ $t('managers.datasetManagement.params') }}\r\n                </template>\r\n                <template #end>\r\n                    <Button icon=\"fas fa-plus\" class=\"p-button-text p-button-rounded p-button-plain\" @click=\"addNewParam\" />\r\n                    <Button icon=\"fas fa-eraser\" class=\"p-button-text p-button-rounded p-button-plain\" :disabled=\"disableDeleteAll\" @click=\"removeAllParams\" />\r\n                </template>\r\n            </Toolbar>\r\n            <Card v-show=\"expandParamsCard\" class=\"p-mx-2 p-mb-2\">\r\n                <template #content>\r\n                    <DataTable class=\"p-datatable-sm kn-table\" editMode=\"cell\" :value=\"scenario.VARIABLE\" :scrollable=\"true\" scrollHeight=\"250px\" responsiveLayout=\"stack\" breakpoint=\"960px\">\r\n                        <template #empty>\r\n                            {{ $t('managers.datasetManagement.tableEmpty') }}\r\n                        </template>\r\n                        <Column field=\"name\" :header=\"$t('documentExecution.olap.scenarioWizard.parameterName')\">\r\n                            <template #body=\"{ data }\">\r\n                                <InputText class=\"kn-material-input\" v-model=\"data.name\" :style=\"descriptor.style.columnStyle\" />\r\n                            </template>\r\n                        </Column>\r\n                        <Column field=\"value\" :header=\"$t('documentExecution.olap.scenarioWizard.parameterValue')\">\r\n                            <template #body=\"{ data }\">\r\n                                <InputText class=\"kn-material-input\" v-model=\"data.value\" :style=\"descriptor.style.columnStyle\" />\r\n                            </template>\r\n                        </Column>\r\n                        <Column @rowClick=\"false\" :style=\"descriptor.style.iconColumn\">\r\n                            <template #body=\"slotProps\">\r\n                                <Button icon=\"pi pi-trash\" class=\"p-button-link\" @click=\"removeParam(slotProps)\" />\r\n                            </template>\r\n                        </Column>\r\n                    </DataTable>\r\n                </template>\r\n            </Card>\r\n        </div>\r\n\r\n        <template #footer>\r\n            <Button class=\"kn-button\" @click=\"resetScenarioData\"> {{ $t('documentExecution.olap.scenarioWizard.clearData') }}</Button>\r\n            <Button class=\"kn-button kn-button--secondary\" @click=\"$emit('close')\"> {{ $t('common.cancel') }}</Button>\r\n            <Button class=\"kn-button kn-button--primary\" @click=\"saveScenario\" :disabled=\"saveButtonDisabled\"> {{ $t('common.save') }}</Button>\r\n        </template>\r\n    </Dialog>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport { AxiosResponse } from 'axios'\r\nimport Dialog from 'primevue/dialog'\r\nimport descriptor from './OlapScenarioWizardDescriptor.json'\r\nimport InlineMessage from 'primevue/inlinemessage'\r\nimport Dropdown from 'primevue/dropdown'\r\nimport Card from 'primevue/card'\r\nimport Column from 'primevue/column'\r\nimport DataTable from 'primevue/datatable'\r\n\r\nimport deepcopy from 'deepcopy'\r\n\r\nexport default defineComponent({\r\n    name: 'olap-scenario-wizard',\r\n    components: { Dialog, InlineMessage, Dropdown, Card, Column, DataTable },\r\n    props: { artifactIdProp: { type: String }, sbiExecutionId: { type: String }, olapDesignerProp: { type: Object, required: true } },\r\n    emits: ['close', 'saveScenario', 'deleteScenario'],\r\n    computed: {\r\n        saveButtonDisabled() {\r\n            let validation = false\r\n            if (this.scenario.VARIABLE) {\r\n                for (let i = 0; i < this.scenario.VARIABLE.length; ++i) {\r\n                    if (Object.keys(this.scenario.VARIABLE[i].name).length === 0 || Object.keys(this.scenario.VARIABLE[i].value).length === 0) {\r\n                        validation = true\r\n                        break\r\n                    }\r\n                }\r\n            }\r\n            this.scenario.MEASURE.length === 0 ? (validation = true) : ''\r\n            return validation\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            descriptor,\r\n            showInfo: false,\r\n            loading: false,\r\n            expandParamsCard: true,\r\n            scenario: {} as any,\r\n            selectedCube: { name: '' } as any,\r\n            cubes: [] as any,\r\n            measures: [] as any\r\n        }\r\n    },\r\n    watch: {\r\n        async visible() {\r\n            await this.getAllCubes()\r\n            this.createScenario()\r\n        }\r\n    },\r\n    created() {\r\n        this.getAllCubes()\r\n        this.createScenario()\r\n    },\r\n    methods: {\r\n        createScenario() {\r\n            if (this.olapDesignerProp.template.wrappedObject.olap.SCENARIO) {\r\n                this.scenario = deepcopy(this.olapDesignerProp.template.wrappedObject.olap.SCENARIO)\r\n                this.selectedCube = { name: this.olapDesignerProp.template.wrappedObject.olap.SCENARIO.editCube }\r\n                this.getAllMeasures()\r\n            } else {\r\n                this.scenario = deepcopy(this.descriptor.scenarioTemplate)\r\n            }\r\n        },\r\n        async getAllCubes() {\r\n            const currentContentId = this.artifactIdProp\r\n            await this.$http\r\n                .get(import.meta.env.VITE_OLAP_PATH + `1.0/designer/cubes/${currentContentId}?SBI_EXECUTION_ID=${this.sbiExecutionId}`)\r\n                .then((response: AxiosResponse<any>) => {\r\n                    this.cubes = response.data.map((cube) => ({ name: cube }))\r\n                })\r\n                .catch(() => {})\r\n                .finally(() => (this.loading = false))\r\n        },\r\n        async getAllMeasures() {\r\n            const currentContentId = this.artifactIdProp\r\n            await this.$http\r\n                .get(import.meta.env.VITE_OLAP_PATH + `1.0/designer/measures/${currentContentId}/${this.selectedCube.name}?SBI_EXECUTION_ID=${this.sbiExecutionId}`)\r\n                .then((response: AxiosResponse<any>) => {\r\n                    this.measures = response.data.map((cube) => ({ XML_TAG_TEXT_CONTENT: cube }))\r\n                })\r\n                .catch(() => {})\r\n                .finally(() => (this.loading = false))\r\n        },\r\n        onCubeChange() {\r\n            this.scenario.MEASURE = []\r\n            this.getAllMeasures()\r\n        },\r\n\r\n        addNewParam() {\r\n            const newParam = { ...descriptor.newVariable }\r\n            this.scenario.VARIABLE.push(newParam)\r\n        },\r\n        removeAllParams() {\r\n            this.$confirm.require({\r\n                message: this.$t('documentExecution.olap.scenarioWizard.deleteAllMsg'),\r\n                header: this.$t('documentExecution.olap.scenarioWizard.deleteAllTitle'),\r\n                icon: 'pi pi-exclamation-triangle',\r\n                accept: () => (this.scenario.VARIABLE = [])\r\n            })\r\n        },\r\n        removeParam(slotProps) {\r\n            this.scenario.VARIABLE.splice(slotProps.index, 1)\r\n        },\r\n        resetScenarioData() {\r\n            this.scenario = deepcopy(this.descriptor.scenarioTemplate)\r\n            this.selectedCube = {}\r\n            this.$emit('deleteScenario')\r\n        },\r\n        saveScenario() {\r\n            this.scenario.editCube = this.selectedCube.name\r\n            this.$emit('saveScenario', this.scenario, this.selectedCube)\r\n        }\r\n    }\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n#olap-scenario-dialog .p-dialog-header,\r\n#olap-scenario-dialog .p-dialog-content {\r\n    padding: 0;\r\n}\r\n#olap-scenario-dialog .p-dialog-content {\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex: 1;\r\n}\r\n</style>\r\n","<template>\r\n    <div class=\"p-p-4\">\r\n        <Message v-if=\"searchWarningMessageVisible\" class=\"p-m-4\" severity=\"warn\" :closable=\"false\" :style=\"olapFilterDialogDescriptor.styles.message\">\r\n            {{ $t('documentExecution.olap.filterDialog.searchWarningMessage') }}\r\n        </Message>\r\n        <Message v-if=\"selectedAncestorsWarningVisible\" class=\"p-m-4\" severity=\"warn\" :closable=\"false\" :style=\"olapFilterDialogDescriptor.styles.message\">\r\n            {{ $t('documentExecution.olap.filterDialog.ancestorDescendantWarning') }}\r\n        </Message>\r\n        <InputText v-if=\"!treeLocked\" id=\"olap-filter-tree-search\" class=\"kn-material-input\" v-model.trim=\"searchWord\" type=\"text\" :placeholder=\"$t('common.search')\" @input=\"searchTree\" />\r\n        <Tree id=\"kn-parameter-tree\" :class=\"{ 'olap-filter-tree-locked': treeLocked }\" :value=\"nodes\" :metaKeySelection=\"false\" :expandedKeys=\"expandedKeys\" :loading=\"loading\" @nodeExpand=\"loadNodes($event)\">\r\n            <template #default=\"slotProps\">\r\n                <Checkbox\r\n                    class=\"p-ml-2\"\r\n                    v-model=\"selectedFilters\"\r\n                    :value=\"filterType === 'slicer' ? slotProps.node.id : slotProps.node.data\"\r\n                    :disabled=\"treeLocked && filterType !== 'visible' && !slotProps.node.data.visible\"\r\n                    v-tooltip=\"{ value: $t('documentExecution.olap.filterDialog.parentDisabledTooltip'), disabled: !treeLocked || slotProps.node.data.visible || filterType === 'visible' }\"\r\n                    @change=\"onFiltersSelected()\"\r\n                />\r\n                <span>{{ slotProps.node.label }}</span>\r\n            </template>\r\n        </Tree>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport { iNode, iFilterNode } from '../Olap'\r\nimport { AxiosResponse } from 'axios'\r\nimport Checkbox from 'primevue/checkbox'\r\nimport Message from 'primevue/message'\r\nimport olapFilterDialogDescriptor from './OlapFilterDialogDescriptor.json'\r\nimport Tree from 'primevue/tree'\r\n\r\nimport cryptoRandomString from 'crypto-random-string'\r\n\r\nexport default defineComponent({\r\n    name: 'olap-filter-tree',\r\n    components: { Checkbox, Message, Tree },\r\n    props: { propFilter: { type: Object }, id: { type: String }, clearTrigger: { type: Boolean }, treeLocked: { type: Boolean } },\r\n    emits: ['close', 'loading', 'filtersChanged', 'lockTree', 'rootNode'],\r\n    data() {\r\n        return {\r\n            olapFilterDialogDescriptor,\r\n            nodes: [] as iNode[],\r\n            filter: null as any,\r\n            filterType: '' as string,\r\n            selectedFilters: [] as any,\r\n            expandedKeys: {},\r\n            searchWord: '',\r\n            searchTimeout: null as any,\r\n            searchWarningMessageVisible: false,\r\n            selectedAncestorsWarningVisible: false,\r\n            loading: false\r\n        }\r\n    },\r\n    watch: {\r\n        propFilter() {\r\n            this.loadFilter()\r\n        },\r\n        clearTrigger() {\r\n            this.selectedFilters = []\r\n        },\r\n        treeLocked(value: boolean) {\r\n            if (!value) this.unlockTree()\r\n        }\r\n    },\r\n    created() {\r\n        this.loadFilter()\r\n    },\r\n    methods: {\r\n        loadFilter() {\r\n            this.filter = this.propFilter ? this.propFilter.filter : {}\r\n            this.filterType = this.propFilter?.type\r\n\r\n            this.selectedFilters = []\r\n            if (this.filterType === 'slicer') {\r\n                this.filter.hierarchies?.forEach((hierarchy: any) => {\r\n                    hierarchy.slicers?.forEach((slicer: any) => {\r\n                        this.selectedFilters.push(slicer.uniqueName)\r\n                    })\r\n                })\r\n            }\r\n            if (this.selectedFilters.length > 0) this.$emit('lockTree')\r\n            this.$emit('filtersChanged', this.selectedFilters)\r\n            this.loadNodes(null)\r\n        },\r\n        async loadNodes(parent: any) {\r\n            this.$emit('loading', true)\r\n            this.loading = true\r\n\r\n            if (!this.filter || (parent && parent.leaf) || this.searchWord.length > 2) {\r\n                this.$emit('loading', false)\r\n                this.loading = false\r\n                return\r\n            }\r\n\r\n            let type = 'filtertree'\r\n            if (!parent) type = this.filterType === 'slicer' ? 'slicerTree' : 'visibleMembers'\r\n            const content = [] as any[]\r\n\r\n            let postData = {}\r\n            if (parent) {\r\n                postData = { axis: this.filter.axis, hierarchy: this.filter.selectedHierarchyUniqueName, node: parent.id }\r\n            } else if (this.filterType === 'slicer') {\r\n                postData = { hierarchyUniqueName: this.filter.selectedHierarchyUniqueName }\r\n            } else {\r\n                postData = { hierarchy: this.filter.selectedHierarchyUniqueName }\r\n            }\r\n\r\n            await this.$http\r\n                .post(import.meta.env.VITE_OLAP_PATH + `1.0/hierarchy/${type}?SBI_EXECUTION_ID=${this.id}`, postData, { headers: { Accept: 'application/json, text/plain, */*' } })\r\n                .then((response: AxiosResponse<any>) => {\r\n                    response.data.forEach((el: any) => {\r\n                        content.push(this.createNode(el))\r\n                    })\r\n                })\r\n                .catch(() => {})\r\n\r\n            this.attachContentToTree(parent, content)\r\n            if (this.filterType === 'visible' && !parent) this.setSelectedFiltersForVisibleType()\r\n            this.$emit('rootNode', this.nodes[0])\r\n            this.$emit('loading', false)\r\n            this.loading = false\r\n        },\r\n        createNode(el: iFilterNode) {\r\n            const tempNode = {\r\n                key: cryptoRandomString({ length: 16, type: 'base64' }) as string,\r\n                id: '' + el.id,\r\n                label: el.name,\r\n                children: [] as iNode[],\r\n                data: el,\r\n                style: this.olapFilterDialogDescriptor.node.style,\r\n                leaf: this.treeLocked ? true : el.leaf\r\n            } as iNode\r\n            tempNode.children = el.children?.map((child: iFilterNode) => {\r\n                return this.createNode(child)\r\n            })\r\n\r\n            if (el.collapsed || this.searchWord.length > 2) {\r\n                this.expandedKeys[tempNode.key] = true\r\n            }\r\n\r\n            if (this.filterType !== 'slicer') {\r\n                const index = this.selectedFilters.findIndex((filter: any) => tempNode.id === filter.id && tempNode.data.uniqueName === filter.uniqueName)\r\n                if (index !== -1) this.selectedFilters[index] = { ...tempNode.data }\r\n            }\r\n\r\n            return tempNode\r\n        },\r\n        attachContentToTree(parent: iNode | null, content: iNode[]) {\r\n            if (parent) {\r\n                parent.children = []\r\n                parent.children = content\r\n            } else {\r\n                this.nodes = []\r\n                this.nodes = content\r\n            }\r\n        },\r\n        onFiltersSelected() {\r\n            this.selectedAncestorsWarningVisible = this.filterType === 'slicer' && this.hasSelectedAncestorsAndDescendant(this.nodes[0], false)\r\n            this.$emit('filtersChanged', this.selectedFilters)\r\n        },\r\n        hasSelectedAncestorsAndDescendant(node: iNode, ancestorIsSelected: boolean) {\r\n            const nodeIsSelected = this.nodeIsSelected(node)\r\n            if (nodeIsSelected && ancestorIsSelected) {\r\n                return true\r\n            } else if (node.children) {\r\n                for (let i = 0; i < node.children.length; i++) {\r\n                    if (this.hasSelectedAncestorsAndDescendant(node.children[i], nodeIsSelected || ancestorIsSelected)) return true\r\n                }\r\n            }\r\n            return false\r\n        },\r\n        nodeIsSelected(node: iNode) {\r\n            const index = this.selectedFilters.findIndex((el: any) => el === node.id)\r\n            return index !== -1\r\n        },\r\n        unlockTree() {\r\n            this.expandedKeys = {}\r\n            for (let i = 0; i < this.nodes.length; i++) {\r\n                this.setNodeExpandable(this.nodes[i])\r\n            }\r\n        },\r\n        setNodeExpandable(node: iNode) {\r\n            node.leaf = node.data.leaf\r\n            if (node.children) {\r\n                for (let i = 0; i < node.children.length; i++) {\r\n                    this.setNodeExpandable(node.children[i])\r\n                }\r\n            }\r\n        },\r\n        searchTree() {\r\n            clearTimeout(this.searchTimeout)\r\n            this.searchWarningMessageVisible = this.searchWord.length > 0 && this.searchWord.length < 3\r\n            if (this.searchWarningMessageVisible) return\r\n            this.searchTimeout = setTimeout(async () => {\r\n                if (this.searchWord.length > 2) {\r\n                    this.loading = true\r\n                    const content = [] as any[]\r\n                    await this.$http\r\n                        .post(import.meta.env.VITE_OLAP_PATH + `1.0/hierarchy/search?SBI_EXECUTION_ID=${this.id}`, { axis: this.filter.axis, hierarchy: this.filter.selectedHierarchyUniqueName, name: this.searchWord, showS: false }, { headers: { Accept: 'application/json, text/plain, */*' } })\r\n                        .then((response: AxiosResponse<any>) => {\r\n                            this.expandedKeys = {}\r\n                            response.data.forEach((el: any) => {\r\n                                content.push(this.createNode(el))\r\n                            })\r\n                        })\r\n                        .catch(() => {})\r\n                    this.attachContentToTree(null, content)\r\n                    this.loading = false\r\n                } else {\r\n                    this.loadNodes(null)\r\n                }\r\n            }, 500)\r\n        },\r\n        setSelectedFiltersForVisibleType() {\r\n            this.$emit('lockTree')\r\n            for (let i = 0; i < this.nodes.length; i++) {\r\n                this.setSelectedVisibleMembers(this.nodes[i])\r\n            }\r\n        },\r\n        setSelectedVisibleMembers(node: iNode) {\r\n            this.expandedKeys[node.key] = true\r\n            if (node.data.visible) this.selectedFilters.push(node.data)\r\n            if (node.children) {\r\n                for (let i = 0; i < node.children.length; i++) {\r\n                    this.setSelectedVisibleMembers(node.children[i])\r\n                }\r\n            }\r\n        }\r\n    }\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n#kn-parameter-tree {\r\n    border: none;\r\n}\r\n.olap-filter-tree-locked .p-tree-toggler {\r\n    cursor: not-allowed;\r\n    pointer-events: none;\r\n}\r\n.olap-filter-tree-locked .p-tree-toggler-icon {\r\n    display: none;\r\n    pointer-events: none;\r\n}\r\n\r\n#olap-filter-tree-search {\r\n    width: 30%;\r\n}\r\n</style>\r\n","<template>\r\n    <DataTable :value=\"levels\" class=\"p-datatable-sm kn-table p-m-4\" responsiveLayout=\"stack\" breakpoint=\"960px\">\r\n        <template #empty>{{ $t('common.info.noDataFound') }}</template>\r\n\r\n        <Column class=\"kn-truncated\" :header=\"$t('documentExecution.olap.filterDialog.level')\" :style=\"olapFilterDialogDescriptor.iconColumnStyle\">\r\n            <template #body=\"slotProps\">\r\n                <span> {{ slotProps.index + 1 }} </span>\r\n            </template>\r\n        </Column>\r\n        <Column class=\"kn-truncated\" :field=\"'LEVEL'\" :header=\"$t('common.name')\" :key=\"'name'\"> </Column>\r\n        <Column field=\"value\" :header=\"$t('documentExecution.olap.filterDialog.driverProfileAttribute')\" key=\"value\">\r\n            <template #body=\"slotProps\">\r\n                <Dropdown class=\"olap-filter-table-dropdown\" v-model=\"slotProps.data[slotProps.column.props.field]\" :options=\"options\" optionValue=\"value\" optionLabel=\"label\" optionGroupValue=\"value\" optionGroupLabel=\"label\" optionGroupChildren=\"items\" @change=\"onLevelUpdate(slotProps.data)\">\r\n                    <template #option=\"slotProps\">\r\n                        <span> {{ slotProps.option.label }} </span>\r\n                    </template>\r\n                </Dropdown>\r\n            </template>\r\n        </Column>\r\n\r\n        <Column :style=\"olapFilterDialogDescriptor.iconColumnStyle\">\r\n            <template #body=\"slotProps\">\r\n                <Button icon=\"pi pi-trash\" class=\"p-button-link\" @click=\"remove(slotProps.data)\" />\r\n            </template>\r\n        </Column>\r\n    </DataTable>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent, PropType } from 'vue'\r\nimport { iParameter, iProfileAttribute } from '../Olap'\r\nimport Column from 'primevue/column'\r\nimport DataTable from 'primevue/datatable'\r\nimport Dropdown from 'primevue/dropdown'\r\nimport olapFilterDialogDescriptor from './OlapFilterDialogDescriptor.json'\r\n\r\nexport default defineComponent({\r\n    name: 'olap-filter-table',\r\n    components: { Column, DataTable, Dropdown },\r\n    props: { propFilter: { type: Object }, propLevels: { type: Object }, parameters: { type: Array as PropType<iParameter[]> }, profileAttributes: { type: Array as PropType<iProfileAttribute[]> } },\r\n    data() {\r\n        return {\r\n            olapFilterDialogDescriptor,\r\n            levels: [] as any[],\r\n            options: [\r\n                { label: 'Drivers', items: [] },\r\n                { label: 'Profile Attributes', items: [] }\r\n            ] as any[]\r\n        }\r\n    },\r\n    watch: {\r\n        propLevels() {\r\n            this.loadLevels()\r\n        },\r\n        parameters() {\r\n            this.loadParameters()\r\n        },\r\n        profileAttributes() {\r\n            this.loadProfileAttributes()\r\n        }\r\n    },\r\n    created() {\r\n        this.loadLevels()\r\n        this.loadParameters()\r\n        this.loadProfileAttributes()\r\n        this.removeEmptyOptions()\r\n    },\r\n    methods: {\r\n        loadLevels() {\r\n            this.levels = this.propLevels as any[]\r\n        },\r\n        loadParameters() {\r\n            this.options[0].items = this.parameters?.map((parameter: iParameter) => {\r\n                return { ...parameter, value: parameter.label, label: parameter.label, url: parameter.url, type: 'driver' }\r\n            })\r\n        },\r\n        loadProfileAttributes() {\r\n            this.options[1].items = this.profileAttributes?.map((profileAttribute: iProfileAttribute) => {\r\n                {\r\n                    return { ...profileAttribute, value: profileAttribute.attributeName, label: profileAttribute.attributeName, type: 'profileAttribute' }\r\n                }\r\n            })\r\n        },\r\n        removeEmptyOptions() {\r\n            if (this.options[1].items.length === 0) this.options.splice(1, 1)\r\n            if (this.options[0].items.length === 0) this.options.splice(0, 1)\r\n        },\r\n        remove(level: any) {\r\n            level.value = ''\r\n            level.DRIVER = null\r\n            level.PROFILE_ATTRIBUTE = null\r\n        },\r\n        onLevelUpdate(level: any) {\r\n            const index = this.parameters?.findIndex((parameter: iParameter) => parameter.label === level.value)\r\n            if (index !== -1 && this.parameters) {\r\n                level.DRIVER = level.value\r\n                level.PROFILE_ATTRIBUTE = null\r\n                level.url = this.parameters[index as any].url\r\n            } else {\r\n                level.DRIVER = null\r\n                level.PROFILE_ATTRIBUTE = level.value\r\n                delete level.url\r\n            }\r\n        }\r\n    }\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.olap-filter-table-dropdown {\r\n    max-width: 500px;\r\n}\r\n</style>\r\n","<template>\r\n    <Dialog id=\"olap-filter-dialog\" class=\"p-fluid kn-dialog--toolbar--primary\" :style=\"olapFilterDialogDescriptor.style.dialog\" :visible=\"visible\" :modal=\"true\" :closable=\"false\">\r\n        <template #header>\r\n            <Toolbar class=\"kn-toolbar kn-toolbar--primary p-p-0 p-m-2 p-col-12\">\r\n                <template #start>\r\n                    {{ propFilter?.filter.name }}\r\n                </template>\r\n            </Toolbar>\r\n        </template>\r\n        <ProgressBar mode=\"indeterminate\" class=\"kn-progress-bar\" v-if=\"loading\" />\r\n\r\n        <Message class=\"p-m-4\" severity=\"info\" :closable=\"false\" :style=\"olapFilterDialogDescriptor.styles.message\">\r\n            <div v-if=\"treeLocked\">\r\n                <span>{{ $t('documentExecution.olap.filterDialog.treeLockedInfoMessage.partOne') }}</span>\r\n                <b>{{ $t('documentExecution.olap.filterDialog.treeLockedInfoMessage.partTwo') }}</b>\r\n                <span>{{ $t('documentExecution.olap.filterDialog.treeLockedInfoMessage.partThree') }}</span>\r\n            </div>\r\n            <span v-else>{{ $t('documentExecution.olap.filterDialog.infoMessage') }}</span>\r\n        </Message>\r\n\r\n        <SelectButton v-if=\"olapDesignerMode && !loading && propFilter?.type === 'slicer'\" id=\"olap-filter-select-buttons\" class=\"p-ml-auto p-mr-4\" v-model=\"mode\" :options=\"olapFilterDialogDescriptor.selectButtonOptions\" optionValue=\"value\">\r\n            <template #option=\"slotProps\">\r\n                <span>{{ $t(slotProps.option.label) }}</span>\r\n            </template>\r\n        </SelectButton>\r\n\r\n        <div v-show=\"!loading\">\r\n            <OlapFilterTree v-if=\"mode === 'selectFields'\" :propFilter=\"filter\" :id=\"id\" :clearTrigger=\"clearTrigger\" :treeLocked=\"treeLocked\" @loading=\"loading = $event\" @filtersChanged=\"onFiltersChange\" @lockTree=\"treeLocked = true\" @rootNode=\"setRootNode\"></OlapFilterTree>\r\n            <OlapFilterTable v-else :propFilter=\"filter\" :propLevels=\"levels\" :parameters=\"parameters\" :profileAttributes=\"profileAttributes\"></OlapFilterTable>\r\n        </div>\r\n\r\n        <template #footer>\r\n            <div class=\"p-d-flex p-flex-row\">\r\n                <Button v-show=\"selectedFilters.length > 0\" class=\"kn-button kn-button--primary\" @click=\"clear\"> {{ $t('common.clear') }}</Button>\r\n                <Button v-show=\"treeLocked\" class=\"kn-button kn-button--primary\" @click=\"treeLocked = false\"> {{ $t('common.add') }}</Button>\r\n                <Button class=\"kn-button kn-button--primary p-ml-auto\" @click=\"closeDialog\"> {{ $t('common.cancel') }}</Button>\r\n                <Button class=\"kn-button kn-button--primary\" :disabled=\"applyButtonDisabled\" @click=\"apply\"> {{ $t('common.apply') }}</Button>\r\n            </div>\r\n        </template>\r\n    </Dialog>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent, PropType } from 'vue'\r\nimport { iParameter, iProfileAttribute } from '../Olap'\r\nimport Dialog from 'primevue/dialog'\r\nimport Message from 'primevue/message'\r\nimport olapFilterDialogDescriptor from './OlapFilterDialogDescriptor.json'\r\nimport OlapFilterTree from './OlapFilterTree.vue'\r\nimport OlapFilterTable from './OlapFilterTable.vue'\r\nimport SelectButton from 'primevue/selectbutton'\r\n\r\nexport default defineComponent({\r\n    name: 'olap-filter-dialog',\r\n    components: { Dialog, Message, OlapFilterTree, OlapFilterTable, SelectButton },\r\n    props: {\r\n        visible: { type: Boolean },\r\n        propFilter: { type: Object },\r\n        id: { type: String },\r\n        olapDesignerMode: { type: Boolean },\r\n        parameters: { type: Array as PropType<iParameter[]> },\r\n        profileAttributes: { type: Array as PropType<iProfileAttribute[]> },\r\n        olapDesigner: { type: Object }\r\n    },\r\n    emits: ['close', 'applyFilters'],\r\n    data() {\r\n        return {\r\n            olapFilterDialogDescriptor,\r\n            filter: null as any,\r\n            selectedFilters: [] as string[],\r\n            clearTrigger: false,\r\n            treeLocked: false,\r\n            mode: 'selectFields',\r\n            levels: [] as any[],\r\n            rootNode: null as any,\r\n            loading: false\r\n        }\r\n    },\r\n    computed: {\r\n        applyButtonDisabled(): boolean {\r\n            return this.propFilter?.type !== 'slicer' && this.selectedFilters.length === 0\r\n        }\r\n    },\r\n    watch: {\r\n        propFilter() {\r\n            this.loadFilter()\r\n        }\r\n    },\r\n    created() {\r\n        this.loadFilter()\r\n    },\r\n    methods: {\r\n        loadFilter() {\r\n            this.filter = this.propFilter\r\n            this.loadLevels()\r\n        },\r\n        loadLevels() {\r\n            this.levels = []\r\n            if (this.propFilter) {\r\n                this.propFilter.filter.hierarchies?.forEach((hierarchy: any) => {\r\n                    hierarchy.levelNames?.forEach((level: string) => {\r\n                        if (level !== '(All)') {\r\n                            this.levels.push({ HIERARCHY: this.propFilter?.filter.uniqueName, LEVEL: level, DRIVER: null, PROFILE_ATTRIBUTE: null, value: null })\r\n                        }\r\n                    })\r\n                })\r\n            }\r\n            this.loadLevelValues()\r\n        },\r\n        loadLevelValues() {\r\n            const dynamicSlicers = this.olapDesigner?.template?.wrappedObject?.olap?.DYNAMIC_SLICER\r\n\r\n            dynamicSlicers?.forEach((slicer: any) => {\r\n                const index = this.levels.findIndex((level: any) => level.LEVEL === slicer.LEVEL && level.HIERARCHY === slicer.HIERARCHY)\r\n                if (index !== -1) {\r\n                    this.mode = 'filterUsingDrivers'\r\n                    if (slicer.DRIVER) {\r\n                        this.levels[index].value = slicer.DRIVER\r\n                        this.levels[index].DRIVER = slicer.DRIVER\r\n                    } else if (slicer.PROFILE_ATTRIBUTE) {\r\n                        this.levels[index].value = slicer.PROFILE_ATTRIBUTE\r\n                        this.levels[index].PROFILE_ATTRIBUTE = slicer.PROFILE_ATTRIBUTE\r\n                    }\r\n                }\r\n            })\r\n        },\r\n        clear() {\r\n            this.selectedFilters = []\r\n            this.treeLocked = false\r\n            this.clearTrigger = !this.clearTrigger\r\n        },\r\n        closeDialog() {\r\n            this.$emit('close')\r\n            this.filter = null\r\n            this.levels = []\r\n            this.treeLocked = false\r\n            this.mode = 'selectFields'\r\n        },\r\n        apply() {\r\n            let payload = {} as any\r\n            if (this.propFilter?.type === 'slicer') {\r\n                if (this.mode === 'selectFields') {\r\n                    this.levels = []\r\n                } else {\r\n                    if (!this.checkIfLevelsAreValid()) return this.store.setError({ title: this.$t('common.toast.errorTitle'), msg: this.$t('documentExecution.olap.filterDialog.filterLevelsError') })\r\n                    this.selectedFilters = this.rootNode ? [this.rootNode.id] : []\r\n                }\r\n                payload = { hierarchy: this.propFilter?.filter.selectedHierarchyUniqueName, members: this.selectedFilters, multi: false, type: 'slicer', filterUniqueName: this.propFilter?.filter.uniqueName }\r\n                if (this.mode !== 'selectFields') {\r\n                    payload.DYNAMIC_SLICER = this.levels\r\n                    payload.rootNode = this.rootNode\r\n                }\r\n            } else {\r\n                payload = { members: this.selectedFilters, type: 'visible', axis: this.propFilter?.filter.axis, levels: this.levels }\r\n            }\r\n            this.$emit('applyFilters', payload)\r\n            this.mode = 'selectFields'\r\n        },\r\n        checkIfLevelsAreValid() {\r\n            let valid = true\r\n            let foundEmpty = false\r\n            for (let i = 0; i < this.levels.length; i++) {\r\n                if (!this.levels[i].value) foundEmpty = true\r\n                if (foundEmpty && this.levels[i].value) {\r\n                    valid = false\r\n                    break\r\n                }\r\n            }\r\n\r\n            return valid\r\n        },\r\n        onFiltersChange(values: string[]) {\r\n            this.selectedFilters = values\r\n        },\r\n        setRootNode(rootNode: any) {\r\n            this.rootNode = rootNode\r\n        }\r\n    }\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n#olap-filter-dialog .p-dialog-header,\r\n#olap-filter-dialog .p-dialog-content {\r\n    padding: 0;\r\n}\r\n#olap-filter-dialog .p-dialog-content {\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex: 1;\r\n}\r\n\r\n#olap-filter-select-buttons {\r\n    min-width: 300px;\r\n}\r\n\r\n#olap-filter-select-buttons .p-button {\r\n    justify-content: center;\r\n}\r\n</style>\r\n","<template>\r\n    <Dialog id=\"olap-save-new-version-dialog\" class=\"p-fluid kn-dialog--toolbar--primary\" :style=\"olapSaveNewVersionDialogDescriptor.style.dialog\" :visible=\"visible\" :modal=\"true\" :closable=\"false\">\r\n        <template #header>\r\n            <Toolbar class=\"kn-toolbar kn-toolbar--primary p-p-0 p-m-0 p-col-12\">\r\n                <template #start>\r\n                    {{ $t('documentExecution.olap.saveVersion.title') }}\r\n                </template>\r\n            </Toolbar>\r\n        </template>\r\n        <ProgressBar mode=\"indeterminate\" class=\"kn-progress-bar\" v-if=\"loading\" />\r\n\r\n        <form v-if=\"!loading\" class=\"p-fluid p-formgrid p-grid p-m-1\">\r\n            <InlineMessage v-if=\"!loading\" class=\"p-m-1 kn-width-full\" severity=\"info\" closable=\"false\"> {{ $t('documentExecution.olap.saveVersion.infoMessage') }}</InlineMessage>\r\n\r\n            <div class=\"p-field p-float-label p-col-12 p-mt-2\">\r\n                <InputText class=\"kn-material-input\" v-model.trim=\"version.name\" />\r\n                <label class=\"kn-material-input-label\"> {{ $t('documentExecution.olap.saveVersion.versionName') }}</label>\r\n            </div>\r\n\r\n            <div class=\"p-field p-col-12 p-mt-2\">\r\n                <span class=\"p-float-label\">\r\n                    <Textarea class=\"kn-material-input\" v-model.trim=\"version.descr\" rows=\"3\" :autoResize=\"true\" />\r\n                    <label class=\"kn-material-input-label\"> {{ $t('documentExecution.olap.saveVersion.versionDescription') }}</label>\r\n                </span>\r\n            </div>\r\n        </form>\r\n\r\n        <template #footer>\r\n            <Button class=\"kn-button kn-button--secondary\" :disabled=\"loading\" @click=\"close\"> {{ $t('common.close') }}</Button>\r\n            <Button class=\"kn-button kn-button--primary\" :disabled=\"loading\" @click=\"save\"> {{ $t('common.save') }}</Button>\r\n        </template>\r\n    </Dialog>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport { AxiosResponse } from 'axios'\r\nimport Dialog from 'primevue/dialog'\r\nimport InlineMessage from 'primevue/inlinemessage'\r\nimport olapSaveNewVersionDialogDescriptor from './OlapSaveNewVersionDialogDescriptor.json'\r\nimport Textarea from 'primevue/textarea'\r\nimport mainStore from '../../../../App.store'\r\n\r\nexport default defineComponent({\r\n    name: 'olap-save-new-version-dialog',\r\n    components: { Dialog, InlineMessage, Textarea },\r\n    props: { visible: { type: Boolean }, id: { type: String } },\r\n    emits: ['close', 'save', 'newVersionSaved'],\r\n    computed: {},\r\n    data() {\r\n        return {\r\n            olapSaveNewVersionDialogDescriptor,\r\n            version: { name: '', descr: '' } as { name: string; descr: string },\r\n            loading: false\r\n        }\r\n    },\r\n    watch: {},\r\n    setup() {\r\n        const store = mainStore()\r\n        return { store }\r\n    },\r\n    created() {},\r\n    methods: {\r\n        close() {\r\n            this.$emit('close')\r\n            this.version = { name: '', descr: '' }\r\n        },\r\n        async save() {\r\n            this.loading = true\r\n            await this.$http\r\n                .post(\r\n                    import.meta.env.VITE_OLAP_PATH + `1.0/model/saveAs?SBI_EXECUTION_ID=${this.id}`,\r\n                    { name: this.version.name !== '' ? this.version.name : 'sbiNoDescription', descr: this.version.descr !== '' ? this.version.descr : 'sbiNoDescription' },\r\n                    { headers: { Accept: 'application/json, text/plain, */*', 'Content-Type': 'application/json;charset=UTF-8', 'X-Disable-Errors': 'true' } }\r\n                )\r\n                .then((response: AxiosResponse<any>) => {\r\n                    this.store.setInfo({\r\n                        title: this.$t('common.toast.createTitle'),\r\n                        msg: this.$t('common.toast.success')\r\n                    })\r\n                    this.$emit('newVersionSaved', response.data)\r\n                    this.close()\r\n                })\r\n                .catch((error: any) =>\r\n                    this.store.setError({\r\n                        title: this.$t('common.error.generic'),\r\n                        msg: error?.localizedMessage\r\n                    })\r\n                )\r\n            this.loading = false\r\n        }\r\n    }\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n#olap-save-new-version-dialog .p-dialog-header,\r\n#olap-save-new-version-dialog .p-dialog-content {\r\n    padding: 0;\r\n}\r\n#olap-save-new-version-dialog .p-dialog-content {\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex: 1;\r\n}\r\n</style>\r\n","<template>\r\n    <Dialog id=\"olap-wizard-dialog\" class=\"p-fluid kn-dialog--toolbar--primary\" :style=\"descriptor.style.dialog\" :visible=\"visible\" :modal=\"true\" :closable=\"false\">\r\n        <template #header>\r\n            <Toolbar class=\"kn-toolbar kn-toolbar--primary p-p-0 p-m-2 p-col-12\">\r\n                <template #start>\r\n                    {{ $t('documentExecution.olap.alDialog.title') }}\r\n                </template>\r\n            </Toolbar>\r\n        </template>\r\n\r\n        <form class=\"p-fluid p-formgrid p-grid p-m-1\">\r\n            <InlineMessage class=\"p-m-1 p-col-12\" severity=\"info\" closable=\"false\">{{ $t('documentExecution.olap.alDialog.infoMsg') }}</InlineMessage>\r\n            <div class=\"p-field p-float-label p-col-12 p-mt-2\">\r\n                <Dropdown id=\"availableAlg\" class=\"kn-material-input\" v-model=\"selectedAlgorithm\" :options=\"availableAlgorithms\" optionLabel=\"name\" />\r\n                <label for=\"availableAlg\" class=\"kn-material-input-label\"> {{ $t('documentExecution.olap.alDialog.availableAlg') }} </label>\r\n            </div>\r\n        </form>\r\n\r\n        <template #footer>\r\n            <Button class=\"kn-button kn-button--secondary\" @click=\"$emit('close')\"> {{ $t('common.close') }}</Button>\r\n            <Button class=\"kn-button kn-button--primary\" :disabled=\"!selectedAlgorithm\" @click=\"changeAlgorithm\"> {{ $t('common.save') }}</Button>\r\n        </template>\r\n    </Dialog>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport { AxiosResponse } from 'axios'\r\nimport Dialog from 'primevue/dialog'\r\nimport descriptor from './OlapAlgorithmDialog.json'\r\nimport Dropdown from 'primevue/dropdown'\r\nimport InlineMessage from 'primevue/inlinemessage'\r\nimport mainStore from '../../../../App.store'\r\n\r\nexport default defineComponent({\r\n    name: 'olap-algorithm',\r\n    components: { Dialog, Dropdown, InlineMessage },\r\n    props: { sbiExecutionId: { type: String } },\r\n    emits: ['close'],\r\n    data() {\r\n        return {\r\n            descriptor,\r\n            selectedAlgorithm: {} as any,\r\n            availableAlgorithms: [] as any\r\n        }\r\n    },\r\n    setup() {\r\n        const store = mainStore()\r\n        return { store }\r\n    },\r\n    created() {\r\n        this.getAvailableAlgorithms()\r\n    },\r\n    methods: {\r\n        async getAvailableAlgorithms() {\r\n            await this.$http\r\n                .get(import.meta.env.VITE_OLAP_PATH + `1.0/allocationalgorithm/?SBI_EXECUTION_ID=${this.sbiExecutionId}`, { headers: { Accept: 'application/json, text/plain, */*' } })\r\n                .then((response: AxiosResponse<any>) => {\r\n                    this.availableAlgorithms = response.data\r\n                })\r\n                .catch(() => {})\r\n        },\r\n        async changeAlgorithm() {\r\n            await this.$http\r\n                .post(import.meta.env.VITE_OLAP_PATH + `1.0/allocationalgorithm/${this.selectedAlgorithm.className}/?SBI_EXECUTION_ID=${this.sbiExecutionId}`, null, { headers: { Accept: 'application/json, text/plain, */*', 'Content-Type': 'application/json;charset=UTF-8' } })\r\n                .then(async () => {\r\n                    this.store.setInfo({ title: this.$t('common.toast.updateTitle'), msg: this.$t('common.toast.updateSuccess') })\r\n                })\r\n                .catch(() => {})\r\n        }\r\n    }\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n#olap-wizard-dialog .p-dialog-header,\r\n#olap-wizard-dialog .p-dialog-content {\r\n    padding: 0;\r\n}\r\n#olap-wizard-dialog .p-dialog-content {\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex: 1;\r\n}\r\n.wizard-overlay-spinner .p-progress-spinner-svg {\r\n    width: 125px;\r\n}\r\n</style>\r\n","<template>\r\n    <Dialog id=\"olap-delete-versions-dialog\" class=\"p-fluid kn-dialog--toolbar--primary\" :style=\"olapDeleteVersionsDialogDescriptor.style.dialog\" :visible=\"visible\" :modal=\"true\" :closable=\"false\">\r\n        <template #header>\r\n            <Toolbar class=\"kn-toolbar kn-toolbar--primary p-p-0 p-m-0 p-col-12\">\r\n                <template #start>\r\n                    {{ $t('documentExecution.olap.deleteVersion.title') }}\r\n                </template>\r\n            </Toolbar>\r\n        </template>\r\n        <ProgressBar mode=\"indeterminate\" class=\"kn-progress-bar\" v-if=\"loading\" />\r\n\r\n        <DataTable v-if=\"!loading\" class=\"p-datatable-sm kn-table p-m-4\" v-model:selection=\"selectedVersions\" :value=\"versions\" dataKey=\"id\">\r\n            <template #empty>\r\n                {{ $t('common.info.noDataFound') }}\r\n            </template>\r\n            <Column selectionMode=\"multiple\" :headerStyle=\"olapDeleteVersionsDialogDescriptor.selectColumnStyle\"></Column>\r\n            <Column v-for=\"column in olapDeleteVersionsDialogDescriptor.columns\" :key=\"column.header\" :header=\"$t(column.header)\" :field=\"column.field\" :style=\"column.style\" :sortable=\"true\"> </Column>\r\n        </DataTable>\r\n\r\n        <template #footer>\r\n            <Button class=\"kn-button kn-button--secondary\" @click=\"close\"> {{ $t('common.close') }}</Button>\r\n            <Button class=\"kn-button kn-button--primary\" @click=\"deleteVersions\"> {{ $t('common.delete') }}</Button>\r\n        </template>\r\n    </Dialog>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent, PropType } from 'vue'\r\nimport { iOlap } from '../Olap'\r\nimport Column from 'primevue/column'\r\nimport DataTable from 'primevue/datatable'\r\nimport Dialog from 'primevue/dialog'\r\nimport olapDeleteVersionsDialogDescriptor from './OlapDeleteVersionsDialogDescriptor.json'\r\nimport mainStore from '../../../../App.store'\r\n\r\nexport default defineComponent({\r\n    name: 'olap-delete-versions-dialog',\r\n    components: { Column, DataTable, Dialog },\r\n    props: { visible: { type: Boolean }, id: { type: String }, propOlapVersions: { type: Array as PropType<{ id: number; name: string; description: string }[]> }, olap: { type: Object as PropType<iOlap> } },\r\n    emits: ['close'],\r\n    computed: {},\r\n    data() {\r\n        return {\r\n            olapDeleteVersionsDialogDescriptor,\r\n            versions: [] as { id: number; name: string; description: string }[],\r\n            selectedVersions: [] as { id: number; name: string; description: string }[],\r\n            loading: false\r\n        }\r\n    },\r\n    watch: {\r\n        propOlapVersions() {\r\n            this.loadVersions()\r\n        }\r\n    },\r\n    setup() {\r\n        const store = mainStore()\r\n        return { store }\r\n    },\r\n    created() {\r\n        this.loadVersions()\r\n    },\r\n    methods: {\r\n        loadVersions() {\r\n            this.versions = this.propOlapVersions ? [...this.propOlapVersions] : []\r\n        },\r\n        close() {\r\n            this.$emit('close')\r\n            this.selectedVersions = []\r\n        },\r\n        async deleteVersions() {\r\n            this.loading = true\r\n\r\n            if (this.checkIfActiveVersionIsSelected()) {\r\n                this.store.setError({ title: this.$t('common.toast.errorTitle'), msg: this.$t('documentExecution.olap.deleteVersion.errorMessage') })\r\n                this.loading = false\r\n                return\r\n            }\r\n\r\n            const versionsToDelete = this.selectedVersions?.map((version: { id: number; name: string; description: string }) => version.id).join(',')\r\n            if (!versionsToDelete || versionsToDelete.length === 0) return\r\n            await this.$http\r\n                .post(import.meta.env.VITE_OLAP_PATH + `1.0/version/delete/${versionsToDelete}?SBI_EXECUTION_ID=${this.id}`, {}, { headers: { Accept: 'application/json, text/plain, */*', 'Content-Type': 'application/json;charset=UTF-8', 'X-Disable-Errors': 'true' } })\r\n                .then(() => {\r\n                    this.store.setInfo({\r\n                        title: this.$t('common.toast.deleteTitle'),\r\n                        msg: this.$t('common.toast.success')\r\n                    })\r\n                    this.close()\r\n                })\r\n                .catch((error: any) =>\r\n                    this.store.setError({\r\n                        title: this.$t('common.error.generic'),\r\n                        msg: error?.localizedMessage\r\n                    })\r\n                )\r\n            this.loading = false\r\n        },\r\n        checkIfActiveVersionIsSelected() {\r\n            if (!this.olap) return\r\n\r\n            let selected = false\r\n            let activeVersions = []\r\n            for (let i = 0; i < this.olap.filters.length; i++) {\r\n                if (this.olap.filters[i].name === 'Version') {\r\n                    activeVersions = this.olap.filters[i].hierarchies[0].slicers\r\n                    break\r\n                }\r\n            }\r\n\r\n            for (let i = 0; i < this.selectedVersions.length; i++) {\r\n                const index = activeVersions.findIndex((version: any) => version.name === this.selectedVersions[i].name)\r\n                if (index !== -1) {\r\n                    selected = true\r\n                    break\r\n                }\r\n            }\r\n            return selected\r\n        }\r\n    }\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n#olap-delete-versions-dialog .p-dialog-header,\r\n#olap-delete-versions-dialog .p-dialog-content {\r\n    padding: 0;\r\n}\r\n#olap-delete-versions-dialog .p-dialog-content {\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex: 1;\r\n}\r\n</style>\r\n","<template>\r\n    <div class=\"p-d-flex p-flex-column kn-flex kn-height-full\">\r\n        <ProgressSpinner class=\"kn-progress-spinner\" v-if=\"loading\" />\r\n\r\n        <OlapCustomViewTable v-if=\"customViewVisible\" class=\"olap-overlay-dialog\" :olapCustomViews=\"olapCustomViews\" @close=\"$emit('closeOlapCustomView')\" @applyCustomView=\"$emit('applyCustomView', $event)\" />\r\n\r\n        <DrillTruDialog\r\n            v-if=\"drillTruDialogVisible\"\r\n            :drillData=\"dtData\"\r\n            :tableColumns=\"formattedColumns\"\r\n            :dtLevels=\"dtAssociatedLevels\"\r\n            :menuTree=\"dtTree\"\r\n            :dtMaxRows=\"dtMaxRows\"\r\n            class=\"olap-overlay-dialog\"\r\n            @close=\"closeDrillTruDialog\"\r\n            @checkCheckboxes=\"checkCheckboxes\"\r\n            @clearLevels=\"dtAssociatedLevels.length = 0\"\r\n            @rowsChanged=\"dtMaxRows = $event\"\r\n            @drill=\"drillThrough\"\r\n        />\r\n\r\n        <FilterPanel :olapProp=\"olap\" :olapDesigner=\"olapDesigner\" @putFilterOnAxis=\"putFilterOnAxis\" @showMultiHierarchy=\"showMultiHierarchy\" @openFilterDialog=\"openFilterDialog\" />\r\n        <FilterTopToolbar :olapProp=\"olap\" @openSidebar=\"olapSidebarVisible = true\" @putFilterOnAxis=\"putFilterOnAxis\" @swapAxis=\"swapAxis\" @switchPosition=\"moveHierarchies\" @showMultiHierarchy=\"showMultiHierarchy\" @openFilterDialog=\"openFilterDialog\" />\r\n\r\n        <div id=\"left-and-table-container\" class=\"p-d-flex p-flex-row kn-flex\">\r\n            <FilterLeftToolbar :olapProp=\"olap\" @openSidebar=\"olapSidebarVisible = true\" @putFilterOnAxis=\"putFilterOnAxis\" @switchPosition=\"moveHierarchies\" @showMultiHierarchy=\"showMultiHierarchy\" @openFilterDialog=\"openFilterDialog\" />\r\n            <div id=\"table-container\" class=\"kn-flex\" :style=\"olapDescriptor.style.tableContainer\">\r\n                <div id=\"olap-table\" class=\"kn-flex kn-olap-table\" ref=\"olap-table\" v-html=\"olap.table\" @click=\"handleTableClick\" @dblclick=\"handleTableDoubleClick\"></div>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- SELECT TOAST CONFIRM -->\r\n        <div v-if=\"mode === 'From Cell' || mode === 'From Member'\" id=\"custom-toast\" :style=\"olapDescriptor.style.customToastContainer\">\r\n            <div id=\"custom-toast-content\" :style=\"olapDescriptor.style.customToastContent\">\r\n                <div class=\"p-d-flex p-flex-column\">\r\n                    <div class=\"p-text-center p-d-flex p-flex-row p-ai-center\">\r\n                        <i class=\"pi pi-info-circle p-ml-2\" :style=\"olapDescriptor.style.toastIcon\"></i>\r\n                        <h4 class=\"p-ml-2\">{{ $t('documentExecution.olap.crossNavigationDefinition.finishSelection') }}</h4>\r\n                        <Button class=\"p-jc-center\" :style=\"olapDescriptor.style.toastButton\" label=\"OK\" @click=\"cellSelected\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- SIDEBAR -->\r\n        <div v-if=\"olapSidebarVisible\" id=\"olap-backdrop\" @click=\"olapSidebarVisible = false\" />\r\n        <OlapSidebar\r\n            v-if=\"olapSidebarVisible\"\r\n            class=\"olap-sidebar kn-overflow-y\"\r\n            :olap=\"olap\"\r\n            :olapDesignerMode=\"olapDesignerMode\"\r\n            :propButtons=\"buttons\"\r\n            :whatIfMode=\"whatIfMode\"\r\n            :olapHasScenario=\"olapHasScenario\"\r\n            @openCustomViewDialog=\"customViewSaveDialogVisible = true\"\r\n            @drillTypeChanged=\"onDrillTypeChanged\"\r\n            @showParentMemberChanged=\"onShowParentMemberChanged\"\r\n            @hideSpansChanged=\"onHideSpansChanged\"\r\n            @suppressEmptyChanged=\"onSuppressEmptyChanged\"\r\n            @drillThroughChanged=\"onDrillThroughChanged\"\r\n            @showPropertiesChanged=\"onShowPropertiesChanged\"\r\n            @openSortingDialog=\"sortingDialogVisible = true\"\r\n            @openMdxQueryDialog=\"mdxQueryDialogVisible = true\"\r\n            @reloadSchema=\"reloadOlap\"\r\n            @enableCrossNavigation=\"enableCrossNaivigation\"\r\n            @openCrossNavigationDefinitionDialog=\"crossNavigationDefinitionDialogVisible = true\"\r\n            @openButtonWizardDialog=\"buttonsWizardDialogVisible = true\"\r\n            @saveOlapDesigner=\"saveOlapDesigner\"\r\n            @showOutputWizard=\"outputWizardVisible = true\"\r\n            @showScenarioWizard=\"scenarioWizardVisible = true\"\r\n            @showSaveAsNewVersion=\"saveVersionDialogVisible = true\"\r\n            @showAlgorithmDialog=\"algorithmDialogVisible = true\"\r\n            @undo=\"undo\"\r\n            @showDeleteVersions=\"deleteVersionDialogVisible = true\"\r\n            @exportExcel=\"exportExcel\"\r\n            @loading=\"loading = $event\"\r\n        />\r\n    </div>\r\n\r\n    <div id=\"whatif-input\" ref=\"whatifInput\" class=\"p-inputgroup\">\r\n        <InputText v-model=\"whatifInputNewValue\" @keyup.enter=\"onWhatifInput\" />\r\n        <InputText v-model=\"whatifInputOldValue\" :disabled=\"true\" />\r\n        <Button icon=\"pi pi-times\" class=\"kn-button--secondary\" @click=\"closeWhatifInput\" />\r\n    </div>\r\n\r\n    <!-- DIALOGS -->\r\n    <OlapCustomViewSaveDialog :visible=\"customViewSaveDialogVisible\" :sbiExecutionId=\"id\" @close=\"customViewSaveDialogVisible = false\"></OlapCustomViewSaveDialog>\r\n    <OlapSortingDialog :visible=\"sortingDialogVisible\" :olap=\"olap\" @save=\"onSortingSelect\"></OlapSortingDialog>\r\n    <OlapMDXQueryDialog :visible=\"mdxQueryDialogVisible\" :mdxQuery=\"olap?.MDXWITHOUTCF\" @close=\"mdxQueryDialogVisible = false\"></OlapMDXQueryDialog>\r\n    <OlapCrossNavigationDefinitionDialog :visible=\"crossNavigationDefinitionDialogVisible\" :propOlapDesigner=\"olapDesigner\" :selectedCell=\"selectedCell\" @close=\"crossNavigationDefinitionDialogVisible = false\" @selectFromTable=\"enterSelectMode($event)\"></OlapCrossNavigationDefinitionDialog>\r\n    <OlapButtonWizardDialog :visible=\"buttonsWizardDialogVisible\" :propButtons=\"buttons\" :propOlapDesigner=\"olapDesigner\" @close=\"buttonsWizardDialogVisible = false\"></OlapButtonWizardDialog>\r\n    <MultiHierarchyDialog :selectedFilter=\"multiHierFilter\" :multiHierUN=\"selecetedMultiHierUN\" :visible=\"multiHierarchyDialogVisible\" @setMultiHierUN=\"setMultiHierUN\" @updateHierarchy=\"updateHierarchy\" @close=\"multiHierarchyDialogVisible = false\" />\r\n    <KnOverlaySpinnerPanel :visibility=\"loading\" />\r\n    <OutputWizard v-if=\"outputWizardVisible\" :visible=\"outputWizardVisible\" :olapVersionsProp=\"olapVersions\" :sbiExecutionId=\"id\" @close=\"outputWizardVisible = false\" />\r\n    <ScenarioWizard v-if=\"scenarioWizardVisible\" :visible=\"scenarioWizardVisible\" :artifactIdProp=\"artifactId\" :sbiExecutionId=\"id\" :olapDesignerProp=\"olapDesigner\" @saveScenario=\"saveScenario\" @deleteScenario=\"deleteScenario\" @close=\"scenarioWizardVisible = false\" />\r\n    <AlgorithmDialog v-if=\"algorithmDialogVisible\" :visible=\"algorithmDialogVisible\" :sbiExecutionId=\"id\" @close=\"algorithmDialogVisible = false\" />\r\n    <OlapFilterDialog :visible=\"filterDialogVisible\" :propFilter=\"selectedFilter\" :id=\"id\" :olapDesignerMode=\"olapDesignerMode\" :parameters=\"parameters\" :profileAttributes=\"profileAttributes\" :olapDesigner=\"olapDesigner\" @close=\"closeFilterDialog\" @applyFilters=\"applyFilters\"></OlapFilterDialog>\r\n    <OlapSaveNewVersionDialog :visible=\"saveVersionDialogVisible\" :id=\"id\" @close=\"saveVersionDialogVisible = false\" @newVersionSaved=\"onNewVersionSaved\"></OlapSaveNewVersionDialog>\r\n    <OlapDeleteVersionsDialog :visible=\"deleteVersionDialogVisible\" :id=\"id\" :propOlapVersions=\"olapVersions\" :olap=\"olap\" @close=\"deleteVersionDialogVisible = false\"></OlapDeleteVersionsDialog>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { AxiosResponse } from 'axios'\r\nimport { defineComponent } from 'vue'\r\nimport { iOlapCustomView, iButton, iOlapFilter, iOlap, iParameter, iProfileAttribute } from './Olap'\r\nimport { downloadDirect } from '@/helpers/commons/fileHelper'\r\nimport KnOverlaySpinnerPanel from '@/components/UI/KnOverlaySpinnerPanel.vue'\r\nimport olapDescriptor from './OlapDescriptor.json'\r\nimport OlapSidebar from './olapSidebar/OlapSidebar.vue'\r\nimport OlapSortingDialog from './sortingDialog/OlapSortingDialog.vue'\r\nimport OlapCustomViewTable from './customView/OlapCustomViewTable.vue'\r\nimport OlapCustomViewSaveDialog from './customViewSaveDialog/OlapCustomViewSaveDialog.vue'\r\nimport OlapMDXQueryDialog from './mdxQueryDialog/OlapMDXQueryDialog.vue'\r\nimport FilterPanel from './filterPanel/OlapFilterPanel.vue'\r\nimport FilterTopToolbar from './filterToolbar/OlapTopFilterToolbar.vue'\r\nimport FilterLeftToolbar from './filterToolbar/OlapLeftFilterToolbar.vue'\r\nimport OlapCrossNavigationDefinitionDialog from './crossNavigationDefinition/OlapCrossNavigationDefinitionDialog.vue'\r\nimport OlapButtonWizardDialog from './buttonWizard/OlapButtonWizardDialog.vue'\r\nimport MultiHierarchyDialog from './multiHierarchyDialog/OlapMultiHierarchyDialog.vue'\r\nimport DrillTruDialog from './drillThroughDialog/OlapDrillThroughDialog.vue'\r\nimport OutputWizard from './outputWizard/OlapOutputWizard.vue'\r\nimport ScenarioWizard from './scenarioWizard/OlapScenarioWizard.vue'\r\nimport OlapFilterDialog from './filterDialog/OlapFilterDialog.vue'\r\nimport OlapSaveNewVersionDialog from './newVersionDialog/OlapSaveNewVersionDialog.vue'\r\nimport AlgorithmDialog from './algorithmDialog/OlapAlgorithmDialog.vue'\r\nimport OlapDeleteVersionsDialog from './deleteVersionsDialog/OlapDeleteVersionsDialog.vue'\r\nimport mainStore from '../../../App.store'\r\n\r\nexport default defineComponent({\r\n    name: 'olap',\r\n    components: {\r\n        OutputWizard,\r\n        OlapSidebar,\r\n        DrillTruDialog,\r\n        OlapCustomViewTable,\r\n        OlapCustomViewSaveDialog,\r\n        KnOverlaySpinnerPanel,\r\n        OlapSortingDialog,\r\n        FilterPanel,\r\n        FilterTopToolbar,\r\n        FilterLeftToolbar,\r\n        OlapMDXQueryDialog,\r\n        OlapCrossNavigationDefinitionDialog,\r\n        OlapButtonWizardDialog,\r\n        MultiHierarchyDialog,\r\n        OlapFilterDialog,\r\n        ScenarioWizard,\r\n        OlapSaveNewVersionDialog,\r\n        AlgorithmDialog,\r\n        OlapDeleteVersionsDialog\r\n    },\r\n    props: { id: { type: String }, olapId: { type: String }, olapName: { type: String }, reloadTrigger: { type: Boolean }, olapCustomViewVisible: { type: Boolean }, hiddenFormDataProp: { type: Object, required: true } },\r\n    emits: ['closeOlapCustomView', 'applyCustomView', 'executeCrossNavigation'],\r\n    data() {\r\n        return {\r\n            olapDescriptor,\r\n            documentId: null as any,\r\n            documentName: null as any,\r\n            olap: {} as iOlap,\r\n            olapSidebarVisible: false,\r\n            customViewVisible: false,\r\n            olapCustomViews: [] as iOlapCustomView[],\r\n            customViewSaveDialogVisible: false,\r\n            sortingDialogVisible: false,\r\n            mdxQueryDialogVisible: false,\r\n            crossNavigationDefinitionDialogVisible: false,\r\n            buttonsWizardDialogVisible: false,\r\n            multiHierarchyDialogVisible: false,\r\n            drillTruDialogVisible: false,\r\n            outputWizardVisible: false,\r\n            scenarioWizardVisible: false,\r\n            algorithmDialogVisible: false,\r\n            multiHierFilter: {} as iOlapFilter,\r\n            selecetedMultiHierUN: '',\r\n            sort: null as any,\r\n            mode: 'view',\r\n            selectedCell: null as any,\r\n            buttons: [] as iButton[],\r\n            olapDesigner: null as any,\r\n            olapDesignerMode: false,\r\n            loading: false,\r\n            dtData: [] as any,\r\n            dtColumns: [] as any,\r\n            formattedColumns: [] as any,\r\n            dtAssociatedLevels: [] as any,\r\n            dtTree: [] as any,\r\n            olapVersions: [] as any,\r\n            dtMaxRows: 0,\r\n            usedOrdinal: 0 as Number,\r\n            selectedFilter: null as any,\r\n            filterDialogVisible: false,\r\n            parameters: [] as iParameter[],\r\n            profileAttributes: [] as iProfileAttribute[],\r\n            saveVersionDialogVisible: false,\r\n            deleteVersionDialogVisible: false,\r\n            whatifInputNewValue: 0 as Number,\r\n            whatifInputOldValue: 0 as Number,\r\n            whatifInputOrdinal: 0 as Number,\r\n            noTemplate: '' as string,\r\n            reference: '' as string,\r\n            olapEngine: '' as any,\r\n            documentLabel: null as any,\r\n            filterLevels: {} as any,\r\n            artifactId: '' as string\r\n        }\r\n    },\r\n    setup() {\r\n        const store = mainStore()\r\n        return { store }\r\n    },\r\n    async created() {\r\n        this.documentId = this.olapId\r\n        this.documentName = this.olapName\r\n\r\n        if (this.$route.name === 'olap-designer') {\r\n            this.olapDesignerMode = true\r\n        }\r\n        await this.loadPage()\r\n    },\r\n    computed: {\r\n        olapHasScenario() {\r\n            if (this.olapDesigner?.template?.wrappedObject?.olap?.SCENARIO) {\r\n                return true\r\n            } else return false\r\n        },\r\n        whatIfMode() {\r\n            if (this.olapDesigner?.ENGINE === 'knowagewhatifengine') {\r\n                return true\r\n            } else return false\r\n        }\r\n    },\r\n    watch: {\r\n        async id() {\r\n            await this.loadPage()\r\n        },\r\n        async reloadTrigger() {\r\n            await this.loadPage()\r\n        },\r\n        olapCustomViewVisible() {\r\n            this.loadCustomView()\r\n        }\r\n    },\r\n    methods: {\r\n        async loadPage() {\r\n            this.loading = true\r\n            if (this.$route.name === 'olap-designer') {\r\n                this.documentId = this.$route.query.olapId\r\n                this.documentName = this.$route.query.olapName\r\n                this.documentLabel = this.$route.query.olapLabel\r\n            }\r\n            await this.loadOlapModel()\r\n            this.loadCustomView()\r\n            this.loading = false\r\n        },\r\n        async loadOlapDesigner() {\r\n            await this.$http\r\n                .get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `olap/designer/${this.documentId}`, { headers: { Accept: 'application/json, text/plain, */*' } })\r\n                .then(async (response: AxiosResponse<any>) => {\r\n                    this.olapDesigner = response.data\r\n                })\r\n                .catch(() => {})\r\n        },\r\n        async loadCustomView() {\r\n            this.customViewVisible = this.olapCustomViewVisible\r\n\r\n            if (this.customViewVisible) {\r\n                await this.loadOlapCustomViews()\r\n            }\r\n        },\r\n        async loadOlapCustomViews() {\r\n            this.loading = true\r\n            await this.$http\r\n                .get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `/1.0/olapsubobjects/getSubObjects?idObj=${this.documentId}`)\r\n                .then(async (response: AxiosResponse<any>) => (this.olapCustomViews = response.data.results))\r\n                .catch(() => {})\r\n            this.loading = false\r\n        },\r\n        async loadOlapButtons() {\r\n            this.loading = true\r\n            await this.$http\r\n                .get(import.meta.env.VITE_OLAP_PATH + `1.0/buttons`)\r\n                .then(async (response: AxiosResponse<any>) => {\r\n                    this.buttons = response.data\r\n                    this.buttons.splice(\r\n                        this.buttons.findIndex((item) => item.name === 'BUTTON_CC'),\r\n                        1\r\n                    )\r\n                })\r\n                .catch(() => {})\r\n            this.loading = false\r\n        },\r\n        async loadOlapModel() {\r\n            this.noTemplate = this.$route.query.noTemplate as string\r\n            this.reference = this.$route.query.reference as string\r\n            this.olapEngine = this.$route.query.engine as string\r\n            this.artifactId = this.$route.query.artifactId as string\r\n\r\n            this.loading = true\r\n            await this.$http\r\n                .post(import.meta.env.VITE_OLAP_PATH + `1.0/model/?SBI_EXECUTION_ID=${this.id}`, null, { headers: { Accept: 'application/json, text/plain, */*', 'Content-Type': 'application/json;charset=UTF-8' } })\r\n                .then(async (response: AxiosResponse<any>) => {\r\n                    this.olap = response.data\r\n                    if (this.noTemplate === 'true') {\r\n                        this.olapDesigner = {\r\n                            ENGINE: this.olapEngine,\r\n                            template: {\r\n                                wrappedObject: {\r\n                                    olap: {\r\n                                        cube: {\r\n                                            reference: this.reference\r\n                                        },\r\n                                        MDXMondrianQuery: {\r\n                                            XML_TAG_TEXT_CONTENT: this.olap.MDXWITHOUTCF\r\n                                        },\r\n                                        MDXQUERY: {\r\n                                            XML_TAG_TEXT_CONTENT: this.olap.MDXWITHOUTCF,\r\n                                            parameter: []\r\n                                        },\r\n                                        JSONTEMPLATE: {\r\n                                            XML_TAG_TEXT_CONTENT: ''\r\n                                        },\r\n                                        calculated_fields: {\r\n                                            calculated_field: []\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        this.olapDesigner.template.wrappedObject.olap.JSONTEMPLATE.XML_TAG_TEXT_CONTENT = JSON.stringify(this.olapDesigner.template.wrappedObject)\r\n                    } else {\r\n                        await this.loadOlapDesigner()\r\n                    }\r\n\r\n                    if (this.olapDesigner) {\r\n                        await this.loadParameters()\r\n                        await this.loadProfileAttributes()\r\n                    }\r\n                    await this.loadOlapButtons()\r\n                    this.setClickedButtons()\r\n                    await this.loadModelConfig()\r\n                    await this.loadVersions()\r\n                })\r\n                .catch(() => {})\r\n            this.loading = false\r\n        },\r\n        setClickedButtons() {\r\n            if (this.olapDesigner && this.olapDesigner.template?.wrappedObject?.olap?.TOOLBAR) {\r\n                const toolbarButtonKeys = Object.keys(this.olapDesigner.template?.wrappedObject?.olap?.TOOLBAR)\r\n                this.buttons.forEach((tempButton: iButton) => {\r\n                    const index = toolbarButtonKeys.indexOf(tempButton.name)\r\n                    if (index >= 0) {\r\n                        tempButton.visible = this.olapDesigner.template.wrappedObject.olap.TOOLBAR[toolbarButtonKeys[index]].visible\r\n\r\n                        tempButton.clicked = this.olapDesigner.template.wrappedObject.olap.TOOLBAR[toolbarButtonKeys[index]].clicked\r\n                    }\r\n                })\r\n\r\n                this.olap.modelConfig.toolbarClickedButtons?.forEach((button: string) => {\r\n                    switch (button) {\r\n                        case 'BUTTON_DRILL_THROUGH':\r\n                            this.olap.modelConfig.enableDrillThrough = true\r\n                            break\r\n                        case 'BUTTON_FATHER_MEMBERS':\r\n                            this.olap.modelConfig.showParentMembers = true\r\n                            break\r\n                        case 'BUTTON_HIDE_SPANS':\r\n                            this.olap.modelConfig.hideSpans = true\r\n                            break\r\n                        case 'BUTTON_SHOW_PROPERTIES':\r\n                            this.olap.modelConfig.showProperties = true\r\n                            break\r\n                        case 'BUTTON_HIDE_EMPTY':\r\n                            this.olap.modelConfig.suppressEmpty = true\r\n                            break\r\n                    }\r\n                })\r\n            }\r\n        },\r\n        async loadModelConfig() {\r\n            this.loading = true\r\n            await this.$http\r\n                .post(import.meta.env.VITE_OLAP_PATH + `1.0/modelconfig?SBI_EXECUTION_ID=${this.id}&NOLOADING=undefined`, this.olap.modelConfig, { headers: { Accept: 'application/json, text/plain, */*', 'Content-Type': 'application/json;charset=UTF-8' } })\r\n                .then((response: AxiosResponse<any>) => (this.olap = response.data))\r\n                .catch(() => {})\r\n\r\n            this.formatOlapTable()\r\n            this.loading = false\r\n        },\r\n        async loadVersions() {\r\n            this.loading = true\r\n\r\n            await this.$http\r\n                .get(import.meta.env.VITE_OLAP_PATH + `1.0/version?SBI_EXECUTION_ID=${this.id}`)\r\n                .then((response: AxiosResponse<any>) => (this.olapVersions = response.data))\r\n                .catch(() => {})\r\n\r\n            this.loading = false\r\n        },\r\n        formatOlapTable() {\r\n            if (this.olap?.table) {\r\n                this.olap.table = this.olap.table.replaceAll('</drillup>', ' <div class=\"drill-up\"></div></drillup> ')\r\n                this.olap.table = this.olap.table.replaceAll('</drilldown>', '<div class=\"drill-down\"></div> </drilldown> ')\r\n                this.olap.table = this.olap.table.replaceAll('../../../../knowage/themes/commons/img/olap/nodrill.png', '')\r\n                this.olap.table = this.olap.table.replaceAll('src=\"../../../../knowage/themes/commons/img/olap/arrow-up.png\"', ' <div class=\"drill-up-replace\"></div ')\r\n                this.olap.table = this.olap.table.replaceAll('src=\"../../../../knowage/themes/commons/img/olap/noSortRows.png\"', ' <div class=\"sort-basic\"></div ')\r\n                this.olap.table = this.olap.table.replaceAll('src=\"../../../../knowage/themes/commons/img/olap/ASC-rows.png\"', ' <div class=\"sort-asc\"></div ')\r\n                this.olap.table = this.olap.table.replaceAll('src=\"../../../../knowage/themes/commons/img/olap/DESC-rows.png\"', ' <div class=\"sort-desc\"></div ')\r\n                this.olap.table = this.olap.table.replaceAll('<a href=\"#\" onClick=\"parent.execExternal', '<a href=\"#\" class=\"external-cross-navigation\" crossParams=\"parent.execExternal')\r\n                this.olap.table = this.olap.table.replaceAll('src=\"../../../../knowage/themes/commons/img/olap/cross-navigation.png\"', ' <div class=\"cell-cross-navigation\"></div ')\r\n                this.olap.table = this.olap.table.replaceAll('src=\"../../../../knowage/themes/commons/img/olap/ico_search.gif\"', ' <div class=\"drillthrough\"></div ')\r\n            }\r\n        },\r\n        async drillDown(event: any) {\r\n            this.loading = true\r\n            const axis = event.target.parentNode.getAttribute('axis')\r\n            const position = event.target.parentNode.getAttribute('position')\r\n            const member = event.target.parentNode.getAttribute('memberordinal')\r\n\r\n            const postData = JSON.stringify({\r\n                memberUniqueName: event.target.parentNode.getAttribute('uniquename'),\r\n                positionUniqueName: event.target.parentNode.getAttribute('positionuniquename')\r\n            })\r\n            await this.$http\r\n                .post(import.meta.env.VITE_OLAP_PATH + `1.0/member/drilldown/${axis}/${position}/${member}/?SBI_EXECUTION_ID=${this.id}`, postData, {\r\n                    headers: {\r\n                        Accept: 'application/json, text/plain, */*',\r\n                        'Content-Type': 'application/json;charset=UTF-8'\r\n                    }\r\n                })\r\n                .then((response: AxiosResponse<any>) => (this.olap = response.data))\r\n                .catch(() => {})\r\n\r\n            this.formatOlapTable()\r\n\r\n            this.loading = false\r\n        },\r\n        async drillUp(event: any, replace: boolean) {\r\n            this.loading = true\r\n            await this.$http\r\n                .post(import.meta.env.VITE_OLAP_PATH + `1.0/member/drillup?SBI_EXECUTION_ID=${this.id}`, this.formatDrillUpPostData(event, replace), {\r\n                    headers: {\r\n                        Accept: 'application/json, text/plain, */*',\r\n                        'Content-Type': 'application/json;charset=UTF-8'\r\n                    }\r\n                })\r\n                .then((response: AxiosResponse<any>) => (this.olap = response.data))\r\n                .catch(() => {})\r\n\r\n            this.formatOlapTable()\r\n\r\n            this.loading = false\r\n        },\r\n        formatDrillUpPostData(event: any, replace: boolean) {\r\n            let tempArray = [] as any[]\r\n            if (replace) {\r\n                const temp = event.target.attributes[0].textContent\r\n                const tempString = temp.substring(temp.indexOf('(') + 1, temp.lastIndexOf(')'))\r\n                tempArray = tempString?.split(',')\r\n            }\r\n\r\n            const postData = JSON.stringify({\r\n                axis: replace ? +tempArray[0] : event.target.parentNode.getAttribute('axis'),\r\n                memberPosition: replace ? +tempArray[2] : event.target.parentNode.getAttribute('memberordinal'),\r\n                memberUniqueName: replace ? tempArray[3].trim().substring(1, tempArray[3].length - 1) : event.target.parentNode.getAttribute('uniquename'),\r\n                position: replace ? +tempArray[1] : event.target.parentNode.getAttribute('position'),\r\n                positionUniqueName: replace ? tempArray[4].trim().substring(1, tempArray[4].length - 2) : event.target.parentNode.getAttribute('positionuniquename')\r\n            })\r\n\r\n            return postData\r\n        },\r\n        async onDrillTypeChanged(newDrillType: string) {\r\n            this.olap.modelConfig.drillType = newDrillType\r\n            await this.loadModelConfig()\r\n        },\r\n        async onShowParentMemberChanged(showParentMembers: boolean) {\r\n            this.olap.modelConfig.showParentMembers = showParentMembers\r\n            await this.loadModelConfig()\r\n        },\r\n        async onHideSpansChanged(hideSpans: boolean) {\r\n            this.olap.modelConfig.hideSpans = hideSpans\r\n            await this.loadModelConfig()\r\n        },\r\n        async onSuppressEmptyChanged(suppressEmpty: boolean) {\r\n            this.olap.modelConfig.suppressEmpty = suppressEmpty\r\n            await this.loadModelConfig()\r\n        },\r\n        async onDrillThroughChanged(enableDrillThrough: boolean) {\r\n            this.olap.modelConfig.enableDrillThrough = enableDrillThrough\r\n            await this.loadModelConfig()\r\n        },\r\n        async onShowPropertiesChanged(showProperties: boolean) {\r\n            this.olap.modelConfig.showProperties = showProperties\r\n            await this.loadModelConfig()\r\n        },\r\n        onSortingSelect(payload: { sortingMode: string; sortingCount: number }) {\r\n            this.sort = payload\r\n\r\n            if ((this.sort.sortingMode === 'no sorting' && this.olap?.modelConfig.sortingEnabled) || (this.sort.sortingMode !== 'no sorting' && !this.olap.modelConfig.sortingEnabled)) {\r\n                this.enableSorting()\r\n            }\r\n\r\n            this.sortingDialogVisible = false\r\n        },\r\n        async enableSorting() {\r\n            this.loading = true\r\n            await this.$http\r\n                .get(import.meta.env.VITE_OLAP_PATH + `1.0/member/sort/disable?SBI_EXECUTION_ID=${this.id}`, { headers: { Accept: 'application/json, text/plain, */*', 'Content-Type': 'application/json;charset=UTF-8' } })\r\n                .then((response: AxiosResponse<any>) => (this.olap = response.data))\r\n                .catch(() => {})\r\n\r\n            this.formatOlapTable()\r\n            this.loading = false\r\n        },\r\n        async sortOlap(event: any) {\r\n            this.loading = true\r\n            const temp = event.target.attributes[0].textContent\r\n            const tempString = temp.substring(temp.indexOf('(') + 1, temp.indexOf(')'))\r\n            const tempArray = tempString?.split(',')\r\n            const tempPositionUniqueName = tempArray.splice(2).join(',')\r\n\r\n            const postData = {\r\n                axisToSort: +tempArray[0],\r\n                axis: +tempArray[1],\r\n                positionUniqueName: tempPositionUniqueName.substring(tempPositionUniqueName.indexOf(\"'\") + 1, tempPositionUniqueName.lastIndexOf(\"'\")),\r\n                sortMode: this.sort.sortingMode,\r\n                topBottomCount: this.sort.sortingCount\r\n            }\r\n\r\n            await this.$http\r\n                .post(import.meta.env.VITE_OLAP_PATH + `1.0/member/sort/?SBI_EXECUTION_ID=${this.id}`, postData)\r\n                .then((response: AxiosResponse<any>) => (this.olap = response.data))\r\n                .catch(() => {})\r\n            this.formatOlapTable()\r\n            this.loading = false\r\n        },\r\n        async reloadOlap() {\r\n            this.loading = true\r\n            await this.$http\r\n                .post(import.meta.env.VITE_OLAP_PATH + `1.0/cache/?SBI_EXECUTION_ID=${this.id}`, null, { headers: { Accept: 'application/json, text/plain, */*', 'Content-Type': 'application/json;charset=UTF-8' } })\r\n                .then((response: AxiosResponse<any>) => (this.olap = response.data))\r\n                .catch(() => {})\r\n            this.formatOlapTable()\r\n            this.loading = false\r\n        },\r\n        async putFilterOnAxis(fromAxis, filter) {\r\n            if (fromAxis === -1) this.removeFilterLevels(filter)\r\n            var toSend = { fromAxis: fromAxis, hierarchy: filter.selectedHierarchyUniqueName, toAxis: filter.axis }\r\n            this.loading = true\r\n            await this.$http\r\n                .post(import.meta.env.VITE_OLAP_PATH + `1.0/axis/moveDimensionToOtherAxis?SBI_EXECUTION_ID=${this.id}`, toSend, { headers: { Accept: 'application/json, text/plain, */*', 'Content-Type': 'application/json;charset=UTF-8' } })\r\n                .then((response: AxiosResponse<any>) => {\r\n                    this.olap = response.data\r\n                    if (this.olapDesigner && this.olapDesigner.template) {\r\n                        this.olapDesigner.template.wrappedObject.olap.MDXMondrianQuery.XML_TAG_TEXT_CONTENT = this.olap.MDXWITHOUTCF\r\n                        this.olapDesigner.template.wrappedObject.olap.MDXQUERY.XML_TAG_TEXT_CONTENT = this.olap.MDXWITHOUTCF\r\n                    }\r\n                })\r\n                .catch(() => this.store.setError({ title: this.$t('common.toast.error'), msg: this.$t('documentExecution.olap.filterToolbar.putFilterOnAxisError') }))\r\n            this.formatOlapTable()\r\n            this.loading = false\r\n        },\r\n        async swapAxis() {\r\n            this.loading = true\r\n            await this.$http\r\n                .post(import.meta.env.VITE_OLAP_PATH + `1.0/axis/swap?SBI_EXECUTION_ID=${this.id}`, null, { headers: { Accept: 'application/json, text/plain, */*', 'Content-Type': 'application/json;charset=UTF-8' } })\r\n                .then((response: AxiosResponse<any>) => (this.olap = response.data))\r\n                .catch(() => this.store.setError({ title: this.$t('common.toast.error'), msg: this.$t('documentExecution.olap.filterToolbar.swapAxisError') }))\r\n            this.formatOlapTable()\r\n            this.loading = false\r\n        },\r\n        async moveHierarchies(data) {\r\n            var toSend = { axis: data.axis, hierarchy: data.selectedHierarchyUniqueName, newPosition: data.positionInAxis + 1, direction: 1 }\r\n            this.loading = true\r\n            await this.$http\r\n                .post(import.meta.env.VITE_OLAP_PATH + `1.0/axis/moveHierarchy?SBI_EXECUTION_ID=${this.id}`, toSend, { headers: { Accept: 'application/json, text/plain, */*', 'Content-Type': 'application/json;charset=UTF-8' } })\r\n                .then((response: AxiosResponse<any>) => {\r\n                    this.olap = response.data\r\n                })\r\n                .catch(() => this.store.setError({ title: this.$t('common.toast.error'), msg: this.$t('documentExecution.olap.filterToolbar.hierarchyMoveError') }))\r\n            this.formatOlapTable()\r\n            this.loading = false\r\n        },\r\n        setMultiHierUN(un) {\r\n            this.selecetedMultiHierUN = un\r\n        },\r\n        showMultiHierarchy(filter) {\r\n            this.multiHierFilter = filter\r\n            this.selecetedMultiHierUN = this.multiHierFilter.hierarchies[this.multiHierFilter.selectedHierarchyPosition].uniqueName\r\n            this.multiHierarchyDialogVisible = true\r\n        },\r\n        async updateHierarchy() {\r\n            var oldHier = this.multiHierFilter.hierarchies[this.multiHierFilter.selectedHierarchyPosition].uniqueName\r\n            var newHier = this.selecetedMultiHierUN\r\n            if (oldHier != newHier) {\r\n                var toSend = { axis: this.multiHierFilter.axis, oldHierarchyUniqueName: oldHier, newHierarchyUniqueName: newHier, hierarchyPosition: this.multiHierFilter.positionInAxis }\r\n                this.loading = true\r\n                await this.$http\r\n                    .post(import.meta.env.VITE_OLAP_PATH + `1.0/axis/updateHierarchyOnDimension?SBI_EXECUTION_ID=${this.id}`, toSend, { headers: { Accept: 'application/json, text/plain, */*', 'Content-Type': 'application/json;charset=UTF-8' } })\r\n                    .then((response: AxiosResponse<any>) => (this.olap = response.data))\r\n                    .catch(() => this.store.setError({ title: this.$t('common.toast.error'), msg: this.$t('documentExecution.olap.filterToolbar.hierarchyUpdateError') }))\r\n                    .finally(() => {\r\n                        this.formatOlapTable()\r\n                        this.loading = false\r\n                        this.multiHierarchyDialogVisible = false\r\n                    })\r\n            }\r\n        },\r\n        execExternalCrossNavigation(event: any) {\r\n            if (this.olapDesignerMode) {\r\n                return\r\n            }\r\n\r\n            const tempCrossNavigationParams = event.target.attributes[2].value\r\n            const tempFormatted = tempCrossNavigationParams.substring(tempCrossNavigationParams.indexOf('(') + 2, tempCrossNavigationParams.lastIndexOf(')') - 1)\r\n\r\n            const tempArray = tempFormatted.split(',')\r\n            const object = {}\r\n            tempArray?.forEach((el: string) => {\r\n                object[el.substring(0, el.indexOf(':'))] = el.substring(el.indexOf(':') + 2, el.length - 1)\r\n            })\r\n            this.$emit('executeCrossNavigation', object)\r\n        },\r\n        async enableCrossNaivigation(crossNavigation: boolean) {\r\n            this.loading = true\r\n            this.olap.modelConfig.crossNavigation.buttonClicked = crossNavigation\r\n            await this.$http\r\n                .get(import.meta.env.VITE_OLAP_PATH + `1.0/crossnavigation/initialize/?SBI_EXECUTION_ID=${this.id}`, { headers: { Accept: 'application/json, text/plain, */*', 'Content-Type': 'application/json;charset=UTF-8' } })\r\n                .then((response: AxiosResponse<any>) => (this.olap = response.data))\r\n                .catch(() => {})\r\n            this.formatOlapTable()\r\n            this.loading = false\r\n        },\r\n        async getCrossNavigationURL(event: any) {\r\n            if (this.olapDesignerMode) {\r\n                return\r\n            }\r\n\r\n            this.loading = true\r\n\r\n            const tempString = event.target.attributes[1].textContent\r\n            const tempParametersString = tempString.substring(tempString.indexOf('(') + 1, tempString.indexOf(')'))\r\n            const temp = tempParametersString?.substring(1, tempParametersString.length - 1)?.split(',')\r\n\r\n            let tempResponse = null\r\n            await this.$http\r\n                .post(import.meta.env.VITE_OLAP_PATH + `1.0/crossnavigation/getCrossNavigationUrl/${temp[0]},${temp[1]}?SBI_EXECUTION_ID=${this.id}`, null, { headers: { Accept: 'application/json, text/plain, */*', 'Content-Type': 'application/json;charset=UTF-8' } })\r\n                .then((response: AxiosResponse<any>) => (tempResponse = response.data))\r\n                .catch(() => {})\r\n            await this.executeCrossnavigationFromCell(tempResponse)\r\n\r\n            this.loading = false\r\n        },\r\n        async executeCrossnavigationFromCell(crossNavigationString: string | null) {\r\n            const tempString = crossNavigationString?.substring(crossNavigationString.indexOf('(') + 1, crossNavigationString.indexOf(')'))\r\n            const tempArray = tempString?.split(',')\r\n\r\n            const object = tempString ? JSON.parse(tempString) : {}\r\n            this.$emit('executeCrossNavigation', object)\r\n        },\r\n        enterSelectMode(mode: string) {\r\n            this.mode = mode\r\n            this.olapSidebarVisible = false\r\n            this.crossNavigationDefinitionDialogVisible = false\r\n        },\r\n        selectCell(event: any) {\r\n            const attributes = event.target.attributes\r\n\r\n            if (attributes[0].localName !== 'axisordinal') {\r\n                return\r\n            }\r\n\r\n            const cell = {}\r\n            for (let i = 0; i < attributes.length; i++) {\r\n                cell[attributes[i].nodeName] = attributes[i].value\r\n            }\r\n\r\n            if (this.selectedCell) {\r\n                this.selectedCell.event.target.style.border = 'none'\r\n            }\r\n\r\n            this.selectedCell = { cell: cell, event: event }\r\n            event.target.style.border = '2px solid red'\r\n        },\r\n        cellSelected() {\r\n            this.olapSidebarVisible = true\r\n            this.crossNavigationDefinitionDialogVisible = true\r\n            this.mode = 'view'\r\n            this.selectedCell.event.target.style.border = 'none'\r\n        },\r\n        async saveOlapDesigner() {\r\n            this.loading = true\r\n\r\n            await this.$http\r\n                .post(\r\n                    import.meta.env.VITE_RESTFUL_SERVICES_PATH + `1.0/documents/${this.documentName}/saveOlapTemplate`,\r\n                    { olap: { ...this.olapDesigner.template.wrappedObject.olap, JSONTEMPLATE: { XML_TAG_TEXT_CONTENT: JSON.stringify(this.olapDesigner.template.wrappedObject) } } },\r\n                    { headers: { Accept: 'application/json, text/plain, */*' } }\r\n                )\r\n                .then(async () => {\r\n                    this.store.setInfo({ title: this.$t('common.toast.updateTitle'), msg: this.$t('common.toast.updateSuccess') })\r\n                    await this.loadOlapDesigner()\r\n                })\r\n                .catch(() => {})\r\n            this.loading = false\r\n        },\r\n        closeDrillTruDialog() {\r\n            this.drillTruDialogVisible = false\r\n            this.dtData = []\r\n            this.dtColumns = []\r\n            this.dtTree = []\r\n            this.dtAssociatedLevels = []\r\n        },\r\n        async drillThrough(ordinal?: any) {\r\n            ordinal ? (this.usedOrdinal = this.getOrdinalFromEvent(ordinal)) : ''\r\n            this.store.setInfo({ title: this.$t('documentExecution.olap.drillTru.loadingTitle'), msg: this.$t('documentExecution.olap.drillTru.loadingMsg') })\r\n            this.loading = true\r\n            if (this.dtAssociatedLevels.length == 0 && this.dtMaxRows == 0) {\r\n                let toSend = {} as any\r\n                toSend.ordinal = this.usedOrdinal\r\n                await this.$http\r\n                    .post(import.meta.env.VITE_OLAP_PATH + `1.0/member/drilltrough?SBI_EXECUTION_ID=${this.id}`, toSend, { headers: { Accept: 'application/json, text/plain, */*', 'Content-Type': 'application/json;charset=UTF-8' } })\r\n                    .then((response: AxiosResponse<any>) => {\r\n                        this.dtData = []\r\n                        this.dtColumns = []\r\n\r\n                        this.dtData = response.data\r\n                        for (var key in response.data[0]) {\r\n                            this.dtColumns.push(key)\r\n                        }\r\n                        this.formattedColumns = this.formatColumns(this.dtColumns)\r\n                        this.getCollections()\r\n                        this.drillTruDialogVisible = true\r\n                    })\r\n                    .catch(() => {\r\n                        this.store.setError({ title: this.$t('common.toast.error'), msg: this.$t('documentExecution.olap.drillTru.drillTruError') })\r\n                        this.loading = false\r\n                    })\r\n                    .finally(() => (this.loading = false))\r\n            } else {\r\n                let toSend = {} as any\r\n                toSend.ordinal = this.usedOrdinal\r\n                toSend.levels = JSON.stringify(this.dtAssociatedLevels)\r\n                toSend.max = this.dtMaxRows\r\n                await this.$http\r\n                    .post(import.meta.env.VITE_OLAP_PATH + `1.0/member/drilltrough/full?SBI_EXECUTION_ID=${this.id}`, toSend, { headers: { Accept: 'application/json, text/plain, */*', 'Content-Type': 'application/json;charset=UTF-8' } })\r\n                    .then((response: AxiosResponse<any>) => {\r\n                        this.dtData = []\r\n                        this.dtColumns = []\r\n                        this.dtData = response.data\r\n                        for (var key in response.data[0]) {\r\n                            this.dtColumns.push(key)\r\n                        }\r\n                        this.formattedColumns = this.formatColumns(this.dtColumns)\r\n                    })\r\n                    .catch(() => {\r\n                        this.store.setError({ title: this.$t('common.toast.error'), msg: this.$t('documentExecution.olap.drillTru.drillTruError') })\r\n                        this.loading = false\r\n                    })\r\n                    .finally(() => (this.loading = false))\r\n            }\r\n        },\r\n        getOrdinalFromEvent(event: any) {\r\n            const drillThroughAttribute = event.target.attributes[1].textContent\r\n\r\n            const ordinal = parseInt(drillThroughAttribute.substring(drillThroughAttribute.indexOf('(') + 1, drillThroughAttribute.indexOf(')')))\r\n            return ordinal\r\n        },\r\n        formatColumns(array) {\r\n            let arr = [] as any\r\n            for (var i = 0; i < array.length; i++) {\r\n                var obj = {} as any\r\n                obj.label = array[i].toUpperCase()\r\n                obj.name = array[i]\r\n                obj.size = '100px'\r\n                arr.push(obj)\r\n            }\r\n            return arr\r\n        },\r\n        async getCollections() {\r\n            var toSend = {} as any\r\n            toSend.filters = JSON.stringify(this.olap.filters)\r\n\r\n            await this.$http\r\n                .post(import.meta.env.VITE_OLAP_PATH + `1.0/member/drilltrough/levels/?SBI_EXECUTION_ID=${this.id}`, toSend, { headers: { Accept: 'application/json, text/plain, */*', 'Content-Type': 'application/json;charset=UTF-8' } })\r\n                .then((response: AxiosResponse<any>) => {\r\n                    this.dtTree = response.data\r\n                    setTimeout(() => {\r\n                        this.checkDtLevels()\r\n                    }, 500)\r\n                })\r\n                .catch(() => {\r\n                    this.store.setError({ title: this.$t('common.toast.error'), msg: this.$t('documentExecution.olap.drillTru.drillLevelsError') })\r\n                })\r\n        },\r\n\r\n        checkDtLevels() {\r\n            var tempArr = [] as any\r\n            if (this.dtTree != null && this.formattedColumns != null) {\r\n                for (var i = 0; i < this.dtTree.length; i++) {\r\n                    for (var j = 0; j < this.dtTree[i].children.length; j++) {\r\n                        for (var k = 0; k < this.formattedColumns.length; k++) {\r\n                            if (this.formattedColumns[k].label == this.dtTree[i].children[j].caption.toUpperCase()) {\r\n                                this.dtTree[i].children[j].checked = true\r\n                                tempArr.push(this.dtTree[i].children[j])\r\n                            } else {\r\n                                this.dtTree[i].children[j].checked = false\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                this.store.setError({ title: this.$t('common.toast.error'), msg: this.$t('documentExecution.olap.drillTru.checkingLevelsError') })\r\n            }\r\n\r\n            for (i = 0; i < tempArr.length; i++) {\r\n                this.checkCheckboxes(tempArr[i], this.dtAssociatedLevels)\r\n            }\r\n        },\r\n\r\n        checkCheckboxes(item, list) {\r\n            // eslint-disable-next-line no-prototype-builtins\r\n            if (item.hasOwnProperty('caption')) {\r\n                var index = this.indexInList(item, list)\r\n\r\n                if (index != -1) {\r\n                    this.dtAssociatedLevels.splice(index, 1)\r\n                } else {\r\n                    this.dtAssociatedLevels.push(item)\r\n                }\r\n            }\r\n        },\r\n\r\n        indexInList(item, list) {\r\n            // eslint-disable-next-line no-prototype-builtins\r\n            if (item.hasOwnProperty('caption')) {\r\n                for (var i = 0; i < list.length; i++) {\r\n                    var object = list[i]\r\n                    if (object.caption == item.caption) {\r\n                        return i\r\n                    }\r\n                }\r\n            }\r\n            return -1\r\n        },\r\n\r\n        async handleTableClick(event: any) {\r\n            const eventTarget = event.target as any\r\n\r\n            if (this.mode !== 'view' && eventTarget.tagName === 'TH') {\r\n                this.selectCell(event)\r\n            }\r\n\r\n            if (eventTarget) {\r\n                switch (eventTarget.className) {\r\n                    case 'drill-up':\r\n                        await this.drillUp(event, false)\r\n                        break\r\n                    case 'drill-down':\r\n                        await this.drillDown(event)\r\n                        break\r\n                    case 'drill-up-replace':\r\n                        await this.drillUp(event, true)\r\n                        break\r\n                    case 'sort-basic':\r\n                    case 'sort-asc':\r\n                    case 'sort-desc':\r\n                        await this.sortOlap(event)\r\n                        break\r\n                    case 'external-cross-navigation':\r\n                        this.execExternalCrossNavigation(event)\r\n                        break\r\n                    case 'cell-cross-navigation':\r\n                        await this.getCrossNavigationURL(event)\r\n                        break\r\n                    case 'drillthrough':\r\n                        await this.drillThrough(event)\r\n                        break\r\n                }\r\n            }\r\n        },\r\n        openFilterDialog(filter: any) {\r\n            this.selectedFilter = filter\r\n            this.filterDialogVisible = true\r\n        },\r\n        closeFilterDialog() {\r\n            this.filterDialogVisible = false\r\n            this.selectedFilter = null\r\n        },\r\n        async applyFilters(payload: any) {\r\n            this.filterDialogVisible = false\r\n            this.loading = true\r\n            if (payload.type === 'slicer') {\r\n                delete payload.type\r\n                if (this.olapDesignerMode) {\r\n                    this.updateDynamicSlicer(payload)\r\n                }\r\n                await this.sliceOLAP(payload)\r\n                if (this.olapDesignerMode && payload.DYNAMIC_SLICER) {\r\n                    this.filterLevels[payload.hierarchy] = payload\r\n                    this.updateOlapDesignerMDXQueryParameters()\r\n                } else {\r\n                    delete this.filterLevels[payload.hierarchy]\r\n                }\r\n            } else {\r\n                await this.placeMembersOnAxis(payload)\r\n                this.updateOlapDesignerMDXQueryParameters()\r\n            }\r\n\r\n            this.formatOlapTable()\r\n            if (this.olapDesigner.template) this.olapDesigner.template.wrappedObject.olap.MDXMondrianQuery.XML_TAG_TEXT_CONTENT = this.olap.MDXWITHOUTCF\r\n            this.loading = false\r\n        },\r\n        updateOlapDesignerMDXQueryParameters() {\r\n            if (!this.olapDesigner || !this.olapDesigner.template) return\r\n            let query = this.olap.MDXWITHOUTCF\r\n\r\n            this.olapDesigner.template.wrappedObject.olap.MDXMondrianQuery.XML_TAG_TEXT_CONTENT = query\r\n            this.olapDesigner.template.wrappedObject.olap.MDXQUERY.parameter = []\r\n\r\n            Object.keys(this.filterLevels).forEach((key: string) => {\r\n                const payload = this.filterLevels[key]\r\n\r\n                const uniqueName = payload.rootNode?.id\r\n                let replaceValue = ''\r\n                for (let i = 0; i < payload.DYNAMIC_SLICER.length; i++) {\r\n                    const slicer = payload.DYNAMIC_SLICER[i]\r\n                    if (!slicer.value) break\r\n                    const paramName = slicer.url ? '$P{' + slicer.value + '}' : '${' + slicer.value + '}'\r\n\r\n                    if (i === 0) {\r\n                        replaceValue = payload.hierarchy\r\n                    }\r\n                    replaceValue += `.[${paramName}]`\r\n\r\n                    if (slicer.url) this.olapDesigner.template.wrappedObject.olap.MDXQUERY.parameter.push({ name: slicer.url, as: slicer.url })\r\n                }\r\n                query = query.replaceAll(uniqueName, replaceValue)\r\n            })\r\n            this.olapDesigner.template.wrappedObject.olap.MDXQUERY.XML_TAG_TEXT_CONTENT = query\r\n        },\r\n        async sliceOLAP(payload) {\r\n            await this.$http\r\n                .post(import.meta.env.VITE_OLAP_PATH + `1.0/hierarchy/slice?SBI_EXECUTION_ID=${this.id}`, payload, { headers: { Accept: 'application/json, text/plain, */*', 'Content-Type': 'application/json;charset=UTF-8' } })\r\n                .then((response: AxiosResponse<any>) => (this.olap = response.data))\r\n                .catch(() => {})\r\n        },\r\n        async placeMembersOnAxis(payload) {\r\n            const members = payload.members?.map((member: any) => {\r\n                return { id: member.id, leaf: member.leaf, name: member.name, uniqueName: member.uniqueName, visible: member.visible }\r\n            })\r\n            await this.$http\r\n                .post(import.meta.env.VITE_OLAP_PATH + `1.0/axis/${payload.axis}/placeMembersOnAxis?SBI_EXECUTION_ID=${this.id}`, members, { headers: { Accept: 'application/json, text/plain, */*', 'Content-Type': 'application/json;charset=UTF-8' } })\r\n                .then((response: AxiosResponse<any>) => (this.olap = response.data))\r\n                .catch(() => {})\r\n        },\r\n        async loadParameters() {\r\n            const documentLabel = this.olapDesigner.DOCUMENT_LABEL ?? this.documentLabel\r\n            await this.$http\r\n                .get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `1.0/documents/${documentLabel}/parameters`)\r\n                .then((response: AxiosResponse<any>) => (this.parameters = response.data ? response.data.results : []))\r\n                .catch(() => {})\r\n        },\r\n        async loadProfileAttributes() {\r\n            await this.$http\r\n                .get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/attributes`)\r\n                .then((response: AxiosResponse<any>) => (this.profileAttributes = response.data))\r\n                .catch(() => {})\r\n        },\r\n        async undo() {\r\n            this.loading = true\r\n            await this.$http\r\n                .post(import.meta.env.VITE_OLAP_PATH + `1.0/model/undo/?SBI_EXECUTION_ID=${this.id}`, null, { headers: { Accept: 'application/json, text/plain, */*', 'Content-Type': 'application/json;charset=UTF-8', 'X-Disable-Errors': 'true' } })\r\n                .then((response: AxiosResponse<any>) => {\r\n                    this.store.setInfo({\r\n                        title: this.$t('common.toast.updateTitle'),\r\n                        msg: this.$t('common.toast.success')\r\n                    })\r\n                    this.olap = response.data\r\n                    this.formatOlapTable()\r\n                })\r\n                .catch((error: any) =>\r\n                    this.store.setError({\r\n                        title: this.$t('common.error.generic'),\r\n                        msg: error?.localizedMessage\r\n                    })\r\n                )\r\n            this.loading = false\r\n        },\r\n        saveScenario(scenario) {\r\n            this.olapDesigner.template.wrappedObject.olap.SCENARIO = scenario\r\n            this.scenarioWizardVisible = false\r\n            this.store.setInfo({ title: this.$t('common.toast.updateTitle'), msg: this.$t('documentExecution.olap.scenarioWizard.scenarioUpdated') })\r\n        },\r\n        deleteScenario() {\r\n            delete this.olapDesigner.template.wrappedObject.olap.SCENARIO\r\n            this.scenarioWizardVisible = false\r\n        },\r\n        updateDynamicSlicer(payload: any) {\r\n            if (!this.olapDesigner.template.wrappedObject.olap.DYNAMIC_SLICER) this.olapDesigner.template.wrappedObject.olap.DYNAMIC_SLICER = []\r\n            const temp = payload.DYNAMIC_SLICER?.filter((level: any) => level.DRIVER || level.PROFILE_ATTRIBUTE).map((level: any) => {\r\n                return {\r\n                    HIERARCHY: level.HIERARCHY,\r\n                    LEVEL: level.LEVEL,\r\n                    DRIVER: level.DRIVER,\r\n                    PROFILE_ATTRIBUTE: level.PROFILE_ATTRIBUTE\r\n                }\r\n            })\r\n\r\n            if (!temp || temp.length === 0) {\r\n                for (let i = this.olapDesigner.template.wrappedObject.olap.DYNAMIC_SLICER.length - 1; i >= 0; i--) {\r\n                    if (this.olapDesigner.template.wrappedObject.olap.DYNAMIC_SLICER[i].HIERARCHY === payload.filterUniqueName) this.olapDesigner.template.wrappedObject.olap.DYNAMIC_SLICER.splice(i, 1)\r\n                }\r\n            } else {\r\n                temp?.forEach((el: any) => {\r\n                    const index = this.olapDesigner.template.wrappedObject.olap.DYNAMIC_SLICER.findIndex((tempEl: any) => tempEl.HIERARCHY === el.HIERARCHY && tempEl.LEVEL === el.LEVEL)\r\n                    if (index !== -1) {\r\n                        this.olapDesigner.template.wrappedObject.olap.DYNAMIC_SLICER[index] = el\r\n                    } else {\r\n                        this.olapDesigner.template.wrappedObject.olap.DYNAMIC_SLICER.push(el)\r\n                    }\r\n                })\r\n            }\r\n\r\n            if (!this.olapDesigner.template.wrappedObject.olap.DYNAMIC_SLICER || this.olapDesigner.template.wrappedObject.olap.DYNAMIC_SLICER.length === 0) delete this.olapDesigner.template.wrappedObject.olap.DYNAMIC_SLICER\r\n        },\r\n        exportExcel() {\r\n            if (this.checkIfVersionIsSet()) {\r\n                this.loading = true\r\n                this.$http\r\n                    .get(import.meta.env.VITE_OLAP_PATH + `1.0/model/exceledit?SBI_EXECUTION_ID=${this.id}`, { headers: { Accept: 'application/json, text/plain, */*' }, responseType: 'blob' })\r\n                    .then((response: AxiosResponse<any>) => {\r\n                        let fileName = response.headers['content-disposition'].split('filename=\"')[1].split('\"')[0]\r\n                        downloadDirect(response.data, fileName, response.headers['content-type'])\r\n                    })\r\n                    .catch(() => {})\r\n                    .finally(() => (this.loading = false))\r\n            } else {\r\n                return this.store.setError({ title: this.$t('common.toast.errorTitle'), msg: this.$t('documentExecution.olap.sliceVersionError') })\r\n            }\r\n        },\r\n        removeFilterLevels(filter: any) {\r\n            if (this.olapDesigner && this.olapDesigner.template && this.olapDesigner.template.wrappedObject.olap.DYNAMIC_SLICER) {\r\n                for (let i = this.olapDesigner.template.wrappedObject.olap.DYNAMIC_SLICER.length - 1; i >= 0; i--) {\r\n                    if (this.olapDesigner.template.wrappedObject.olap.DYNAMIC_SLICER[i].HIERARCHY === filter.uniqueName) {\r\n                        this.olapDesigner.template.wrappedObject.olap.DYNAMIC_SLICER.splice(i, 1)\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        handleTableDoubleClick(event: any) {\r\n            if (!this.olapHasScenario) return\r\n            if (!event.target.attributes.cell) return\r\n            let clickLocation = event.target.getBoundingClientRect()\r\n\r\n            if (!this.checkIfVersionIsSet()) {\r\n                return this.store.setError({ title: this.$t('common.toast.errorTitle'), msg: this.$t('documentExecution.olap.sliceVersionError') })\r\n            } else if (this.checkIfModelIsLocked()) {\r\n                return this.store.setError({ title: this.$t('common.toast.errorTitle'), msg: this.$t('documentExecution.olap.editErrorLocked') })\r\n            } else if (!this.checkIfMeasureIsEditable(event.target.getAttribute('measurename'))) {\r\n                return this.store.setError({ title: this.$t('common.toast.errorTitle'), msg: this.$t('documentExecution.olap.notEditable') })\r\n            } else {\r\n                // @ts-ignore\r\n                this.$refs.whatifInput.style.top = `${clickLocation.top}px`\r\n                // @ts-ignore\r\n                this.$refs.whatifInput.style.left = `${clickLocation.left}px`\r\n                // @ts-ignore\r\n                this.$refs.whatifInput.style.display = 'flex'\r\n\r\n                let locale = localStorage.getItem('locale') as any\r\n                let cutLocalString = locale.split('_')\r\n\r\n                this.whatifInputNewValue = this.parseLocaleNumber(event.target.attributes.value.value, cutLocalString[0])\r\n                this.whatifInputOldValue = event.target.attributes.value.value\r\n                this.whatifInputOrdinal = event.target.attributes.ordinal.value\r\n            }\r\n        },\r\n        parseLocaleNumber(stringNumber, locale) {\r\n            let num = 123456.789,\r\n                fmt_local = new Intl.NumberFormat(locale),\r\n                parts_local = fmt_local.formatToParts(num),\r\n                group = ''\r\n\r\n            // separators\r\n            parts_local.forEach(function(i) {\r\n                switch (i.type) {\r\n                    case 'group':\r\n                        group = i.value\r\n                        break\r\n                    default:\r\n                        break\r\n                }\r\n            })\r\n\r\n            return stringNumber.replace(new RegExp('\\\\' + group, 'g'), '')\r\n        },\r\n        checkIfVersionIsSet() {\r\n            let versionIsSet = false\r\n            for (let i = 0; i < this.olap.filters.length; i++) {\r\n                if (this.olap.filters[i].uniqueName === '[Version]') {\r\n                    versionIsSet = this.olap.filters[i].hierarchies[0].slicers.length > 0\r\n                }\r\n            }\r\n            return versionIsSet\r\n        },\r\n        checkIfModelIsLocked() {\r\n            if (this.olap.modelConfig.status == 'locked_by_other' || this.olap.modelConfig.status == 'unlocked') {\r\n                return true\r\n            } else return false\r\n        },\r\n        checkIfMeasureIsEditable(measureName) {\r\n            if (this.olap.modelConfig && this.olap.modelConfig.writeBackConf) {\r\n                if (this.olap.modelConfig.writeBackConf.editableMeasures == null || this.olap.modelConfig.writeBackConf.editableMeasures.length == 0) {\r\n                    return true\r\n                } else {\r\n                    var measures = this.olap.modelConfig.writeBackConf.editableMeasures\r\n                    for (var i = 0; i < measures.length; i++) {\r\n                        if (measures[i] === measureName) {\r\n                            return true\r\n                        }\r\n                    }\r\n                }\r\n                return false\r\n            }\r\n        },\r\n        closeWhatifInput() {\r\n            // @ts-ignore\r\n            this.$refs.whatifInput.style.display = 'none'\r\n        },\r\n        async onWhatifInput() {\r\n            if (this.whatifInputNewValue != this.whatifInputOldValue) {\r\n                let postData = { expression: this.whatifInputNewValue }\r\n                this.loading = true\r\n                await this.$http\r\n                    .post(import.meta.env.VITE_OLAP_PATH + `1.0/model/setValue/${this.whatifInputOrdinal}?SBI_EXECUTION_ID=${this.id}`, postData, { headers: { Accept: 'application/json, text/plain, */*', 'Content-Type': 'application/json;charset=UTF-8' } })\r\n                    .then((response: AxiosResponse<any>) => {\r\n                        this.olap = response.data\r\n                        this.closeWhatifInput()\r\n                        this.formatOlapTable()\r\n                    })\r\n                    .catch(() => {})\r\n                    .finally(() => (this.loading = false))\r\n            }\r\n            this.closeWhatifInput()\r\n        },\r\n        onNewVersionSaved(olap: iOlap) {\r\n            this.olap = olap\r\n            this.formatOlapTable()\r\n            this.loadVersions()\r\n            this.saveVersionDialogVisible = false\r\n        }\r\n    }\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.olap-overlay-dialog {\r\n    position: absolute;\r\n    z-index: 300;\r\n    background-color: white;\r\n    height: 100%;\r\n    width: 100%;\r\n}\r\n.olap-page-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n}\r\n\r\n#olap-backdrop {\r\n    background-color: rgba(33, 33, 33, 1);\r\n    opacity: 0.48;\r\n    z-index: 50;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    top: 0;\r\n    left: 0;\r\n}\r\n\r\n#olap-select-message {\r\n    flex: 0.7;\r\n}\r\n\r\n#olap-select-button {\r\n    max-width: 200px;\r\n    max-height: 40%;\r\n    flex: 0.3;\r\n}\r\n\r\n.olap-sidebar {\r\n    margin-left: auto;\r\n}\r\n\r\n.drill-up {\r\n    background-image: url('/images/olap/minus.gif');\r\n    background-position: center;\r\n    background-repeat: no-repeat;\r\n    height: 0.8rem;\r\n    width: 0.8rem;\r\n    float: left;\r\n}\r\n\r\n.drill-down {\r\n    background-image: url('/images/olap/plus.gif');\r\n    background-position: center;\r\n    background-repeat: no-repeat;\r\n    height: 0.8rem;\r\n    width: 0.8rem;\r\n    float: left;\r\n}\r\n\r\n.drill-up-replace {\r\n    background-image: url('/images/olap/arrow-up.png');\r\n    background-position: center;\r\n    background-repeat: no-repeat;\r\n    height: 0.8rem;\r\n    width: 0.8rem;\r\n    float: left;\r\n}\r\n\r\n.sort-basic {\r\n    background-image: url('/images/olap/noSortRows.png');\r\n    background-position: center;\r\n    background-repeat: no-repeat;\r\n    height: 0.8rem;\r\n    width: 0.8rem;\r\n    float: left;\r\n}\r\n\r\n.sort-asc {\r\n    background-image: url('/images/olap/ASC-rows.png');\r\n    background-position: center;\r\n    background-repeat: no-repeat;\r\n    height: 0.8rem;\r\n    width: 0.8rem;\r\n    float: left;\r\n}\r\n\r\n.sort-desc {\r\n    background-image: url('/images/olap/DESC-rows.png');\r\n    background-position: center;\r\n    background-repeat: no-repeat;\r\n    height: 0.8rem;\r\n    width: 0.8rem;\r\n    float: left;\r\n}\r\n\r\n.cell-cross-navigation {\r\n    background-image: url('/images/olap/cross-navigation.png');\r\n    background-position: center;\r\n    background-repeat: no-repeat;\r\n    height: 0.8rem;\r\n    width: 0.8rem;\r\n    float: left;\r\n}\r\n\r\n.drillthrough {\r\n    background-image: url('/images/olap/ico_search.gif');\r\n    background-position: center;\r\n    background-repeat: no-repeat;\r\n    height: 0.8rem;\r\n    width: 0.8rem;\r\n    float: left;\r\n}\r\n\r\n.kn-olap-table {\r\n    position: absolute;\r\n    overflow: auto;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: left;\r\n    table-layout: fixed;\r\n    color: rgba(0, 0, 0, 0.54);\r\n    font-size: 12px;\r\n    table {\r\n        border-collapse: collapse;\r\n        thead {\r\n            border-bottom: 1px solid #ccc;\r\n            overflow: auto;\r\n            th {\r\n                position: relative !important;\r\n                border-right: 1px solid #ccc;\r\n                border-left: 1px solid #ccc;\r\n                padding: 5px;\r\n                background: #f5f5f5;\r\n                white-space: nowrap;\r\n                text-align: left;\r\n            }\r\n            td {\r\n                text-align: right;\r\n                vertical-align: middle;\r\n                border-bottom: 1px solid #3b678c;\r\n                border-right: 1px solid #3b678c;\r\n                max-height: 43px !important;\r\n            }\r\n        }\r\n        tbody {\r\n            th {\r\n                border-right: 1px solid #ccc;\r\n                padding-right: 5px;\r\n            }\r\n            td[measurename] {\r\n                text-align: right;\r\n            }\r\n        }\r\n        tr {\r\n            &:nth-child(even) {\r\n                background-color: #eceff1;\r\n            }\r\n            &:nth-child(odd) {\r\n                background-color: white;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n#whatif-input {\r\n    width: 358px;\r\n    height: 22px;\r\n    position: absolute;\r\n    display: none;\r\n    z-index: 99999;\r\n}\r\n</style>\r\n"],"names":["_sfc_main","SelectButton","mainStore","_hoisted_8","_hoisted_10","_hoisted_11","_openBlock","_createElementBlock","_hoisted_1","_createVNode","_withCtx","_hoisted_2","_createElementVNode","_hoisted_3","_toDisplayString","_createCommentVNode","_hoisted_4","_hoisted_5","_hoisted_6","_normalizeClass","_hoisted_7","_hoisted_9","_withDirectives","_createBlock","_hoisted_12","_hoisted_13","Dialog","RadioButton","_normalizeStyle","_Fragment","_renderList","Column","DataTable","Dropdown","VCodeMirror","InlineMessage","_withModifiers","Message","Checkbox","_createTextVNode","Menu","ProgressSpinner","descriptor","Card","Tree","_vShow","Textarea","_withKeys"],"mappings":"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"}