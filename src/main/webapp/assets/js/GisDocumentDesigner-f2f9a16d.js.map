{"version":3,"file":"GisDocumentDesigner-f2f9a16d.js","sources":["../../../../modules/workspace/gisDocumentDesigner/tabs/dataset&Layer/GisDocumentDesignerDataset.vue","../../../../modules/workspace/gisDocumentDesigner/tabs/dataset&Layer/GisDocumentDesignerLayer.vue","../../../../modules/workspace/gisDocumentDesigner/tabs/dataset&Layer/GisDocumentDesignerLayerFilters.vue","../../../../modules/workspace/gisDocumentDesigner/tabs/dataset&Layer/GisDocumentDesignerDataset&Layer.vue","../../../../modules/workspace/gisDocumentDesigner/tabs/datasetJoin/GisDocumentDesignerDatasetJoin.vue","../../../../modules/workspace/gisDocumentDesigner/tabs/indicator/GisDocumentDesignerIndicator.vue","../../../../modules/workspace/gisDocumentDesigner/tabs/menu/GisDocumentDesignerMenu.vue","../../../../modules/workspace/gisDocumentDesigner/GisDocumentDesigner.vue"],"sourcesContent":["<template>\r\n    <Card class=\"p-mb-3\">\r\n        <template #header>\r\n            <Toolbar class=\"kn-toolbar kn-toolbar--secondary p-p-0 p-m-0 p-col-12\">\r\n                <template #start>{{ $t('common.dataset') }}</template>\r\n                <template #end>\r\n                    <Button v-if=\"documentData.selectedDataset.length === 0\" class=\"p-button-link\" :label=\"$t('workspace.gis.dnl.addDataset')\" @click=\"showDatasetDialog\" />\r\n                    <Button v-else class=\"p-button-link\" :label=\"$t('workspace.gis.dnl.changeDataset')\" @click=\"showDatasetDialog\" />\r\n                </template>\r\n            </Toolbar>\r\n        </template>\r\n        <template #content>\r\n            <DataTable class=\"p-datatable-sm kn-table georef-step1-table\" :value=\"documentData.selectedDataset\" dataKey=\"id\" responsiveLayout=\"scroll\" breakpoint=\"600px\">\r\n                <template #empty>\r\n                    {{ $t('workspace.gis.dnl.emptyInfo') }}\r\n                </template>\r\n                <Column v-for=\"col of columns\" :field=\"col.field\" :header=\"$t(col.header)\" :key=\"col.field\">\r\n                    <template #body=\"{ data }\">\r\n                        <span class=\"kn-truncated\" v-tooltip.top=\"data[col.field]\">{{ data[col.field] }}</span>\r\n                    </template>\r\n                </Column>\r\n                <Column :style=\"styleDescriptor.style.trashColumn\" @rowClick=\"false\">\r\n                    <template #body=\"\">\r\n                        <Button icon=\"pi pi-trash\" class=\"p-button-link\" @click=\"deleteSelectedDataset\" />\r\n                    </template>\r\n                </Column>\r\n            </DataTable>\r\n        </template>\r\n    </Card>\r\n\r\n    <Dialog class=\"p-fluid kn-dialog--toolbar--primary\" :style=\"styleDescriptor.style.dialogSize\" v-if=\"datasetDialogVisible\" :visible=\"datasetDialogVisible\" :modal=\"true\" :closable=\"false\">\r\n        <template #header>\r\n            <Toolbar class=\"kn-toolbar kn-toolbar--primary p-p-0 p-m-0 p-col-12\">\r\n                <template #start>{{ $t('workspace.gis.dnl.datasetList') }}</template>\r\n            </Toolbar>\r\n        </template>\r\n        <DataTable\r\n            class=\"p-datatable-sm kn-table kn-width-full\"\r\n            :value=\"availableDatasets\"\r\n            dataKey=\"id\"\r\n            v-model:selection=\"selectedDataset\"\r\n            selectionMode=\"single\"\r\n            :scrollable=\"true\"\r\n            scrollHeight=\"40vh\"\r\n            v-model:filters=\"filters\"\r\n            :globalFilterFields=\"globalFilterFields\"\r\n            :loading=\"loading\"\r\n            responsiveLayout=\"scroll\"\r\n        >\r\n            <template #header>\r\n                <div class=\"table-header p-d-flex p-ai-center\">\r\n                    <span id=\"search-container\" class=\"p-input-icon-left p-mr-3\">\r\n                        <i class=\"pi pi-search\" />\r\n                        <InputText class=\"kn-material-input\" v-model=\"filters['global'].value\" :placeholder=\"$t('common.search')\" />\r\n                    </span>\r\n                </div>\r\n            </template>\r\n            <template #empty>\r\n                {{ $t('workspace.gis.dnl.dialogEmptyInfo') }}\r\n            </template>\r\n            <Column v-for=\"col of columns\" :field=\"col.field\" :header=\"$t(col.header)\" :key=\"col.field\">\r\n                <template #body=\"{ data }\">\r\n                    <span class=\"kn-truncated\" v-tooltip.top=\"data[col.field]\">{{ data[col.field] }}</span>\r\n                </template>\r\n            </Column>\r\n        </DataTable>\r\n        <template #footer>\r\n            <div class=\"p-d-flex p-flex-row p-jc-end\">\r\n                <Button class=\"kn-button kn-button--secondary\" @click=\"closeDialog\"> {{ $t('common.cancel') }}</Button>\r\n                <Button class=\"kn-button kn-button--primary\" @click=\"saveDatasetSelection\"> {{ $t('common.save') }}</Button>\r\n            </div>\r\n        </template>\r\n    </Dialog>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport { AxiosResponse } from 'axios'\r\nimport { filterDefault } from '@/helpers/commons/filterHelper'\r\nimport descriptor from './GisDocumentDesignerDataset&LayerDescriptor.json'\r\nimport styleDescriptor from '@/modules/workspace/gisDocumentDesigner/GisDocumentDesignerDescriptor.json'\r\nimport Column from 'primevue/column'\r\nimport DataTable from 'primevue/datatable'\r\nimport Dialog from 'primevue/dialog'\r\n\r\nimport deepcopy from 'deepcopy'\r\n\r\nexport default defineComponent({\r\n    components: {\r\n        DataTable,\r\n        Column,\r\n        Dialog\r\n    },\r\n    emits: ['datasetDeleted', 'datasetChanged'],\r\n    props: { documentDataProp: { type: Object as any, required: false }, isDatasetChosen: Object },\r\n    computed: {},\r\n    data() {\r\n        return {\r\n            descriptor,\r\n            styleDescriptor,\r\n            columns: descriptor.datasetColumns,\r\n            globalFilterFields: descriptor.datasetFilterFields,\r\n            filters: { global: [filterDefault] } as Object,\r\n            loading: false,\r\n            datasetDialogVisible: false,\r\n            availableDatasets: [] as any,\r\n            selectedDataset: {} as any,\r\n            documentData: {} as any\r\n        }\r\n    },\r\n    created() {\r\n        this.documentData = this.documentDataProp\r\n    },\r\n    methods: {\r\n        showDatasetDialog() {\r\n            this.$confirm.require({\r\n                header: this.$t('common.toast.warning'),\r\n                message: this.$t('workspace.gis.dnl.changeDsMessage'),\r\n                icon: 'pi pi-exclamation-triangle',\r\n                accept: () => {\r\n                    this.openDatasetDialog()\r\n                }\r\n            })\r\n        },\r\n        openDatasetDialog() {\r\n            this.selectedDataset = deepcopy(this.documentData.selectedDataset[0])\r\n            this.datasetDialogVisible = true\r\n            this.getAllDatasets()\r\n        },\r\n        async getAllDatasets() {\r\n            this.loading = true\r\n            await this.$http.get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `1.0/datasets/mydatanoparams`).then((response: AxiosResponse<any>) => (this.availableDatasets = response.data.root))\r\n            this.loading = false\r\n        },\r\n        closeDialog() {\r\n            this.filters['global'].value = null\r\n            this.datasetDialogVisible = false\r\n        },\r\n        deleteSelectedDataset() {\r\n            this.documentData.selectedDataset = []\r\n            this.documentData.datasetLabel = ''\r\n            this.$emit('datasetDeleted')\r\n        },\r\n        saveDatasetSelection() {\r\n            this.documentData.selectedDataset[0] = deepcopy(this.selectedDataset)\r\n            this.$emit('datasetChanged', this.selectedDataset)\r\n            this.datasetDialogVisible = false\r\n        }\r\n    }\r\n})\r\n</script>\r\n","<template>\r\n    <Card>\r\n        <template #header>\r\n            <Toolbar class=\"kn-toolbar kn-toolbar--secondary p-p-0 p-m-0 p-col-12\">\r\n                <template #start>{{ $t('managers.layersManagement.layerTitle') }}</template>\r\n                <template #end>\r\n                    <Button v-if=\"documentData.selectedLayer.length === 0\" class=\"p-button-link\" :label=\"$t('workspace.gis.dnl.addLayer')\" @click=\"showLayerDialogConfirm\" />\r\n                    <Button v-else class=\"p-button-link\" :label=\"$t('workspace.gis.dnl.changeLayer')\" @click=\"showLayerDialogConfirm\" />\r\n                </template>\r\n            </Toolbar>\r\n        </template>\r\n        <template #content>\r\n            <DataTable class=\"georef-step1-table p-datatable-sm kn-table\" :value=\"documentData.selectedLayer\" dataKey=\"layerId\" responsiveLayout=\"scroll\" breakpoint=\"600px\" v-model:filters=\"mainFilters\" :globalFilterFields=\"globalFilterFields\">\r\n                <template #empty>\r\n                    {{ $t('workspace.gis.dnl.layersTableEmpty') }}\r\n                </template>\r\n                <template #header>\r\n                    <span v-if=\"!isDatasetChosen\" id=\"search-container\" class=\"p-input-icon-left p-mr-3\">\r\n                        <i class=\"pi pi-search\" />\r\n                        <InputText class=\"kn-material-input\" v-model=\"mainFilters['global'].value\" :placeholder=\"$t('common.search')\" />\r\n                    </span>\r\n                </template>\r\n                <Column v-for=\"col of columns\" :field=\"col.field\" :header=\"$t(col.header)\" :key=\"col.field\" :sortable=\"true\">\r\n                    <template #body=\"{data}\">\r\n                        <span class=\"kn-truncated\" v-tooltip.top=\"data[col.field]\">{{ data[col.field] }}</span>\r\n                    </template>\r\n                </Column>\r\n                <Column v-if=\"!isDatasetChosen\" :style=\"styleDescriptor.style.trashColumn\" @rowClick=\"false\">\r\n                    <template #body=\"slotProps\">\r\n                        <Button icon=\"pi pi-trash\" class=\"p-button-link\" @click=\"deleteSelectedLayer(slotProps)\" />\r\n                    </template>\r\n                </Column>\r\n            </DataTable>\r\n        </template>\r\n    </Card>\r\n\r\n    <Dialog class=\"p-fluid kn-dialog--toolbar--primary\" :style=\"styleDescriptor.style.dialogSize\" v-if=\"layerDialogVisible\" :visible=\"layerDialogVisible\" :modal=\"true\" :closable=\"false\">\r\n        <template #header>\r\n            <Toolbar class=\"kn-toolbar kn-toolbar--primary p-p-0 p-m-0 p-col-12\">\r\n                <template #start>{{ $t('workspace.gis.dnl.layerList') }}</template>\r\n            </Toolbar>\r\n        </template>\r\n        <DataTable v-if=\"isDatasetChosen\" class=\"p-datatable-sm kn-table\" :value=\"documentData.allLayers\" v-model:selection=\"selectedLayer\" dataKey=\"layerId\" responsiveLayout=\"scroll\" v-model:filters=\"singleFilters\" :globalFilterFields=\"globalFilterFields\" selectionMode=\"single\">\r\n            <template #empty>\r\n                {{ $t('workspace.gis.dnl.layersDialogEmpty') }}\r\n            </template>\r\n            <template #header>\r\n                <span id=\"search-container\" class=\"p-input-icon-left p-mr-3\">\r\n                    <i class=\"pi pi-search\" />\r\n                    <InputText class=\"kn-material-input\" v-model=\"singleFilters['global'].value\" :placeholder=\"$t('common.search')\" />\r\n                </span>\r\n            </template>\r\n            <Column v-for=\"col of columns\" :field=\"col.field\" :header=\"$t(col.header)\" :key=\"col.field\">\r\n                <template #body=\"{data}\">\r\n                    <span class=\"kn-truncated\" v-tooltip.top=\"data[col.field]\">{{ data[col.field] }}</span>\r\n                </template>\r\n            </Column>\r\n        </DataTable>\r\n        <DataTable v-else class=\"p-datatable-sm kn-table\" :value=\"documentData.allLayers\" v-model:selection=\"selectedLayersList\" dataKey=\"layerId\" responsiveLayout=\"scroll\" v-model:filters=\"multipleFilters\" :globalFilterFields=\"globalFilterFields\">\r\n            <template #empty>\r\n                {{ $t('workspace.gis.dnl.layersDialogEmpty') }}\r\n            </template>\r\n            <template #header>\r\n                <span id=\"search-container\" class=\"p-input-icon-left p-mr-3\">\r\n                    <i class=\"pi pi-search\" />\r\n                    <InputText class=\"kn-material-input\" v-model=\"multipleFilters['global'].value\" :placeholder=\"$t('common.search')\" />\r\n                </span>\r\n            </template>\r\n            <Column selectionMode=\"multiple\" />\r\n            <Column v-for=\"col of columns\" :field=\"col.field\" :header=\"$t(col.header)\" :key=\"col.field\">\r\n                <template #body=\"{data}\">\r\n                    <span class=\"kn-truncated\" v-tooltip.top=\"data[col.field]\">{{ data[col.field] }}</span>\r\n                </template>\r\n            </Column>\r\n        </DataTable>\r\n        <template #footer>\r\n            <div class=\"p-d-flex p-flex-row p-jc-end\">\r\n                <Button class=\"kn-button kn-button--secondary\" @click=\"closeDialog\"> {{ $t('common.cancel') }}</Button>\r\n                <Button class=\"kn-button kn-button--primary\" @click=\"saveLayerSelection\"> {{ $t('common.save') }}</Button>\r\n            </div>\r\n        </template>\r\n    </Dialog>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport { iLayer } from '@/modules/workspace/gisDocumentDesigner/GisDocumentDesigner'\r\nimport { filterDefault } from '@/helpers/commons/filterHelper'\r\nimport descriptor from './GisDocumentDesignerDataset&LayerDescriptor.json'\r\nimport styleDescriptor from '@/modules/workspace/gisDocumentDesigner/GisDocumentDesignerDescriptor.json'\r\nimport Column from 'primevue/column'\r\nimport DataTable from 'primevue/datatable'\r\nimport Dialog from 'primevue/dialog'\r\n\r\nimport deepcopy from 'deepcopy'\r\n\r\nexport default defineComponent({\r\n    components: {\r\n        DataTable,\r\n        Column,\r\n        Dialog\r\n    },\r\n    emits: ['layerChanged'],\r\n    props: { documentDataProp: { type: Object as any, required: false }, isDatasetChosen: Boolean },\r\n    computed: {},\r\n    data() {\r\n        return {\r\n            descriptor,\r\n            styleDescriptor,\r\n            columns: descriptor.layerColumns,\r\n            globalFilterFields: descriptor.layerFilterFields,\r\n            mainFilters: { global: [filterDefault] } as Object,\r\n            singleFilters: { global: [filterDefault] } as Object,\r\n            multipleFilters: { global: [filterDefault] } as Object,\r\n            layerDialogVisible: false,\r\n            selectedLayer: {} as iLayer,\r\n            selectedLayersList: [] as iLayer[],\r\n            documentData: {} as any\r\n        }\r\n    },\r\n    created() {\r\n        this.documentData = this.documentDataProp\r\n    },\r\n\r\n    methods: {\r\n        showLayerDialogConfirm() {\r\n            if (this.isDatasetChosen && this.documentData.dsJoins.length > 0) {\r\n                this.$confirm.require({\r\n                    header: this.$t('common.toast.warning'),\r\n                    message: this.$t('workspace.gis.dnl.changeLayerMessage'),\r\n                    icon: 'pi pi-exclamation-triangle',\r\n                    accept: () => {\r\n                        this.showLayerDialog()\r\n                    }\r\n                })\r\n            } else {\r\n                this.showLayerDialog()\r\n            }\r\n        },\r\n        showLayerDialog() {\r\n            this.isDatasetChosen ? (this.selectedLayer = deepcopy(this.documentData.selectedLayer[0])) : (this.selectedLayer = deepcopy(this.documentData.selectedLayer))\r\n            this.layerDialogVisible = true\r\n        },\r\n        closeDialog() {\r\n            this.selectedLayer = {} as iLayer\r\n            this.selectedLayersList = [] as iLayer[]\r\n            this.layerDialogVisible = false\r\n        },\r\n        saveLayerSelection() {\r\n            this.isDatasetChosen ? (this.documentData.selectedLayer = deepcopy([this.selectedLayer])) : (this.documentData.selectedLayer = deepcopy(this.selectedLayersList))\r\n            this.documentData.dsJoins = []\r\n            this.$emit('layerChanged', this.isDatasetChosen ? [this.selectedLayer] : this.selectedLayersList)\r\n            this.layerDialogVisible = false\r\n        },\r\n        deleteSelectedLayer(eventData) {\r\n            this.documentData.selectedLayer.splice(eventData.index, 1)\r\n        }\r\n    }\r\n})\r\n</script>\r\n","<template>\r\n    <Card class=\"p-mt-3\">\r\n        <template #header>\r\n            <Toolbar class=\"kn-toolbar kn-toolbar--secondary p-p-0 p-m-0 p-col-12\">\r\n                <template #start>{{ $t('workspace.gis.dnl.layerFilters') }}</template>\r\n                <template #end>\r\n                    <Button class=\"p-button-link\" :label=\"$t('workspace.gis.dnl.addFilters')\" @click=\"driverDialogVisible = true\" />\r\n                </template>\r\n            </Toolbar>\r\n        </template>\r\n        <template #content>\r\n            <DataTable class=\"georef-step1-table p-datatable-sm kn-table\" :value=\"documentData.selectedDriver\" dataKey=\"id\" responsiveLayout=\"scroll\" breakpoint=\"600px\" v-model:filters=\"mainFilters\" :globalFilterFields=\"globalFilterFields\">\r\n                <template #empty>\r\n                    {{ $t('workspace.gis.dnl.driversTableEmpty') }}\r\n                </template>\r\n                <template #header>\r\n                    <span id=\"search-container\" class=\"p-input-icon-left p-mr-3\">\r\n                        <i class=\"pi pi-search\" />\r\n                        <InputText class=\"kn-material-input\" v-model=\"mainFilters['global'].value\" :placeholder=\"$t('common.search')\" />\r\n                    </span>\r\n                </template>\r\n                <Column v-for=\"col of columns\" :field=\"col.field\" :header=\"$t(col.header)\" :key=\"col.field\" :sortable=\"true\">\r\n                    <template #body=\"{data}\">\r\n                        <span class=\"kn-truncated\" v-tooltip.top=\"data[col.field]\">{{ data[col.field] }}</span>\r\n                    </template>\r\n                </Column>\r\n                <Column v-if=\"!isDatasetChosen\" :style=\"styleDescriptor.style.trashColumn\" @rowClick=\"false\">\r\n                    <template #body=\"slotProps\">\r\n                        <Button icon=\"pi pi-trash\" class=\"p-button-link\" @click=\"deleteselectedDriver(slotProps)\" />\r\n                    </template>\r\n                </Column>\r\n            </DataTable>\r\n        </template>\r\n    </Card>\r\n\r\n    <Dialog class=\"p-fluid kn-dialog--toolbar--primary\" :style=\"styleDescriptor.style.dialogSize\" v-if=\"driverDialogVisible\" :visible=\"driverDialogVisible\" :modal=\"true\" :closable=\"false\">\r\n        <template #header>\r\n            <Toolbar class=\"kn-toolbar kn-toolbar--primary p-p-0 p-m-0 p-col-12\">\r\n                <template #start>{{ $t('workspace.gis.dnl.layerList') }}</template>\r\n            </Toolbar>\r\n        </template>\r\n        <DataTable class=\"p-datatable-sm kn-table\" :value=\"documentData.allDrivers\" v-model:selection=\"selectedDriversList\" dataKey=\"id\" responsiveLayout=\"scroll\" v-model:filters=\"multipleFilters\" :globalFilterFields=\"globalFilterFields\">\r\n            <template #empty>\r\n                {{ $t('workspace.gis.dnl.layersDialogEmpty') }}\r\n            </template>\r\n            <template #header>\r\n                <span id=\"search-container\" class=\"p-input-icon-left p-mr-3\">\r\n                    <i class=\"pi pi-search\" />\r\n                    <InputText class=\"kn-material-input\" v-model=\"multipleFilters['global'].value\" :placeholder=\"$t('common.search')\" />\r\n                </span>\r\n            </template>\r\n            <Column selectionMode=\"multiple\" />\r\n            <Column v-for=\"col of columns\" :field=\"col.field\" :header=\"$t(col.header)\" :key=\"col.field\">\r\n                <template #body=\"{data}\">\r\n                    <span class=\"kn-truncated\" v-tooltip.top=\"data[col.field]\">{{ data[col.field] }}</span>\r\n                </template>\r\n            </Column>\r\n        </DataTable>\r\n        <template #footer>\r\n            <div class=\"p-d-flex p-flex-row p-jc-end\">\r\n                <Button class=\"kn-button kn-button--secondary\" @click=\"closeDialog\"> {{ $t('common.cancel') }}</Button>\r\n                <Button class=\"kn-button kn-button--primary\" @click=\"saveLayerSelection\"> {{ $t('common.save') }}</Button>\r\n            </div>\r\n        </template>\r\n    </Dialog>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport { iDriver } from '@/modules/workspace/gisDocumentDesigner/GisDocumentDesigner'\r\nimport { filterDefault } from '@/helpers/commons/filterHelper'\r\nimport descriptor from './GisDocumentDesignerDataset&LayerDescriptor.json'\r\nimport styleDescriptor from '@/modules/workspace/gisDocumentDesigner/GisDocumentDesignerDescriptor.json'\r\nimport Column from 'primevue/column'\r\nimport DataTable from 'primevue/datatable'\r\nimport Dialog from 'primevue/dialog'\r\n\r\nimport deepcopy from 'deepcopy'\r\n\r\nexport default defineComponent({\r\n    components: {\r\n        DataTable,\r\n        Column,\r\n        Dialog\r\n    },\r\n    emits: ['driverChanged'],\r\n    props: { documentDataProp: { type: Object as any, required: false }, isDatasetChosen: Boolean },\r\n    computed: {},\r\n    data() {\r\n        return {\r\n            descriptor,\r\n            styleDescriptor,\r\n            columns: descriptor.driverColumns,\r\n            globalFilterFields: descriptor.layerFilterFields,\r\n            mainFilters: { global: [filterDefault] } as Object,\r\n            singleFilters: { global: [filterDefault] } as Object,\r\n            multipleFilters: { global: [filterDefault] } as Object,\r\n            driverDialogVisible: false,\r\n            selectedDriver: {} as iDriver,\r\n            selectedDriversList: [] as iDriver[],\r\n            documentData: {} as any\r\n        }\r\n    },\r\n    created() {\r\n        this.documentData = this.documentDataProp\r\n        this.selectedDriversList = deepcopy(this.documentDataProp.selectedDriver)\r\n    },\r\n\r\n    methods: {\r\n        closeDialog() {\r\n            this.selectedDriver = {} as iDriver\r\n            this.selectedDriversList = deepcopy(this.documentDataProp.selectedDriver)\r\n            this.driverDialogVisible = false\r\n        },\r\n        saveLayerSelection() {\r\n            this.$emit('driverChanged', this.selectedDriversList)\r\n            this.driverDialogVisible = false\r\n        },\r\n        deleteselectedDriver(eventData) {\r\n            this.documentData.selectedDriver.splice(eventData.index, 1)\r\n        }\r\n    }\r\n})\r\n</script>\r\n","<template>\r\n    <DatasetCard v-if=\"$route.path.includes('new')\" :documentDataProp=\"documentDataProp\" :isDatasetChosen=\"isDatasetChosen\" @datasetChanged=\"$emit('datasetChanged', $event)\" @datasetDeleted=\"$emit('datasetDeleted')\" />\r\n    <LayersCard :documentDataProp=\"documentDataProp\" :isDatasetChosen=\"isDatasetChosen\" @layerChanged=\"$emit('layerChanged', $event)\" />\r\n    <LayerFilters v-if=\"documentDataProp.allDrivers && documentDataProp.allDrivers.length > 0 && !isDatasetChosen\" :documentDataProp=\"documentDataProp\" @driverChanged=\"$emit('driverChanged', $event)\" />\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport DatasetCard from './GisDocumentDesignerDataset.vue'\r\nimport LayersCard from './GisDocumentDesignerLayer.vue'\r\nimport LayerFilters from './GisDocumentDesignerLayerFilters.vue'\r\n\r\nexport default defineComponent({\r\n    components: {\r\n        DatasetCard,\r\n        LayersCard,\r\n        LayerFilters\r\n    },\r\n    emits: [],\r\n    props: { documentDataProp: { type: Object as any, required: true }, allLayers: Array, isDatasetChosen: Boolean },\r\n    computed: {},\r\n    data() {\r\n        return {}\r\n    },\r\n    created() {},\r\n    methods: {}\r\n})\r\n</script>\r\n","<template>\r\n    <Toolbar class=\"kn-toolbar kn-toolbar--secondary p-p-0 p-m-0 p-col-12\">\r\n        <template #start>{{ $t('workspace.gis.datasetJoinTitle') }}</template>\r\n        <template #end> <Button class=\"p-button-link\" :label=\"$t('workspace.gis.dsj.addButton')\" @click=\"addJoinRow\" /> </template>\r\n    </Toolbar>\r\n    <div id=\"informations-content\" class=\"kn-flex kn-relative kn-height-full\">\r\n        <div :style=\"styleDescriptor.style.absoluteScroll\">\r\n            <Card>\r\n                <template #content>\r\n                    <DataTable class=\"p-datatable-sm kn-table georef-step1-table\" :value=\"documentDataProp.dsJoins\" dataKey=\"id\" responsiveLayout=\"scroll\" breakpoint=\"600px\">\r\n                        <template #empty>\r\n                            {{ $t('workspace.gis.dnl.emptyInfo') }}\r\n                        </template>\r\n                        <Column field=\"datasetColumn\" :header=\"$t('workspace.gis.dsj.dsJoinCol')\" :sortable=\"true\">\r\n                            <template #body=\"slotProps\">\r\n                                <Dropdown id=\"dsJoinCol\" class=\"kn-material-input kn-width-full\" v-model=\"slotProps.data.datasetColumn\" :options=\"documentDataProp.datasetJoinColumns\" optionLabel=\"id\" optionValue=\"id\" :class=\"{ 'p-invalid': slotProps.data.datasetColumn == null }\" />\r\n                                <small for=\"dsJoinCol\" v-if=\"slotProps.data.datasetColumn == null\" class=\"p-error\">{{ $t('workspace.gis.fieldRequired') }} *</small>\r\n                            </template>\r\n                        </Column>\r\n                        <Column field=\"layerColumn\" :header=\"$t('workspace.gis.dsj.lyrJoinCol')\" :sortable=\"true\">\r\n                            <template #body=\"slotProps\">\r\n                                <Dropdown class=\"kn-material-input kn-width-full\" v-model=\"slotProps.data.layerColumn\" :options=\"documentDataProp.layerJoinColumns\" optionLabel=\"property\" optionValue=\"property\" :class=\"{ 'p-invalid': slotProps.data.layerColumn == null }\" />\r\n                                <small for=\"dsJoinCol\" v-if=\"slotProps.data.layerColumn == null\" class=\"p-error\">{{ $t('workspace.gis.fieldRequired') }} *</small>\r\n                            </template>\r\n                        </Column>\r\n                        <Column :style=\"styleDescriptor.style.trashColumn\">\r\n                            <template #body=\"slotProps\">\r\n                                <Button icon=\"pi pi-trash\" class=\"p-button-link\" @click=\"deleteJoinRow(slotProps)\" />\r\n                            </template>\r\n                        </Column>\r\n                    </DataTable>\r\n                </template>\r\n            </Card>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport styleDescriptor from '@/modules/workspace/gisDocumentDesigner/GisDocumentDesignerDescriptor.json'\r\nimport Column from 'primevue/column'\r\nimport DataTable from 'primevue/datatable'\r\nimport Dropdown from 'primevue/dropdown'\r\n\r\nexport default defineComponent({\r\n    components: { DataTable, Column, Dropdown },\r\n    emits: ['joinsValidationChanged'],\r\n    props: { documentDataProp: { type: Object as any, required: false } },\r\n    computed: {\r\n        joinsInvalid() {\r\n            if ((this.documentDataProp.dsJoins.length == 0 && this.documentDataProp.datasetLabel != '') || this.joinsContainEmptyFields) {\r\n                return true\r\n            } else return false\r\n        },\r\n        joinsContainEmptyFields() {\r\n            let value = false\r\n            this.documentDataProp.dsJoins.forEach((field) => {\r\n                if (!field.datasetColumn || !field.layerColumn) {\r\n                    value = true\r\n                } else value = false\r\n            })\r\n            return value\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            styleDescriptor,\r\n            documentData: {} as any\r\n        }\r\n    },\r\n    created() {\r\n        this.documentData = this.documentDataProp\r\n        this.$emit('joinsValidationChanged', 'joinsInvalid', this.joinsInvalid)\r\n    },\r\n    watch: {\r\n        documentDataProp() {\r\n            this.documentData = this.documentDataProp\r\n        },\r\n        joinsInvalid() {\r\n            this.$emit('joinsValidationChanged', 'joinsInvalid', this.joinsInvalid)\r\n        }\r\n    },\r\n    methods: {\r\n        addJoinRow() {\r\n            this.documentData.dsJoins.push({ datasetColumn: null, layerColumn: null })\r\n        },\r\n        deleteJoinRow(eventData) {\r\n            this.documentData.dsJoins.splice(eventData.index, 1)\r\n        }\r\n    }\r\n})\r\n</script>\r\n","<template>\r\n    <Toolbar class=\"kn-toolbar kn-toolbar--secondary p-p-0 p-m-0 p-col-12\">\r\n        <template #start>{{ $t('workspace.gis.indicators') }}</template>\r\n        <template #end> <Button class=\"p-button-link\" :label=\"$t('workspace.gis.dsj.addButton')\" @click=\"addIndicatorRow\" /> </template>\r\n    </Toolbar>\r\n    <div id=\"informations-content\" class=\"kn-flex kn-relative kn-height-full\">\r\n        <div :style=\"styleDescriptor.style.absoluteScroll\">\r\n            <Card>\r\n                <template #content>\r\n                    <DataTable class=\"p-datatable-sm kn-table georef-step1-table\" :value=\"documentDataProp.indicators\" responsiveLayout=\"scroll\" breakpoint=\"600px\">\r\n                        <template #empty>\r\n                            {{ $t('workspace.gis.dnl.emptyInfo') }}\r\n                        </template>\r\n                        <Column field=\"name\" :header=\"$t('qbe.entities.types.measure')\" :sortable=\"true\">\r\n                            <template #body=\"slotProps\">\r\n                                <Dropdown id=\"measure\" class=\"kn-material-input kn-width-full\" v-model=\"slotProps.data.name\" :options=\"documentDataProp.datasetMeasures\" optionLabel=\"id\" optionValue=\"id\" :class=\"{ 'p-invalid': slotProps.data.name == null }\" />\r\n                                <small for=\"measure\" v-if=\"slotProps.data.name == null\" class=\"p-error\">{{ $t('workspace.gis.fieldRequired') }} *</small>\r\n                            </template>\r\n                        </Column>\r\n                        <Column field=\"label\" :header=\"$t('common.label')\" :sortable=\"true\">\r\n                            <template #body=\"slotProps\">\r\n                                <InputText id=\"label\" class=\"kn-material-input kn-width-full\" v-model=\"slotProps.data.label\" :class=\"{ 'p-invalid': slotProps.data.label == null || slotProps.data.label == '' }\" />\r\n                                <small for=\"label\" v-if=\"slotProps.data.label == null || slotProps.data.label == ''\" class=\"p-error\">{{ $t('workspace.gis.fieldRequired') }} *</small>\r\n                            </template>\r\n                        </Column>\r\n                        <Column :style=\"styleDescriptor.style.trashColumn\">\r\n                            <template #body=\"slotProps\">\r\n                                <Button icon=\"pi pi-trash\" class=\"p-button-link\" @click=\"deleteIndicatorRow(slotProps)\" />\r\n                            </template>\r\n                        </Column>\r\n                    </DataTable>\r\n                </template>\r\n            </Card>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport Column from 'primevue/column'\r\nimport styleDescriptor from '@/modules/workspace/gisDocumentDesigner/GisDocumentDesignerDescriptor.json'\r\nimport DataTable from 'primevue/datatable'\r\nimport Dropdown from 'primevue/dropdown'\r\n\r\nexport default defineComponent({\r\n    components: { DataTable, Column, Dropdown },\r\n    emits: ['indicatorsValidationChanged'],\r\n    props: { documentDataProp: { type: Object as any, required: false } },\r\n    computed: {\r\n        indicatorsInvalid() {\r\n            if ((this.documentDataProp.indicators.length == 0 && this.documentDataProp.datasetLabel != '') || this.indicatorsContainEmptyFields) {\r\n                return true\r\n            } else return false\r\n        },\r\n        indicatorsContainEmptyFields() {\r\n            let value = false\r\n            this.documentDataProp.indicators.forEach((field) => {\r\n                if (!field.name || !field.label || field.label === '') {\r\n                    value = true\r\n                } else value = false\r\n            })\r\n            return value\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            styleDescriptor,\r\n            documentData: {} as any\r\n        }\r\n    },\r\n    created() {\r\n        this.documentData = this.documentDataProp\r\n        this.$emit('indicatorsValidationChanged', 'indicatorsInvalid', this.indicatorsInvalid)\r\n    },\r\n    watch: {\r\n        documentDataProp() {\r\n            this.documentData = this.documentDataProp\r\n        },\r\n        indicatorsInvalid() {\r\n            this.$emit('indicatorsValidationChanged', 'indicatorsInvalid', this.indicatorsInvalid)\r\n        }\r\n    },\r\n    methods: {\r\n        addIndicatorRow() {\r\n            this.documentData.indicators.push({ name: null, label: null })\r\n        },\r\n        deleteIndicatorRow(eventData) {\r\n            this.documentData.indicators.splice(eventData.index, 1)\r\n        }\r\n    }\r\n})\r\n</script>\r\n","<template>\r\n    <Card class=\"p-mb-3\">\r\n        <template #header>\r\n            <Toolbar class=\"kn-toolbar kn-toolbar--secondary p-p-0 p-m-0 p-col-12\">\r\n                <template #start>{{ $t('common.menu') }}</template>\r\n            </Toolbar>\r\n        </template>\r\n        <template #content>\r\n            <div class=\"p-grid p-m-2\">\r\n                <div class=\"p-col-12 p-md-6 p-lg-3\">\r\n                    <Checkbox id=\"showRightConfigMenu\" class=\"p-mr-2\" v-model=\"visibilityControls.showRightConfigMenu\" :binary=\"true\" />\r\n                    <label for=\"showRightConfigMenu\">{{ $t('workspace.gis.menu.showRightConfigMenu') }}</label>\r\n                </div>\r\n                <div class=\"p-col-12 p-md-6 p-lg-3\">\r\n                    <Checkbox id=\"showLegendButton\" class=\"p-mr-2\" v-model=\"visibilityControls.showLegendButton\" :binary=\"true\" />\r\n                    <label for=\"showLegendButton\">{{ $t('workspace.gis.menu.showLegendButton') }}</label>\r\n                </div>\r\n                <div class=\"p-col-12 p-md-6 p-lg-3\">\r\n                    <Checkbox id=\"showDistanceCalculator\" class=\"p-mr-2\" v-model=\"visibilityControls.showDistanceCalculator\" :binary=\"true\" />\r\n                    <label for=\"showDistanceCalculator\">{{ $t('workspace.gis.menu.showDistanceCalculator') }}</label>\r\n                </div>\r\n                <div class=\"p-col-12 p-md-6 p-lg-3\">\r\n                    <Checkbox id=\"showDownloadButton\" class=\"p-mr-2\" v-model=\"visibilityControls.showDownloadButton\" :binary=\"true\" />\r\n                    <label for=\"showDownloadButton\">{{ $t('workspace.gis.menu.showDownloadButton') }}</label>\r\n                </div>\r\n                <div class=\"p-col-12 p-md-6 p-lg-3\">\r\n                    <Checkbox id=\"showSelectMode\" class=\"p-mr-2\" v-model=\"visibilityControls.showSelectMode\" :disabled=\"!visibilityControls.showRightConfigMenu\" :binary=\"true\" />\r\n                    <label for=\"showSelectMode\">{{ $t('workspace.gis.menu.showSelectMode') }}</label>\r\n                </div>\r\n                <div class=\"p-col-12 p-md-6 p-lg-3\">\r\n                    <Checkbox id=\"showLayer\" class=\"p-mr-2\" v-model=\"visibilityControls.showLayer\" :disabled=\"!visibilityControls.showRightConfigMenu\" :binary=\"true\" />\r\n                    <label for=\"showLayer\">{{ $t('workspace.gis.menu.showLayer') }}</label>\r\n                </div>\r\n                <div class=\"p-col-12 p-md-6 p-lg-3\">\r\n                    <Checkbox id=\"showBaseLayer\" class=\"p-mr-2\" v-model=\"visibilityControls.showBaseLayer\" :disabled=\"!visibilityControls.showRightConfigMenu\" :binary=\"true\" />\r\n                    <label for=\"showBaseLayer\">{{ $t('workspace.gis.menu.showBaseLayer') }}</label>\r\n                </div>\r\n                <div class=\"p-col-12 p-md-6 p-lg-3\">\r\n                    <Checkbox id=\"showMapConfig\" class=\"p-mr-2\" v-model=\"visibilityControls.showMapConfig\" :disabled=\"!visibilityControls.showRightConfigMenu\" :binary=\"true\" />\r\n                    <label for=\"showMapConfig\">{{ $t('workspace.gis.menu.showMapConfig') }}</label>\r\n                </div>\r\n                <div class=\"p-col-12 p-md-6 p-lg-3\">\r\n                    <Checkbox id=\"crossNavigationMultiselect\" class=\"p-mr-2\" v-model=\"crossNavigationMultiselect\" :disabled=\"crossDisabled\" :binary=\"true\" />\r\n                    <label for=\"crossNavigationMultiselect\">{{ $t('workspace.gis.menu.crossNavigationMultiselect') }}</label>\r\n                </div>\r\n            </div>\r\n        </template>\r\n    </Card>\r\n    <Toolbar class=\"kn-toolbar kn-toolbar--secondary p-p-0 p-m-0 p-col-12\" v-if=\"documentData.selectedDataset.length > 0\">\r\n        <template #start>{{ $t('common.filters') }}</template>\r\n        <template #end> <Button class=\"p-button-link\" :label=\"$t('workspace.gis.dsj.addButton')\" @click=\"addFilterRow\" /> </template>\r\n    </Toolbar>\r\n    <div id=\"informations-content\" class=\"kn-flex kn-relative kn-height-full\" v-if=\"documentData.selectedDataset.length > 0\">\r\n        <div :style=\"styleDescriptor.style.absoluteScroll\">\r\n            <Card>\r\n                <template #content>\r\n                    <DataTable class=\"p-datatable-sm kn-table georef-step1-table\" :value=\"documentDataProp.filters\" dataKey=\"id\" responsiveLayout=\"scroll\" breakpoint=\"600px\">\r\n                        <template #empty>\r\n                            {{ $t('workspace.gis.dnl.emptyInfo') }}\r\n                        </template>\r\n                        <Column field=\"name\" :header=\"$t('workspace.gis.dsj.dsJoinCol')\" :sortable=\"true\">\r\n                            <template #body=\"slotProps\">\r\n                                <Dropdown id=\"dsJoinCol\" class=\"kn-material-input kn-width-full\" v-model=\"slotProps.data.name\" :options=\"documentDataProp.datasetJoinColumns\" optionLabel=\"id\" optionValue=\"id\" :class=\"{ 'p-invalid': slotProps.data.name == null }\" />\r\n                                <small for=\"dsJoinCol\" v-if=\"slotProps.data.name == null\" class=\"p-error\">{{ $t('workspace.gis.fieldRequired') }} *</small>\r\n                            </template>\r\n                        </Column>\r\n                        <Column field=\"label\" :header=\"$t('workspace.gis.dsj.lyrJoinCol')\" :sortable=\"true\">\r\n                            <template #body=\"slotProps\">\r\n                                <InputText id=\"label\" class=\"kn-material-input kn-width-full\" v-model=\"slotProps.data.label\" :class=\"{ 'p-invalid': slotProps.data.label == null || slotProps.data.label == '' }\" />\r\n                                <small for=\"label\" v-if=\"slotProps.data.label == null || slotProps.data.label == ''\" class=\"p-error\">{{ $t('workspace.gis.fieldRequired') }} *</small>\r\n                            </template>\r\n                        </Column>\r\n                        <Column :style=\"styleDescriptor.style.trashColumn\">\r\n                            <template #body=\"slotProps\">\r\n                                <Button icon=\"pi pi-trash\" class=\"p-button-link\" @click=\"deleteFilterRow(slotProps)\" />\r\n                            </template>\r\n                        </Column>\r\n                    </DataTable>\r\n                </template>\r\n            </Card>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport styleDescriptor from '@/modules/workspace/gisDocumentDesigner/GisDocumentDesignerDescriptor.json'\r\nimport Checkbox from 'primevue/checkbox'\r\nimport Column from 'primevue/column'\r\nimport DataTable from 'primevue/datatable'\r\nimport Dropdown from 'primevue/dropdown'\r\n\r\nexport default defineComponent({\r\n    components: { Checkbox, Column, DataTable, Dropdown },\r\n    emits: ['filtersValidationChanged'],\r\n    props: {\r\n        documentDataProp: { type: Object as any, required: false }\r\n    },\r\n    computed: {\r\n        crossDisabled(): any {\r\n            return !this.visibilityControls.showRightConfigMenu || !this.documentDataProp.visibilityData.crossNavigation\r\n        },\r\n        filtersInvalid() {\r\n            if (this.filtersContainEmptyFields) {\r\n                return true\r\n            } else return false\r\n        },\r\n        filtersContainEmptyFields() {\r\n            let value = false\r\n            this.documentDataProp.filters.forEach((field) => {\r\n                if (!field.name || !field.label || field.label === '') {\r\n                    value = true\r\n                } else value = false\r\n            })\r\n            return value\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            styleDescriptor,\r\n            documentData: {} as any,\r\n            visibilityControls: {} as any,\r\n            crossNavigationMultiselect: null\r\n        }\r\n    },\r\n    created() {\r\n        this.documentData = this.documentDataProp\r\n        this.visibilityControls = this.documentDataProp.visibilityData.visibilityControls\r\n        this.crossNavigationMultiselect = this.documentDataProp.visibilityData.crossNavigationMultiselect\r\n        this.$emit('filtersValidationChanged', 'filtersInvalid', this.filtersInvalid)\r\n    },\r\n    watch: {\r\n        documentDataProp() {\r\n            this.documentData = this.documentDataProp\r\n        },\r\n        filtersInvalid() {\r\n            this.$emit('filtersValidationChanged', 'filtersInvalid', this.filtersInvalid)\r\n        }\r\n    },\r\n    methods: {\r\n        addFilterRow() {\r\n            this.documentData.filters.push({ name: null, label: null })\r\n        },\r\n        deleteFilterRow(eventData) {\r\n            this.documentData.filters.splice(eventData.index, 1)\r\n        }\r\n    }\r\n})\r\n</script>\r\n","<template>\r\n    <div class=\"kn-page\">\r\n        <Toolbar class=\"kn-toolbar kn-toolbar--primary\">\r\n            <template #start>\r\n                {{ $t('workspace.gis.title') }}\r\n            </template>\r\n            <template #end>\r\n                <Button class=\"p-button-text p-button-rounded p-button-plain\" :label=\"$t('workspace.gis.editMap')\" :disabled=\"!canOpenMap\" @click=\"openMapConfirm\" />\r\n                <Button icon=\"pi pi-save\" class=\"p-button-text p-button-rounded p-button-plain\" :disabled=\"saveDialogDisabled\" @click=\"saveOrUpdateGis\" />\r\n                <Button icon=\"pi pi-times\" class=\"p-button-text p-button-rounded p-button-plain\" @click=\"closeGis\" />\r\n            </template>\r\n        </Toolbar>\r\n        <div class=\"gis-tabview-container p-d-flex p-flex-column kn-flex\">\r\n            <KnOverlaySpinnerPanel :visibility=\"loading\" />\r\n            <TabView v-if=\"!loading\" class=\"p-d-flex p-flex-column kn-flex\">\r\n                <TabPanel>\r\n                    <template #header>\r\n                        <span v-if=\"$route.path.includes('new')\">{{ $t('workspace.gis.datasetLayerTitle') }}</span>\r\n                        <span v-else>{{ $t('managers.layersManagement.layerTitle') }}</span>\r\n                    </template>\r\n                    <DatasetLayerTab :documentDataProp=\"documentData\" :isDatasetChosen=\"isDatasetChosen\" @datasetChanged=\"onDatasetChange($event)\" @layerChanged=\"onLayerChange($event)\" @driverChanged=\"onDriverChange($event)\" @datasetDeleted=\"onDatasetDelete\" />\r\n                </TabPanel>\r\n\r\n                <TabPanel :disabled=\"!documentData.selectedDataset.length > 0 || !documentData.selectedLayer.length > 0\">\r\n                    <template #header>\r\n                        <span>{{ $t('workspace.gis.datasetJoinTitle') }}</span>\r\n                        <Badge v-if=\"validations.joinsInvalid\" value=\"\" class=\"p-ml-2\" severity=\"danger\" />\r\n                    </template>\r\n\r\n                    <DatasetJoinTab :documentDataProp=\"documentData\" @joinsValidationChanged=\"validationChanged\" />\r\n                </TabPanel>\r\n\r\n                <TabPanel :disabled=\"!documentData.selectedDataset.length > 0\">\r\n                    <template #header>\r\n                        <span>{{ $t('workspace.gis.indicators') }}</span>\r\n                        <Badge v-if=\"validations.indicatorsInvalid\" value=\"\" class=\"p-ml-2\" severity=\"danger\" />\r\n                    </template>\r\n\r\n                    <IndicatorsTab :documentDataProp=\"documentData\" @indicatorsValidationChanged=\"validationChanged\" />\r\n                </TabPanel>\r\n\r\n                <TabPanel>\r\n                    <template #header>\r\n                        <span>{{ $t('workspace.gis.filtersMenu') }}</span>\r\n                        <Badge v-if=\"validations.filtersInvalid\" value=\"\" class=\"p-ml-2\" severity=\"danger\" />\r\n                    </template>\r\n\r\n                    <MenuTab :documentDataProp=\"documentData\" @filtersValidationChanged=\"validationChanged\" />\r\n                </TabPanel>\r\n            </TabView>\r\n        </div>\r\n\r\n        <Dialog class=\"p-fluid kn-dialog--toolbar--primary\" :style=\"descriptor.style.dialogSize\" v-if=\"saveDialogVisible\" :visible=\"saveDialogVisible\" :modal=\"true\" :closable=\"false\">\r\n            <template #header>\r\n                <Toolbar class=\"kn-toolbar kn-toolbar--primary p-p-0 p-m-0 p-col-12\">\r\n                    <template #start>{{ $t('workspace.gis.save') }}</template>\r\n                </Toolbar>\r\n            </template>\r\n            <div class=\"p-field p-col-12 p-my-1\">\r\n                <span class=\"p-float-label\">\r\n                    <InputText id=\"label\" class=\"kn-material-input\" v-model=\"documentData.documentLabel\" :class=\"{ 'p-invalid': documentData.documentLabel == null || documentData.documentLabel == '' }\" />\r\n                    <label for=\"label\" class=\"kn-material-input-label\"> {{ $t('common.label') }} * </label>\r\n                </span>\r\n                <small for=\"label\" v-if=\"documentData.documentLabel == null || documentData.documentLabel == ''\" class=\"p-error\">Field required *</small>\r\n            </div>\r\n            <div class=\"p-field p-col-12\">\r\n                <span class=\"p-float-label\">\r\n                    <InputText id=\"desc\" class=\"kn-material-input kn-width-full\" v-model=\"documentData.documentDesc\" />\r\n                    <label for=\"desc\" class=\"kn-material-input-label\"> {{ $t('common.description') }} </label>\r\n                </span>\r\n            </div>\r\n            <template #footer>\r\n                <div class=\"p-d-flex p-flex-row p-jc-end\">\r\n                    <Button class=\"kn-button kn-button--secondary\" @click=\"saveDialogVisible = false\"> {{ $t('common.cancel') }}</Button>\r\n                    <Button class=\"kn-button kn-button--primary\" :disabled=\"saveButtonDisabled\" @click=\"buildGisTemplate\"> {{ $t('common.save') }}</Button>\r\n                </div>\r\n            </template>\r\n        </Dialog>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport { AxiosResponse } from 'axios'\r\nimport { iDocument } from '@/modules/workspace/gisDocumentDesigner/GisDocumentDesigner'\r\nimport descriptor from '@/modules/workspace/gisDocumentDesigner/GisDocumentDesignerDescriptor.json'\r\nimport KnOverlaySpinnerPanel from '@/components/UI/KnOverlaySpinnerPanel.vue'\r\nimport TabView from 'primevue/tabview'\r\nimport TabPanel from 'primevue/tabpanel'\r\nimport DatasetLayerTab from './tabs/dataset&Layer/GisDocumentDesignerDataset&Layer.vue'\r\nimport DatasetJoinTab from './tabs/datasetJoin/GisDocumentDesignerDatasetJoin.vue'\r\nimport IndicatorsTab from './tabs/indicator/GisDocumentDesignerIndicator.vue'\r\nimport MenuTab from './tabs/menu/GisDocumentDesignerMenu.vue'\r\nimport Dialog from 'primevue/dialog'\r\nimport Badge from 'primevue/badge'\r\nimport mainStore from '../../../App.store'\r\nimport deepcopy from 'deepcopy'\r\n\r\nexport default defineComponent({\r\n    name: 'gis-document-designer',\r\n    components: { Dialog, TabView, TabPanel, DatasetLayerTab, DatasetJoinTab, IndicatorsTab, MenuTab, KnOverlaySpinnerPanel, Badge },\r\n    emits: [],\r\n    props: {},\r\n    computed: {\r\n        isDatasetChosen(): boolean {\r\n            return this.documentData.datasetLabel != ''\r\n        },\r\n        saveDialogDisabled(): boolean {\r\n            if (this.documentData.selectedLayer <= 0 || this.validations.joinsInvalid || this.validations.indicatorsInvalid || this.validations.filtersInvalid) {\r\n                return true\r\n            } else return false\r\n        },\r\n        saveButtonDisabled(): boolean {\r\n            return this.documentData.documentLabel == null || this.documentData.documentLabel == ''\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            descriptor,\r\n            loading: false,\r\n            saveDialogVisible: false,\r\n            selectedDocument: {} as iDocument,\r\n            documentTemplate: {} as any,\r\n            documentData: {} as any,\r\n            validations: {\r\n                joinsInvalid: false,\r\n                indicatorsInvalid: false,\r\n                filtersInvalid: false\r\n            },\r\n            canOpenMap: true\r\n        }\r\n    },\r\n    setup() {\r\n        const store = mainStore()\r\n        return { store }\r\n    },\r\n    created() {\r\n        this.loadPage()\r\n    },\r\n    methods: {\r\n        closeGis() {\r\n            this.$router.push(`${this.$router.options.history.state.back}`)\r\n        },\r\n        async loadPage() {\r\n            this.loading = true\r\n            this.disableMapPreview()\r\n            await this.createDocumentData()\r\n            this.loading = false\r\n        },\r\n        disableMapPreview() {\r\n            if (this.$route.path.includes('new')) {\r\n                this.canOpenMap = false\r\n            }\r\n        },\r\n\r\n        async createDocumentData() {\r\n            this.documentData = deepcopy(descriptor.newGisTemplate)\r\n            await this.getAllLayers()\r\n            if (this.$route.path.includes('edit')) {\r\n                await this.getSelectedDocument()\r\n                await this.getDocumentDrivers()\r\n                await this.findActiveTemplate()\r\n                await this.initializeDataset()\r\n                this.initializeSelectedDrivers()\r\n                this.initializeSelectedLayer()\r\n            }\r\n        },\r\n\r\n        async getAllLayers() {\r\n            await this.$http.get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `layers`).then((response: AxiosResponse<any>) => (this.documentData.allLayers = response.data.root))\r\n        },\r\n\r\n        async getSelectedDocument() {\r\n            await this.$http.get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/documents/${this.$route.query.documentId}`).then(async (response: AxiosResponse<any>) => {\r\n                this.selectedDocument = response.data\r\n                this.documentData.documentLabel = response.data.label\r\n                this.documentData.documentDesc = response.data.description\r\n                this.documentData.dataSetId = response.data.dataSetId\r\n            })\r\n        },\r\n\r\n        async findActiveTemplate() {\r\n            await this.$http.get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/documentdetails/${this.$route.query.documentId}/templates`, { headers: { Accept: 'application/json, text/plain, */*', 'X-Disable-Errors': 'true' } }).then(async (response: AxiosResponse<any>) => {\r\n                if (response.data.length > 0) {\r\n                    let activeTemplateId = null\r\n                    response.data.find((template) => (template.active === true ? (activeTemplateId = template.id) : ''))\r\n                    await this.getActiveTemplateData(activeTemplateId)\r\n                }\r\n            })\r\n        },\r\n\r\n        async getDocumentDrivers() {\r\n            if (this.selectedDocument.drivers.length > 0) {\r\n                await this.$http.get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `1.0/documents/${this.documentData.documentLabel}/parameters`, { headers: { Accept: 'application/json, text/plain, */*', 'X-Disable-Errors': 'true' } }).then(async (response: AxiosResponse<any>) => {\r\n                    this.documentData.allDrivers = response.data.results\r\n                })\r\n            }\r\n        },\r\n\r\n        initializeSelectedDrivers() {\r\n            if (this.selectedDocument.drivers.length > 0 && this.documentTemplate.analitycalFilter) {\r\n                this.documentData.allDrivers.forEach((driverFromResponse) => {\r\n                    this.documentTemplate.analitycalFilter.forEach((driverFromTemplate) => {\r\n                        if (driverFromResponse.url === driverFromTemplate) {\r\n                            this.documentData.selectedDriver.push(driverFromResponse)\r\n                        }\r\n                    })\r\n                })\r\n            }\r\n        },\r\n\r\n        async getActiveTemplateData(templateId) {\r\n            await this.$http\r\n                .get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/documentdetails/${this.$route.query.documentId}/templates/selected/${templateId}`, { headers: { Accept: 'application/json, text/plain, */*', 'X-Disable-Errors': 'true' } })\r\n                .then(async (response: AxiosResponse<any>) => {\r\n                    this.documentTemplate = response.data\r\n                    this.documentData.indicators = response.data.indicators\r\n                    this.documentData.filters = response.data.filters\r\n                    this.documentData.visibilityData = {\r\n                        crossNavigation: response.data.crossNavigation,\r\n                        crossNavigationMultiselect: response.data.crossNavigationMultiselect,\r\n                        visibilityControls: response.data.visibilityControls\r\n                    }\r\n                })\r\n        },\r\n        initializeSelectedLayer() {\r\n            if (this.documentTemplate.targetLayerConf) {\r\n                this.documentData.allLayers.forEach((layerFromResponse) => {\r\n                    this.documentTemplate.targetLayerConf.forEach((layerFromTemplate) => {\r\n                        if (layerFromResponse.name === layerFromTemplate.label) {\r\n                            this.documentData.selectedLayer.push(layerFromResponse)\r\n                        }\r\n                    })\r\n                })\r\n            }\r\n            this.initializeSelectedJoinColumns()\r\n        },\r\n        async initializeSelectedJoinColumns() {\r\n            if (this.documentTemplate.datasetJoinColumns && this.documentTemplate.layerJoinColumns) {\r\n                var dsJoinCols = this.documentTemplate.datasetJoinColumns.split(',')\r\n                var layerJoinCols = this.documentTemplate.layerJoinColumns.split(',')\r\n                var layerId = this.documentData.selectedLayer[0].layerId\r\n\r\n                this.documentData.dsJoins = dsJoinCols.map((x, i) => {\r\n                    return { datasetColumn: x, layerColumn: layerJoinCols[i] }\r\n                })\r\n\r\n                this.loadLayerColumns(layerId)\r\n            }\r\n        },\r\n        async loadLayerColumns(layerId) {\r\n            await this.$http.get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `layers/getFilter?id=${layerId}`).then((response: AxiosResponse<any>) => {\r\n                this.documentData.layerJoinColumns = response.data\r\n            })\r\n        },\r\n        async initializeDataset() {\r\n            if (this.documentData.dataSetId) {\r\n                await this.$http.get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `1.0/datasets/dataset/id/${this.documentData.dataSetId}`).then((response: AxiosResponse<any>) => {\r\n                    this.documentData.selectedDataset = [response.data[0]]\r\n                    this.documentData.datasetLabel = response.data[0].label\r\n                    this.loadDatasetColumns()\r\n                })\r\n            }\r\n        },\r\n        async loadDatasetColumns() {\r\n            await this.$http.get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `1.0/datasets/${this.documentData.datasetLabel}/fields`).then((response: AxiosResponse<any>) => {\r\n                this.documentData.datasetJoinColumns = response.data.results.filter((field) => {\r\n                    return field.nature === 'attribute'\r\n                })\r\n                this.documentData.datasetMeasures = response.data.results.filter((field) => {\r\n                    return field.nature === 'measure'\r\n                })\r\n            })\r\n        },\r\n        validationChanged(property, value) {\r\n            this.validations[property] = value\r\n        },\r\n        resetAllFields() {\r\n            this.documentData.datasetJoinColumns = []\r\n            this.documentData.datasetMeasures = []\r\n            this.documentData.dsJoins = []\r\n            this.documentData.filters = []\r\n            this.documentData.indicators = []\r\n            this.documentData.selectedLayer = []\r\n            this.documentData.layerJoinColumns = []\r\n        },\r\n        onDatasetChange(dataset) {\r\n            this.documentData.dataSetId = dataset.id\r\n            this.resetAllFields()\r\n            this.initializeDataset()\r\n        },\r\n        onDatasetDelete() {\r\n            this.documentData.datasetLabel = ''\r\n            this.documentData.dataSetId = null\r\n            this.resetAllFields()\r\n        },\r\n        onLayerChange(layer) {\r\n            this.documentData.selectedLayer = layer\r\n            this.isDatasetChosen ? this.loadLayerColumns(layer[0].layerId) : ''\r\n        },\r\n        onDriverChange(driver) {\r\n            this.documentData.selectedDriver = driver\r\n        },\r\n        saveOrUpdateGis() {\r\n            if (this.$route.path.includes('edit')) {\r\n                this.buildGisTemplate()\r\n            } else {\r\n                this.saveDialogVisible = true\r\n            }\r\n        },\r\n        buildGisTemplate() {\r\n            let template = {} as any\r\n\r\n            template.targetLayerConf = []\r\n\r\n            this.documentData.selectedLayer.forEach((layer) => {\r\n                template.targetLayerConf.push({ label: layer.name })\r\n            })\r\n\r\n            if (!this.documentData.datasetLabel && this.documentData.selectedDriver) {\r\n                template.analitycalFilter = []\r\n\r\n                if (this.documentData.selectedDriver.length > 0) {\r\n                    this.documentData.selectedDriver.forEach((driver) => {\r\n                        template.analitycalFilter.push(driver.url)\r\n                    })\r\n                }\r\n            }\r\n\r\n            template.datasetJoinColumns = ''\r\n            template.layerJoinColumns = ''\r\n            this.documentData.dsJoins.forEach((join, index) => {\r\n                index != 0 ? (template.datasetJoinColumns += ',') : ''\r\n                template.datasetJoinColumns += join.datasetColumn\r\n            })\r\n            this.documentData.dsJoins.forEach((join, index) => {\r\n                index != 0 ? (template.layerJoinColumns += ',') : ''\r\n                template.layerJoinColumns += join.layerColumn\r\n            })\r\n\r\n            template.indicators = this.documentData.indicators\r\n            template.filters = this.documentData.filters\r\n            template.crossNavigation = this.documentData.visibilityData.crossNavigation\r\n            template.crossNavigationMultiselect = this.documentData.visibilityData.crossNavigationMultiselect\r\n            template.visibilityControls = this.documentData.visibilityData.visibilityControls\r\n\r\n            this.saveGisDocument(template)\r\n        },\r\n        async saveGisDocument(template) {\r\n            if (this.$route.path.includes('edit')) {\r\n                let postData = {} as any\r\n                postData.DATASET_LABEL = this.documentData.datasetLabel\r\n                postData.DOCUMENT_LABEL = this.documentData.documentLabel\r\n                postData.TEMPLATE = template\r\n\r\n                await this.$http.post(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `1.0/documents/saveGeoReportTemplate`, postData).then(async () => {\r\n                    this.saveDialogVisible = false\r\n                    this.canOpenMap = true\r\n                    this.store.setInfo({\r\n                        title: this.$t('common.toast.updateTitle'),\r\n                        msg: this.$t('common.toast.updateSuccess')\r\n                    })\r\n                    this.routeToDocument()\r\n                })\r\n            } else {\r\n                let postData = {} as any\r\n                let d = new Date()\r\n                let docLabel = 'geomap_' + (d.getTime() % 10000000)\r\n                postData.action = 'DOC_SAVE'\r\n                postData.customData = { templateContent: template }\r\n                postData.document = { name: this.documentData.documentLabel, description: this.documentData.documentDesc, label: docLabel, type: 'MAP' }\r\n                this.documentData.datasetLabel ? (postData.sourceData = { label: this.documentData.datasetLabel }) : (postData.sourceData = null)\r\n\r\n                await this.$http.post(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/saveDocument/`, postData).then(async () => {\r\n                    this.saveDialogVisible = false\r\n                    this.canOpenMap = true\r\n                    this.documentData.documentLabel = docLabel\r\n                    this.store.setInfo({\r\n                        title: this.$t('common.toast.createTitle'),\r\n                        msg: this.$t('common.toast.success')\r\n                    })\r\n                })\r\n            }\r\n        },\r\n        async routeToDocument() {\r\n            await this.$http.get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/documentdetails/${this.$route.query.documentId}/templates`).then((response: AxiosResponse<any>) => {\r\n                response.data.find((template) => (template.active === true ? this.$router.push(`/gis/edit?documentId=${this.$route.query.documentId}`) : ''))\r\n            })\r\n        },\r\n        openMapConfirm() {\r\n            this.$confirm.require({\r\n                header: this.$t('common.toast.warning'),\r\n                message: this.$t('workspace.gis.dnl.openMapWarning'),\r\n                icon: 'pi pi-exclamation-triangle',\r\n                accept: () => {\r\n                    this.openMap()\r\n                }\r\n            })\r\n        },\r\n        openMap() {\r\n            this.$router.push(`/document-browser/map/${this.documentData.documentLabel}`)\r\n        }\r\n    }\r\n})\r\n</script>\r\n<style lang=\"scss\">\r\n.gis-tabview-container .p-tabview .p-tabview-panel,\r\n.gis-tabview-container .p-tabview .p-tabview-panels {\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex: 1;\r\n}\r\n</style>\r\n"],"names":["_sfc_main","DataTable","Column","Dialog","styleDescriptor","_hoisted_3","_createElementVNode","_openBlock","_Fragment","_createVNode","_withCtx","_createBlock","_createElementBlock","_renderList","_withDirectives","_hoisted_1","_createTextVNode","_toDisplayString","_normalizeStyle","_hoisted_6","_hoisted_2","_hoisted_4","_hoisted_5","_hoisted_7","_hoisted_10","_hoisted_8","_hoisted_9","_createCommentVNode","Dropdown","_normalizeClass","Checkbox","_hoisted_11","_hoisted_12","TabView","TabPanel","Badge","descriptor","mainStore"],"mappings":"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"}