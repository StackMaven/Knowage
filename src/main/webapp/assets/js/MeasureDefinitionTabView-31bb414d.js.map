{"version":3,"file":"MeasureDefinitionTabView-31bb414d.js","sources":["../../../../modules/kpi/measureDefinition/MeasureDefinitionFilterList.vue","../../../../modules/kpi/measureDefinition/card/MeasureDefinitionMetadataCard/MeasureDefinitionMetadataCard.vue","../../../../modules/kpi/measureDefinition/card/MeasureDefinitionQueryCard/MeasureDefinitionPreviewDialog.vue","../../../../modules/kpi/measureDefinition/card/MeasureDefinitionQueryCard/MeasureDefinitionQueryCard.vue","../../../../modules/kpi/measureDefinition/MeasureDefinitionSubmitDialog.vue","../../../../modules/kpi/measureDefinition/MeasureDefinitionTabView.vue"],"sourcesContent":["<template>\r\n    <Toolbar class=\"kn-toolbar kn-toolbar--primary\">\r\n        <template #start>{{ header }}</template>\r\n        <template #end>\r\n            <i :class=\"iconClass\" @click=\"sortArray\" data-test=\"sort-icon\"></i>\r\n        </template>\r\n    </Toolbar>\r\n    <Listbox\r\n        class=\"kn-list kn-flex\"\r\n        :options=\"filters\"\r\n        :listStyle=\"metadataDefinitionTabViewDescriptor.listBox.style\"\r\n        :filter=\"true\"\r\n        :filterPlaceholder=\"$t('common.search')\"\r\n        optionLabel=\"name\"\r\n        filterMatchMode=\"contains\"\r\n        :filterFields=\"metadataDefinitionTabViewDescriptor.aliasFilterFields\"\r\n        :emptyFilterMessage=\"$t('common.info.noDataFound')\"\r\n        @change=\"$emit('selected', { value: $event.value.name, type: listType })\"\r\n    >\r\n        <template #empty>{{ $t('common.info.noDataFound') }}</template>\r\n        <template #option=\"slotProps\">\r\n            <div class=\"kn-list-item\" :data-test=\"'list-item-' + slotProps.option.id\">\r\n                <div class=\"kn-list-item-text\">\r\n                    <span>{{ slotProps.option.name }}</span>\r\n                </div>\r\n            </div>\r\n        </template></Listbox\r\n    >\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import { defineComponent } from 'vue'\r\n    import Listbox from 'primevue/listbox'\r\n    import metadataDefinitionTabViewDescriptor from './MetadataDefinitionTabViewDescriptor.json'\r\n\r\n    export default defineComponent({\r\n        name: 'measure-definition-filter-list',\r\n        components: { Listbox },\r\n        props: { header: { type: String }, list: { type: Array }, listType: { type: String } },\r\n        emits: ['selected'],\r\n        data() {\r\n            return {\r\n                metadataDefinitionTabViewDescriptor,\r\n                filters: [],\r\n                sorted: 'DESC'\r\n            }\r\n        },\r\n        computed: {\r\n            iconClass(): String {\r\n                return this.sorted === 'DESC' ? 'pi pi-arrow-down' : 'pi pi-arrow-up'\r\n            }\r\n        },\r\n        watch: {\r\n            list() {\r\n                this.loadList()\r\n            }\r\n        },\r\n        created() {\r\n            this.loadList()\r\n        },\r\n        methods: {\r\n            loadList() {\r\n                this.filters = this.list as any\r\n            },\r\n            sortArray() {\r\n                if (this.sorted === 'DESC') {\r\n                    this.filters = this.filters.sort((a: any, b: any) => (a.name > b.name ? 1 : -1))\r\n                    this.sorted = 'ASC'\r\n                } else {\r\n                    this.filters = this.filters.sort((a: any, b: any) => (a.name < b.name ? 1 : -1))\r\n                    this.sorted = 'DESC'\r\n                }\r\n            }\r\n        }\r\n    })\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n    .kn-list {\r\n        border-left: 1px solid var(--kn-color-borders) !important;\r\n    }\r\n</style>\r\n","<template>\r\n    <DataTable v-if=\"!metadataError\" class=\"p-datatable-sm kn-table\" :value=\"rule.ruleOutputs\" dataKey=\"id\" responsiveLayout=\"stack\" breakpoint=\"960px\" data-test=\"metadata-table\">\r\n        <Column :style=\"metadataCardDescriptor.table.iconColumn.style\">\r\n            <template #body=\"slotProps\">\r\n                <i v-if=\"slotProps.data.aliasIcon\" :class=\"slotProps.data.aliasIcon\" v-tooltip.top=\"alisIconTooltip(slotProps.data.aliasIcon)\"></i>\r\n            </template>\r\n        </Column>\r\n        <Column class=\"kn-truncated\" field=\"alias\" :header=\"$t('kpi.measureDefinition.alias')\"> </Column>\r\n        <Column class=\"kn-truncated\" field=\"type\" :header=\"$t('kpi.measureDefinition.tipology')\">\r\n            <template #body=\"slotProps\">\r\n                <Dropdown class=\"metaweb-dropdown-field p-mr-2\" v-model=\"slotProps.data['type']\" :options=\"tipologiesType\" @change=\"$emit('touched')\">\r\n                    <template #value=\"slotProps\">\r\n                        <div v-if=\"slotProps.value\">\r\n                            <span>{{ slotProps.value['valueCd'] }}</span>\r\n                        </div>\r\n                    </template>\r\n                    <template #option=\"slotProps\">\r\n                        <div>\r\n                            <span>{{ slotProps.option.valueCd }}</span>\r\n                        </div>\r\n                    </template>\r\n                </Dropdown>\r\n                <i class=\"pi pi-pencil edit-icon\"\r\n            /></template>\r\n        </Column>\r\n        <Column :header=\"$t('common.category')\">\r\n            <template #body=\"slotProps\">\r\n                <AutoComplete\r\n                    class=\"metaweb-dropdown-field  p-mr-2\"\r\n                    v-if=\"slotProps.data['category'] && slotProps.data.type.valueCd != 'TEMPORAL_ATTRIBUTE'\"\r\n                    v-model=\"slotProps.data['category'].valueCd\"\r\n                    :suggestions=\"filteredCategories\"\r\n                    field=\"valueCd\"\r\n                    @complete=\"searchCategories($event)\"\r\n                    @input=\"$emit('touched')\"\r\n                    @item-select=\"setRuleCategory($event.value, slotProps.data)\"\r\n                />\r\n                <Dropdown class=\"metaweb-dropdown-field p-mr-2\" v-else v-model=\"slotProps.data['hierarchy']\" :options=\"domainsTemporalLevel\" :placeholder=\"$t('kpi.measureDefinition.temporalAttributePlaceholder')\" @change=\"$emit('touched')\">\r\n                    <template #value=\"slotProps\">\r\n                        <div v-if=\"slotProps.value\">\r\n                            <span>{{ slotProps.value['valueCd'] }}</span>\r\n                        </div>\r\n                        <span v-else>\r\n                            {{ slotProps.placeholder }}\r\n                        </span>\r\n                    </template>\r\n                    <template #option=\"slotProps\">\r\n                        <div>\r\n                            <span>{{ slotProps.option.valueCd }}</span>\r\n                        </div>\r\n                    </template>\r\n                </Dropdown>\r\n                <i class=\"pi pi-pencil edit-icon\" />\r\n            </template>\r\n        </Column>\r\n    </DataTable>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport { iMeasure, iRule } from '../../MeasureDefinition'\r\nimport AutoComplete from 'primevue/autocomplete'\r\nimport Column from 'primevue/column'\r\nimport DataTable from 'primevue/datatable'\r\nimport Dropdown from 'primevue/dropdown'\r\nimport metadataCardDescriptor from './MeasureDefinitionMetadataCardDescriptor.json'\r\n\r\nexport default defineComponent({\r\n    name: 'measure-definition-metadata-card',\r\n    components: { AutoComplete, Column, Dropdown, DataTable },\r\n    props: {\r\n        currentRule: {\r\n            type: Object,\r\n            required: true\r\n        },\r\n        tipologiesType: {\r\n            type: Array,\r\n            required: true\r\n        },\r\n        domainsTemporalLevel: {\r\n            type: Array\r\n        },\r\n        categories: {\r\n            type: Array,\r\n            required: true\r\n        }\r\n    },\r\n    emits: ['touched'],\r\n    data() {\r\n        return {\r\n            metadataCardDescriptor,\r\n            rule: {\r\n                ruleOutputs: [] as iMeasure[]\r\n            } as iRule,\r\n            filteredCategories: [] as any[],\r\n            metadataError: null\r\n        }\r\n    },\r\n    async mounted() {\r\n        this.loadRule()\r\n    },\r\n    methods: {\r\n        loadRule() {\r\n            this.rule = this.currentRule as iRule\r\n        },\r\n        searchCategories(event) {\r\n            setTimeout(() => {\r\n                if (!event.query.trim().length) {\r\n                    this.filteredCategories = [...this.categories] as any[]\r\n                } else {\r\n                    this.filteredCategories = this.categories.filter((category: any) => {\r\n                        return category.valueCd.toLowerCase().startsWith(event.query.toLowerCase())\r\n                    })\r\n                }\r\n            }, 250)\r\n        },\r\n        alisIconTooltip(iconClass: string) {\r\n            if (iconClass.includes('icon-used')) {\r\n                return this.$t('kpi.measureDefinition.aliasUsed')\r\n            } else if (iconClass.includes('icon-missing')) {\r\n                return this.$t('kpi.measureDefinition.aliasMissing')\r\n            }\r\n        },\r\n        setRuleCategory(category: any, alias: any) {\r\n            alias.category.valueCd = category.valueCd\r\n        }\r\n    }\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.icon-used {\r\n    color: #f44246;\r\n}\r\n\r\n.icon-missing {\r\n    color: #ffeb38;\r\n}\r\n\r\n.edit-icon {\r\n    font-size: 0.7rem;\r\n}\r\n\r\n.metaweb-dropdown-field {\r\n    min-width: 300px;\r\n    max-width: 300px;\r\n\r\n    :deep(.p-autocomplete-input) {\r\n        flex: 1;\r\n    }\r\n}\r\n</style>\r\n","<template>\r\n    <Dialog :style=\"previewDialogDescriptor.dialog.style\" :contentStyle=\"previewDialogDescriptor.dialog.contentStyle\" :visible=\"true\" :modal=\"true\" class=\"p-fluid kn-dialog--toolbar--primary\" :header=\"$t('kpi.measureDefinition.preview')\" :closable=\"false\">\r\n        <div class=\"p-d-flex\">\r\n            <DataTable :value=\"rows\" class=\"p-datatable-sm kn-table\" dataKey=\"id\" responsiveLayout=\"stack\" breakpoint=\"960px\">\r\n                <template #empty>\r\n                    {{ $t('common.info.noDataFound') }}\r\n                </template>\r\n                <Column class=\"kn-truncated\" v-for=\"col of columns\" :field=\"col.name\" :header=\"col.label\" :key=\"col.field\" :sortable=\"true\"> </Column>\r\n            </DataTable>\r\n\r\n            <div v-if=\"rule.placeholders && rule.placeholders.length > 0\" class=\"p-col-3\">\r\n                <Toolbar class=\"kn-toolbar kn-toolbar--primary p-m-0\">\r\n                    <template #start>\r\n                        {{ $t('kpi.measureDefinition.filters') }}\r\n                    </template>\r\n                    <template #end>\r\n                        <Button class=\"kn-button p-button-text p-button-rounded\" @click=\"loadPreview\">{{ $t('common.run') }}</Button>\r\n                    </template>\r\n                </Toolbar>\r\n                <div>\r\n                    <div v-for=\"placeholder in rule.placeholders\" :key=\"placeholder.id\">\r\n                        <div class=\"p-field p-m-2\">\r\n                            <span class=\"p-float-label\">\r\n                                <InputText class=\"kn-material-input\" type=\"text\" v-model.trim=\"placeholder.value\" />\r\n                                <label class=\"kn-material-input-label\"> {{ placeholder.name }} </label>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <template #footer>\r\n            <Button class=\"kn-button kn-button--secondary\" :label=\"$t('common.close')\" @click=\"closeTemplate\"></Button>\r\n        </template>\r\n    </Dialog>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import { defineComponent } from 'vue'\r\n    import { iRule } from '../../MeasureDefinition'\r\n    import Column from 'primevue/column'\r\n    import DataTable from 'primevue/datatable'\r\n    import Dialog from 'primevue/dialog'\r\n    import previewDialogDescriptor from './MeasureDefinitionPreviewDialogDescriptor.json'\r\n\r\n    export default defineComponent({\r\n        name: 'measure-definition-preview-dialog',\r\n        components: { Column, DataTable, Dialog },\r\n        props: {\r\n            currentRule: {\r\n                type: Object,\r\n                required: true\r\n            },\r\n            placeholders: {\r\n                type: Array,\r\n                required: true\r\n            },\r\n            columns: { type: Array },\r\n            propRows: { type: Array }\r\n        },\r\n        emits: ['close', 'loadPreview'],\r\n        watch: {\r\n            propRows() {\r\n                this.loadRows()\r\n            },\r\n            currentRule() {\r\n                this.loadRule()\r\n            }\r\n        },\r\n        data() {\r\n            return {\r\n                previewDialogDescriptor,\r\n                rule: {} as iRule,\r\n                rows: [] as any[]\r\n            }\r\n        },\r\n        async created() {\r\n            this.loadRule()\r\n            this.loadRows()\r\n        },\r\n        methods: {\r\n            loadRule() {\r\n                this.rule = this.currentRule as iRule\r\n            },\r\n            loadPreview() {\r\n                this.$emit('loadPreview')\r\n            },\r\n            loadRows() {\r\n                this.rows = this.propRows as any[]\r\n            },\r\n            closeTemplate() {\r\n                this.$emit('close')\r\n            }\r\n        }\r\n    })\r\n</script>\r\n","<template>\r\n    <Card>\r\n        <template #content>\r\n            <div class=\"p-m-3\">\r\n                <span class=\"p-float-label\">\r\n                    <Dropdown id=\"dataSource\" class=\"kn-material-input\" v-model=\"selectedRule.dataSource\" :options=\"datasourcesList\" optionLabel=\"DATASOURCE_LABEL\" @change=\"loadDataSourceStructure\"> </Dropdown>\r\n                    <label for=\"dataSourceLabel\" class=\"kn-material-input-label\">{{ $t('kpi.measureDefinition.dataSource') }}</label>\r\n                </span>\r\n            </div>\r\n            <div v-if=\"selectedRule.dataSource\">\r\n                <Toolbar class=\"kn-toolbar kn-toolbar--primary p-m-0\">\r\n                    <template #end>\r\n                        <Button class=\"kn-button p-button-text p-button-rounded\" @click=\"showPreview\" :disabled=\"previewDisabled\">{{ $t('kpi.measureDefinition.preview') }}</Button>\r\n                    </template>\r\n                </Toolbar>\r\n                <VCodeMirror ref=\"codeMirror\" v-model:value=\"code\" :autoHeight=\"true\" :options=\"options\" @keyup=\"onKeyUp\" />\r\n            </div>\r\n        </template>\r\n    </Card>\r\n    <MeasureDefinitionPreviewDialog v-if=\"preview\" :currentRule=\"selectedRule\" :placeholders=\"placeholders\" :columns=\"columns\" :propRows=\"rows\" @close=\"$emit('closePreview')\" @loadPreview=\"$emit('loadPreview')\"></MeasureDefinitionPreviewDialog>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport { iRule } from '../../MeasureDefinition'\r\nimport { AxiosResponse } from 'axios'\r\nimport VCodeMirror, { CodeMirror } from 'codemirror-editor-vue3'\r\nimport queryCardDescriptor from './MeasureDefinitionQueryCardDescriptor.json'\r\nimport Card from 'primevue/card'\r\nimport Dropdown from 'primevue/dropdown'\r\nimport MeasureDefinitionPreviewDialog from './MeasureDefinitionPreviewDialog.vue'\r\n\r\nexport default defineComponent({\r\n    name: 'measure-definition-query-card',\r\n    components: { Card, Dropdown, VCodeMirror, MeasureDefinitionPreviewDialog },\r\n    props: { rule: { type: Object, required: true }, datasourcesList: { type: Array, required: true }, aliases: { type: Array }, placeholders: { type: Array }, columns: { type: Array }, rows: { type: Array }, codeInput: { type: String }, preview: { type: Boolean }, activeTab: { type: Number } },\r\n    emits: ['touched', 'queryChanged', 'loadPreview', 'closePreview'],\r\n    data() {\r\n        return {\r\n            queryCardDescriptor,\r\n            selectedRule: {} as iRule,\r\n            code: '',\r\n            datasourceStructure: {},\r\n            codeMirror: null as any,\r\n            hintList: [] as any,\r\n            options: {\r\n                mode: 'text/x-mysql',\r\n                indentWithTabs: true,\r\n                smartIndent: true,\r\n                lineWrapping: true,\r\n                matchBrackets: true,\r\n                autofocus: true,\r\n                theme: 'eclipse',\r\n                lineNumbers: true,\r\n                extraKeys: {\r\n                    'Ctrl-Space': this.keyAssistFunc\r\n                } as any,\r\n                hintOptions: { tables: this.datasourceStructure }\r\n            },\r\n            cursorPosition: null\r\n        }\r\n    },\r\n    computed: {\r\n        previewDisabled(): Boolean {\r\n            return !this.code\r\n        }\r\n    },\r\n    watch: {\r\n        codeInput() {\r\n            this.cursorPosition = this.codeMirror.getCursor()\r\n            this.codeMirror.replaceRange(this.codeInput, this.cursorPosition)\r\n            this.selectedRule.definition = this.code\r\n            this.$emit('queryChanged')\r\n        },\r\n        activeTab(value: number) {\r\n            if (value === 0 && this.codeMirror) setTimeout(() => this.codeMirror.refresh(), 100)\r\n        }\r\n    },\r\n    async mounted() {\r\n        this.loadRule()\r\n        await this.loadDataSourceStructure()\r\n    },\r\n    methods: {\r\n        loadRule() {\r\n            this.selectedRule = this.rule as iRule\r\n            this.code = this.rule.definition ?? ''\r\n        },\r\n        async loadDataSourceStructure() {\r\n            if (this.selectedRule.dataSource) {\r\n                await this.$http.get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/datasources/structure/${this.selectedRule.dataSource.DATASOURCE_ID}`).then((response: AxiosResponse<any>) => (this.datasourceStructure = response.data))\r\n            }\r\n            this.$emit('touched')\r\n\r\n            this.setupCodeMirror()\r\n\r\n            if (this.codeMirror && this.codeMirror.options) {\r\n                this.codeMirror.options.hintOptions = { tables: this.datasourceStructure }\r\n            }\r\n        },\r\n        setupCodeMirror() {\r\n            const interval = setInterval(() => {\r\n                if (!this.$refs.codeMirror) return\r\n                this.codeMirror = (this.$refs.codeMirror as any).cminstance as any\r\n                setTimeout(() => {\r\n                    this.codeMirror.refresh()\r\n                }, 0)\r\n                clearInterval(interval)\r\n            }, 200)\r\n\r\n            CodeMirror.registerHelper('hint', 'alias', () => {\r\n                const cur = this.codeMirror.getCursor()\r\n                const tok = this.codeMirror.getTokenAt(cur)\r\n                const start = tok.string.trim() == '' ? tok.start + 1 : tok.start\r\n                const end = tok.end\r\n                const hintList = [] as any\r\n                for (const key in this.aliases) {\r\n                    if (tok.string.trim() == '' || this.aliases[key].name.startsWith(tok.string)) {\r\n                        hintList.push(this.aliases[key].name)\r\n                    }\r\n                }\r\n                return { list: hintList, from: CodeMirror.Pos(cur.line, start), to: CodeMirror.Pos(cur.line, end) }\r\n            })\r\n\r\n            CodeMirror.registerHelper('hint', 'placeholder', () => {\r\n                const cur = this.codeMirror.getCursor()\r\n                const tok = this.codeMirror.getTokenAt(cur)\r\n                const start = tok.start + 1\r\n                const end = tok.end\r\n                const str = tok.string.substring(1, tok.string.length)\r\n                const hintList = [] as any\r\n                for (const key in this.placeholders) {\r\n                    if (str == '' || this.placeholders[key].name.toUpperCase().startsWith(str.toUpperCase())) {\r\n                        hintList.push(this.placeholders[key].name)\r\n                    }\r\n                }\r\n                if (this.placeholders?.length == 1) {\r\n                    hintList.push(str)\r\n                }\r\n\r\n                return { list: hintList, from: CodeMirror.Pos(cur.line, start), to: CodeMirror.Pos(cur.line, end) }\r\n            })\r\n        },\r\n        keyAssistFunc() {\r\n            if (this.isAlias()) {\r\n                CodeMirror.showHint(this.codeMirror, CodeMirror.hint.alias)\r\n            } else if (this.isPlaceholder()) {\r\n                CodeMirror.showHint(this.codeMirror, CodeMirror.hint.placeholder)\r\n            } else {\r\n                CodeMirror.showHint(this.codeMirror, CodeMirror.hint.autocomplete)\r\n            }\r\n        },\r\n        isAlias() {\r\n            const cursor = this.codeMirror.getCursor()\r\n            let token = this.codeMirror.getTokenAt(cursor)\r\n\r\n            if (token.string.trim() != '') {\r\n                const tmpCursor = CodeMirror.Pos(cursor.line, token.start)\r\n                tmpCursor.ch = token.start\r\n                token = this.codeMirror.getTokenAt(tmpCursor)\r\n            }\r\n\r\n            const beforeCursor = CodeMirror.Pos(cursor.line, token.start)\r\n            beforeCursor.ch = token.start\r\n            const beforeToken = this.codeMirror.getTokenAt(beforeCursor)\r\n\r\n            if (beforeToken.string.toLowerCase() == 'as') {\r\n                const text = this.codeMirror.getDoc().getRange(CodeMirror.Pos(0, 0), beforeCursor)\r\n\r\n                const patt = new RegExp(/^((.*\\)\\s*select)|(\\s*select)) ((?!FROM).)* AS$/gi)\r\n                if (!patt.test(text.replace(/\\n/g, ' '))) {\r\n                    return false\r\n                } else {\r\n                    return true\r\n                }\r\n            }\r\n            return false\r\n        },\r\n        isPlaceholder() {\r\n            const cursor = this.codeMirror.getCursor()\r\n            const token = this.codeMirror.getTokenAt(cursor)\r\n            if (token.string.startsWith('@')) {\r\n                return true\r\n            }\r\n        },\r\n        onKeyUp() {\r\n            const cur = this.codeMirror.getCursor()\r\n            const tok = this.codeMirror.getTokenAt(cur)\r\n            if (tok.string == '@') {\r\n                CodeMirror.showHint(this.codeMirror, CodeMirror.hint.placeholder)\r\n            }\r\n            this.selectedRule.definition = this.code\r\n            this.$emit('queryChanged')\r\n        },\r\n        showPreview() {\r\n            this.$emit('loadPreview')\r\n        }\r\n    }\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n::v-deep(.p-toolbar-group-right) {\r\n    height: 100%;\r\n}\r\n\r\n#dataSource {\r\n    width: 100%;\r\n}\r\n\r\n.error-dialog {\r\n    width: 60vw;\r\n}\r\n</style>\r\n","<template>\r\n    <Dialog :contentStyle=\"metadataDefinitionTabViewDescriptor.dialog.style\" :header=\"$t('kpi.measureDefinition.saveInProgress')\" :visible=\"true\" :modal=\"true\" class=\"p-fluid kn-dialog--toolbar--primary\" :closable=\"false\">\r\n        <div class=\"p-field p-m-2\">\r\n            <span class=\"p-float-label\">\r\n                <InputText class=\"kn-material-input\" type=\"text\" v-model.trim=\"name\" />\r\n                <label class=\"kn-material-input-label\"> {{ $t('common.name') }} </label>\r\n            </span>\r\n        </div>\r\n        <Toolbar v-if=\"newAlias.length > 0 || reusedAlias.length > 0\" class=\"kn-toolbar kn-toolbar--primary\">\r\n            <template #start>\r\n                {{ $t('kpi.measureDefinition.alias') }}\r\n            </template>\r\n        </Toolbar>\r\n        <div v-if=\"newAlias.length > 0\">\r\n            <h4>{{ $t('common.new') }}</h4>\r\n            <Chip v-for=\"alias in newAlias\" class=\"p-m-2\" :key=\"alias.id\" :label=\"alias\"></Chip>\r\n        </div>\r\n\r\n        <div v-if=\"reusedAlias.length > 0\">\r\n            <h4>{{ $t('common.reused') }}</h4>\r\n            <Chip v-for=\"alias in reusedAlias\" class=\"p-m-2\" :key=\"alias.id\" :label=\"alias\"></Chip>\r\n        </div>\r\n\r\n        <Toolbar v-if=\"newPlaceholder.length > 0 || reusedPlaceholder.length > 0\" class=\"kn-toolbar kn-toolbar--primary\">\r\n            <template #start>\r\n                {{ $t('kpi.measureDefinition.placeholder') }}\r\n            </template>\r\n        </Toolbar>\r\n\r\n        <div v-if=\"newPlaceholder.length > 0\">\r\n            <h4>{{ $t('common.new') }}</h4>\r\n            <Chip v-for=\"placeholder in newPlaceholder\" class=\"p-m-2\" :key=\"placeholder.id\" :label=\"placeholder\"></Chip>\r\n        </div>\r\n\r\n        <div v-if=\"reusedPlaceholder.length > 0\">\r\n            <h4>{{ $t('common.reused') }}</h4>\r\n            <Chip v-for=\"placeholder in reusedPlaceholder\" class=\"p-m-2\" :key=\"placeholder.id\" :label=\"placeholder\"></Chip>\r\n        </div>\r\n\r\n        <template #footer>\r\n            <Button class=\"kn-button kn-button--secondary\" :label=\"$t('common.close')\" @click=\"$emit('close')\"></Button>\r\n            <Button class=\"kn-button kn-button--primary\" :label=\"$t('common.save')\" @click=\"$emit('save', name)\" :disabled=\"saveRuleButtonDisabled\"></Button>\r\n        </template>\r\n    </Dialog>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport Chip from 'primevue/chip'\r\nimport Dialog from 'primevue/dialog'\r\nimport metadataDefinitionTabViewDescriptor from './MetadataDefinitionTabViewDescriptor.json'\r\n\r\nexport default defineComponent({\r\n    name: 'measure-definition-submit-dialog',\r\n    components: { Chip, Dialog },\r\n    props: { ruleName: { type: String }, newAlias: { type: Array }, reusedAlias: { type: Array }, newPlaceholder: { type: Array }, reusedPlaceholder: { type: Array } },\r\n    emits: ['close'],\r\n    data() {\r\n        return {\r\n            metadataDefinitionTabViewDescriptor,\r\n            name: null as String | null\r\n        }\r\n    },\r\n    computed: {\r\n        saveRuleButtonDisabled(): Boolean {\r\n            return !this.name\r\n        }\r\n    },\r\n    watch: {\r\n        currentRule() {\r\n            this.loadRuleName()\r\n        }\r\n    },\r\n    async created() {\r\n        this.loadRuleName()\r\n    },\r\n    methods: {\r\n        loadRuleName() {\r\n            this.name = this.ruleName as String\r\n        }\r\n    }\r\n})\r\n</script>\r\n","<template>\r\n    <div class=\"kn-page\">\r\n        <Toolbar class=\"kn-toolbar kn-toolbar--primary p-m-0\">\r\n            <template #start>{{ title }} </template>\r\n            <template #end>\r\n                <Button class=\"p-button-text p-button-rounded kn-button\" :label=\"$t('kpi.measureDefinition.alias')\" @click=\"aliasesVisible = !aliasesVisible\" data-test=\"submit-button\" />\r\n                <Button class=\"p-button-text p-button-rounded kn-button\" :label=\"$t('kpi.measureDefinition.placeholder')\" @click=\"placeholderVisible = !placeholderVisible\" data-test=\"submit-button\" />\r\n                <Button icon=\"pi pi-save\" class=\"p-button-text p-button-rounded p-button-plain\" :disabled=\"metadataDisabled\" @click=\"submitConfirm\" data-test=\"submit-button\" />\r\n                <Button icon=\"pi pi-times\" class=\"p-button-text p-button-rounded p-button-plain\" @click=\"closeTemplate\" data-test=\"close-button\" />\r\n            </template>\r\n        </Toolbar>\r\n        <ProgressBar mode=\"indeterminate\" class=\"kn-progress-bar\" v-if=\"loading\" />\r\n        <div class=\"p-d-flex p-flex-row kn-page-content\">\r\n            <div class=\"card kn-flex\" v-if=\"!loading\">\r\n                <TabView v-model:activeIndex=\"activeTab\" @tab-change=\"setTabChanged($event.index)\">\r\n                    <TabPanel>\r\n                        <template #header>\r\n                            <span>{{ $t('kpi.measureDefinition.query') }}</span>\r\n                        </template>\r\n\r\n                        <MeasureDefinitionQueryCard\r\n                            :rule=\"rule\"\r\n                            :datasourcesList=\"datasourcesList\"\r\n                            :aliases=\"availableAliasList\"\r\n                            :placeholders=\"placeholdersList\"\r\n                            :columns=\"columns\"\r\n                            :rows=\"rows\"\r\n                            :codeInput=\"codeInput\"\r\n                            :preview=\"preview\"\r\n                            :activeTab=\"activeTab\"\r\n                            @queryChanged=\"queryChanged = true\"\r\n                            @loadPreview=\"previewQuery(false, true, true)\"\r\n                            @closePreview=\"preview = false\"\r\n                        ></MeasureDefinitionQueryCard>\r\n                    </TabPanel>\r\n\r\n                    <TabPanel :disabled=\"metadataDisabled\">\r\n                        <template #header>\r\n                            <span>{{ $t('kpi.measureDefinition.metadata') }}</span>\r\n                        </template>\r\n\r\n                        <MeasureDefinitionMetadataCard :currentRule=\"rule\" :tipologiesType=\"domainsKpiRuleoutput\" :domainsTemporalLevel=\"domainsTemporalLevel\" :categories=\"domainsKpiMeasures\" @touched=\"setTouched\"></MeasureDefinitionMetadataCard>\r\n                    </TabPanel>\r\n                </TabView>\r\n            </div>\r\n            <div v-if=\"aliasesVisible\" class=\"listbox p-d-flex p-flex-column\">\r\n                <MeasureDefinitionFilterList :header=\"$t('kpi.measureDefinition.alias')\" :list=\"availableAliasList\" listType=\"alias\" @selected=\"setCodeInput($event)\"></MeasureDefinitionFilterList>\r\n            </div>\r\n            <div v-if=\"placeholderVisible\" class=\"listbox p-d-flex p-flex-column\">\r\n                <MeasureDefinitionFilterList :header=\"$t('kpi.measureDefinition.placeholder')\" :list=\"placeholdersList\" listType=\"placeholder\" @selected=\"setCodeInput($event)\"></MeasureDefinitionFilterList>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <MeasureDefinitionSubmitDialog v-if=\"showSaveDialog\" :ruleName=\"rule.name\" :newAlias=\"newAlias\" :reusedAlias=\"reusedAlias\" :newPlaceholder=\"newPlaceholder\" :reusedPlaceholder=\"reusedPlaceholder\" @close=\"showSaveDialog = false\" @save=\"saveRule($event)\"></MeasureDefinitionSubmitDialog>\r\n\r\n    <Dialog :autoZIndex=\"false\" :style=\"metadataDefinitionTabViewDescriptor.errorDialog.style\" :contentStyle=\"metadataDefinitionTabViewDescriptor.errorDialog.contentStyle\"  :modal=\"true\" :visible=\"errorDialogVisible\" :header=\"errorTitle\" class=\"p-fluid kn-dialog--toolbar--primary error-dialog\" :closable=\"false\">\r\n        <p>{{ errorMessage }}</p>\r\n        <template #footer>\r\n            <Button class=\"kn-button kn-button--secondary\" :label=\"$t('common.close')\" @click=\"closeErrorMessageDialog\"></Button>\r\n        </template>\r\n    </Dialog>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport { iDatasource, iMeasure, iRule, iPlaceholder } from './MeasureDefinition'\r\nimport { AxiosResponse } from 'axios'\r\nimport Dialog from 'primevue/dialog'\r\nimport MeasureDefinitionFilterList from './MeasureDefinitionFilterList.vue'\r\nimport MeasureDefinitionMetadataCard from './card/MeasureDefinitionMetadataCard/MeasureDefinitionMetadataCard.vue'\r\nimport metadataDefinitionTabViewDescriptor from './MetadataDefinitionTabViewDescriptor.json'\r\nimport MeasureDefinitionQueryCard from './card/MeasureDefinitionQueryCard/MeasureDefinitionQueryCard.vue'\r\nimport MeasureDefinitionSubmitDialog from './MeasureDefinitionSubmitDialog.vue'\r\nimport TabView from 'primevue/tabview'\r\nimport TabPanel from 'primevue/tabpanel'\r\nimport mainStore from '../../../App.store'\r\n\r\nexport default defineComponent({\r\n    name: 'measure-definition-detail',\r\n    components: { Dialog, MeasureDefinitionFilterList, MeasureDefinitionMetadataCard, MeasureDefinitionQueryCard, MeasureDefinitionSubmitDialog, TabView, TabPanel },\r\n    props: {\r\n        id: {\r\n            type: String\r\n        },\r\n        ruleVersion: {\r\n            type: String\r\n        },\r\n        clone: {\r\n            type: String\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            metadataDefinitionTabViewDescriptor,\r\n            rule: {\r\n                definition: 'SELECT\\n\\nFROM\\n\\nWHERE',\r\n                ruleOutputs: [] as iMeasure[],\r\n                placeholders: [] as iPlaceholder[]\r\n            } as iRule,\r\n            datasourcesList: [] as iDatasource[],\r\n            availableAliasList: [],\r\n            notAvailableAliasList: [],\r\n            placeholdersList: [],\r\n            domainsKpiRuleoutput: [],\r\n            domainsTemporalLevel: [],\r\n            domainsKpiMeasures: [],\r\n            newAlias: [] as any[],\r\n            reusedAlias: [] as any[],\r\n            newPlaceholder: [] as any[],\r\n            reusedPlaceholder: [] as any[],\r\n            activeTab: 0,\r\n            columns: [] as any[],\r\n            rows: [],\r\n            errorMessage: null as string | null,\r\n            errorTitle: null as string | null,\r\n            tabChanged: false,\r\n            loading: false,\r\n            touched: false,\r\n            showSaveDialog: false,\r\n            operation: 'create',\r\n            queryChanged: false,\r\n            aliasesVisible: false,\r\n            placeholderVisible: false,\r\n            codeInput: null as string | null,\r\n            preview: false\r\n        }\r\n    },\r\n    computed: {\r\n        title(): string {\r\n            return this.clone || this.id ? this.rule.name : this.$t('kpi.measureDefinition.newMeasure')\r\n        },\r\n        metadataDisabled(): Boolean {\r\n            let disabled = false\r\n            if (!this.rule.dataSource) {\r\n                disabled = true\r\n            }\r\n            if (this.rule.placeholders?.length > 0) {\r\n                this.rule.placeholders.forEach((placeholder) => {\r\n                    if (!placeholder.value) {\r\n                        disabled = true\r\n                    }\r\n                })\r\n            }\r\n            return disabled\r\n        },\r\n        errorDialogVisible(): Boolean {\r\n            return this.errorMessage ? true : false\r\n        }\r\n    },\r\n    setup() {\r\n        const store = mainStore()\r\n        return { store }\r\n    },\r\n    async created() {\r\n        this.loading = true\r\n        if (this.id && this.ruleVersion) {\r\n            await this.loadSelectedRule()\r\n        }\r\n\r\n        if (this.clone === 'true') {\r\n            this.rule.name = this.$t('common.copyOf') + ' ' + this.rule.name\r\n            delete this.rule.id\r\n        }\r\n        await this.loadDataSources()\r\n        const index = this.datasourcesList.findIndex((datasource: iDatasource) => this.rule.dataSourceId === datasource.DATASOURCE_ID)\r\n        if (index > -1) {\r\n            this.rule.dataSource = this.datasourcesList[index]\r\n        }\r\n        await this.loadAliases()\r\n        await this.loadPlaceholders()\r\n        await this.loadDomainsData()\r\n        this.loading = false\r\n    },\r\n    methods: {\r\n        async loadSelectedRule() {\r\n            await this.$http.get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `1.0/kpi/${this.id}/${this.ruleVersion}/loadRule`).then((response: AxiosResponse<any>) => (this.rule = response.data))\r\n        },\r\n        async loadDataSources() {\r\n            await this.$http.get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `datasources/?onlySqlLike=true`).then((response: AxiosResponse<any>) => (this.datasourcesList = response.data.root))\r\n        },\r\n        async loadAliases() {\r\n            let url = import.meta.env.VITE_RESTFUL_SERVICES_PATH + `1.0/kpi/listAvailableAlias`\r\n            if (this.rule.id) {\r\n                url += `?ruleId=${this.id}&ruleVersion=${this.ruleVersion}`\r\n            }\r\n            await this.$http.get(url).then((response: AxiosResponse<any>) => {\r\n                this.availableAliasList = response.data.available\r\n                this.notAvailableAliasList = response.data.notAvailable\r\n            })\r\n        },\r\n        async loadPlaceholders() {\r\n            await this.$http.get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `1.0/kpi/listPlaceholder`).then((response: AxiosResponse<any>) => (this.placeholdersList = response.data))\r\n        },\r\n        async loadDomainsData() {\r\n            await this.loadDomainsByCode('KPI_RULEOUTPUT_TYPE').then((response: AxiosResponse<any>) => (this.domainsKpiRuleoutput = response.data))\r\n            await this.loadDomainsByCode('TEMPORAL_LEVEL').then((response: AxiosResponse<any>) => (this.domainsTemporalLevel = response.data))\r\n            await this.loadDomainsByCode('KPI_MEASURE_CATEGORY').then((response: AxiosResponse<any>) => (this.domainsKpiMeasures = response.data))\r\n        },\r\n        loadDomainsByCode(code: string) {\r\n            return this.$http.get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/domains/listByCode/${code}`)\r\n        },\r\n        async setTabChanged(tabIndex: any) {\r\n            this.activeTab = tabIndex\r\n\r\n            if (this.activeTab !== 0) {\r\n                await this.previewQuery(false, false, true)\r\n            }\r\n\r\n            this.rule.ruleOutputs.forEach((ruleOutput: any) => {\r\n                this.setAliasIcon(ruleOutput)\r\n                if (!ruleOutput.category) {\r\n                    ruleOutput.category = { valueCd: '' }\r\n                }\r\n            })\r\n\r\n            if (this.errorMessage) {\r\n                this.activeTab = 0\r\n            }\r\n        },\r\n        setNewAliases() {\r\n            this.newAlias = []\r\n            this.reusedAlias = []\r\n            this.rule.ruleOutputs.forEach((ruleOutput: any) => {\r\n                if (this.aliasExists(ruleOutput.alias)) {\r\n                    this.reusedAlias.push(ruleOutput.alias)\r\n                } else {\r\n                    this.newAlias.push(ruleOutput.alias)\r\n                }\r\n            })\r\n            this.newAlias.sort()\r\n            this.reusedAlias.sort()\r\n        },\r\n        setNewPlaceholders() {\r\n            this.newPlaceholder = []\r\n            this.reusedPlaceholder = []\r\n            this.rule.placeholders.forEach((placeholder: any) => {\r\n                if (this.placeholderExists(placeholder.name)) {\r\n                    this.reusedPlaceholder.push(placeholder.name)\r\n                } else {\r\n                    this.newPlaceholder.push(placeholder.name)\r\n                }\r\n            })\r\n            this.newPlaceholder.sort()\r\n            this.reusedPlaceholder.sort()\r\n        },\r\n        placeholderExists(name: string) {\r\n            let exists = false\r\n            this.placeholdersList.forEach((placeholder: any) => {\r\n                if (placeholder.name.toUpperCase() === name.toUpperCase()) {\r\n                    exists = true\r\n                }\r\n            })\r\n            return exists\r\n        },\r\n        setAliasIcon(ruleOutput: any) {\r\n            if (!this.aliasExists(ruleOutput.alias) && !this.aliasUsedByMeasure(ruleOutput.alias)) {\r\n                ruleOutput.aliasIcon = 'fa fa-exclamation-triangle icon-missing'\r\n            }\r\n            if (this.aliasUsedByMeasure(ruleOutput.alias)) {\r\n                ruleOutput.aliasIcon = 'fa fa-exclamation-triangle icon-used'\r\n            }\r\n        },\r\n        aliasExists(name: string) {\r\n            let exists = false\r\n            this.availableAliasList.forEach((alias: any) => {\r\n                if (alias.name.toUpperCase() === name.toUpperCase()) {\r\n                    exists = true\r\n                }\r\n            })\r\n            return exists\r\n        },\r\n        aliasUsedByMeasure(name: string) {\r\n            let used = false\r\n            this.notAvailableAliasList.forEach((alias: any) => {\r\n                if (alias.name.toUpperCase() === name.toUpperCase()) {\r\n                    used = true\r\n                }\r\n            })\r\n            return used\r\n        },\r\n        async previewQuery(save: boolean, hasPlaceholders: boolean, showDialog: boolean) {\r\n            this.loading = true\r\n\r\n            if (this.activeTab === 0 && showDialog) {\r\n                this.preview = true\r\n            }\r\n            const tempRuleOutputs = this.rule.ruleOutputs\r\n            this.rule.ruleOutputs.forEach((ruleOutput) => {\r\n                delete ruleOutput.aliasIcon\r\n                ruleOutput.category = { valueCd: ruleOutput.category?.valueCd as string }\r\n            })\r\n            const tempDatasource = this.rule.dataSource\r\n            if (this.rule.dataSource) {\r\n                this.rule.dataSourceId = this.rule.dataSource.DATASOURCE_ID\r\n            }\r\n            delete this.rule.dataSource\r\n            if (this.rule.definition) {\r\n                this.loadPlaceholder()\r\n            }\r\n\r\n            if ((this.rule.placeholders && this.rule.placeholders.length === 0) || hasPlaceholders) {\r\n                const postData = { rule: this.rule, maxItem: 10 }\r\n\r\n                await this.$http\r\n                    .post(import.meta.env.VITE_RESTFUL_SERVICES_PATH + '1.0/kpi/queryPreview', postData, { headers: { 'X-Disable-Errors': 'true' } })\r\n                    .then((response: AxiosResponse<any>) => {\r\n                        this.columns = response.data.columns\r\n                        this.rows = response.data.rows\r\n                        this.columnToRuleOutputs()\r\n                    })\r\n                    .catch((error) => {\r\n                        this.setPreviewError(error.message)\r\n                    })\r\n            }\r\n            this.setNewAliases()\r\n            this.setNewPlaceholders()\r\n            if (save && !this.errorMessage) {\r\n                await this.preSaveRule()\r\n            }\r\n\r\n            this.rule.dataSource = tempDatasource\r\n            this.rule.ruleOutputs = tempRuleOutputs\r\n            this.loading = false\r\n        },\r\n        setPreviewError(error: string) {\r\n            this.errorTitle = this.$t('kpi.measureDefinition.metadataError') + ' ' + this.$t('kpi.measureDefinition.wrongQuery')\r\n            this.errorMessage = error\r\n            this.rows = []\r\n        },\r\n        async preSaveRule() {\r\n            this.loading = true\r\n            const tempDataSource = this.rule.dataSource\r\n            const tempRuleOutputs = this.rule.ruleOutputs\r\n            delete this.rule.dataSource\r\n            this.rule.ruleOutputs.forEach((ruleOutput) => {\r\n                delete ruleOutput.aliasIcon\r\n                ruleOutput.category = { valueCd: ruleOutput.category?.valueCd as string }\r\n            })\r\n\r\n            await this.$http\r\n                .post(import.meta.env.VITE_RESTFUL_SERVICES_PATH + '1.0/kpi/preSaveRule', this.rule, { headers: { 'X-Disable-Errors': 'true' } })\r\n                .then(() => {\r\n                    if (this.rule.ruleOutputs.length === 0) {\r\n                        this.errorTitle = this.$t('kpi.measureDefinition.presaveErrors.metadataMissing')\r\n                        this.errorMessage = this.$t('kpi.measureDefinition.presaveErrors.metadataMissingText')\r\n                    }\r\n\r\n                    let measurePresent = false\r\n                    this.rule.ruleOutputs.forEach((ruleOutput: any) => {\r\n                        if (ruleOutput.type.valueCd === 'TEMPORAL_ATTRIBUTE' && ruleOutput.hierarchy === null) {\r\n                            this.errorTitle = this.$t('kpi.measureDefinition.presaveErrors.noTemporalattributSet')\r\n                            this.errorMessage = this.$t('kpi.measureDefinition.presaveErrors.missingTemporalattributText')\r\n                        } else if (ruleOutput.type.valueCd === 'MEASURE') {\r\n                            measurePresent = true\r\n                        }\r\n                    })\r\n\r\n                    if (!measurePresent) {\r\n                        this.errorTitle = this.$t('kpi.measureDefinition.presaveErrors.noMeasureSet')\r\n                        this.errorMessage = this.$t('kpi.measureDefinition.presaveErrors.metadataMissingText')\r\n                    }\r\n\r\n                    if (!this.errorMessage) {\r\n                        this.showSaveDialog = true\r\n                    }\r\n                })\r\n                .catch((error: any) => {\r\n                    this.errorTitle = this.$t('kpi.measureDefinition.metadataError') + ' ' + this.$t('kpi.measureDefinition.wrongQuery')\r\n                    this.errorMessage = error.message\r\n                })\r\n\r\n            this.rule.dataSource = tempDataSource\r\n            this.rule.ruleOutputs = tempRuleOutputs\r\n            this.loading = false\r\n        },\r\n        async saveRule(ruleName: string) {\r\n            this.loading = true\r\n            this.rule.name = ruleName\r\n            if (this.rule.id) {\r\n                this.operation = 'update'\r\n            }\r\n\r\n            delete this.rule.dataSource\r\n            this.rule.ruleOutputs.forEach((ruleOutput) => {\r\n                delete ruleOutput.aliasIcon\r\n                ruleOutput.category = { valueCd: ruleOutput.category?.valueCd as string }\r\n            })\r\n\r\n            delete this.rule.dataSource\r\n            await this.$http\r\n                .post(import.meta.env.VITE_RESTFUL_SERVICES_PATH + '1.0/kpi/saveRule', this.rule)\r\n                .then(() => {\r\n                    this.store.setInfo({\r\n                        title: this.$t('common.toast.' + this.operation + 'Title'),\r\n                        msg: this.$t('common.toast.success')\r\n                    })\r\n                    this.$router.replace('/measure-definition')\r\n                })\r\n                .catch((response: any) => {\r\n                    this.store.setError({\r\n                        title: this.$t('common.toast.' + this.operation + 'Title'),\r\n                        msg: response.message\r\n                    })\r\n                })\r\n            this.loading = false\r\n        },\r\n        columnToRuleOutputs() {\r\n            const tempMetadatas = [] as any[]\r\n\r\n            for (let index in this.columns) {\r\n                tempMetadatas.push(this.columns[index].label.toUpperCase())\r\n                if (this.ruleOutputIndexOfColumnName(this.columns[index].label) === -1) {\r\n                    let type = this.domainsKpiRuleoutput[1]\r\n                    if (this.columns[index].type === 'int' || this.columns[index].type == 'float') {\r\n                        type = this.domainsKpiRuleoutput[0]\r\n                    }\r\n                    this.rule.ruleOutputs.push({\r\n                        alias: this.columns[index].label,\r\n                        type: type\r\n                    })\r\n                }\r\n            }\r\n            for (let index = 0; index < this.rule.ruleOutputs.length; index++) {\r\n                if (tempMetadatas.indexOf(this.rule.ruleOutputs[index].alias.toUpperCase()) === -1) {\r\n                    this.rule.ruleOutputs.splice(index, 1)\r\n                    index--\r\n                }\r\n            }\r\n        },\r\n        ruleOutputIndexOfColumnName(columnName: string) {\r\n            for (let i = 0; i < this.rule.ruleOutputs.length; i++) {\r\n                if (this.rule.ruleOutputs[i].alias.toUpperCase() === columnName.toUpperCase()) {\r\n                    return i\r\n                }\r\n            }\r\n            return -1\r\n        },\r\n        loadPlaceholder() {\r\n            const placeholder = this.rule.definition.match(/@\\w*/g)\r\n\r\n            if (placeholder != null) {\r\n                for (let i = 0; i < placeholder.length; i++) {\r\n                    const placeholderName = placeholder[i].substring(1, placeholder[i].length)\r\n\r\n                    let tempPlaceholder = this.rule.placeholders.find((tempPlaceholder) => tempPlaceholder.name.toUpperCase() === placeholderName.toUpperCase())\r\n\r\n                    if (!tempPlaceholder) {\r\n                        tempPlaceholder = this.placeholdersList.find((placeholder: any) => placeholder.name.toUpperCase() === placeholderName.toUpperCase()) as any\r\n                        if (tempPlaceholder == undefined) {\r\n                            const newPlaceholder = {\r\n                                name: placeholderName,\r\n                                value: ''\r\n                            }\r\n                            this.rule.placeholders.push(newPlaceholder)\r\n                        } else {\r\n                            this.rule.placeholders.push(tempPlaceholder)\r\n                        }\r\n                    }\r\n\r\n                    for (let index = 0; index < this.rule.placeholders.length; index++) {\r\n                        if (placeholder.indexOf('@' + this.rule.placeholders[index].name) == -1) {\r\n                            this.rule.placeholders.splice(index, 1)\r\n                            index--\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                this.rule.placeholders = []\r\n            }\r\n        },\r\n        submitConfirm() {\r\n            if (!this.queryChanged) {\r\n                this.previewQuery(true, false, false)\r\n            } else {\r\n                this.$confirm.require({\r\n                    message: this.$t('kpi.measureDefinition.metadataChangedMessage'),\r\n                    header: this.$t('kpi.measureDefinition.metadataChangedTitle'),\r\n                    icon: 'pi pi-exclamation-triangle',\r\n                    accept: () => {\r\n                        this.queryChanged = false\r\n                        this.previewQuery(true, false, false)\r\n                    }\r\n                })\r\n            }\r\n        },\r\n        closeErrorMessageDialog() {\r\n            this.errorMessage = null\r\n        },\r\n        closeTemplate() {\r\n            const path = '/measure-definition'\r\n            if (!this.touched) {\r\n                this.$router.push(path)\r\n            } else {\r\n                this.$confirm.require({\r\n                    message: this.$t('common.toast.unsavedChangesMessage'),\r\n                    header: this.$t('common.toast.unsavedChangesHeader'),\r\n                    icon: 'pi pi-exclamation-triangle',\r\n                    accept: () => {\r\n                        this.touched = false\r\n                        this.$router.push(path)\r\n                    }\r\n                })\r\n            }\r\n        },\r\n        setCodeInput(event: any) {\r\n            if (this.activeTab === 0) {\r\n                this.codeInput = event.type === 'placeholder' ? '@' + event.value : event.value\r\n            }\r\n        },\r\n        sortArray(array: [], type: string) {\r\n            if (this[type] === 'DESC') {\r\n                array = array.sort((a: any, b: any) => (a.name > b.name ? 1 : -1))\r\n                this[type] = 'ASC'\r\n            } else {\r\n                array = array.sort((a: any, b: any) => (a.name < b.name ? 1 : -1))\r\n                this[type] = 'DESC'\r\n            }\r\n        },\r\n        setTouched() {\r\n            this.touched = true\r\n        }\r\n    }\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.error-dialog {\r\n    width: 60vw;\r\n}\r\n\r\n.listbox {\r\n    width: 320px;\r\n}\r\n</style>\r\n"],"names":["_sfc_main","Listbox","_hoisted_1","_openBlock","_Fragment","_createVNode","_withCtx","_createElementVNode","_normalizeClass","_hoisted_2","_toDisplayString","AutoComplete","Column","Dropdown","DataTable","_normalizeStyle","_withDirectives","_createElementBlock","_createBlock","_hoisted_3","_hoisted_5","Dialog","_renderList","_hoisted_4","Card","VCodeMirror","Chip","_createCommentVNode","TabView","TabPanel","mainStore"],"mappings":"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"}