{"version":3,"file":"QBE-95a8c4bc.js","sources":["../../../../modules/qbe/QBEFilterService.ts","../../../../modules/qbe/QBEDriversService.ts","../../../../modules/qbe/QBEHavingsService.ts","../../../../helpers/commons/qbeHelpers.ts","../../../../helpers/commons/buildQbeCalculatedField.ts","../../../../modules/qbe/qbeDialogs/qbeAdvancedFilterDialog/QBEAdvancedFilterDialog.vue","../../../../../node_modules/primevue/cascadeselect/cascadeselect.esm.js","../../../../modules/qbe/qbeDialogs/qbeFilterDialog/QBEFilterValuesTable.vue","../../../../modules/qbe/qbeDialogs/qbeFilterDialog/QBEFilterCard.vue","../../../../modules/qbe/qbeDialogs/qbeFilterDialog/QBETemporalFilterDialog.vue","../../../../modules/qbe/qbeDialogs/qbeFilterDialog/QBEFilterParameters.vue","../../../../modules/qbe/qbeDialogs/qbeFilterDialog/QBEFilterDialog.vue","../../../../modules/qbe/qbeDialogs/qbeHavingDialog/QBEHavingCard.vue","../../../../modules/qbe/qbeDialogs/qbeHavingDialog/QBEHavingDialog.vue","../../../../modules/qbe/qbeTables/qbeSimpleTable/QBESimpleTable.vue","../../../../modules/qbe/qbeDialogs/QBESqlDialog.vue","../../../../modules/qbe/qbeDialogs/QBEEntityRelationDialog.vue","../../../../modules/qbe/qbeDialogs/QBEParameterDialog.vue","../../../../modules/qbe/qbeDialogs/qbeSavingDialog/QBESavingDialogDetailTab.vue","../../../../modules/managers/datasetManagement/detailView/advancedCard/DatasetManagementScheduler.vue","../../../../modules/qbe/qbeDialogs/qbeSavingDialog/QBESavingDialogPersistence.vue","../../../../modules/qbe/qbeDialogs/qbeSavingDialog/QbeSavingDialogMetadata.vue","../../../../modules/qbe/qbeDialogs/qbeSavingDialog/QBESavingDialog.vue","../../../../modules/qbe/qbeTables/qbeSmartTable/QBESmartTable.vue","../../../../modules/qbe/qbeComponents/QBEExpandableEntity.vue","../../../../modules/qbe/qbeComponents/QBESubqueryEntity.vue","../../../../modules/qbe/qbeDialogs/qbeJoinDefinitionDialog/QBEJoinDefinitionDialog.vue","../../../../modules/qbe/qbeDialogs/qbePreviewDialog/QBEPreviewDialog.vue","../../../../modules/qbe/QBE.vue"],"sourcesContent":["import { iField, iFilter, iQBE, iQuery } from './QBE'\r\nimport { findByName, replace } from './qbeDialogs/qbeAdvancedFilterDialog/treeService'\r\n\r\nexport function onFiltersSaveCallback(filters: iFilter[], field: iField, parameters: any[], expression: any, qbe: iQBE | null, selectedQuery: iQuery, smartView: boolean, executeQBEQuery: Function) {\r\n    if (!qbe) return\r\n\r\n    for (let i = 0; i < filters.length; i++) {\r\n        const tempFilter = filters[i]\r\n        const index = selectedQuery.filters.findIndex((el: iFilter) => el.filterId === tempFilter.filterId)\r\n        if (index !== -1) {\r\n            selectedQuery.filters[index] = tempFilter\r\n        } else {\r\n            selectedQuery.filters.push(tempFilter)\r\n        }\r\n    }\r\n\r\n    removeDeletedFilters(filters, field, expression, qbe, selectedQuery)\r\n\r\n    refresh(selectedQuery.filters, expression, qbe, selectedQuery)\r\n\r\n    if (selectedQuery.expression.childNodes?.length === 0) {\r\n        selectedQuery.expression = {}\r\n    }\r\n\r\n    qbe.pars = parameters ? [...parameters] : []\r\n\r\n    if (smartView) {\r\n        executeQBEQuery(false)\r\n    }\r\n}\r\n\r\nexport function refresh(filters: iFilter[], expression: any, qbe: iQBE, selectedQuery: iQuery) {\r\n    if (!qbe) return\r\n\r\n    for (let filter of filters) {\r\n        var newConst = {\r\n            value: '$F{' + filter.filterId + '}',\r\n            childNodes: [],\r\n            details: {\r\n                leftOperandAlias: filter.leftOperandAlias,\r\n                operator: filter.operator,\r\n                entity: filter.entity,\r\n                rightOperandValue: filter.rightOperandValue.join(', ')\r\n            },\r\n            type: 'NODE_CONST'\r\n        }\r\n        var oldConst = findByName(expression, newConst.value)\r\n\r\n        replace(expression, newConst, oldConst)\r\n    }\r\n    selectedQuery.expression = expression\r\n}\r\n\r\nexport function removeDeletedFilters(filters: iFilter[], field: iField, expression: any, qbe: iQBE, selectedQuery: iQuery) {\r\n    if (!qbe) return\r\n\r\n    for (let i = selectedQuery.filters.length - 1; i >= 0; i--) {\r\n        const tempFilter = selectedQuery.filters[i]\r\n        if (tempFilter.leftOperandValue === field.id) {\r\n            const index = filters.findIndex((el: iFilter) => el.filterId === tempFilter.filterId)\r\n            if (index === -1) {\r\n                selectedQuery.filters.splice(i, 1)\r\n            }\r\n        }\r\n    }\r\n}","import moment from 'moment'\r\n\r\nexport function formatDrivers(filtersData: any) {\r\n    filtersData?.filterStatus?.forEach((el: any) => {\r\n        el.parameterValue = el.multivalue ? [] : [{ value: '', description: '' }]\r\n        if (el.driverDefaultValue?.length > 0) {\r\n            let valueIndex = '_col0'\r\n            let descriptionIndex = 'col1'\r\n            if (el.metadata?.colsMap) {\r\n                valueIndex = Object.keys(el.metadata?.colsMap).find((key: string) => el.metadata.colsMap[key] === el.metadata.valueColumn) as any\r\n                descriptionIndex = Object.keys(el.metadata?.colsMap).find((key: string) => el.metadata.colsMap[key] === el.metadata.descriptionColumn) as any\r\n            }\r\n\r\n            el.parameterValue = el.driverDefaultValue.map((defaultValue: any) => {\r\n                return { value: defaultValue.value ?? defaultValue[valueIndex], description: defaultValue.desc ?? defaultValue[descriptionIndex] }\r\n            })\r\n\r\n            if (el.type === 'DATE' && !el.selectionType && el.valueSelection === 'man_in' && el.showOnPanel === 'true') {\r\n                el.parameterValue[0].value = moment(el.parameterValue[0].description?.split('#')[0]).toDate() as any\r\n            }\r\n        }\r\n        if (el.data) {\r\n            el.data = el.data.map((data: any) => {\r\n                return formatParameterDataOptions(el, data)\r\n            })\r\n\r\n            if (el.data.length === 1) {\r\n                el.parameterValue = [...el.data]\r\n            }\r\n        }\r\n        if ((el.selectionType === 'COMBOBOX' || el.selectionType === 'LIST') && el.multivalue && el.mandatory && el.data.length === 1) {\r\n            el.showOnPanel = 'false'\r\n        }\r\n\r\n        if (!el.parameterValue) {\r\n            el.parameterValue = [{ value: '', description: '' }]\r\n        }\r\n\r\n        if (el.parameterValue[0] && !el.parameterValue[0].description) {\r\n            el.parameterValue[0].description = el.parameterDescription ? el.parameterDescription[0] : ''\r\n        }\r\n    })\r\n}\r\n\r\nexport function formatParameterDataOptions(parameter: any, data: any) {\r\n    const valueColumn = parameter.metadata.valueColumn\r\n    const descriptionColumn = parameter.metadata.descriptionColumn\r\n    const valueIndex = Object.keys(parameter.metadata.colsMap).find((key: string) => parameter.metadata.colsMap[key] === valueColumn)\r\n    const descriptionIndex = Object.keys(parameter.metadata.colsMap).find((key: string) => parameter.metadata.colsMap[key] === descriptionColumn)\r\n\r\n    return { value: valueIndex ? data[valueIndex] : '', description: descriptionIndex ? data[descriptionIndex] : '' }\r\n}","import { iFilter, iQBE, iQuery, iField } from './QBE'\r\n\r\nexport function onHavingsSaveCallback(havings: iFilter[], qbe: iQBE | null, selectedQuery: iQuery, field: iField) {\r\n    if (!qbe) return\r\n\r\n    for (let i = 0; i < havings.length; i++) {\r\n        const tempFilter = havings[i]\r\n        const index = selectedQuery.havings.findIndex((el: iFilter) => el.filterId === tempFilter.filterId)\r\n        if (index !== -1) {\r\n            selectedQuery.havings[index] = tempFilter\r\n        } else {\r\n            selectedQuery.havings.push(tempFilter)\r\n        }\r\n    }\r\n\r\n    removeDeletedHavings(havings, qbe, selectedQuery, field)\r\n}\r\n\r\nexport function removeDeletedHavings(havings: iFilter[], qbe: iQBE, selectedQuery: iQuery, field: iField) {\r\n    if (!qbe) return\r\n\r\n    for (let i = selectedQuery.havings.length - 1; i >= 0; i--) {\r\n        const tempHaving = selectedQuery.havings[i]\r\n        if (tempHaving.leftOperandValue === field.id) {\r\n            const index = havings.findIndex((el: iFilter) => el.filterId === tempHaving.filterId)\r\n            if (index === -1) selectedQuery.havings.splice(i, 1)\r\n        }\r\n    }\r\n}","import cryptoRandomString from 'crypto-random-string'\r\n\r\nexport function createNewField(editQueryObj, field) {\r\n    var newField = {\r\n        id: field.attributes.type === 'inLineCalculatedField' ? field.attributes.formState : field.id,\r\n        alias: field.attributes.field,\r\n        type: field.attributes.type === 'inLineCalculatedField' ? 'inline.calculated.field' : 'datamartField',\r\n        fieldType: field.attributes.iconCls,\r\n        entity: field.attributes.entity,\r\n        field: field.attributes.field,\r\n        funct: getFunct(field),\r\n        color: field.color,\r\n        group: getGroup(field),\r\n        order: 'NONE',\r\n        include: true,\r\n        // eslint-disable-next-line no-prototype-builtins\r\n        inUse: field.hasOwnProperty('inUse') ? field.inUse : true,\r\n        visible: true,\r\n        iconCls: field.iconCls,\r\n        dataType: field.dataType,\r\n        format: field.format,\r\n        longDescription: field.attributes.longDescription,\r\n        distinct: editQueryObj.distinct,\r\n        leaf: field.leaf,\r\n        originalId: field.id,\r\n        isSpatial: field.isSpatial,\r\n        uniqueID: cryptoRandomString({ length: 4, type: 'base64' })\r\n    } as any\r\n\r\n    // eslint-disable-next-line no-prototype-builtins\r\n    if (!field.hasOwnProperty('id')) {\r\n        newField.id = field.alias\r\n        newField.alias = field.text\r\n        newField.field = field.text\r\n        newField.temporal = field.temporal\r\n    }\r\n\r\n    return newField\r\n}\r\n\r\nexport function creatNewMetadataFromField(newField) {\r\n    var newMetadata = {\r\n        uniqueID: newField.uniqueID,\r\n        column: newField.alias,\r\n        fieldAlias: newField.field,\r\n        Type: newField.dataType,\r\n        fieldType: newField.iconCls.toUpperCase(),\r\n        decrypt: false,\r\n        personal: false,\r\n        subjectid: false\r\n    } as any\r\n\r\n    return newMetadata\r\n}\r\n\r\nexport function getFunct(field) {\r\n    if (isColumnType(field, 'measure') && field.aggtype) {\r\n        return field.aggtype\r\n    } else if (isColumnType(field, 'measure')) {\r\n        return 'SUM'\r\n    }\r\n    return 'NONE'\r\n}\r\nexport function getGroup(field) {\r\n    return isColumnType(field, 'attribute') && !isDataType(field, 'com.vividsolutions.jts.geom.Geometry')\r\n}\r\nexport function isDataType(field, dataType) {\r\n    return field.dataType == dataType\r\n}\r\nexport function isColumnType(field, columnType) {\r\n    return field.iconCls == columnType || isCalculatedFieldColumnType(field, columnType)\r\n}\r\nexport function isCalculatedFieldColumnType(inLineCalculatedField, columnType) {\r\n    return isInLineCalculatedField(inLineCalculatedField) && inLineCalculatedField.attributes.formState.nature === columnType\r\n}\r\nexport function isInLineCalculatedField(field) {\r\n    return field.attributes.type === 'inLineCalculatedField'\r\n}\r\n","interface Config {\r\n    alias: string\r\n    expression: string\r\n    format?: string\r\n    nature: string\r\n    type: string\r\n}\r\n\r\nexport function buildCalculatedField(calcFieldOutput, selectedQueryFields) {\r\n    let calculatedField = {} as any\r\n    let addedParameters = {} as any\r\n\r\n    addedParameters.alias = calcFieldOutput.alias\r\n    addedParameters.type = calcFieldOutput.type\r\n    addedParameters.nature = calcFieldOutput.nature\r\n    addedParameters.expressionSimple = calcFieldOutput.expression\r\n    addedParameters.expression = formatCalcFieldFormula(calcFieldOutput.expression, selectedQueryFields)\r\n    addedParameters.type === 'DATE' ? (addedParameters.format = calcFieldOutput.format) : ''\r\n\r\n    calculatedField.id = addedParameters\r\n    calculatedField.alias = addedParameters.alias\r\n    calculatedField.nature = addedParameters.nature\r\n    calculatedField.type = 'inline.calculated.field'\r\n    calculatedField.distinct = false\r\n    addedParameters.type === 'DATE' ? (calculatedField.format = calcFieldOutput.format) : ''\r\n    calculatedField.fieldType = calcFieldOutput.nature.toLowerCase()\r\n    calculatedField.entity = calcFieldOutput.alias\r\n    calculatedField.field = calcFieldOutput.alias\r\n    calculatedField.funct = calcFieldOutput.nature == 'MEASURE' ? 'SUM' : ''\r\n    calculatedField.group = calcFieldOutput.nature == 'ATTRIBUTE' ? true : false\r\n    calculatedField.order = 'NONE'\r\n    calculatedField.include = true\r\n    calculatedField.inUse = true\r\n    calculatedField.visible = true\r\n    calculatedField.id.expression = cleanExpression(calculatedField.id.expression)\r\n    calculatedField.id.expressionSimple = cleanExpression(calculatedField.id.expressionSimple)\r\n    calculatedField.formula = cleanExpression(addedParameters.expression)\r\n    calculatedField.expression = cleanExpression(addedParameters.expressionSimple)\r\n    calculatedField.longDescription = cleanExpression(addedParameters.alias + ' : ' + addedParameters.alias)\r\n\r\n    return calculatedField\r\n}\r\n\r\nexport function updateCalculatedField(fieldToUpdate, calcFieldOutput, selectedQueryFields) {\r\n    let calculatedField = {} as any\r\n    let addedParameters = {} as any\r\n\r\n    addedParameters.alias = calcFieldOutput.alias\r\n    addedParameters.type = calcFieldOutput.type\r\n    addedParameters.nature = calcFieldOutput.nature\r\n    addedParameters.expressionSimple = calcFieldOutput.expression\r\n    addedParameters.expression = formatCalcFieldFormula(calcFieldOutput.expression, selectedQueryFields)\r\n    addedParameters.type === 'DATE' ? (addedParameters.format = calcFieldOutput.format) : ''\r\n\r\n    calculatedField.id = addedParameters\r\n    calculatedField.alias = addedParameters.alias\r\n    calculatedField.nature = addedParameters.nature\r\n    calculatedField.type = 'inline.calculated.field'\r\n    calculatedField.distinct = false\r\n    addedParameters.type === 'DATE' ? (calculatedField.format = calcFieldOutput.format) : ''\r\n    calculatedField.fieldType = calcFieldOutput.nature.toLowerCase()\r\n    calculatedField.entity = calcFieldOutput.alias\r\n    calculatedField.field = calcFieldOutput.alias\r\n    calculatedField.group = fieldToUpdate.group\r\n    calculatedField.order = fieldToUpdate.order\r\n    calculatedField.funct = fieldToUpdate.funct\r\n    calculatedField.visible = fieldToUpdate.visible\r\n    calculatedField.inUse = fieldToUpdate.inUse\r\n    calculatedField.include = true\r\n    calculatedField.id.expression = cleanExpression(calculatedField.id.expression)\r\n    calculatedField.id.expressionSimple = cleanExpression(calculatedField.id.expressionSimple)\r\n    calculatedField.formula = cleanExpression(addedParameters.expression)\r\n    calculatedField.expression = cleanExpression(addedParameters.expressionSimple)\r\n    calculatedField.longDescription = cleanExpression(addedParameters.alias + ' : ' + addedParameters.alias)\r\n    calculatedField.uniqueID = fieldToUpdate.uniqueID\r\n    calculatedField.iconCls = fieldToUpdate.iconCls\r\n\r\n    return calculatedField\r\n}\r\n\r\nfunction formatCalcFieldFormula(formula, selectedQueryFields) {\r\n    var fullRegex = /(\\$F\\{[a-zA-Z0-9\\s\\->]*\\}){1}/g\r\n    var regEx = /(\\$F\\{[a-zA-Z0-9\\s\\->]*\\}){1}/\r\n    var regExGroups = /(\\$F\\{)([a-zA-Z0-9\\s\\->]*)(\\}){1}/\r\n\r\n    if (formula.match(fullRegex)) {\r\n        var fieldsNum = formula.match(fullRegex).length\r\n    }\r\n\r\n    for (var i = 0; i < fieldsNum; i++) {\r\n        var tempReplace = ''\r\n        var match = regExGroups.exec(formula) as any\r\n        selectedQueryFields.forEach((value) => {\r\n            if (value.alias == match[2]) {\r\n                tempReplace = value.id\r\n                return\r\n            }\r\n        })\r\n\r\n        formula = formula.replace(regEx, tempReplace)\r\n    }\r\n    return formula\r\n}\r\n\r\nfunction cleanExpression(expression) {\r\n    expression = expression.replaceAll(/\\u00a0/g, ' ')\r\n    return expression\r\n}\r\n","<template>\r\n    <Dialog id=\"qbe-advanced-filter-dialog\" class=\"p-fluid kn-dialog--toolbar--primary\" :style=\"QBEAdvancedFilterDialogDescriptor.dialog.style\" :visible=\"visible\" :modal=\"true\" :closable=\"false\">\r\n        <template #header>\r\n            <Toolbar class=\"kn-toolbar kn-toolbar--primary p-p-0 p-m-2 p-col-12\">\r\n                <template #start>\r\n                    {{ $t('qbe.advancedFilters.advancedFilterVisualisation') }}\r\n                </template>\r\n            </Toolbar>\r\n        </template>\r\n\r\n        <div class=\"p-d-flex p-flex-row\">\r\n            <Button class=\"kn-button kn-button--primary qbe-advanced-filter-button p-m-2\" :disabled=\"selectedCount < 2\" @click=\"group\"> {{ $t('qbe.advancedFilters.group') }}</Button>\r\n            <Button class=\"kn-button kn-button--primary qbe-advanced-filter-button p-m-2\" :disabled=\"!singleGroupSelected\" @click=\"ungroup\"> {{ $t('qbe.advancedFilters.ungroup') }}</Button>\r\n        </div>\r\n\r\n        <QBEOperator v-if=\"expression\" :propNode=\"root\" @selectedChanged=\"onSelectedChanged\" @treeUpdated=\"onTreeUpdated\"></QBEOperator>\r\n\r\n        <template #footer>\r\n            <Button class=\"kn-button kn-button--primary\" @click=\"closeDialog\"> {{ $t('common.cancel') }}</Button>\r\n            <Button class=\"kn-button kn-button--primary\" @click=\"save\"> {{ $t('common.save') }}</Button>\r\n        </template>\r\n    </Dialog>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent, PropType } from 'vue'\r\nimport { iQuery, iFilter } from '../../QBE'\r\nimport * as treeService from './treeService'\r\nimport * as selectedOperandService from './selectedOperandService'\r\nimport * as advancedFilterservice from './advancedFilterService'\r\nimport Dialog from 'primevue/dialog'\r\nimport QBEAdvancedFilterDialogDescriptor from './QBEAdvancedFilterDialogDescriptor.json'\r\nimport QBEOperator from './QBEOperator.vue'\r\n\r\nimport deepcopy from 'deepcopy'\r\n\r\nexport default defineComponent({\r\n    name: 'qbe-advanced-filter-dialog',\r\n    components: { Dialog, QBEOperator },\r\n    props: { visible: { type: Boolean }, query: { type: Object as PropType<iQuery> } },\r\n    emits: ['save', 'close'],\r\n    data() {\r\n        return {\r\n            QBEAdvancedFilterDialogDescriptor,\r\n            expression: null as any,\r\n            filters: [] as iFilter[],\r\n            root: {} as any,\r\n            selectedCount: 0,\r\n            singleGroupSelected: false,\r\n            getSelectedCount: selectedOperandService.getSelectedCount,\r\n            isSingleGroupSelected: selectedOperandService.isSingleGroupSelected,\r\n            sel: selectedOperandService.getSelected\r\n        }\r\n    },\r\n    watch: {\r\n        query: {\r\n            handler() {\r\n                this.loadData()\r\n            },\r\n            deep: true\r\n        },\r\n        visible(value: boolean) {\r\n            if (value) this.loadData()\r\n        }\r\n    },\r\n    created() {\r\n        this.loadData()\r\n    },\r\n    methods: {\r\n        loadData() {\r\n            if (this.query) {\r\n                this.expression = this.query.expression ? deepcopy(this.query?.expression) : {}\r\n                this.filters = this.query.filters ? [...this.query.filters] : []\r\n            }\r\n\r\n            treeService.setFilterTree(deepcopy(this.expression))\r\n            this.root = treeService.getFilterTree()\r\n        },\r\n        onSelectedChanged() {\r\n            this.selectedCount = this.getSelectedCount()\r\n            this.singleGroupSelected = this.isSingleGroupSelected()\r\n        },\r\n        group() {\r\n            advancedFilterservice.group(treeService.getFilterTree(), selectedOperandService.getSelected())\r\n            selectedOperandService.unSelectAll()\r\n            this.root = treeService.getFilterTree()\r\n        },\r\n        ungroup() {\r\n            advancedFilterservice.ungroup(treeService.getFilterTree(), selectedOperandService.getSelected()[0])\r\n            selectedOperandService.unSelectAll()\r\n            this.root = treeService.getFilterTree()\r\n        },\r\n        onTreeUpdated() {\r\n            this.root = treeService.getFilterTree()\r\n        },\r\n        closeDialog() {\r\n            selectedOperandService.unSelectAll()\r\n            this.selectedCount = this.getSelectedCount()\r\n            this.singleGroupSelected = this.isSingleGroupSelected()\r\n            this.$emit('close')\r\n        },\r\n        save() {\r\n            this.$emit('save', deepcopy(this.root))\r\n            selectedOperandService.unSelectAll()\r\n            this.selectedCount = this.getSelectedCount()\r\n            this.singleGroupSelected = this.isSingleGroupSelected()\r\n        }\r\n    }\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n#qbe-advanced-filter-dialog .p-dialog-header,\r\n#qbe-advanced-filter-dialog .p-dialog-content {\r\n    padding: 0;\r\n}\r\n#qbe-advanced-filter-dialog .p-dialog-content {\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex: 1;\r\n}\r\n\r\n.qbe-advanced-filter-button {\r\n    max-width: 150px;\r\n}\r\n</style>\r\n","import { ObjectUtils, DomHandler, ZIndexUtils, ConnectedOverlayScrollHandler, UniqueComponentId } from 'primevue/utils';\nimport OverlayEventBus from 'primevue/overlayeventbus';\nimport Ripple from 'primevue/ripple';\nimport { resolveComponent, resolveDirective, openBlock, createElementBlock, Fragment, renderList, normalizeClass, withDirectives, createBlock, resolveDynamicComponent, toDisplayString, createCommentVNode, createElementVNode, mergeProps, renderSlot, createTextVNode, createVNode, withCtx, Transition } from 'vue';\nimport Portal from 'primevue/portal';\n\nvar script$1 = {\n    name: 'CascadeSelectSub',\n    emits: ['option-change'],\n    props: {\n        selectId: String,\n        focusedOptionId: String,\n        options: Array,\n        optionLabel: String,\n        optionValue: String,\n        optionDisabled: null,\n        optionGroupLabel: String,\n        optionGroupChildren: Array,\n        activeOptionPath: Array,\n        level: Number,\n        templates: null\n    },\n    mounted() {\n        if (ObjectUtils.isNotEmpty(this.parentKey)) {\n            this.position();\n        }\n    },\n    methods: {\n        getOptionId(processedOption) {\n            return `${this.selectId}_${processedOption.key}`;\n        },\n        getOptionLabel(processedOption) {\n            return this.optionLabel ? ObjectUtils.resolveFieldData(processedOption.option, this.optionLabel) : processedOption.option;\n        },\n        getOptionValue(processedOption) {\n            return this.optionValue ? ObjectUtils.resolveFieldData(processedOption.option, this.optionValue) : processedOption.option;\n        },\n        isOptionDisabled(processedOption) {\n            return this.optionDisabled ? ObjectUtils.resolveFieldData(processedOption.option, this.optionDisabled) : false;\n        },\n        getOptionGroupLabel(processedOption) {\n            return this.optionGroupLabel ? ObjectUtils.resolveFieldData(processedOption.option, this.optionGroupLabel) : null;\n        },\n        getOptionGroupChildren(processedOption) {\n            return processedOption.children;\n        },\n        isOptionGroup(processedOption) {\n            return ObjectUtils.isNotEmpty(processedOption.children);\n        },\n        isOptionSelected(processedOption) {\n            return !this.isOptionGroup(processedOption) && this.isOptionActive(processedOption);\n        },\n        isOptionActive(processedOption) {\n            return this.activeOptionPath.some((path) => path.key === processedOption.key);\n        },\n        isOptionFocused(processedOption) {\n            return this.focusedOptionId === this.getOptionId(processedOption);\n        },\n        getOptionLabelToRender(processedOption) {\n            return this.isOptionGroup(processedOption) ? this.getOptionGroupLabel(processedOption) : this.getOptionLabel(processedOption);\n        },\n        onOptionClick(event, processedOption) {\n            this.$emit('option-change', { originalEvent: event, processedOption, isFocus: true });\n        },\n        onOptionChange(event) {\n            this.$emit('option-change', event);\n        },\n        position() {\n            const parentItem = this.$el.parentElement;\n            const containerOffset = DomHandler.getOffset(parentItem);\n            const viewport = DomHandler.getViewport();\n            const sublistWidth = this.$el.offsetParent ? this.$el.offsetWidth : DomHandler.getHiddenElementOuterWidth(this.$el);\n            const itemOuterWidth = DomHandler.getOuterWidth(parentItem.children[0]);\n\n            if (parseInt(containerOffset.left, 10) + itemOuterWidth + sublistWidth > viewport.width - DomHandler.calculateScrollbarWidth()) {\n                this.$el.style.left = '-100%';\n            }\n        }\n    },\n    directives: {\n        ripple: Ripple\n    }\n};\n\nconst _hoisted_1$1 = { class: \"p-cascadeselect-panel p-cascadeselect-items\" };\nconst _hoisted_2$1 = [\"id\", \"aria-label\", \"aria-selected\", \"aria-expanded\", \"aria-setsize\", \"aria-posinset\", \"aria-level\"];\nconst _hoisted_3$1 = [\"onClick\"];\nconst _hoisted_4$1 = {\n  key: 1,\n  class: \"p-cascadeselect-item-text\"\n};\nconst _hoisted_5$1 = {\n  key: 2,\n  class: \"p-cascadeselect-group-icon pi pi-angle-right\",\n  \"aria-hidden\": \"true\"\n};\n\nfunction render$1(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_CascadeSelectSub = resolveComponent(\"CascadeSelectSub\", true);\n  const _directive_ripple = resolveDirective(\"ripple\");\n\n  return (openBlock(), createElementBlock(\"ul\", _hoisted_1$1, [\n    (openBlock(true), createElementBlock(Fragment, null, renderList($props.options, (processedOption, index) => {\n      return (openBlock(), createElementBlock(\"li\", {\n        key: $options.getOptionLabelToRender(processedOption),\n        id: $options.getOptionId(processedOption),\n        class: normalizeClass([\n                    'p-cascadeselect-item',\n                    {\n                        'p-cascadeselect-item-group': $options.isOptionGroup(processedOption),\n                        'p-cascadeselect-item-active p-highlight': $options.isOptionActive(processedOption),\n                        'p-focus': $options.isOptionFocused(processedOption),\n                        'p-disabled': $options.isOptionDisabled(processedOption)\n                    }\n                ]),\n        role: \"treeitem\",\n        \"aria-label\": $options.getOptionLabelToRender(processedOption),\n        \"aria-selected\": $options.isOptionGroup(processedOption) ? undefined : $options.isOptionSelected(processedOption),\n        \"aria-expanded\": $options.isOptionGroup(processedOption) ? $options.isOptionActive(processedOption) : undefined,\n        \"aria-setsize\": processedOption.length,\n        \"aria-posinset\": index + 1,\n        \"aria-level\": $props.level + 1\n      }, [\n        withDirectives((openBlock(), createElementBlock(\"div\", {\n          class: \"p-cascadeselect-item-content\",\n          onClick: $event => ($options.onOptionClick($event, processedOption))\n        }, [\n          ($props.templates['option'])\n            ? (openBlock(), createBlock(resolveDynamicComponent($props.templates['option']), {\n                key: 0,\n                option: processedOption.option\n              }, null, 8, [\"option\"]))\n            : (openBlock(), createElementBlock(\"span\", _hoisted_4$1, toDisplayString($options.getOptionLabelToRender(processedOption)), 1)),\n          ($options.isOptionGroup(processedOption))\n            ? (openBlock(), createElementBlock(\"span\", _hoisted_5$1))\n            : createCommentVNode(\"\", true)\n        ], 8, _hoisted_3$1)), [\n          [_directive_ripple]\n        ]),\n        ($options.isOptionGroup(processedOption) && $options.isOptionActive(processedOption))\n          ? (openBlock(), createBlock(_component_CascadeSelectSub, {\n              key: 0,\n              role: \"group\",\n              class: \"p-cascadeselect-sublist\",\n              selectId: $props.selectId,\n              focusedOptionId: $props.focusedOptionId,\n              options: $options.getOptionGroupChildren(processedOption),\n              activeOptionPath: $props.activeOptionPath,\n              level: $props.level + 1,\n              templates: $props.templates,\n              optionLabel: $props.optionLabel,\n              optionValue: $props.optionValue,\n              optionDisabled: $props.optionDisabled,\n              optionGroupLabel: $props.optionGroupLabel,\n              optionGroupChildren: $props.optionGroupChildren,\n              onOptionChange: $options.onOptionChange\n            }, null, 8, [\"selectId\", \"focusedOptionId\", \"options\", \"activeOptionPath\", \"level\", \"templates\", \"optionLabel\", \"optionValue\", \"optionDisabled\", \"optionGroupLabel\", \"optionGroupChildren\", \"onOptionChange\"]))\n          : createCommentVNode(\"\", true)\n      ], 10, _hoisted_2$1))\n    }), 128))\n  ]))\n}\n\nscript$1.render = render$1;\n\nvar script = {\n    name: 'CascadeSelect',\n    emits: ['update:modelValue', 'change', 'focus', 'blur', 'click', 'group-change', 'before-show', 'before-hide', 'hide', 'show'],\n    props: {\n        modelValue: null,\n        options: Array,\n        optionLabel: null,\n        optionValue: null,\n        optionDisabled: null,\n        optionGroupLabel: null,\n        optionGroupChildren: null,\n        placeholder: String,\n        disabled: Boolean,\n        dataKey: null,\n        inputId: {\n            type: String,\n            default: null\n        },\n        inputClass: {\n            type: String,\n            default: null\n        },\n        inputStyle: {\n            type: null,\n            default: null\n        },\n        inputProps: {\n            type: null,\n            default: null\n        },\n        panelClass: {\n            type: String,\n            default: null\n        },\n        panelStyle: {\n            type: null,\n            default: null\n        },\n        panelProps: {\n            type: null,\n            default: null\n        },\n        appendTo: {\n            type: String,\n            default: 'body'\n        },\n        loading: {\n            type: Boolean,\n            default: false\n        },\n        loadingIcon: {\n            type: String,\n            default: 'pi pi-spinner pi-spin'\n        },\n        autoOptionFocus: {\n            type: Boolean,\n            default: true\n        },\n        selectOnFocus: {\n            type: Boolean,\n            default: false\n        },\n        searchLocale: {\n            type: String,\n            default: undefined\n        },\n        searchMessage: {\n            type: String,\n            default: null\n        },\n        selectionMessage: {\n            type: String,\n            default: null\n        },\n        emptySelectionMessage: {\n            type: String,\n            default: null\n        },\n        emptySearchMessage: {\n            type: String,\n            default: null\n        },\n        emptyMessage: {\n            type: String,\n            default: null\n        },\n        tabindex: {\n            type: Number,\n            default: 0\n        },\n        'aria-labelledby': {\n            type: String,\n            default: null\n        },\n        'aria-label': {\n            type: String,\n            default: null\n        }\n    },\n    outsideClickListener: null,\n    scrollHandler: null,\n    resizeListener: null,\n    overlay: null,\n    searchTimeout: null,\n    searchValue: null,\n    focusOnHover: false,\n    data() {\n        return {\n            focused: false,\n            focusedOptionInfo: { index: -1, level: 0, parentKey: '' },\n            activeOptionPath: [],\n            overlayVisible: false,\n            dirty: false\n        };\n    },\n    watch: {\n        options() {\n            this.autoUpdateModel();\n        }\n    },\n    mounted() {\n        this.autoUpdateModel();\n    },\n    beforeUnmount() {\n        this.unbindOutsideClickListener();\n        this.unbindResizeListener();\n\n        if (this.scrollHandler) {\n            this.scrollHandler.destroy();\n            this.scrollHandler = null;\n        }\n\n        if (this.overlay) {\n            ZIndexUtils.clear(this.overlay);\n            this.overlay = null;\n        }\n    },\n    methods: {\n        getOptionLabel(option) {\n            return this.optionLabel ? ObjectUtils.resolveFieldData(option, this.optionLabel) : option;\n        },\n        getOptionValue(option) {\n            return this.optionValue ? ObjectUtils.resolveFieldData(option, this.optionValue) : option;\n        },\n        isOptionDisabled(option) {\n            return this.optionDisabled ? ObjectUtils.resolveFieldData(option, this.optionDisabled) : false;\n        },\n        getOptionGroupLabel(optionGroup) {\n            return this.optionGroupLabel ? ObjectUtils.resolveFieldData(optionGroup, this.optionGroupLabel) : null;\n        },\n        getOptionGroupChildren(optionGroup, level) {\n            return ObjectUtils.resolveFieldData(optionGroup, this.optionGroupChildren[level]);\n        },\n        isOptionGroup(option, level) {\n            return Object.prototype.hasOwnProperty.call(option, this.optionGroupChildren[level]);\n        },\n        getProccessedOptionLabel(processedOption) {\n            const grouped = this.isProccessedOptionGroup(processedOption);\n\n            return grouped ? this.getOptionGroupLabel(processedOption.option, processedOption.level) : this.getOptionLabel(processedOption.option);\n        },\n        isProccessedOptionGroup(processedOption) {\n            return ObjectUtils.isNotEmpty(processedOption.children);\n        },\n        show(isFocus) {\n            this.$emit('before-show');\n            this.overlayVisible = true;\n            this.activeOptionPath = this.hasSelectedOption ? this.findOptionPathByValue(this.modelValue) : this.activeOptionPath;\n\n            if (this.hasSelectedOption && ObjectUtils.isNotEmpty(this.activeOptionPath)) {\n                const processedOption = this.activeOptionPath[this.activeOptionPath.length - 1];\n\n                this.focusedOptionInfo = { index: this.autoOptionFocus ? processedOption.index : -1, level: processedOption.level, parentKey: processedOption.parentKey };\n            } else {\n                this.focusedOptionInfo = { index: this.autoOptionFocus ? this.findFirstFocusedOptionIndex() : -1, level: 0, parentKey: '' };\n            }\n\n            isFocus && DomHandler.focus(this.$refs.focusInput);\n        },\n        hide(isFocus) {\n            const _hide = () => {\n                this.$emit('before-hide');\n                this.overlayVisible = false;\n                this.activeOptionPath = [];\n                this.focusedOptionInfo = { index: -1, level: 0, parentKey: '' };\n\n                isFocus && DomHandler.focus(this.$refs.focusInput);\n            };\n\n            setTimeout(() => {\n                _hide();\n            }, 0); // For ScreenReaders\n        },\n        onFocus(event) {\n            this.focused = true;\n            this.$emit('focus', event);\n        },\n        onBlur(event) {\n            this.focused = false;\n            this.focusedOptionInfo = { index: -1, level: 0, parentKey: '' };\n            this.searchValue = '';\n            this.$emit('blur', event);\n        },\n        onKeyDown(event) {\n            if (this.disabled || this.loading) {\n                event.preventDefault();\n\n                return;\n            }\n\n            const metaKey = event.metaKey || event.ctrlKey;\n\n            switch (event.code) {\n                case 'ArrowDown':\n                    this.onArrowDownKey(event);\n                    break;\n\n                case 'ArrowUp':\n                    this.onArrowUpKey(event);\n                    break;\n\n                case 'ArrowLeft':\n                    this.onArrowLeftKey(event);\n                    break;\n\n                case 'ArrowRight':\n                    this.onArrowRightKey(event);\n                    break;\n\n                case 'Home':\n                    this.onHomeKey(event);\n                    break;\n\n                case 'End':\n                    this.onEndKey(event);\n                    break;\n\n                case 'Space':\n                    this.onSpaceKey(event);\n                    break;\n\n                case 'Enter':\n                    this.onEnterKey(event);\n                    break;\n\n                case 'Escape':\n                    this.onEscapeKey(event);\n                    break;\n\n                case 'Tab':\n                    this.onTabKey(event);\n                    break;\n\n                case 'PageDown':\n                case 'PageUp':\n                case 'Backspace':\n                case 'ShiftLeft':\n                case 'ShiftRight':\n                    //NOOP\n                    break;\n\n                default:\n                    if (!metaKey && ObjectUtils.isPrintableCharacter(event.key)) {\n                        !this.overlayVisible && this.show();\n                        this.searchOptions(event, event.key);\n                    }\n\n                    break;\n            }\n        },\n        onOptionChange(event) {\n            const { originalEvent, processedOption, isFocus, isHide } = event;\n\n            if (ObjectUtils.isEmpty(processedOption)) return;\n\n            const { index, level, parentKey, children } = processedOption;\n            const grouped = ObjectUtils.isNotEmpty(children);\n\n            const activeOptionPath = this.activeOptionPath.filter((p) => p.parentKey !== parentKey);\n\n            activeOptionPath.push(processedOption);\n\n            this.focusedOptionInfo = { index, level, parentKey };\n            this.activeOptionPath = activeOptionPath;\n\n            grouped ? this.onOptionGroupSelect(originalEvent, processedOption) : this.onOptionSelect(originalEvent, processedOption, isHide);\n            isFocus && DomHandler.focus(this.$refs.focusInput);\n        },\n        onOptionSelect(event, processedOption, isHide = true) {\n            const value = this.getOptionValue(processedOption.option);\n\n            this.activeOptionPath.forEach((p) => (p.selected = true));\n            this.updateModel(event, value);\n            isHide && this.hide(true);\n        },\n        onOptionGroupSelect(event, processedOption) {\n            this.dirty = true;\n            this.$emit('group-change', { originalEvent: event, value: processedOption.option });\n        },\n        onContainerClick(event) {\n            if (this.disabled || this.loading) {\n                return;\n            }\n\n            if (!this.overlay || !this.overlay.contains(event.target)) {\n                this.overlayVisible ? this.hide() : this.show();\n                DomHandler.focus(this.$refs.focusInput);\n            }\n\n            this.$emit('click', event);\n        },\n        onOverlayClick(event) {\n            OverlayEventBus.emit('overlay-click', {\n                originalEvent: event,\n                target: this.$el\n            });\n        },\n        onOverlayKeyDown(event) {\n            switch (event.code) {\n                case 'Escape':\n                    this.onEscapeKey(event);\n                    break;\n            }\n        },\n        onArrowDownKey(event) {\n            const optionIndex = this.focusedOptionInfo.index !== -1 ? this.findNextOptionIndex(this.focusedOptionInfo.index) : this.findFirstFocusedOptionIndex();\n\n            this.changeFocusedOptionIndex(event, optionIndex);\n\n            !this.overlayVisible && this.show();\n            event.preventDefault();\n        },\n        onArrowUpKey(event) {\n            if (event.altKey) {\n                if (this.focusedOptionInfo.index !== -1) {\n                    const processedOption = this.visibleOptions[this.focusedOptionInfo.index];\n                    const grouped = this.isProccessedOptionGroup(processedOption);\n\n                    !grouped && this.onOptionChange({ originalEvent: event, processedOption });\n                }\n\n                this.overlayVisible && this.hide();\n                event.preventDefault();\n            } else {\n                const optionIndex = this.focusedOptionInfo.index !== -1 ? this.findPrevOptionIndex(this.focusedOptionInfo.index) : this.findLastFocusedOptionIndex();\n\n                this.changeFocusedOptionIndex(event, optionIndex);\n\n                !this.overlayVisible && this.show();\n                event.preventDefault();\n            }\n        },\n        onArrowLeftKey(event) {\n            if (this.overlayVisible) {\n                const processedOption = this.visibleOptions[this.focusedOptionInfo.index];\n                const parentOption = this.activeOptionPath.find((p) => p.key === processedOption.parentKey);\n                const matched = this.focusedOptionInfo.parentKey === '' || (parentOption && parentOption.key === this.focusedOptionInfo.parentKey);\n                const root = ObjectUtils.isEmpty(processedOption.parent);\n\n                if (matched) {\n                    this.activeOptionPath = this.activeOptionPath.filter((p) => p.parentKey !== this.focusedOptionInfo.parentKey);\n                }\n\n                if (!root) {\n                    this.focusedOptionInfo = { index: -1, parentKey: parentOption ? parentOption.parentKey : '' };\n                    this.searchValue = '';\n                    this.onArrowDownKey(event);\n                }\n\n                event.preventDefault();\n            }\n        },\n        onArrowRightKey(event) {\n            if (this.overlayVisible) {\n                const processedOption = this.visibleOptions[this.focusedOptionInfo.index];\n                const grouped = this.isProccessedOptionGroup(processedOption);\n\n                if (grouped) {\n                    const matched = this.activeOptionPath.some((p) => processedOption.key === p.key);\n\n                    if (matched) {\n                        this.focusedOptionInfo = { index: -1, parentKey: processedOption.key };\n                        this.searchValue = '';\n                        this.onArrowDownKey(event);\n                    } else {\n                        this.onOptionChange({ originalEvent: event, processedOption });\n                    }\n                }\n\n                event.preventDefault();\n            }\n        },\n        onHomeKey(event) {\n            this.changeFocusedOptionIndex(event, this.findFirstOptionIndex());\n\n            !this.overlayVisible && this.show();\n            event.preventDefault();\n        },\n        onEndKey(event) {\n            this.changeFocusedOptionIndex(event, this.findLastOptionIndex());\n\n            !this.overlayVisible && this.show();\n            event.preventDefault();\n        },\n        onEnterKey(event) {\n            if (!this.overlayVisible) {\n                this.onArrowDownKey(event);\n            } else {\n                if (this.focusedOptionInfo.index !== -1) {\n                    const processedOption = this.visibleOptions[this.focusedOptionInfo.index];\n                    const grouped = this.isProccessedOptionGroup(processedOption);\n\n                    this.onOptionChange({ originalEvent: event, processedOption });\n                    !grouped && this.hide();\n                }\n            }\n\n            event.preventDefault();\n        },\n        onSpaceKey(event) {\n            this.onEnterKey(event);\n        },\n        onEscapeKey(event) {\n            this.overlayVisible && this.hide(true);\n            event.preventDefault();\n        },\n        onTabKey(event) {\n            if (this.focusedOptionInfo.index !== -1) {\n                const processedOption = this.visibleOptions[this.focusedOptionInfo.index];\n                const grouped = this.isProccessedOptionGroup(processedOption);\n\n                !grouped && this.onOptionChange({ originalEvent: event, processedOption });\n            }\n\n            this.overlayVisible && this.hide();\n        },\n        onOverlayEnter(el) {\n            ZIndexUtils.set('overlay', el, this.$primevue.config.zIndex.overlay);\n            this.alignOverlay();\n            this.scrollInView();\n        },\n        onOverlayAfterEnter() {\n            this.bindOutsideClickListener();\n            this.bindScrollListener();\n            this.bindResizeListener();\n\n            this.$emit('show');\n        },\n        onOverlayLeave() {\n            this.unbindOutsideClickListener();\n            this.unbindScrollListener();\n            this.unbindResizeListener();\n\n            this.$emit('hide');\n            this.overlay = null;\n            this.dirty = false;\n        },\n        onOverlayAfterLeave(el) {\n            ZIndexUtils.clear(el);\n        },\n        alignOverlay() {\n            if (this.appendTo === 'self') {\n                DomHandler.relativePosition(this.overlay, this.$el);\n            } else {\n                this.overlay.style.minWidth = DomHandler.getOuterWidth(this.$el) + 'px';\n                DomHandler.absolutePosition(this.overlay, this.$el);\n            }\n        },\n        bindOutsideClickListener() {\n            if (!this.outsideClickListener) {\n                this.outsideClickListener = (event) => {\n                    if (this.overlayVisible && this.overlay && !this.$el.contains(event.target) && !this.overlay.contains(event.target)) {\n                        this.hide();\n                    }\n                };\n\n                document.addEventListener('click', this.outsideClickListener);\n            }\n        },\n        unbindOutsideClickListener() {\n            if (this.outsideClickListener) {\n                document.removeEventListener('click', this.outsideClickListener);\n                this.outsideClickListener = null;\n            }\n        },\n        bindScrollListener() {\n            if (!this.scrollHandler) {\n                this.scrollHandler = new ConnectedOverlayScrollHandler(this.$refs.container, () => {\n                    if (this.overlayVisible) {\n                        this.hide();\n                    }\n                });\n            }\n\n            this.scrollHandler.bindScrollListener();\n        },\n        unbindScrollListener() {\n            if (this.scrollHandler) {\n                this.scrollHandler.unbindScrollListener();\n            }\n        },\n        bindResizeListener() {\n            if (!this.resizeListener) {\n                this.resizeListener = () => {\n                    if (this.overlayVisible && !DomHandler.isTouchDevice()) {\n                        this.hide();\n                    }\n                };\n\n                window.addEventListener('resize', this.resizeListener);\n            }\n        },\n        unbindResizeListener() {\n            if (this.resizeListener) {\n                window.removeEventListener('resize', this.resizeListener);\n                this.resizeListener = null;\n            }\n        },\n        isOptionMatched(processedOption) {\n            return this.isValidOption(processedOption) && this.getProccessedOptionLabel(processedOption).toLocaleLowerCase(this.searchLocale).startsWith(this.searchValue.toLocaleLowerCase(this.searchLocale));\n        },\n        isValidOption(processedOption) {\n            return !!processedOption && !this.isOptionDisabled(processedOption.option);\n        },\n        isValidSelectedOption(processedOption) {\n            return this.isValidOption(processedOption) && this.isSelected(processedOption);\n        },\n        isSelected(processedOption) {\n            return this.activeOptionPath.some((p) => p.key === processedOption.key);\n        },\n        findFirstOptionIndex() {\n            return this.visibleOptions.findIndex((processedOption) => this.isValidOption(processedOption));\n        },\n        findLastOptionIndex() {\n            return ObjectUtils.findLastIndex(this.visibleOptions, (processedOption) => this.isValidOption(processedOption));\n        },\n        findNextOptionIndex(index) {\n            const matchedOptionIndex = index < this.visibleOptions.length - 1 ? this.visibleOptions.slice(index + 1).findIndex((processedOption) => this.isValidOption(processedOption)) : -1;\n\n            return matchedOptionIndex > -1 ? matchedOptionIndex + index + 1 : index;\n        },\n        findPrevOptionIndex(index) {\n            const matchedOptionIndex = index > 0 ? ObjectUtils.findLastIndex(this.visibleOptions.slice(0, index), (processedOption) => this.isValidOption(processedOption)) : -1;\n\n            return matchedOptionIndex > -1 ? matchedOptionIndex : index;\n        },\n        findSelectedOptionIndex() {\n            return this.visibleOptions.findIndex((processedOption) => this.isValidSelectedOption(processedOption));\n        },\n        findFirstFocusedOptionIndex() {\n            const selectedIndex = this.findSelectedOptionIndex();\n\n            return selectedIndex < 0 ? this.findFirstOptionIndex() : selectedIndex;\n        },\n        findLastFocusedOptionIndex() {\n            const selectedIndex = this.findSelectedOptionIndex();\n\n            return selectedIndex < 0 ? this.findLastOptionIndex() : selectedIndex;\n        },\n        findOptionPathByValue(value, processedOptions, level = 0) {\n            processedOptions = processedOptions || (level === 0 && this.processedOptions);\n\n            if (!processedOptions) return null;\n            if (ObjectUtils.isEmpty(value)) return [];\n\n            for (let i = 0; i < processedOptions.length; i++) {\n                const processedOption = processedOptions[i];\n\n                if (ObjectUtils.equals(value, this.getOptionValue(processedOption.option), this.equalityKey)) {\n                    return [processedOption];\n                }\n\n                const matchedOptions = this.findOptionPathByValue(value, processedOption.children, level + 1);\n\n                if (matchedOptions) {\n                    matchedOptions.unshift(processedOption);\n\n                    return matchedOptions;\n                }\n            }\n        },\n        searchOptions(event, char) {\n            this.searchValue = (this.searchValue || '') + char;\n\n            let optionIndex = -1;\n            let matched = false;\n\n            if (this.focusedOptionInfo.index !== -1) {\n                optionIndex = this.visibleOptions.slice(this.focusedOptionInfo.index).findIndex((processedOption) => this.isOptionMatched(processedOption));\n                optionIndex = optionIndex === -1 ? this.visibleOptions.slice(0, this.focusedOptionInfo.index).findIndex((processedOption) => this.isOptionMatched(processedOption)) : optionIndex + this.focusedOptionInfo.index;\n            } else {\n                optionIndex = this.visibleOptions.findIndex((processedOption) => this.isOptionMatched(processedOption));\n            }\n\n            if (optionIndex !== -1) {\n                matched = true;\n            }\n\n            if (optionIndex === -1 && this.focusedOptionInfo.index === -1) {\n                optionIndex = this.findFirstFocusedOptionIndex();\n            }\n\n            if (optionIndex !== -1) {\n                this.changeFocusedOptionIndex(event, optionIndex);\n            }\n\n            if (this.searchTimeout) {\n                clearTimeout(this.searchTimeout);\n            }\n\n            this.searchTimeout = setTimeout(() => {\n                this.searchValue = '';\n                this.searchTimeout = null;\n            }, 500);\n\n            return matched;\n        },\n        changeFocusedOptionIndex(event, index) {\n            if (this.focusedOptionInfo.index !== index) {\n                this.focusedOptionInfo.index = index;\n                this.scrollInView();\n\n                if (this.selectOnFocus) {\n                    this.onOptionChange({ originalEvent: event, processedOption: this.visibleOptions[index], isHide: false });\n                }\n            }\n        },\n        scrollInView(index = -1) {\n            const id = index !== -1 ? `${this.id}_${index}` : this.focusedOptionId;\n            const element = DomHandler.findSingle(this.list, `li[id=\"${id}\"]`);\n\n            if (element) {\n                element.scrollIntoView && element.scrollIntoView({ block: 'nearest', inline: 'start' });\n            }\n        },\n        autoUpdateModel() {\n            if (this.selectOnFocus && this.autoOptionFocus && !this.hasSelectedOption) {\n                this.focusedOptionInfo.index = this.findFirstFocusedOptionIndex();\n                this.onOptionChange({ processedOption: this.visibleOptions[this.focusedOptionInfo.index], isHide: false });\n\n                !this.overlayVisible && (this.focusedOptionInfo = { index: -1, level: 0, parentKey: '' });\n            }\n        },\n        updateModel(event, value) {\n            this.$emit('update:modelValue', value);\n            this.$emit('change', { originalEvent: event, value });\n        },\n        createProcessedOptions(options, level = 0, parent = {}, parentKey = '') {\n            const processedOptions = [];\n\n            options &&\n                options.forEach((option, index) => {\n                    const key = (parentKey !== '' ? parentKey + '_' : '') + index;\n                    const newOption = {\n                        option,\n                        index,\n                        level,\n                        key,\n                        parent,\n                        parentKey\n                    };\n\n                    newOption['children'] = this.createProcessedOptions(this.getOptionGroupChildren(option, level), level + 1, newOption, key);\n                    processedOptions.push(newOption);\n                });\n\n            return processedOptions;\n        },\n        overlayRef(el) {\n            this.overlay = el;\n        }\n    },\n    computed: {\n        containerClass() {\n            return [\n                'p-cascadeselect p-component p-inputwrapper',\n                {\n                    'p-disabled': this.disabled,\n                    'p-focus': this.focused,\n                    'p-inputwrapper-filled': this.modelValue,\n                    'p-inputwrapper-focus': this.focused || this.overlayVisible,\n                    'p-overlay-open': this.overlayVisible\n                }\n            ];\n        },\n        labelClass() {\n            return [\n                'p-cascadeselect-label',\n                {\n                    'p-placeholder': this.label === this.placeholder,\n                    'p-cascadeselect-label-empty': !this.$slots['value'] && (this.label === 'p-emptylabel' || this.label.length === 0)\n                }\n            ];\n        },\n        panelStyleClass() {\n            return [\n                'p-cascadeselect-panel p-component',\n                this.panelClass,\n                {\n                    'p-input-filled': this.$primevue.config.inputStyle === 'filled',\n                    'p-ripple-disabled': this.$primevue.config.ripple === false\n                }\n            ];\n        },\n        dropdownIconClass() {\n            return ['p-cascadeselect-trigger-icon', this.loading ? this.loadingIcon : 'pi pi-chevron-down'];\n        },\n        hasSelectedOption() {\n            return ObjectUtils.isNotEmpty(this.modelValue);\n        },\n        label() {\n            const label = this.placeholder || 'p-emptylabel';\n\n            if (this.hasSelectedOption) {\n                const activeOptionPath = this.findOptionPathByValue(this.modelValue);\n                const processedOption = ObjectUtils.isNotEmpty(activeOptionPath) ? activeOptionPath[activeOptionPath.length - 1] : null;\n\n                return processedOption ? this.getOptionLabel(processedOption.option) : label;\n            }\n\n            return label;\n        },\n        processedOptions() {\n            return this.createProcessedOptions(this.options || []);\n        },\n        visibleOptions() {\n            const processedOption = this.activeOptionPath.find((p) => p.key === this.focusedOptionInfo.parentKey);\n\n            return processedOption ? processedOption.children : this.processedOptions;\n        },\n        equalityKey() {\n            return this.optionValue ? null : this.dataKey;\n        },\n        searchResultMessageText() {\n            return ObjectUtils.isNotEmpty(this.visibleOptions) ? this.searchMessageText.replaceAll('{0}', this.visibleOptions.length) : this.emptySearchMessageText;\n        },\n        searchMessageText() {\n            return this.searchMessage || this.$primevue.config.locale.searchMessage || '';\n        },\n        emptySearchMessageText() {\n            return this.emptySearchMessage || this.$primevue.config.locale.emptySearchMessage || '';\n        },\n        emptyMessageText() {\n            return this.emptyMessage || this.$primevue.config.locale.emptyMessage || '';\n        },\n        selectionMessageText() {\n            return this.selectionMessage || this.$primevue.config.locale.selectionMessage || '';\n        },\n        emptySelectionMessageText() {\n            return this.emptySelectionMessage || this.$primevue.config.locale.emptySelectionMessage || '';\n        },\n        selectedMessageText() {\n            return this.hasSelectedOption ? this.selectionMessageText.replaceAll('{0}', '1') : this.emptySelectionMessageText;\n        },\n        id() {\n            return this.$attrs.id || UniqueComponentId();\n        },\n        focusedOptionId() {\n            return this.focusedOptionInfo.index !== -1 ? `${this.id}${ObjectUtils.isNotEmpty(this.focusedOptionInfo.parentKey) ? '_' + this.focusedOptionInfo.parentKey : ''}_${this.focusedOptionInfo.index}` : null;\n        }\n    },\n    components: {\n        CascadeSelectSub: script$1,\n        Portal: Portal\n    }\n};\n\nconst _hoisted_1 = { class: \"p-hidden-accessible\" };\nconst _hoisted_2 = [\"id\", \"disabled\", \"placeholder\", \"tabindex\", \"aria-label\", \"aria-labelledby\", \"aria-expanded\", \"aria-controls\", \"aria-activedescendant\"];\nconst _hoisted_3 = {\n  class: \"p-cascadeselect-trigger\",\n  role: \"button\",\n  tabindex: \"-1\",\n  \"aria-hidden\": \"true\"\n};\nconst _hoisted_4 = {\n  role: \"status\",\n  \"aria-live\": \"polite\",\n  class: \"p-hidden-accessible\"\n};\nconst _hoisted_5 = { class: \"p-cascadeselect-items-wrapper\" };\nconst _hoisted_6 = {\n  role: \"status\",\n  \"aria-live\": \"polite\",\n  class: \"p-hidden-accessible\"\n};\n\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_CascadeSelectSub = resolveComponent(\"CascadeSelectSub\");\n  const _component_Portal = resolveComponent(\"Portal\");\n\n  return (openBlock(), createElementBlock(\"div\", {\n    ref: \"container\",\n    class: normalizeClass($options.containerClass),\n    onClick: _cache[5] || (_cache[5] = $event => ($options.onContainerClick($event)))\n  }, [\n    createElementVNode(\"div\", _hoisted_1, [\n      createElementVNode(\"input\", mergeProps({\n        ref: \"focusInput\",\n        id: $props.inputId,\n        type: \"text\",\n        style: $props.inputStyle,\n        class: $props.inputClass,\n        readonly: \"\",\n        disabled: $props.disabled,\n        placeholder: $props.placeholder,\n        tabindex: !$props.disabled ? $props.tabindex : -1,\n        role: \"combobox\",\n        \"aria-label\": _ctx.ariaLabel,\n        \"aria-labelledby\": _ctx.ariaLabelledby,\n        \"aria-haspopup\": \"tree\",\n        \"aria-expanded\": $data.overlayVisible,\n        \"aria-controls\": $options.id + '_tree',\n        \"aria-activedescendant\": $data.focused ? $options.focusedOptionId : undefined,\n        onFocus: _cache[0] || (_cache[0] = (...args) => ($options.onFocus && $options.onFocus(...args))),\n        onBlur: _cache[1] || (_cache[1] = (...args) => ($options.onBlur && $options.onBlur(...args))),\n        onKeydown: _cache[2] || (_cache[2] = (...args) => ($options.onKeyDown && $options.onKeyDown(...args)))\n      }, $props.inputProps), null, 16, _hoisted_2)\n    ]),\n    createElementVNode(\"span\", {\n      class: normalizeClass($options.labelClass)\n    }, [\n      renderSlot(_ctx.$slots, \"value\", {\n        value: $props.modelValue,\n        placeholder: $props.placeholder\n      }, () => [\n        createTextVNode(toDisplayString($options.label), 1)\n      ])\n    ], 2),\n    createElementVNode(\"div\", _hoisted_3, [\n      renderSlot(_ctx.$slots, \"indicator\", {}, () => [\n        createElementVNode(\"span\", {\n          class: normalizeClass($options.dropdownIconClass)\n        }, null, 2)\n      ])\n    ]),\n    createElementVNode(\"span\", _hoisted_4, toDisplayString($options.searchResultMessageText), 1),\n    createVNode(_component_Portal, { appendTo: $props.appendTo }, {\n      default: withCtx(() => [\n        createVNode(Transition, {\n          name: \"p-connected-overlay\",\n          onEnter: $options.onOverlayEnter,\n          onAfterEnter: $options.onOverlayAfterEnter,\n          onLeave: $options.onOverlayLeave,\n          onAfterLeave: $options.onOverlayAfterLeave\n        }, {\n          default: withCtx(() => [\n            ($data.overlayVisible)\n              ? (openBlock(), createElementBlock(\"div\", mergeProps({\n                  key: 0,\n                  ref: $options.overlayRef,\n                  style: $props.panelStyle,\n                  class: $options.panelStyleClass,\n                  onClick: _cache[3] || (_cache[3] = (...args) => ($options.onOverlayClick && $options.onOverlayClick(...args))),\n                  onKeydown: _cache[4] || (_cache[4] = (...args) => ($options.onOverlayKeyDown && $options.onOverlayKeyDown(...args)))\n                }, $props.panelProps), [\n                  createElementVNode(\"div\", _hoisted_5, [\n                    createVNode(_component_CascadeSelectSub, {\n                      id: $options.id + '_tree',\n                      role: \"tree\",\n                      \"aria-orientation\": \"horizontal\",\n                      selectId: $options.id,\n                      focusedOptionId: $data.focused ? $options.focusedOptionId : undefined,\n                      options: $options.processedOptions,\n                      activeOptionPath: $data.activeOptionPath,\n                      level: 0,\n                      templates: _ctx.$slots,\n                      optionLabel: $props.optionLabel,\n                      optionValue: $props.optionValue,\n                      optionDisabled: $props.optionDisabled,\n                      optionGroupLabel: $props.optionGroupLabel,\n                      optionGroupChildren: $props.optionGroupChildren,\n                      onOptionChange: $options.onOptionChange\n                    }, null, 8, [\"id\", \"selectId\", \"focusedOptionId\", \"options\", \"activeOptionPath\", \"templates\", \"optionLabel\", \"optionValue\", \"optionDisabled\", \"optionGroupLabel\", \"optionGroupChildren\", \"onOptionChange\"]),\n                    createElementVNode(\"span\", _hoisted_6, toDisplayString($options.selectedMessageText), 1)\n                  ])\n                ], 16))\n              : createCommentVNode(\"\", true)\n          ]),\n          _: 1\n        }, 8, [\"onEnter\", \"onAfterEnter\", \"onLeave\", \"onAfterLeave\"])\n      ]),\n      _: 1\n    }, 8, [\"appendTo\"])\n  ], 2))\n}\n\nfunction styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar css_248z = \"\\n.p-cascadeselect {\\n    display: -webkit-inline-box;\\n    display: -ms-inline-flexbox;\\n    display: inline-flex;\\n    cursor: pointer;\\n    position: relative;\\n    -webkit-user-select: none;\\n       -moz-user-select: none;\\n        -ms-user-select: none;\\n            user-select: none;\\n}\\n.p-cascadeselect-trigger {\\n    display: -webkit-box;\\n    display: -ms-flexbox;\\n    display: flex;\\n    -webkit-box-align: center;\\n        -ms-flex-align: center;\\n            align-items: center;\\n    -webkit-box-pack: center;\\n        -ms-flex-pack: center;\\n            justify-content: center;\\n    -ms-flex-negative: 0;\\n        flex-shrink: 0;\\n}\\n.p-cascadeselect-label {\\n    display: block;\\n    white-space: nowrap;\\n    overflow: hidden;\\n    -webkit-box-flex: 1;\\n        -ms-flex: 1 1 auto;\\n            flex: 1 1 auto;\\n    width: 1%;\\n    text-overflow: ellipsis;\\n    cursor: pointer;\\n}\\n.p-cascadeselect-label-empty {\\n    overflow: hidden;\\n    visibility: hidden;\\n}\\n.p-cascadeselect .p-cascadeselect-panel {\\n    min-width: 100%;\\n}\\n.p-cascadeselect-panel {\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n}\\n.p-cascadeselect-item {\\n    cursor: pointer;\\n    font-weight: normal;\\n    white-space: nowrap;\\n}\\n.p-cascadeselect-item-content {\\n    display: -webkit-box;\\n    display: -ms-flexbox;\\n    display: flex;\\n    -webkit-box-align: center;\\n        -ms-flex-align: center;\\n            align-items: center;\\n    overflow: hidden;\\n    position: relative;\\n}\\n.p-cascadeselect-group-icon {\\n    margin-left: auto;\\n}\\n.p-cascadeselect-items {\\n    margin: 0;\\n    padding: 0;\\n    list-style-type: none;\\n    min-width: 100%;\\n}\\n.p-fluid .p-cascadeselect {\\n    display: -webkit-box;\\n    display: -ms-flexbox;\\n    display: flex;\\n}\\n.p-fluid .p-cascadeselect .p-cascadeselect-label {\\n    width: 1%;\\n}\\n.p-cascadeselect-sublist {\\n    position: absolute;\\n    min-width: 100%;\\n    z-index: 1;\\n    display: none;\\n}\\n.p-cascadeselect-item-active {\\n    overflow: visible !important;\\n}\\n.p-cascadeselect-item-active > .p-cascadeselect-sublist {\\n    display: block;\\n    left: 100%;\\n    top: 0;\\n}\\n\";\nstyleInject(css_248z);\n\nscript.render = render;\n\nexport { script as default };\n","<template>\r\n    <DataTable\r\n        class=\"p-datatable-sm kn-table p-m-2\"\r\n        :paginator=\"true\"\r\n        :rows=\"10\"\r\n        :value=\"rows\"\r\n        :loading=\"loading\"\r\n        v-model:filters=\"filters\"\r\n        v-model:selection=\"selectedValues\"\r\n        :selectionMode=\"['CONTAINS', 'NOT CONTAINS', 'IN', 'NOT IN'].includes(filterOperator) ? false : 'single'\"\r\n        filterDisplay=\"menu\"\r\n        responsiveLayout=\"stack\"\r\n        breakpoint=\"960px\"\r\n        @rowSelect=\"onSelect\"\r\n        @rowUnselect=\"onSelect\"\r\n        @rowSelectAll=\"onSelect\"\r\n        @rowUnselectAll=\"onSelect\"\r\n    >\r\n        <template #empty>\r\n            <div>\r\n                {{ $t('common.info.noDataFound') }}\r\n            </div>\r\n        </template>\r\n        <Column :selectionMode=\"['CONTAINS', 'NOT CONTAINS', 'IN', 'NOT IN'].includes(filterOperator) ? 'multiple' : 'single'\" :headerStyle=\"QBEFilterDialogDescriptor.selectionColumnHeaderStyle\"></Column>\r\n        <Column v-for=\"column in columns\" :key=\"column.header\" :field=\"column.dataIndex\" :header=\"column.header\" :sortable=\"true\">\r\n            <template #filter=\"{filterModel}\">\r\n                <InputText v-model=\"filterModel.value\" class=\"p-column-filter\"></InputText>\r\n            </template>\r\n        </Column>\r\n    </DataTable>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport { filterDefault } from '@/helpers/commons/filterHelper'\r\nimport { FilterOperator } from 'primevue/api'\r\nimport Column from 'primevue/column'\r\nimport DataTable from 'primevue/datatable'\r\nimport QBEFilterDialogDescriptor from './QBEFilterDialogDescriptor.json'\r\n\r\nexport default defineComponent({\r\n    name: 'qbe-filter-values-table',\r\n    components: { Column, DataTable },\r\n    props: { filterValuesData: { type: Object }, loading: { type: Boolean }, loadedSelectedValues: { type: Array }, filterOperator: { type: String, required: true } },\r\n    emits: ['selected'],\r\n    data() {\r\n        return {\r\n            QBEFilterDialogDescriptor,\r\n            columns: [] as { dataIndex: string; header: string; multiValue: boolean; name: string; type: string }[],\r\n            rows: [],\r\n            filters: {},\r\n            selectedValues: [] as any[]\r\n        }\r\n    },\r\n    watch: {\r\n        filterValuesData() {\r\n            this.loadData()\r\n        },\r\n        filterOperator() {\r\n            this.selectedValues = []\r\n        }\r\n    },\r\n    created() {\r\n        this.loadData()\r\n    },\r\n    methods: {\r\n        loadData() {\r\n            if (this.filterValuesData) {\r\n                this.columns = this.filterValuesData.metaData.fields.slice(1)\r\n                this.rows = this.filterValuesData.rows\r\n\r\n                this.columns.forEach((column: any) => (this.filters[column.dataIndex] = { operator: FilterOperator.AND, constraints: [filterDefault] }))\r\n\r\n                this.selectedValues = []\r\n                this.loadedSelectedValues?.forEach((el: any) => this.selectedValues.push({ column_1: '' + el }))\r\n            }\r\n        },\r\n        onSelect() {\r\n            let tempSelectedValues = [] as string[]\r\n            if (['CONTAINS', 'NOT CONTAINS', 'IN', 'NOT IN'].includes(this.filterOperator)) {\r\n                tempSelectedValues = this.selectedValues.map((value: any) => '' + value.column_1)\r\n            } else {\r\n                tempSelectedValues = []\r\n                Object.keys(this.selectedValues).forEach((key: string) => {\r\n                    tempSelectedValues.push('' + this.selectedValues[key])\r\n                })\r\n            }\r\n\r\n            this.$emit('selected', tempSelectedValues)\r\n        }\r\n    }\r\n})\r\n</script>\r\n","<template>\r\n    <div v-if=\"filter\">\r\n        <div class=\"p-grid p-m-2\">\r\n            <div class=\"p-col-4 p-d-flex p-flex-row p-ai-center\">\r\n                <div class=\"kn-flex\">\r\n                    <label class=\"kn-material-input-label\"> {{ $t('common.field') }} </label>\r\n                    <InputText class=\"kn-material-input\" v-model=\"filter.leftOperandDescription\" :disabled=\"true\" />\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"p-col-2 p-d-flex p-flex-row p-ai-center\">\r\n                <div class=\"kn-flex\">\r\n                    <label class=\"kn-material-input-label\" v-tooltip.top=\"$t('qbe.filters.conditionTooltip')\"> {{ $t('qbe.filters.condition') }} </label>\r\n                    <Dropdown class=\"kn-material-input\" v-model=\"filter.operator\" :options=\"filterOperatorOptions\" optionValue=\"value\" @change=\"onFilterOperatorChange\">\r\n                        <template #value=\"slotProps\">\r\n                            <div v-if=\"slotProps.value\">\r\n                                <span class=\"qbe-filter-option-value\">{{ getFilterOperatorLabel(slotProps.value) }}</span>\r\n                            </div>\r\n                        </template>\r\n                        <template #option=\"slotProps\">\r\n                            <div>\r\n                                <span>{{ $t(slotProps.option.label) }}</span>\r\n                            </div>\r\n                        </template>\r\n                    </Dropdown>\r\n                </div>\r\n\r\n                <div v-show=\"filter.operator === 'SPATIAL_NN'\" class=\" p-ml-2\">\r\n                    <label class=\"kn-material-input-label\"> {{ $t('common.parameter') }} </label>\r\n                    <InputText class=\"kn-material-input\" v-model=\"filter.operatorParameter\" />\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"p-col-2 p-d-flex p-flex-row p-ai-center\" v-if=\"filter.operator !== 'IS NULL' && filter.operator !== 'NOT NULL'\">\r\n                <div class=\"kn-flex\">\r\n                    <label class=\"kn-material-input-label\"> {{ $t('qbe.filters.targetType') }} </label>\r\n                    <Dropdown\r\n                        class=\"kn-material-input\"\r\n                        v-model=\"filter.rightType\"\r\n                        :options=\"['STARTS WITH', 'NOT STARTS WITH', 'ENDS WITH', 'NOT ENDS WITH', 'CONTAINS', 'NOT CONTAINS', 'BETWEEN', 'NOT BETWEEN'].includes(filter.operator) ? [targetValues[0]] : targetValues\"\r\n                        optionValue=\"value\"\r\n                        optionLabel=\"label\"\r\n                        @change=\"onFilterTypeChange\"\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"p-col-4 p-d-flex p-flex-row p-ai-center\" v-if=\"filter.operator !== 'IS NULL' && filter.operator !== 'NOT NULL'\">\r\n                <div class=\"kn-flex\">\r\n                    <label class=\"kn-material-input-label\" v-show=\"!(filter.rightType === 'manual' && ['BETWEEN', 'NOT BETWEEN', 'IN', 'NOT IN'].includes(filter.operator))\"> {{ $t('qbe.filters.target') }} </label>\r\n                    <div class=\"p-d-flex p-flex-row p-ai-center\">\r\n                        <div v-if=\"filter.rightType === 'manual' && ['BETWEEN', 'NOT BETWEEN'].includes(filter.operator) && field.dataType !== 'java.sql.Timestamp' && field.dataType !== 'java.sql.Date'\" class=\"p-d-flex p-flex-row p-ai-center p-mt-3\">\r\n                            <div class=\"p-float-label\">\r\n                                <InputText class=\"kn-material-input\" v-model=\"firstOperand\" @input=\"onManualBetweenChange\" />\r\n                                <label class=\"kn-material-input-label\"> {{ $t('qbe.filters.lowLimit') }} </label>\r\n                            </div>\r\n                            <span class=\"p-mx-2\">{{ $t('qbe.filters.and') }}</span>\r\n                            <div class=\"p-float-label\">\r\n                                <InputText class=\"kn-material-input\" v-model=\"secondOperand\" @input=\"onManualBetweenChange\" />\r\n                                <label class=\"kn-material-input-label\"> {{ $t('qbe.filters.highLimit') }} </label>\r\n                            </div>\r\n                        </div>\r\n                        <div v-else-if=\"filter.rightType === 'manual' && ['IN', 'NOT IN'].includes(filter.operator) && field.dataType !== 'java.sql.Timestamp' && field.dataType !== 'java.sql.Date'\" class=\"kn-width-full\">\r\n                            <label class=\"kn-material-input-label\"> {{ $t('qbe.filters.enterValue') }} </label>\r\n                            <Chips class=\"kn-material-input\" v-model=\"multiManualValues\" @add=\"onManualMultivalueChanged\" @remove=\"onManualMultivalueChanged\" :addOnBlur=\"true\" />\r\n                        </div>\r\n\r\n                        <InputText v-else-if=\"filter.rightType === 'manual' && field.dataType !== 'java.sql.Timestamp' && field.dataType !== 'java.sql.Date'\" class=\"kn-material-input\" v-model=\"filter.rightOperandDescription\" @input=\"onManualValueChange\" />\r\n\r\n                        <div v-else-if=\"filter.rightType === 'manual' && (field.dataType === 'java.sql.Timestamp' || field.dataType === 'java.sql.Date')\">\r\n                            <div class=\"kn-flex p-d-flex p-flex-row p-m-1\">\r\n                                <Calendar class=\"kn-flex p-mr-2\" v-model=\"targetDate\" @input=\"onManualTimestampChange\" @dateSelect=\"onManualTimestampChange\"></Calendar>\r\n                                <Calendar v-if=\"field.dataType === 'java.sql.Timestamp'\" class=\"qbe-filter-time-input\" v-model=\"targetDate\" :manualInput=\"true\" :timeOnly=\"true\" hourFormat=\"24\" @input=\"onManualTimestampChange\" @dateSelect=\"onManualTimestampChange\" />\r\n                            </div>\r\n\r\n                            <div v-if=\"['BETWEEN', 'NOT BETWEEN'].includes(filter.operator)\" class=\"kn-flex p-d-flex p-flex-row p-m-1\">\r\n                                <Calendar class=\"kn-flex p-mr-2\" v-model=\"targetEndDate\" @input=\"onManualTimestampChange\" @dateSelect=\"onManualTimestampEndDateChange\"></Calendar>\r\n                                <Calendar v-if=\"field.dataType === 'java.sql.Timestamp'\" class=\"qbe-filter-time-input\" v-model=\"targetEndDate\" :manualInput=\"true\" :timeOnly=\"true\" hourFormat=\"24\" @input=\"onManualTimestampEndDateChange\" @dateSelect=\"onManualTimestampChange\" />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"qbe-filter-chip-container p-d-flex p-flex-row p-ai-center p-flex-wrap kn-flex\" v-else-if=\"filter.rightType === 'valueOfField'\">\r\n                            <Chip v-for=\"(selectedValue, index) in selectedValues\" :key=\"index\" class=\"p-mr-1\">{{ selectedValue }}</Chip>\r\n                        </div>\r\n\r\n                        <CascadeSelect\r\n                            v-if=\"filter.rightType === 'anotherEntity'\"\r\n                            class=\"kn-flex\"\r\n                            v-model=\"filter.rightOperandDescription\"\r\n                            :options=\"entities\"\r\n                            optionLabel=\"attributes.longDescription\"\r\n                            optionValue=\"attributes.longDescription\"\r\n                            optionGroupLabel=\"text\"\r\n                            :optionGroupChildren=\"['children']\"\r\n                            @change=\"onEntityTypeChanged\"\r\n                        ></CascadeSelect>\r\n\r\n                        <Dropdown class=\"kn-material-input kn-flex\" v-if=\"filter.rightType === 'subquery'\" v-model=\"filter.rightOperandDescription\" :options=\"subqueries\" optionValue=\"name\" optionLabel=\"name\" @change=\"onSubqeryTargetChange\" />\r\n\r\n                        <Dropdown class=\"kn-material-input kn-flex\" v-if=\"filter.rightType === 'parameter'\" v-model=\"filter.rightOperandDescription\" :options=\"parameters\" optionValue=\"name\" optionLabel=\"name\" @change=\"onParameterTargetChange\" />\r\n\r\n                        <i v-if=\"filter.rightType === 'valueOfField'\" class=\"fa fa-check kn-cursor-pointer p-ml-2\" @click=\"loadFilterValues\"></i>\r\n                        <i class=\"fa fa-eraser kn-cursor-pointer p-ml-2\" @click=\"$emit('removeFilter', filter)\"></i>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <QBEFilterValuesTable v-show=\"filter.rightType === 'valueOfField'\" class=\"p-m-2\" :filterValuesData=\"filterValuesData\" :loadedSelectedValues=\"selectedValues\" :loading=\"loading\" :filterOperator=\"filter.operator\" @selected=\"setSelectedValues\"></QBEFilterValuesTable>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent, PropType } from 'vue'\r\nimport { AxiosResponse } from 'axios'\r\nimport { iFilter } from '../../QBE'\r\nimport Calendar from 'primevue/calendar'\r\nimport CascadeSelect from 'primevue/cascadeselect'\r\nimport Chip from 'primevue/chip'\r\nimport Chips from 'primevue/chips'\r\nimport Dropdown from 'primevue/dropdown'\r\nimport QBEFilterDialogDescriptor from './QBEFilterDialogDescriptor.json'\r\nimport QBEFilterValuesTable from './QBEFilterValuesTable.vue'\r\nimport moment from 'moment'\r\n\r\nexport default defineComponent({\r\n    name: 'qbe-filter-card',\r\n    components: { Calendar, CascadeSelect, Chip, Chips, Dropdown, QBEFilterValuesTable },\r\n    props: { propFilter: { type: Object as PropType<iFilter> }, id: { type: String }, propEntities: { type: Array }, subqueries: { type: Array, required: true }, field: { type: Object, required: true }, propParameters: { type: Array } },\r\n    emits: ['removeFilter'],\r\n    data() {\r\n        return {\r\n            QBEFilterDialogDescriptor,\r\n            filter: null as iFilter | null,\r\n            targetValues: [\r\n                {\r\n                    label: this.$t('qbe.filters.targets.manual'),\r\n                    value: 'manual'\r\n                },\r\n                {\r\n                    label: this.$t('qbe.filters.targets.value'),\r\n                    value: 'valueOfField'\r\n                },\r\n                {\r\n                    label: this.$t('qbe.filters.targets.entity'),\r\n                    value: 'anotherEntity'\r\n                }\r\n            ],\r\n            selectedValues: [] as string[],\r\n            filterValuesData: null,\r\n            anotherEntityValue: '',\r\n            entities: [] as any[],\r\n            firstOperand: '',\r\n            secondOperand: '',\r\n            multiManualValues: [] as string[],\r\n            targetDate: null as Date | null,\r\n            targetEndDate: null as Date | null,\r\n            parameters: [] as any[],\r\n            loading: false,\r\n            filterOperatorOptions: [] as { label: string; value: string }[]\r\n        }\r\n    },\r\n    watch: {\r\n        propFilter() {\r\n            this.loadFilter()\r\n        },\r\n        propEntities() {\r\n            this.loadEntities()\r\n        },\r\n        propParameters() {\r\n            this.loadParameters()\r\n        }\r\n    },\r\n    created() {\r\n        this.loadEntities()\r\n        this.loadFilter()\r\n        this.loadParameters()\r\n    },\r\n    methods: {\r\n        loadFilter() {\r\n            this.filter = this.propFilter as iFilter\r\n            if (this.subqueries?.length > 0) {\r\n                this.targetValues.push({\r\n                    label: this.$t('qbe.filters.targets.subquery'),\r\n                    value: 'subquery'\r\n                })\r\n            }\r\n\r\n            this.formatFilter()\r\n\r\n            this.filterOperatorOptions = this.QBEFilterDialogDescriptor.operatorValues\r\n            const tempEntity = this.getEntity() as any\r\n            if (tempEntity?.iconCls === 'geographic_dimension') {\r\n                this.filterOperatorOptions = this.filterOperatorOptions.concat(this.QBEFilterDialogDescriptor.spatialOperatorValues)\r\n            }\r\n        },\r\n        getEntity() {\r\n            let entity = null\r\n            for (let i = 0; i < this.entities.length && !entity; i++) {\r\n                for (let j = 0; j < this.entities[i].children.length; j++) {\r\n                    if (this.entities[i].children[j].id === this.field.id) {\r\n                        entity = this.entities[i]\r\n                        break\r\n                    }\r\n                }\r\n            }\r\n\r\n            return entity\r\n        },\r\n        loadEntities() {\r\n            this.entities = this.propEntities ? [...this.propEntities] : []\r\n        },\r\n        loadParameters() {\r\n            this.parameters = this.propParameters as any[]\r\n            if (this.parameters.length > 0) {\r\n                this.targetValues.push({\r\n                    label: this.$t('common.parameter'),\r\n                    value: 'parameter'\r\n                })\r\n            }\r\n        },\r\n        async formatFilter() {\r\n            switch (this.filter?.rightType) {\r\n                case 'manual':\r\n                    this.filter.rightOperandType = 'Static Content'\r\n\r\n                    if (['java.sql.Timestamp'].includes(this.field.dataType)) {\r\n                        this.targetDate = this.filter.rightOperandValue[0] ? moment(this.filter.rightOperandValue[0], 'DD/MM/YYYY hh:mm').toDate() : new Date()\r\n                        this.onManualTimestampChange()\r\n                        if (['BETWEEN', 'NOT BETWEEN'].includes(this.filter.operator)) {\r\n                            this.targetEndDate = this.filter.rightOperandValue[1] ? moment(this.filter.rightOperandValue[1], 'DD/MM/YYYY hh:mm').toDate() : new Date()\r\n                        }\r\n                    } else if (['java.sql.Date'].includes(this.field.dataType)) {\r\n                        this.targetDate = this.filter.rightOperandValue[0] ? moment(this.filter.rightOperandValue[0], 'DD/MM/YYYY').toDate() : new Date()\r\n                        this.onManualTimestampChange()\r\n                        if (['BETWEEN', 'NOT BETWEEN'].includes(this.filter.operator)) {\r\n                            this.targetEndDate = this.filter.rightOperandValue[1] ? moment(this.filter.rightOperandValue[1], 'DD/MM/YYYY').toDate() : new Date()\r\n                        }\r\n                    } else {\r\n                        if (['BETWEEN', 'NOT BETWEEN'].includes(this.filter.operator)) {\r\n                            this.firstOperand = this.filter.rightOperandValue[0]\r\n                            this.secondOperand = this.filter.rightOperandValue[1]\r\n                        } else if (['IN', 'NOT IN'].includes(this.filter.operator)) {\r\n                            this.multiManualValues = [...this.filter.rightOperandValue]\r\n                        }\r\n                    }\r\n\r\n                    this.filter.hasParam = false\r\n                    this.filter.paramName = ''\r\n                    break\r\n                case 'valueOfField':\r\n                    this.filter.rightOperandType = 'Static Content'\r\n                    this.selectedValues = this.filter.rightOperandValue.filter((el: any) => el !== '')\r\n                    await this.loadFilterValues()\r\n\r\n                    this.filter.hasParam = false\r\n                    this.filter.paramName = ''\r\n                    break\r\n                case 'anotherEntity':\r\n                    this.filter.rightOperandType = 'Field Content'\r\n                    this.filter.hasParam = false\r\n                    this.filter.paramName = ''\r\n                    break\r\n                case 'subquery':\r\n                    this.filter.rightOperandType = 'Subquery'\r\n                    this.filter.hasParam = false\r\n                    this.filter.paramName = ''\r\n                    break\r\n                case 'parameter':\r\n                    this.filter.rightOperandType = 'Static Content'\r\n                    break\r\n            }\r\n        },\r\n        onFilterOperatorChange() {\r\n            if (!this.filter) return\r\n\r\n            if (['STARTS WITH', 'NOT STARTS WITH', 'ENDS WITH', 'NOT ENDS WITH', 'CONTAINS', 'NOT CONTAINS', 'BETWEEN', 'NOT BETWEEN'].includes(this.filter.operator)) {\r\n                this.filter.rightType = 'manual'\r\n            }\r\n\r\n            if (this.filter.rightType === 'manual') {\r\n                this.filter.rightOperandDescription = ''\r\n                this.multiManualValues = []\r\n                this.firstOperand = ''\r\n                this.secondOperand = ''\r\n                this.targetDate = null\r\n                this.targetEndDate = null\r\n            } else if (this.filter.rightType === 'valueOfField') {\r\n                this.selectedValues = []\r\n            }\r\n\r\n            if (this.filter.operator !== 'SPATIAL_NN') {\r\n                delete this.filter.operatorParameter\r\n            }\r\n            this.resetFilterRightOperandValues()\r\n        },\r\n        onManualValueChange() {\r\n            if (this.filter) {\r\n                this.filter.rightOperandValue = [this.filter.rightOperandDescription]\r\n            }\r\n        },\r\n        onManualBetweenChange() {\r\n            if (this.filter) {\r\n                this.filter.rightOperandValue = [this.firstOperand, this.secondOperand]\r\n                this.filter.rightOperandDescription = this.firstOperand + ' ---- ' + this.secondOperand\r\n            }\r\n        },\r\n        onManualMultivalueChanged() {\r\n            if (this.filter) {\r\n                this.filter.rightOperandValue = [...this.multiManualValues]\r\n                this.filter.rightOperandDescription = this.multiManualValues.join(' ---- ')\r\n            }\r\n        },\r\n        async onFilterTypeChange() {\r\n            if (this.filter) {\r\n                this.resetFilterRightOperandValues()\r\n                this.selectedValues = []\r\n                this.filterValuesData = null\r\n                this.firstOperand = ''\r\n                this.secondOperand = ''\r\n                this.multiManualValues = []\r\n                this.formatFilter()\r\n\r\n                if (this.filter.rightType === 'valueOfField') {\r\n                    await this.loadFilterValues()\r\n                }\r\n            }\r\n        },\r\n        resetFilterRightOperandValues() {\r\n            if (this.filter) {\r\n                this.filter.rightOperandDescription = ''\r\n                this.filter.rightOperandLongDescription = ''\r\n                this.filter.rightOperandValue = ['']\r\n                this.filter.rightOperandAlias = ''\r\n            }\r\n        },\r\n        async loadFilterValues() {\r\n            this.loading = true\r\n            await this.$http\r\n                .post(`/knowageqbeengine/servlet/AdapterHTTP?ACTION_NAME=GET_VALUES_FOR_QBE_FILTER_LOOKUP_ACTION&ENTITY_ID=${this.filter?.leftOperandValue}&SBI_EXECUTION_ID=${this.id}`, {\r\n                    headers: { 'Content-Type': 'application/x-www-form-urlencoded; charset=utf-8' }\r\n                })\r\n                .then((response: AxiosResponse<any>) => (this.filterValuesData = response.data))\r\n            this.loading = false\r\n        },\r\n        setSelectedValues(selected: string[]) {\r\n            this.selectedValues = selected\r\n            if (this.filter) {\r\n                this.filter.rightOperandValue = selected\r\n                this.filter.rightOperandDescription = selected.join(' ---- ')\r\n                this.filter.rightOperandLongDescription = selected.join(' ---- ')\r\n            }\r\n        },\r\n        onEntityTypeChanged() {\r\n            if (this.filter) {\r\n                const selectedField = this.findSelectedField(this.filter.rightOperandDescription) as any\r\n\r\n                this.filter.rightOperandValue = [selectedField?.id]\r\n                this.filter.rightOperandLongDescription = this.filter.rightOperandDescription\r\n                this.filter.rightOperandAlias = selectedField.text\r\n            }\r\n        },\r\n        findSelectedField(fieldDescription: string) {\r\n            let tempField = null\r\n\r\n            for (let i = 0; i < this.entities.length && !tempField; i++) {\r\n                for (let j = 0; j < this.entities[i].children.length; j++) {\r\n                    if (this.entities[i].children[j].attributes.longDescription === fieldDescription) {\r\n                        tempField = this.entities[i].children[j]\r\n                        break\r\n                    }\r\n                }\r\n            }\r\n\r\n            return tempField\r\n        },\r\n        onSubqeryTargetChange() {\r\n            if (!this.filter || !this.subqueries) return\r\n\r\n            const index = this.subqueries.findIndex((subquery: any) => subquery.name === this.filter?.rightOperandDescription)\r\n            if (index !== -1) {\r\n                const subquery = this.subqueries[index] as any\r\n                this.filter.rightOperandValue = [subquery.id]\r\n                this.filter.rightOperandLongDescription = 'Subquery ' + subquery.name\r\n            }\r\n        },\r\n        onManualTimestampChange() {\r\n            const format = this.field.dataType === 'java.sql.Date' ? 'DD/MM/YYYY' : 'DD/MM/YYYY hh:mm'\r\n            if (this.filter) {\r\n                this.filter.rightOperandDescription = this.targetDate instanceof Date ? moment(this.targetDate).format(format) : ''\r\n                this.filter.rightOperandValue[0] = this.targetDate instanceof Date ? moment(this.targetDate).format(format) : ''\r\n            }\r\n        },\r\n        onManualTimestampEndDateChange() {\r\n            const format = this.field.dataType === 'java.sql.Date' ? 'DD/MM/YYYY' : 'DD/MM/YYYY hh:mm'\r\n            if (this.filter) {\r\n                this.filter.rightOperandValue[1] = this.targetDate instanceof Date ? moment(this.targetEndDate).format(format) : ''\r\n            }\r\n        },\r\n        onParameterTargetChange() {\r\n            if (this.filter) {\r\n                this.filter.hasParam = true\r\n                this.filter.paramName = this.filter.rightOperandDescription\r\n                this.filter.rightOperandValue = ['$P{' + this.filter.rightOperandDescription + '}']\r\n                this.filter.rightOperandLongDescription = 'Static Content ' + '$P{' + this.filter.rightOperandDescription + '}'\r\n            }\r\n        },\r\n        getFilterOperatorLabel(value: string) {\r\n            for (let i = 0; i < this.filterOperatorOptions.length; i++) {\r\n                if (this.filterOperatorOptions[i].value === value) {\r\n                    return this.$t(this.filterOperatorOptions[i].label)\r\n                }\r\n            }\r\n            return ''\r\n        }\r\n    }\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.qbe-filter-option-value {\r\n    text-transform: capitalize;\r\n}\r\n\r\n.qbe-filter-chip-container {\r\n    border-bottom: 1px solid #c2c2c2;\r\n    min-height: 2.775rem;\r\n}\r\n\r\n.qbe-filter-time-input {\r\n    flex: 0.3;\r\n}\r\n</style>\r\n","<template>\r\n    <Dialog id=\"qbe-filter-dialog\" class=\"p-fluid kn-dialog--toolbar--primary\" :style=\"QBEFilterDialogDescriptor.dialog.style\" :visible=\"visible\" :modal=\"true\" :closable=\"false\" :base-z-index=\"4203\">\r\n        <template #header>\r\n            <Toolbar class=\"kn-toolbar kn-toolbar--primary p-p-0 p-m-2 p-col-12\">\r\n                <template #start>\r\n                    {{ $t('qbe.filters.temporalFilter') }}\r\n                </template>\r\n            </Toolbar>\r\n        </template>\r\n\r\n        <DataTable class=\"p-datatable-sm kn-table p-m-4\" :value=\"filters\" v-model:selection=\"selectedFilter\" selectionMode=\"single\" responsiveLayout=\"stack\" breakpoint=\"960px\">\r\n            <template #empty>\r\n                <div id=\"noFunctionsFound\">\r\n                    {{ $t('common.info.noDataFound') }}\r\n                </div>\r\n            </template>\r\n            <Column :field=\"'name'\" :header=\"$t('common.name')\" :sortable=\"true\"> </Column>\r\n        </DataTable>\r\n\r\n        <template #footer>\r\n            <Button class=\"kn-button kn-button--primary\" @click=\"closeDialog\"> {{ $t('common.cancel') }}</Button>\r\n            <Button class=\"kn-button kn-button--primary\" @click=\"save\"> {{ $t('common.save') }}</Button>\r\n        </template>\r\n    </Dialog>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport Column from 'primevue/column'\r\nimport DataTable from 'primevue/datatable'\r\nimport Dialog from 'primevue/dialog'\r\nimport QBEFilterDialogDescriptor from './QBEFilterDialogDescriptor.json'\r\n\r\nexport default defineComponent({\r\n    name: 'qbe-temporal-filter-dialog',\r\n    components: { Column, DataTable, Dialog },\r\n    props: { visible: { type: Boolean }, temporalFilters: { type: Array } },\r\n    emits: ['save', 'close'],\r\n    data() {\r\n        return {\r\n            QBEFilterDialogDescriptor,\r\n            filters: [] as any,\r\n            selectedFilter: null\r\n        }\r\n    },\r\n    watch: {\r\n        visible() {\r\n            this.selectedFilter = null\r\n        },\r\n        temporalFilters() {\r\n            this.loadTemporalFilters()\r\n        }\r\n    },\r\n    created() {\r\n        this.loadTemporalFilters()\r\n    },\r\n    methods: {\r\n        loadTemporalFilters() {\r\n            this.filters = this.temporalFilters\r\n        },\r\n        closeDialog() {\r\n            this.$emit('close')\r\n        },\r\n        save() {\r\n            this.$emit('save', this.selectedFilter)\r\n        }\r\n    }\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n#qbe-temporal-filter-dialog.p-dialog-header,\r\n#qbe-temporal-filter-dialog.p-dialog-content {\r\n    padding: 0;\r\n}\r\n#qbe-temporal-filter-dialog.p-dialog-content {\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex: 1;\r\n}\r\n</style>\r\n","<template>\r\n    <DataTable class=\"p-datatable-sm kn-table p-m-4\" :value=\"parameters\" editMode=\"cell\" responsiveLayout=\"stack\" breakpoint=\"960px\" @cell-edit-complete=\"onCellEditComplete\">\r\n        <template #empty>\r\n            <div>\r\n                {{ $t('common.info.noDataFound') }}\r\n            </div>\r\n        </template>\r\n        <Column :field=\"'name'\" :header=\"$t('common.name')\" :sortable=\"true\"> </Column>\r\n        <Column :field=\"'value'\" :header=\"$t('common.value')\" :sortable=\"true\">\r\n            <template #editor=\"slotProps\">\r\n                <div class=\"p-d-flex p-flex-row p-ai-center\">\r\n                    <InputText class=\"kn-material-input p-inputtext-sm\" v-model=\"slotProps.data[slotProps.column.props.field]\"></InputText>\r\n                    <i class=\"pi pi-pencil p-ml-2\" />\r\n                </div>\r\n            </template>\r\n            <template #body=\"slotProps\">\r\n                <div class=\"p-d-flex p-flex-row p-ai-center\">\r\n                    <span>{{ slotProps.data[slotProps.column.props.field] }}</span>\r\n                </div>\r\n            </template>\r\n        </Column>\r\n    </DataTable>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport Column from 'primevue/column'\r\nimport DataTable from 'primevue/datatable'\r\n\r\nexport default defineComponent({\r\n    name: 'qbe-filter-parameters',\r\n    components: { Column, DataTable },\r\n    props: { visible: { type: Boolean }, propParameters: { type: Array } },\r\n    emits: ['save', 'close', 'parametersUpdated'],\r\n    data() {\r\n        return {\r\n            parameters: [] as any[]\r\n        }\r\n    },\r\n    watch: {\r\n        propParameters() {\r\n            this.loadParameters()\r\n        }\r\n    },\r\n    created() {\r\n        this.loadParameters()\r\n    },\r\n    methods: {\r\n        loadParameters() {\r\n            this.parameters = []\r\n            this.propParameters?.forEach((parameter: any) => {\r\n                parameter.value = parameter.value ?? parameter.defaultValue\r\n                this.parameters.push(parameter)\r\n            })\r\n        },\r\n        onCellEditComplete(event: any) {\r\n            this.parameters[event.index] = event.newData\r\n            this.$emit('parametersUpdated', this.parameters)\r\n        }\r\n    }\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n#qbe-filter-parameters-dialog.p-dialog-header,\r\n#qbe-filter-parameters-dialog.p-dialog-content {\r\n    padding: 0;\r\n}\r\n#qbe-filter-parameters-dialog.p-dialog-content {\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex: 1;\r\n}\r\n</style>\r\n","<template>\r\n    <Dialog id=\"qbe-filter-dialog\" class=\"p-fluid kn-dialog--toolbar--primary\" :style=\"QBEFilterDialogDescriptor.dialog.style\" :visible=\"visible\" :modal=\"true\" :closable=\"false\">\r\n        <template #header>\r\n            <Toolbar class=\"kn-toolbar kn-toolbar--primary p-p-0 p-m-2 p-col-12\">\r\n                <template #start>\r\n                    {{ $t('common.filters') }}\r\n                </template>\r\n\r\n                <template #end>\r\n                    <i v-show=\"temporalFiltersEnabled()\" class=\"fa fa-calendar kn-cursor-pointer p-mr-4\" @click=\"openTemporalFilterDialog\"></i>\r\n                    <KnFabButton icon=\"fas fa-plus\" @click=\"addNewFilter\"></KnFabButton>\r\n                </template>\r\n            </Toolbar>\r\n        </template>\r\n\r\n        <Message v-if=\"filters.length === 0 && !parameterTableVisible\" class=\"p-m-4\" severity=\"info\" :closable=\"false\" :style=\"QBEFilterDialogDescriptor.styles.message\">\r\n            {{ $t('common.info.noDataFound') }}\r\n        </Message>\r\n        <div v-else-if=\"!parameterTableVisible\">\r\n            <QBEFilterCard v-for=\"filter in filters\" :key=\"filter.filterId\" :propFilter=\"filter\" :id=\"id\" :propEntities=\"entities\" :subqueries=\"filterDialogData?.query.subqueries\" :field=\"filterDialogData?.field\" :propParameters=\"parameters\" @removeFilter=\"removeFilter\"></QBEFilterCard>\r\n        </div>\r\n\r\n        <QBEFilterParameters v-else-if=\"parameterTableVisible\" :propParameters=\"parameters\" @parametersUpdated=\"onParametersUpdated\"></QBEFilterParameters>\r\n\r\n        <template #footer>\r\n            <Button class=\"kn-button kn-button--primary\" @click=\"closeDialog\"> {{ $t('common.cancel') }}</Button>\r\n            <Button class=\"kn-button kn-button--primary\" @click=\"save\"> {{ parameterTableVisible ? $t('qbe.filters.applyParameters') : $t('common.save') }}</Button>\r\n        </template>\r\n\r\n        <QBETemporalFilterDialog :visible=\"temporalFilterDialogVisible\" :temporalFilters=\"temporalFilters\" @close=\"temporalFilterDialogVisible = false\" @save=\"addTemporalFilter\"></QBETemporalFilterDialog>\r\n    </Dialog>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent, PropType } from 'vue'\r\nimport { AxiosResponse } from 'axios'\r\nimport { iField, iQuery, iFilter } from '../../QBE'\r\nimport { removeInPlace } from '../qbeAdvancedFilterDialog/treeService'\r\nimport Dialog from 'primevue/dialog'\r\nimport KnFabButton from '@/components/UI/KnFabButton.vue'\r\nimport Message from 'primevue/message'\r\nimport QBEFilterCard from './QBEFilterCard.vue'\r\nimport QBEFilterDialogDescriptor from './QBEFilterDialogDescriptor.json'\r\nimport QBETemporalFilterDialog from './QBETemporalFilterDialog.vue'\r\nimport QBEFilterParameters from './QBEFilterParameters.vue'\r\nimport mainStore from '../../../../App.store'\r\nimport cryptoRandomString from 'crypto-random-string'\r\nimport deepcopy from 'deepcopy'\r\n\r\nexport default defineComponent({\r\n    name: 'qbe-filter-dialog',\r\n    components: { Dialog, KnFabButton, Message, QBEFilterCard, QBETemporalFilterDialog, QBEFilterParameters },\r\n    props: { visible: { type: Boolean }, filterDialogData: { type: Object as PropType<{ field: iField; query: iQuery }> }, id: { type: String }, entities: { type: Array }, propParameters: { type: Array, required: true }, propExpression: { type: Object } },\r\n    emits: ['save', 'close', 'parametersUpdated'],\r\n    data() {\r\n        return {\r\n            QBEFilterDialogDescriptor,\r\n            filters: [] as iFilter[],\r\n            nextFilterIndex: '-1' as string,\r\n            temporalFilters: [] as any[],\r\n            temporalFilterDialogVisible: false,\r\n            parameters: [] as any[],\r\n            parameterTableVisible: false,\r\n            expression: {} as any,\r\n            updatedParameters: [] as any[]\r\n        }\r\n    },\r\n    watch: {\r\n        filterDialogData() {\r\n            this.loadData()\r\n        },\r\n        propParameters: {\r\n            handler() {\r\n                this.loadParameters()\r\n            },\r\n            deep: true\r\n        },\r\n        propExpression() {\r\n            this.loadExpression()\r\n        }\r\n    },\r\n    setup() {\r\n        const store = mainStore()\r\n        return { store }\r\n    },\r\n    created() {\r\n        this.loadData()\r\n        this.loadParameters()\r\n        this.loadExpression()\r\n    },\r\n    methods: {\r\n        loadData() {\r\n            if (!this.filterDialogData || !this.filterDialogData.field || !this.filterDialogData.query) return\r\n\r\n            this.filters = []\r\n            this.filterDialogData.query.filters.forEach((filter: iFilter) => {\r\n                if (filter.leftOperandValue === this.filterDialogData?.field.id) {\r\n                    this.filters.push({ ...filter })\r\n                }\r\n            })\r\n            this.nextFilterIndex = cryptoRandomString({ length: 16, type: 'base64' })\r\n            if (this.filterDialogData.field.type === 'inline.calculated.field') {\r\n                this.setCalculatedFieldLongDescription(this.filterDialogData.field, this.filterDialogData.field.originalId as string)\r\n            } else if (this.filterDialogData.field.attributes?.type === 'inLineCalculatedField') {\r\n                this.setCalculatedFieldLongDescription(this.filterDialogData.field, this.filterDialogData.field.id)\r\n            }\r\n        },\r\n        setCalculatedFieldLongDescription(field: any, id: string | null) {\r\n            if (id) {\r\n                const temp = id.substring(id.lastIndexOf('.') + 1)\r\n                const tempSplitted = temp.split(':')\r\n                field.longDescription = tempSplitted[0] + ' : ' + tempSplitted[1]\r\n            }\r\n        },\r\n        loadParameters() {\r\n            this.parameters = this.propParameters ? [...this.propParameters] : []\r\n            this.updatedParameters = deepcopy(this.parameters)\r\n        },\r\n        loadExpression() {\r\n            this.expression = this.propExpression as any\r\n        },\r\n        removeFilter(filter: iFilter) {\r\n            const index = this.filters.findIndex((el: iFilter) => el.filterId === filter.filterId)\r\n            if (index !== -1) this.filters.splice(index, 1)\r\n            removeInPlace(this.expression, '$F{' + filter.filterId + '}')\r\n        },\r\n        addNewFilter() {\r\n            const field = this.filterDialogData ? this.filterDialogData.field : ({} as any)\r\n\r\n            const filter = {\r\n                filterId: 'Filter' + this.nextFilterIndex,\r\n                filterDescripion: 'Filter' + this.nextFilterIndex,\r\n                filterInd: this.nextFilterIndex,\r\n                promptable: false,\r\n                leftOperandValue: this.filterDialogData?.field.attributes?.type === 'inLineCalculatedField' ? this.filterDialogData?.field.attributes.formState : field.id,\r\n                leftOperandDescription: field.longDescription ?? field.attributes.longDescription,\r\n                leftOperandLongDescription: field.longDescription ?? field.attributes.longDescription,\r\n                leftOperandType: this.filterDialogData?.field.type === 'inline.calculated.field' || this.filterDialogData?.field.attributes?.type === 'inLineCalculatedField' ? 'inline.calculated.field' : 'Field Content',\r\n                leftOperandDefaultValue: null,\r\n                leftOperandLastValue: null,\r\n                leftOperandAlias: field.alias ?? field.attributes.field,\r\n                leftOperandDataType: '',\r\n                operator: 'EQUALS TO',\r\n                rightOperandDescription: '',\r\n                rightOperandLongDescription: '',\r\n                rightOperandValue: [''],\r\n                rightOperandType: 'Static Content',\r\n                rightType: 'manual',\r\n                rightOperandDefaultValue: [''],\r\n                rightOperandLastValue: [''],\r\n                rightOperandAlias: '',\r\n                rightOperandDataType: '',\r\n                booleanConnector: 'AND',\r\n                deleteButton: false,\r\n                color: '',\r\n                entity: field.entity\r\n            }\r\n            if (field) {\r\n                this.filters.push(filter)\r\n                this.nextFilterIndex = cryptoRandomString({ length: 16, type: 'base64' })\r\n            }\r\n            this.push(filter)\r\n        },\r\n        push(filter: iFilter) {\r\n            var newConst = {\r\n                type: 'NODE_CONST',\r\n                value: '$F{' + filter.filterId + '}',\r\n                childNodes: [],\r\n                details: {\r\n                    leftOperandAlias: filter.leftOperandAlias,\r\n                    operator: filter.operator,\r\n                    entity: filter.entity,\r\n                    rightOperandValue: filter.rightOperandValue.join(', ')\r\n                }\r\n            }\r\n\r\n            let newRoot = {} as any\r\n\r\n            if (this.expression && Object.keys(this.expression).length === 0 && Object.getPrototypeOf(this.expression) === Object.prototype) {\r\n                newRoot = {\r\n                    type: 'NODE_OP',\r\n                    childNodes: [],\r\n                    value: filter.booleanConnector || 'AND'\r\n                }\r\n                newRoot.childNodes.push(newConst)\r\n                this.expression = JSON.parse(JSON.stringify(newRoot))\r\n            } else if (this.expression.childNodes && this.expression.childNodes.length <= 1) {\r\n                newRoot = this.expression\r\n                newRoot.childNodes.unshift(newConst)\r\n            } else {\r\n                newRoot = {\r\n                    type: 'NODE_OP',\r\n                    childNodes: [],\r\n                    value: filter.booleanConnector || 'AND'\r\n                }\r\n                newRoot.childNodes.push(newConst)\r\n                newRoot.childNodes.push(JSON.parse(JSON.stringify(this.expression)))\r\n                this.expression = JSON.parse(JSON.stringify(newRoot))\r\n            }\r\n        },\r\n        temporalFiltersEnabled() {\r\n            return (this.store.$state as any).user.functionalities.includes('Timespan') && (this.filterDialogData?.field.dataType?.toLowerCase() === 'java.sql.date' || this.filterDialogData?.field.dataType?.toLowerCase() === 'java.sql.timestamp')\r\n        },\r\n        async openTemporalFilterDialog() {\r\n            await this.$http.get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `1.0/timespan/listTimespan/?types=DAY_OF_WEEK&types=DAY_OF_WEEK&types=DAY_OF_WEEK`).then((response: AxiosResponse<any>) => (this.temporalFilters = response.data.data))\r\n            this.temporalFilterDialogVisible = true\r\n        },\r\n        addTemporalFilter(temporalFilter: any) {\r\n            if (temporalFilter) {\r\n                for (let i = 0; i < temporalFilter.definition.length; i++) {\r\n                    const tempFilter = {\r\n                        filterId: 'Filter' + this.nextFilterIndex,\r\n                        filterDescripion: 'Filter' + this.nextFilterIndex,\r\n                        filterInd: this.nextFilterIndex,\r\n                        promptable: false,\r\n                        leftOperandValue: this.filterDialogData?.field.attributes?.type === 'inLineCalculatedField' ? this.filterDialogData?.field.attributes.formState : this.filterDialogData?.field.id,\r\n                        leftOperandDescription: this.filterDialogData?.field.longDescription ?? this.filterDialogData?.field.attributes.longDescription,\r\n                        leftOperandLongDescription: this.filterDialogData?.field.longDescription ?? this.filterDialogData?.field.attributes.longDescription,\r\n                        leftOperandType: this.filterDialogData?.field.type === 'inline.calculated.field' || this.filterDialogData?.field.attributes?.type === 'inLineCalculatedField' ? 'inline.calculated.field' : 'Field Content',\r\n                        leftOperandDefaultValue: null,\r\n                        leftOperandLastValue: null,\r\n                        leftOperandAlias: this.filterDialogData?.field.alias ?? this.filterDialogData?.field.attributes.field,\r\n                        leftOperandDataType: '',\r\n                        operator: 'BETWEEN',\r\n                        rightType: 'manual',\r\n                        rightOperandValue: [temporalFilter.definition[i].from, temporalFilter.definition[i].to],\r\n                        rightOperandDescription: this.createRightOperandDescription(temporalFilter.definition[i].from, temporalFilter.definition[i].to, this.filterDialogData?.field.dataType),\r\n                        rightOperandLongDescription: this.createRightOperandDescription(temporalFilter.definition[i].from, temporalFilter.definition[i].to, this.filterDialogData?.field.dataType),\r\n                        rightOperandType: 'Static Content',\r\n                        rightOperandDefaultValue: [''],\r\n                        rightOperandLastValue: [''],\r\n                        rightOperandAlias: null,\r\n                        rightOperandDataType: '',\r\n                        booleanConnector: 'OR',\r\n                        deleteButton: false\r\n                    } as any\r\n                    this.filters.push(tempFilter)\r\n                    this.push(tempFilter)\r\n                    this.nextFilterIndex = cryptoRandomString({ length: 16, type: 'base64' })\r\n                }\r\n            }\r\n            this.temporalFilterDialogVisible = false\r\n        },\r\n        createRightOperandDescription(from: string, to: string, dataType: any) {\r\n            if (dataType === 'java.sql.Timestamp') {\r\n                return from + ' 00:00:00 ' + ' ---- ' + to + ' 00:00:00 '\r\n            }\r\n            return from + ' ---- ' + to\r\n        },\r\n        closeDialog() {\r\n            this.$emit('close')\r\n            this.nextFilterIndex = cryptoRandomString({ length: 16, type: 'base64' })\r\n            this.updatedParameters = []\r\n            this.parameterTableVisible = false\r\n            this.removeFiltersOnCancel()\r\n        },\r\n        removeFiltersOnCancel() {\r\n            this.filters.forEach((filter: iFilter) => {\r\n                const index = this.filterDialogData?.query.filters.findIndex((tempFilter: iFilter) => filter.filterId === tempFilter.filterId)\r\n                if (index === -1) removeInPlace(this.expression, '$F{' + filter.filterId + '}')\r\n            })\r\n        },\r\n        save() {\r\n            if (this.propParameters.length > 0 && !this.parameterTableVisible && this.filterUsesParameters()) {\r\n                this.parameterTableVisible = true\r\n            } else {\r\n                this.$emit('save', this.filters, this.filterDialogData?.field, this.updatedParameters, this.expression)\r\n                this.parameterTableVisible = false\r\n            }\r\n        },\r\n        onParametersUpdated(updatedParameters: any[]) {\r\n            this.updatedParameters = updatedParameters\r\n        },\r\n        filterUsesParameters() {\r\n            let usesParameters = false\r\n            for (let i = 0; i < this.filters.length; i++) {\r\n                if (this.filters[i].rightType === 'parameter') {\r\n                    usesParameters = true\r\n                    break\r\n                }\r\n            }\r\n\r\n            return usesParameters\r\n        }\r\n    }\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n#qbe-filter-dialog .p-dialog-header,\r\n#qbe-filter-dialog .p-dialog-content {\r\n    padding: 0;\r\n}\r\n#qbe-filter-dialog .p-dialog-content {\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex: 1;\r\n}\r\n</style>\r\n","<template>\r\n    <div v-if=\"having\">\r\n        <div class=\"p-grid p-m-2\">\r\n            <div class=\"p-col-3\">\r\n                <label class=\"kn-material-input-label\"> {{ $t('common.field') }} </label>\r\n                <InputText class=\"kn-material-input\" v-model=\"having.leftOperandDescription\" :disabled=\"true\" />\r\n            </div>\r\n\r\n            <div class=\"p-col-2\">\r\n                <label class=\"kn-material-input-label\" v-tooltip.top=\"$t('qbe.filters.conditionTooltip')\"> {{ $t('qbe.filters.condition') }} </label>\r\n                <Dropdown class=\"kn-material-input\" v-model=\"having.operator\" :options=\"QBEHavingDialogDescriptor.operatorValues\" optionValue=\"value\">\r\n                    <template #value=\"slotProps\">\r\n                        <div v-if=\"slotProps.value\">\r\n                            <span class=\"qbe-filter-option-value\">{{ slotProps.value.toLowerCase() }}</span>\r\n                        </div>\r\n                    </template>\r\n                    <template #option=\"slotProps\">\r\n                        <div>\r\n                            <span>{{ $t(slotProps.option.label) }}</span>\r\n                        </div>\r\n                    </template>\r\n                </Dropdown>\r\n            </div>\r\n\r\n            <div class=\"p-col-2\">\r\n                <label class=\"kn-material-input-label\"> {{ $t('qbe.filters.targetType') }} </label>\r\n                <Dropdown class=\"kn-material-input\" v-model=\"having.rightType\" :options=\"targetValues\" optionValue=\"value\" optionLabel=\"label\" @change=\"onHavingTypeChange\" />\r\n            </div>\r\n\r\n            <div class=\"p-col-3\">\r\n                <label class=\"kn-material-input-label\"> {{ $t('qbe.filters.target') }} </label>\r\n                <div class=\"p-d-flex p-flex-row p-ai-center\">\r\n                    <InputText v-if=\"having.rightType === ''\" class=\"kn-material-input\" v-model=\"having.rightOperandDescription\" @input=\"onManualValueChange\" />\r\n                    <Dropdown class=\"kn-material-input kn-flex\" v-else-if=\"having.rightType === 'anotherEntity'\" v-model=\"having.rightOperandDescription\" :options=\"entities\" optionLabel=\"field\" optionValue=\"id\" @change=\"onEntityTypeChanged\" />\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"p-col-2\">\r\n                <label class=\"kn-material-input-label\"> {{ $t('qbe.filters.target') }} </label>\r\n                <div class=\"p-d-flex p-flex-row p-ai-center\">\r\n                    <Dropdown class=\"kn-material-input kn-flex\" v-model=\"having.booleanConnector\" :options=\"QBEHavingDialogDescriptor.booleanConnectors\" />\r\n                    <i class=\"fa fa-eraser kn-cursor-pointer p-ml-2\" @click=\"$emit('removeHaving', having)\"></i>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent, PropType } from 'vue'\r\nimport { iFilter } from '../../QBE'\r\nimport Dropdown from 'primevue/dropdown'\r\nimport QBEHavingDialogDescriptor from './QBEHavingDialogDescriptor.json'\r\n\r\nexport default defineComponent({\r\n    name: 'qbe-filter-card',\r\n    components: { Dropdown },\r\n    props: { propHaving: { type: Object as PropType<iFilter> }, entities: { type: Array } },\r\n    emits: ['removeHaving'],\r\n    data() {\r\n        return {\r\n            QBEHavingDialogDescriptor,\r\n            having: null as iFilter | null,\r\n            targetValues: [\r\n                {\r\n                    label: this.$t('qbe.filters.targets.manual'),\r\n                    value: ''\r\n                },\r\n                {\r\n                    label: this.$t('qbe.filters.targets.entity'),\r\n                    value: 'anotherEntity'\r\n                }\r\n            ]\r\n        }\r\n    },\r\n    watch: {\r\n        propHaving() {\r\n            this.loadHaving()\r\n        }\r\n    },\r\n    created() {\r\n        this.loadHaving()\r\n    },\r\n    methods: {\r\n        loadHaving() {\r\n            this.having = this.propHaving as iFilter\r\n        },\r\n        onHavingTypeChange() {\r\n            if (this.having) {\r\n                this.having.rightOperandDescription = ''\r\n                this.having.rightOperandLongDescription = ''\r\n                this.having.rightOperandAggregator = ''\r\n                this.having.rightOperandType = this.having.rightType === 'anotherEntity' ? 'Field Content' : 'Static Content'\r\n            }\r\n        },\r\n        onManualValueChange() {\r\n            if (this.having) {\r\n                this.having.rightOperandValue = [this.having.rightOperandDescription]\r\n            }\r\n        },\r\n        onEntityTypeChanged() {\r\n            if (this.having) {\r\n                if (this.having.rightOperandType === 'Field Content' && this.entities) {\r\n                    let rightOperand = null as any\r\n                    const index = this.entities.findIndex((entity: any) => this.having?.rightOperandDescription === entity.id)\r\n                    if (index !== -1) rightOperand = this.entities[index]\r\n                    this.having.rightOperandAggregator = rightOperand.funct\r\n                }\r\n\r\n                this.having.rightOperandValue = [this.having.rightOperandDescription]\r\n                this.having.rightOperandLongDescription = this.having.rightOperandDescription\r\n            }\r\n        }\r\n    }\r\n})\r\n</script>\r\n","<template>\r\n    <Dialog id=\"qbe-having-dialog\" class=\"p-fluid kn-dialog--toolbar--primary\" :style=\"QBEHavingDialogDescriptor.dialog.style\" :visible=\"visible\" :modal=\"true\" :closable=\"false\">\r\n        <template #header>\r\n            <Toolbar class=\"kn-toolbar kn-toolbar--primary p-p-0 p-m-2 p-col-12\">\r\n                <template #start>\r\n                    {{ $t('qbe.having.title') }}\r\n                </template>\r\n\r\n                <template #end>\r\n                    <KnFabButton icon=\"fas fa-plus\" @click=\"addNewHaving\"></KnFabButton>\r\n                </template>\r\n            </Toolbar>\r\n        </template>\r\n\r\n        <Message class=\"p-mx-4\" severity=\"info\" :closable=\"false\" :style=\"QBEHavingDialogDescriptor.styles.message\">\r\n            {{ $t('qbe.having.infoMessage') }}\r\n        </Message>\r\n\r\n        <Message v-if=\"havings.length === 0\" class=\"p-mx-4 p-my-2\" severity=\"info\" :closable=\"false\" :style=\"QBEHavingDialogDescriptor.styles.message\">\r\n            {{ $t('qbe.having.noHavings') }}\r\n        </Message>\r\n        <div>\r\n            <QBEHavingCard v-for=\"having in havings\" :key=\"having.filterId\" :propHaving=\"having\" :entities=\"entities\" @removeHaving=\"removeHaving\"></QBEHavingCard>\r\n        </div>\r\n\r\n        <template #footer>\r\n            <Button class=\"kn-button kn-button--primary\" @click=\"closeDialog\"> {{ $t('common.cancel') }}</Button>\r\n            <Button class=\"kn-button kn-button--primary\" @click=\"save\"> {{ $t('common.save') }}</Button>\r\n        </template>\r\n    </Dialog>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent, PropType } from 'vue'\r\nimport { iField, iQuery, iFilter } from '../../QBE'\r\nimport Dialog from 'primevue/dialog'\r\nimport KnFabButton from '@/components/UI/KnFabButton.vue'\r\nimport Message from 'primevue/message'\r\nimport QBEHavingDialogDescriptor from './QBEHavingDialogDescriptor.json'\r\nimport QBEHavingCard from './QBEHavingCard.vue'\r\n\r\nimport cryptoRandomString from 'crypto-random-string';\r\n\r\nexport default defineComponent({\r\n    name: 'qbe-having-dialog',\r\n    components: { Dialog, KnFabButton, Message, QBEHavingCard },\r\n    props: { visible: { type: Boolean }, havingDialogData: { type: Object as PropType<{ field: iField; query: iQuery }> }, entities: { type: Array } },\r\n    emits: ['save', 'close'],\r\n    data() {\r\n        return {\r\n            QBEHavingDialogDescriptor,\r\n            havings: [] as any[],\r\n            nextHavingIndex: '-1' as string\r\n        }\r\n    },\r\n    watch: {\r\n        havingDialogData() {\r\n            this.loadData()\r\n        }\r\n    },\r\n    created() {\r\n        this.loadData()\r\n    },\r\n    methods: {\r\n        loadData() {\r\n            if (!this.havingDialogData || !this.havingDialogData.field || !this.havingDialogData.query) return\r\n\r\n            this.havings = []\r\n            this.havingDialogData.query.havings.forEach((having: iFilter) => {\r\n                if (having.leftOperandValue === this.havingDialogData?.field.id) {\r\n                    this.havings.push({ ...having })\r\n                }\r\n            })\r\n            this.nextHavingIndex = cryptoRandomString({length: 16, type: 'base64'})\r\n        },\r\n        addNewHaving() {\r\n            const field = this.havingDialogData?.field\r\n            if (field) {\r\n                this.havings.push({\r\n                    filterId: 'having' + this.nextHavingIndex,\r\n                    filterDescripion: 'having' + this.nextHavingIndex,\r\n                    filterInd: this.nextHavingIndex,\r\n                    promptable: false,\r\n                    leftOperandAggregator: field.funct,\r\n                    leftOperandValue: field.id,\r\n                    leftOperandDescription: field.entity + ': ' + field.funct + ' (' + field.alias + ')',\r\n                    leftOperandLongDescription: field.entity + ': ' + field.funct + ' (' + field.alias + ')',\r\n                    leftOperandType: field.type === 'inline.calculated.field' || field.attributes?.type === 'inLineCalculatedField' ? 'inline.calculated.field' : 'Field Content',\r\n                    leftOperandDefaultValue: null,\r\n                    leftOperandLastValue: null,\r\n                    operator: 'EQUALS TO',\r\n                    rightOperandAggregator: '',\r\n                    rightOperandValue: [],\r\n                    rightOperandDescription: '',\r\n                    rightOperandLongDescription: '',\r\n                    rightOperandType: 'Static Content',\r\n                    rightType: '',\r\n                    rightOperandDefaultValue: [''],\r\n                    rightOperandLastValue: [''],\r\n                    booleanConnector: 'AND',\r\n                    deleteButton: false,\r\n                    color: '',\r\n                    entity: field.entity\r\n                })\r\n                this.nextHavingIndex = cryptoRandomString({length: 16, type: 'base64'})\r\n            }\r\n        },\r\n        removeHaving(having: iFilter) {\r\n            const index = this.havings.findIndex((el: iFilter) => el.filterId === having.filterId)\r\n            if (index !== -1) this.havings.splice(index, 1)\r\n        },\r\n        closeDialog() {\r\n            this.$emit('close')\r\n        },\r\n        save() {\r\n            this.$emit('save', this.havings, this.havingDialogData?.field)\r\n        }\r\n    }\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n#qbe-having-dialog .p-dialog-header,\r\n#qbe-having-dialog .p-dialog-content {\r\n    padding: 0;\r\n}\r\n#qbe-having-dialog .p-dialog-content {\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex: 1;\r\n}\r\n</style>\r\n","<template>\r\n    <DataTable class=\"p-datatable-sm kn-table  kn-height-full\" :value=\"rows\" responsiveLayout=\"scroll\" @rowReorder=\"onRowReorder\" @drop=\"onDrop($event)\" @dragover.prevent @dragenter.prevent>\r\n        <Column :rowReorder=\"true\" :style=\"QBESimpleTableDescriptor.style.firstColumn\" />\r\n        <Column v-for=\"column in QBESimpleTableDescriptor.columns\" :key=\"column.header\" :field=\"column.field\" :style=\"column.style\" :sortable=\"true\">\r\n            <template #header>\r\n                <span v-tooltip.top=\"getHeaderTooltip(column)\">{{ $t(column.header) }}</span>\r\n            </template>\r\n            <template #body=\"slotProps\">\r\n                <InputText v-if=\"column.field === 'alias'\" class=\"kn-material-input p-inputtext-sm qbe-simple-table-input\" v-model=\"slotProps.data[slotProps.column.props.field]\" @change=\"$emit('fieldAliasChanged', slotProps.data)\"></InputText>\r\n                <Checkbox v-else-if=\"column.field === 'group'\" v-model=\"slotProps.data[slotProps.column.props.field]\" :binary=\"true\" @change=\"onGroupingChanged(slotProps.data)\"></Checkbox>\r\n                <Dropdown v-else-if=\"column.field === 'order'\" class=\"kn-material-input\" v-model=\"slotProps.data[slotProps.column.props.field]\" :options=\"QBESimpleTableDescriptor.orderingOptions\" />\r\n                <Dropdown v-else-if=\"column.field === 'funct'\" class=\"kn-material-input\" v-model=\"slotProps.data[slotProps.column.props.field]\" :options=\"getAttributeOptions(slotProps.data)\" :disabled=\"slotProps.data['group']\" />\r\n                <Checkbox v-else-if=\"column.field === 'visible'\" class=\"p-ml-3\" v-model=\"slotProps.data[slotProps.column.props.field]\" :binary=\"true\" @change=\"$emit('columnVisibilityChanged')\"></Checkbox>\r\n                <Checkbox v-else-if=\"column.field === 'inUse'\" class=\"p-ml-2\" v-model=\"slotProps.data[slotProps.column.props.field]\" :binary=\"true\"></Checkbox>\r\n                <span v-else v-tooltip.top=\"slotProps.data[slotProps.column.props.field]\" class=\"kn-truncated\">{{ slotProps.data[slotProps.column.props.field] }}</span>\r\n            </template>\r\n        </Column>\r\n        <Column :style=\"QBESimpleTableDescriptor.style.lastColumn\">\r\n            <template #body=\"slotProps\">\r\n                <Button icon=\"fas fa-ellipsis-v\" class=\"p-button-link\" @click=\"toggle($event, slotProps.data, slotProps.index)\" data-test=\"menu-toggle\" />\r\n                <Menu ref=\"menu\" :model=\"menuItems\" :popup=\"true\" />\r\n            </template>\r\n        </Column>\r\n    </DataTable>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent, PropType } from 'vue'\r\nimport { iQuery, iField } from '../../QBE'\r\nimport Checkbox from 'primevue/checkbox'\r\nimport Column from 'primevue/column'\r\nimport DataTable from 'primevue/datatable'\r\nimport Dropdown from 'primevue/dropdown'\r\nimport Menu from 'primevue/menu'\r\nimport QBESimpleTableDescriptor from './QBESimpleTableDescriptor.json'\r\n\r\nexport default defineComponent({\r\n    name: 'qbe-simple-table',\r\n    props: { query: { type: Object as PropType<iQuery> } },\r\n    components: { Checkbox, Column, DataTable, Dropdown, Menu },\r\n    emits: ['columnVisibilityChanged', 'openFilterDialog', 'openHavingDialog', 'entityDropped', 'groupingChanged', 'openCalculatedFieldDialog', 'fieldDeleted'],\r\n    data() {\r\n        return {\r\n            QBESimpleTableDescriptor,\r\n            selectedQuery: {} as iQuery,\r\n            rows: [] as iField[],\r\n            menuItems: [] as any[]\r\n        }\r\n    },\r\n    computed: {\r\n        queryFields(): iField[] {\r\n            return this.query ? this.query.fields : []\r\n        }\r\n    },\r\n    watch: {\r\n        queryFields() {\r\n            this.loadData()\r\n        }\r\n    },\r\n    created() {\r\n        this.loadData()\r\n    },\r\n    methods: {\r\n        loadData() {\r\n            if (!this.query) return\r\n\r\n            this.selectedQuery = this.query\r\n            this.rows = this.selectedQuery.fields as iField[]\r\n        },\r\n        getAttributeOptions(row: iField) {\r\n            return row.fieldType === 'attribute' ? this.QBESimpleTableDescriptor.attributeAggregationOptions : this.QBESimpleTableDescriptor.aggregationOptions\r\n        },\r\n        getHeaderTooltip(column: { field: string; header: string; style: string }) {\r\n            switch (column.field) {\r\n                case 'funct':\r\n                    return this.$t('qbe.simpleTable.aggregation')\r\n                case 'visible':\r\n                    return this.$t('qbe.simpleTable.showField')\r\n                default:\r\n                    return this.$t(column.header)\r\n            }\r\n        },\r\n        toggle(event: any, field: iField, index: number) {\r\n            this.createMenuItems(field, index)\r\n            const menu = this.$refs.menu as any\r\n            menu?.toggle(event)\r\n        },\r\n        createMenuItems(field: iField, index: number) {\r\n            this.menuItems = []\r\n            this.menuItems.push({ icon: 'pi pi-filter', label: this.$t('common.filters'), command: () => this.openFiltersDialog(field) })\r\n            if ((field.funct && field.funct !== 'NONE') || (field.type === 'inline.calculated.field' && field.fieldType === 'measure')) {\r\n                this.menuItems.push({ icon: 'pi pi-filter', label: this.$t('qbe.simpleTable.havings'), command: () => this.openHavingsDialog(field) })\r\n            }\r\n            if (field.type === 'inline.calculated.field') {\r\n                this.menuItems.push({ icon: 'fas fa-calculator', label: this.$t('qbe.detailView.modifyCalcField'), command: () => this.openCalculatedFieldDialog(field, index) })\r\n            }\r\n            this.menuItems.push({ icon: 'pi pi-trash', label: this.$t('common.delete'), command: () => this.deleteColumn(index) })\r\n        },\r\n        onRowReorder(event: any) {\r\n            this.rows = event.value\r\n            this.selectedQuery.fields = this.rows\r\n        },\r\n        openFiltersDialog(field: iField) {\r\n            this.$emit('openFilterDialog', field)\r\n        },\r\n        openHavingsDialog(field: iField) {\r\n            this.$emit('openHavingDialog', { field: field, query: this.selectedQuery })\r\n        },\r\n        openCalculatedFieldDialog(field: iField, index) {\r\n            this.$emit('openCalculatedFieldDialog', field, index)\r\n        },\r\n        onDrop(event) {\r\n            const data = JSON.parse(event.dataTransfer.getData('text/plain'))\r\n            this.$emit('entityDropped', data)\r\n        },\r\n        onGroupingChanged(field: iField) {\r\n            field['funct'] = 'NONE'\r\n            this.$emit('groupingChanged', field)\r\n        },\r\n        deleteColumn(index: number) {\r\n            this.$emit('fieldDeleted', { ...this.rows[index] })\r\n            this.rows.splice(index, 1)\r\n        }\r\n    }\r\n})\r\n</script>\r\n","<template>\r\n    <Dialog id=\"qbe-filter-dialog\" class=\"p-fluid kn-dialog--toolbar--primary\" :visible=\"visible\" :modal=\"true\" :closable=\"false\">\r\n        <template #header>\r\n            <Toolbar class=\"kn-toolbar kn-toolbar--primary p-p-0 p-m-2 p-col-12\">\r\n                <template #start>\r\n                    <span>{{ $t('qbe.detailView.toolbarMenu.sql') }}</span>\r\n                </template>\r\n            </Toolbar>\r\n        </template>\r\n\r\n        <div v-html=\"sqlFormats.sqlFormatted\"></div>\r\n\r\n        <template #footer>\r\n            <Button class=\"kn-button kn-button--primary\" @click=\"$emit('close')\"> {{ $t('common.ok') }}</Button>\r\n        </template>\r\n    </Dialog>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport Dialog from 'primevue/dialog'\r\n\r\nexport default defineComponent({\r\n    name: 'olap-custom-view-save-dialog',\r\n    components: { Dialog },\r\n    props: { sqlData: Object, visible: Boolean },\r\n    data() {\r\n        return {\r\n            sqlFormats: {} as any\r\n        }\r\n    },\r\n    watch: {\r\n        sqlData() {\r\n            this.sqlFormats = this.sqlData\r\n        }\r\n    },\r\n    created() {\r\n        this.sqlFormats = this.sqlData\r\n    },\r\n    methods: {}\r\n})\r\n</script>\r\n","<template>\r\n    <Dialog id=\"qbe-filter-dialog\" class=\"p-fluid kn-dialog--toolbar--primary\" :style=\"relationDescriptor.entityRelation.style\" :visible=\"visible\" :modal=\"true\" :closable=\"false\">\r\n        <template #header>\r\n            <Toolbar class=\"kn-toolbar kn-toolbar--primary\">\r\n                <template #start>\r\n                    {{ propEntity.text }}\r\n                </template>\r\n            </Toolbar>\r\n        </template>\r\n\r\n        <DataTable class=\"p-datatable-sm kn-table p-m-2\" :value=\"propEntity.relation\" responsiveLayout=\"scroll\" stripedRows>\r\n            <template #empty>\r\n                {{ $t('qbe.entities.relationDialog.noRelations') }}\r\n            </template>\r\n            <Column class=\"kn-truncated\" v-for=\"column in relationDescriptor.entityRelation.columns\" :key=\"column.field\" :field=\"column.field\" :header=\"$t(column.header)\" :sortable=\"true\" />\r\n        </DataTable>\r\n\r\n        <template #footer>\r\n            <Button class=\"kn-button kn-button--primary\" @click=\"$emit('close')\"> {{ $t('common.ok') }}</Button>\r\n        </template>\r\n    </Dialog>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport Dialog from 'primevue/dialog'\r\nimport DataTable from 'primevue/datatable'\r\nimport Column from 'primevue/column'\r\nimport relationDescriptor from './QBEDialogsDescriptor.json'\r\n\r\nexport default defineComponent({\r\n    name: 'olap-custom-view-save-dialog',\r\n    components: { Dialog, DataTable, Column },\r\n    props: { propEntity: Object, visible: Boolean },\r\n    data() {\r\n        return {\r\n            relationDescriptor\r\n        }\r\n    }\r\n})\r\n</script>\r\n","<template>\r\n    <Dialog id=\"qbe-filter-dialog\" :style=\"descriptor.entityRelation.style\" :visible=\"visible\" :modal=\"true\" :closable=\"false\">\r\n        <template #header>\r\n            <Toolbar class=\"kn-toolbar kn-toolbar--primary kn-width-full\">\r\n                <template #start>\r\n                    {{ $t('common.parameters') }}\r\n                </template>\r\n                <template #end>\r\n                    <KnFabButton icon=\"fas fa-plus\" @click=\"addNewParam\" />\r\n                </template>\r\n            </Toolbar>\r\n        </template>\r\n        <Message class=\"p-mx-2\" v-if=\"hasDuplicates\" severity=\"info\" :closable=\"false\">\r\n            {{ $t('qbe.detailView.parameterDuplicates') }}\r\n        </Message>\r\n        <DataTable class=\"p-datatable-sm kn-table p-m-2\" :value=\"dataset.pars\" responsiveLayout=\"scroll\">\r\n            <template #empty>\r\n                {{ $t('managers.datasetManagement.tableEmpty') }}\r\n            </template>\r\n            <Column field=\"name\" :header=\"$t('kpi.alert.name')\" :sortable=\"true\">\r\n                <template #body=\"{data}\">\r\n                    <InputText class=\"kn-material-input\" v-model=\"data.name\" />\r\n                </template>\r\n            </Column>\r\n            <Column field=\"type\" :header=\"$t('kpi.alert.type')\" :sortable=\"true\">\r\n                <template #body=\"{data}\">\r\n                    <Dropdown id=\"scope\" class=\"kn-material-input\" :options=\"datasetParamTypes\" optionLabel=\"name\" optionValue=\"value\" v-model=\"data.type\" />\r\n                </template>\r\n            </Column>\r\n            <Column field=\"defaultValue\" :header=\"$t('managers.driversManagement.useModes.defaultValue')\" :sortable=\"true\">\r\n                <template #body=\"{data}\">\r\n                    <InputText class=\"kn-material-input\" v-model=\"data.defaultValue\" @change=\"onDefaultValueChange(data)\" />\r\n                </template>\r\n            </Column>\r\n            <Column field=\"multiValue\" :header=\"$t('managers.profileAttributesManagement.form.multiValue')\" :sortable=\"true\">\r\n                <template #body=\"{data}\">\r\n                    <Checkbox v-model=\"data.multiValue\" :binary=\"true\" />\r\n                </template>\r\n            </Column>\r\n            <Column @rowClick=\"false\">\r\n                <template #header>\r\n                    <Button icon=\"fas fa-eraser\" class=\"p-button-link\" @click=\"removeAllParams\" />\r\n                </template>\r\n                <template #body=\"slotProps\">\r\n                    <Button icon=\"fas fa-trash\" class=\"p-button-link\" @click=\"deleteParam(slotProps)\" />\r\n                </template>\r\n            </Column>\r\n        </DataTable>\r\n\r\n        <template #footer>\r\n            <Button class=\"kn-button kn-button--secondary\" @click=\"cancelChanges\"> {{ $t('common.cancel') }}</Button>\r\n            <Button class=\"kn-button kn-button--primary\" :disabled=\"hasDuplicates\" @click=\"saveParameters\"> {{ $t('common.save') }}</Button>\r\n        </template>\r\n    </Dialog>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport KnFabButton from '@/components/UI/KnFabButton.vue'\r\nimport Message from 'primevue/message'\r\nimport Dialog from 'primevue/dialog'\r\nimport DataTable from 'primevue/datatable'\r\nimport Column from 'primevue/column'\r\nimport Dropdown from 'primevue/dropdown'\r\nimport Checkbox from 'primevue/checkbox'\r\nimport descriptor from './QBEDialogsDescriptor.json'\r\n\r\nexport default defineComponent({\r\n    name: 'olap-custom-view-save-dialog',\r\n    components: { KnFabButton, Dialog, Message, Dropdown, DataTable, Column, Checkbox },\r\n    props: { propDataset: { type: Object, required: true }, visible: Boolean },\r\n    emits: ['close', 'save'],\r\n    computed: {\r\n        hasDuplicates(): any {\r\n            var hasDuplicate = false\r\n            this.dataset.pars\r\n                .map((param) => param.name)\r\n                .sort()\r\n                .sort((a, b) => {\r\n                    if (a === b) hasDuplicate = true\r\n                })\r\n            return hasDuplicate\r\n        }\r\n    },\r\n\r\n    data() {\r\n        return {\r\n            descriptor,\r\n            dataset: {} as any,\r\n            initialParsState: [] as any,\r\n            datasetParamTypes: descriptor.paramDialog.datasetParamTypes\r\n        }\r\n    },\r\n    watch: {\r\n        propDataset() {\r\n            this.dataset = this.propDataset\r\n            this.initialParsState = JSON.parse(JSON.stringify(this.propDataset.pars))\r\n        }\r\n    },\r\n    created() {\r\n        this.dataset = this.propDataset\r\n        this.initialParsState = JSON.parse(JSON.stringify(this.propDataset.pars))\r\n    },\r\n    methods: {\r\n        addNewParam() {\r\n            if (this.dataset.isPersisted) {\r\n                this.$confirm.require({\r\n                    message: this.$t('managers.datasetManagement.disablePersistenceMsg'),\r\n                    header: this.$t('managers.datasetManagement.disablePersistence'),\r\n                    icon: 'pi pi-exclamation-triangle',\r\n                    accept: () => {\r\n                        this.dataset.isPersisted = false\r\n                        this.dataset.persistTableName = null\r\n                        this.insertParameter()\r\n                    }\r\n                })\r\n            } else {\r\n                this.insertParameter()\r\n            }\r\n        },\r\n        insertParameter() {\r\n            this.dataset.pars ? '' : (this.dataset.pars = [])\r\n            const newParam = { ...descriptor.paramDialog.newParam }\r\n            this.dataset.pars.push(newParam)\r\n        },\r\n        deleteParam(removedParam) {\r\n            this.$confirm.require({\r\n                message: this.$t('common.toast.deleteMessage'),\r\n                header: this.$t('common.uppercaseDelete'),\r\n                icon: 'pi pi-exclamation-triangle',\r\n                accept: () => (this.dataset.pars = this.dataset.pars.filter((paramToRemove) => removedParam.data.name !== paramToRemove.name))\r\n            })\r\n        },\r\n        removeAllParams() {\r\n            this.$confirm.require({\r\n                message: this.$t('managers.datasetManagement.deleteAllParamsMsg'),\r\n                header: this.$t('managers.datasetManagement.deleteAllParams'),\r\n                icon: 'pi pi-exclamation-triangle',\r\n                accept: () => (this.dataset.pars = [])\r\n            })\r\n        },\r\n        cancelChanges() {\r\n            this.dataset.pars = JSON.parse(JSON.stringify(this.initialParsState))\r\n            this.$emit('close')\r\n        },\r\n        onDefaultValueChange(parameter: any) {\r\n            parameter.defaultValueChanged = true\r\n        },\r\n        saveParameters() {\r\n            this.dataset.pars?.forEach((parameter: any) => {\r\n                if (parameter.defaultValueChanged) {\r\n                    delete parameter.value\r\n                    delete parameter.defaultValueChanged\r\n                }\r\n            })\r\n            this.$emit('save')\r\n        }\r\n    }\r\n})\r\n</script>\r\n","<template>\r\n    <Card>\r\n        <template #content>\r\n            <form class=\"p-fluid p-formgrid p-grid\">\r\n                <div class=\"p-field p-mt-1 p-col-6\">\r\n                    <span class=\"p-float-label\">\r\n                        <InputText id=\"label\" class=\"kn-material-input\" type=\"text\" maxLength=\"50\" v-model=\"v$.dataset.label.$model\" :class=\"{ 'p-invalid': v$.dataset.label.$invalid && v$.dataset.label.$dirty }\" @blur=\"v$.dataset.label.$touch()\" @change=\"$emit('touched')\" data-test=\"label-input\" />\r\n                        <label for=\"label\" class=\"kn-material-input-label\"> {{ $t('common.label') }} * </label>\r\n                    </span>\r\n                    <KnValidationMessages class=\"p-mt-1\" :vComp=\"v$.dataset.label\" :additionalTranslateParams=\"{ fieldName: $t('common.label') }\" />\r\n                </div>\r\n                <div class=\"p-field p-mt-1 p-col-6\">\r\n                    <span class=\"p-float-label\">\r\n                        <InputText id=\"name\" class=\"kn-material-input\" type=\"text\" maxLength=\"50\" v-model=\"v$.dataset.name.$model\" :class=\"{ 'p-invalid': v$.dataset.name.$invalid && v$.dataset.name.$dirty }\" @blur=\"v$.dataset.name.$touch()\" @change=\"$emit('touched')\" data-test=\"name-input\" />\r\n                        <label for=\"name\" class=\"kn-material-input-label\"> {{ $t('common.name') }} * </label>\r\n                    </span>\r\n                    <KnValidationMessages class=\"p-mt-1\" :vComp=\"v$.dataset.name\" :additionalTranslateParams=\"{ fieldName: $t('common.name') }\" />\r\n                </div>\r\n                <div class=\"p-field p-mt-1 p-col-12\">\r\n                    <span class=\"p-float-label\">\r\n                        <InputText\r\n                            id=\"description\"\r\n                            class=\"kn-material-input\"\r\n                            type=\"text\"\r\n                            maxLength=\"150\"\r\n                            v-model=\"v$.dataset.description.$model\"\r\n                            :class=\"{ 'p-invalid': v$.dataset.description.$invalid && v$.dataset.description.$dirty }\"\r\n                            @blur=\"v$.dataset.description.$touch()\"\r\n                            @change=\"$emit('touched')\"\r\n                            data-test=\"description-input\"\r\n                        />\r\n                        <label for=\"description\" class=\"kn-material-input-label\"> {{ $t('common.description') }} </label>\r\n                    </span>\r\n                    <KnValidationMessages class=\"p-mt-1\" :vComp=\"v$.dataset.description\" :additionalTranslateParams=\"{ fieldName: $t('common.description') }\" />\r\n                </div>\r\n                <div v-if=\"qbeAdvancedSaving\" class=\"p-field p-mt-1 p-col-6\">\r\n                    <span class=\"p-float-label\">\r\n                        <Dropdown\r\n                            id=\"scope\"\r\n                            class=\"kn-material-input\"\r\n                            :options=\"scopeTypes\"\r\n                            optionLabel=\"VALUE_CD\"\r\n                            optionValue=\"VALUE_CD\"\r\n                            v-model=\"v$.dataset.scopeCd.$model\"\r\n                            :class=\"{\r\n                                'p-invalid': v$.dataset.scopeCd.$invalid && v$.dataset.scopeCd.$dirty\r\n                            }\"\r\n                            @before-show=\"v$.dataset.scopeCd.$touch()\"\r\n                            @change=\"updateIdFromCd(this.scopeTypes, 'scopeId', $event.value), $emit('touched')\"\r\n                            data-test=\"scope-input\"\r\n                        />\r\n                        <label for=\"scope\" class=\"kn-material-input-label\"> {{ $t('managers.datasetManagement.scope') }} * </label>\r\n                    </span>\r\n                    <KnValidationMessages\r\n                        :vComp=\"v$.dataset.scopeCd\"\r\n                        :additionalTranslateParams=\"{\r\n                            fieldName: $t('managers.datasetManagement.scope')\r\n                        }\"\r\n                    />\r\n                </div>\r\n                <div v-if=\"qbeAdvancedSaving\" class=\"p-field p-mt-1 p-col-6\">\r\n                    <span class=\"p-float-label\">\r\n                        <Dropdown\r\n                            id=\"category\"\r\n                            class=\"kn-material-input\"\r\n                            :options=\"categoryTypes\"\r\n                            optionLabel=\"VALUE_CD\"\r\n                            optionValue=\"VALUE_CD\"\r\n                            v-model=\"v$.dataset.catTypeVn.$model\"\r\n                            :class=\"{\r\n                                'p-invalid': v$.dataset.catTypeVn.$invalid && v$.dataset.catTypeVn.$dirty\r\n                            }\"\r\n                            @before-show=\"v$.dataset.catTypeVn.$touch()\"\r\n                            @change=\"updateIdFromCd(this.categoryTypes, 'catTypeId', $event.value), $emit('touched')\"\r\n                            data-test=\"category-input\"\r\n                        />\r\n                        <label v-if=\"this.dataset.scopeCd == 'USER'\" for=\"category\" class=\"kn-material-input-label\"> {{ $t('common.category') }} </label>\r\n                        <label v-else for=\"category\" class=\"kn-material-input-label\"> {{ $t('common.category') }} * </label>\r\n                    </span>\r\n                    <KnValidationMessages\r\n                        :vComp=\"v$.dataset.catTypeVn\"\r\n                        :additionalTranslateParams=\"{\r\n                            fieldName: $t('managers.datasetManagement.scope')\r\n                        }\"\r\n                    />\r\n                </div>\r\n            </form>\r\n        </template>\r\n    </Card>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport { createValidations, ICustomValidatorMap } from '@/helpers/commons/validationHelper'\r\nimport useValidate from '@vuelidate/core'\r\nimport KnValidationMessages from '@/components/UI/KnValidatonMessages.vue'\r\nimport Card from 'primevue/card'\r\nimport Dropdown from 'primevue/dropdown'\r\nimport descriptor from './QBESavingDialogDescriptor.json'\r\nimport mainStore from '../../../../App.store'\r\n\r\nexport default defineComponent({\r\n    name: 'olap-custom-view-save-dialog',\r\n    components: { Card, Dropdown, KnValidationMessages },\r\n    props: { propDataset: Object, scopeTypes: Array, categoryTypes: Array },\r\n    computed: {\r\n        qbeAdvancedSaving(): any {\r\n            return (this.store.$state as any).user.functionalities.includes('QbeAdvancedSaving')\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            v$: useValidate() as any,\r\n            dataset: {} as any,\r\n            descriptor\r\n        }\r\n    },\r\n    setup() {\r\n        const store = mainStore()\r\n        return { store }\r\n    },\r\n    created() {\r\n        this.dataset = this.propDataset\r\n    },\r\n    watch: {\r\n        selectedDataset() {\r\n            this.dataset = this.propDataset\r\n        }\r\n    },\r\n    validations() {\r\n        const catTypeRequired = (value) => {\r\n            return this.dataset.scopeCd == 'USER' || value\r\n        }\r\n        const customValidators: ICustomValidatorMap = { 'cat-type-required': catTypeRequired }\r\n        const validationObject = { dataset: createValidations('dataset', descriptor.validations.dataset, customValidators) }\r\n        return validationObject\r\n    },\r\n    methods: {\r\n        updateIdFromCd(optionsArray, fieldToUpdate, updatedField) {\r\n            const selectedField = optionsArray.find((option) => option.VALUE_CD === updatedField)\r\n            selectedField ? (this.dataset[fieldToUpdate] = selectedField.VALUE_ID) : ''\r\n        }\r\n    }\r\n})\r\n</script>\r\n<style lang=\"scss\">\r\n#qbe-saving-dialog .p-dialog-content {\r\n    padding: 0;\r\n}\r\n</style>\r\n","<template>\r\n    <Card class=\"p-m-2\">\r\n        <template #content>\r\n            <div class=\"date-picker-container p-ml-2 p-mb-5\">\r\n                <div class=\"p-field p-grid\">\r\n                    <label for=\"startDate\" class=\"kn-material-input-label p-col-12  p-md-1 p-mb-md-0\"> {{ $t('cron.startDate') }}: </label>\r\n                    <span>\r\n                        <Calendar\r\n                            id=\"startDate\"\r\n                            class=\"kn-material-input\"\r\n                            v-model=\"startTemp\"\r\n                            style=\"width:20rem\"\r\n                            :class=\"{\r\n                                'p-invalid': !validDates\r\n                            }\"\r\n                            :showIcon=\"true\"\r\n                            :manualInput=\"true\"\r\n                            @date-select=\"setDate($event, 'startDate')\"\r\n                        />\r\n                        <div v-if=\"!validDates\" class=\"p-error p-grid p-mt-1\">\r\n                            <small class=\"p-col-12\">\r\n                                {{ $t('kpi.kpiScheduler.dateError') }}\r\n                            </small>\r\n                        </div>\r\n                    </span>\r\n                </div>\r\n                <div class=\"p-field p-grid\">\r\n                    <label for=\"endDate\" class=\"kn-material-input-label p-col-12  p-md-1 p-mb-md-0\"> {{ $t('cron.endDate') }}: </label>\r\n                    <span>\r\n                        <Calendar\r\n                            id=\"endDate\"\r\n                            class=\"kn-material-input\"\r\n                            v-model=\"endTemp\"\r\n                            style=\"width:20rem\"\r\n                            :class=\"{\r\n                                'p-invalid': !validDates\r\n                            }\"\r\n                            :showIcon=\"true\"\r\n                            :manualInput=\"true\"\r\n                            :showButtonBar=\"true\"\r\n                            @date-select=\"setDate($event, 'endDate')\"\r\n                        />\r\n                        <div v-if=\"!validDates\" class=\"p-error p-grid p-mt-1\">\r\n                            <small class=\"p-col-12\">\r\n                                {{ $t('kpi.kpiScheduler.dateError') }}\r\n                            </small>\r\n                        </div>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n            <div class=\"p-d-flex p-grid p-mt-5\">\r\n                <div class=\"p-mx-2\">\r\n                    <label for=\"repeatInterval\" class=\"kn-material-input-label p-m-2\"> {{ $t('managers.functionalitiesManagement.execution') }}: </label>\r\n                    <span>\r\n                        <Dropdown id=\"repeatInterval\" class=\"kn-material-input\" :style=\"knCronDescriptor.style.intervalInput\" v-model=\"scheduling.repeatInterval\" optionLabel=\"name\" optionValue=\"value\" :options=\"knCronDescriptor.intervals\" @change=\"updateCronInterval\" />\r\n                    </span>\r\n                </div>\r\n\r\n                <div class=\"p-field\" v-if=\"scheduling.repeatInterval === 'week'\">\r\n                    <label for=\"weekdays\" class=\"kn-material-input-label \"> {{ $t('cron.inWeekday') }}</label>\r\n                    <MultiSelect id=\"weekdays\" class=\"kn-material-input p-mx-2\" style=\"max-width:8rem\" v-model=\"scheduling.weekdaysSelected\" :options=\"weekdays\" optionLabel=\"label\" optionValue=\"value\" :placeholder=\"$t('common.default')\" @change=\"formatCronForSave\" />\r\n                </div>\r\n                <div class=\"p-field\" v-if=\"scheduling.repeatInterval === 'month'\">\r\n                    <label for=\"months\" class=\"kn-material-input-label\"> {{ $t('cron.inMonth') }} </label>\r\n                    <MultiSelect id=\"months\" class=\"kn-material-input p-mx-2\" style=\"max-width:8rem\" v-model=\"scheduling.monthsSelected\" :options=\"months\" optionLabel=\"label\" optionValue=\"value\" :placeholder=\"$t('common.default')\" @change=\"formatCronForSave\" />\r\n                </div>\r\n                <div class=\"p-field\" v-if=\"scheduling.repeatInterval === 'day' || scheduling.repeatInterval === 'month'\">\r\n                    <label for=\"days\" class=\"kn-material-input-label  \"> {{ $t('cron.inDay') }} </label>\r\n                    <MultiSelect id=\"days\" class=\"kn-material-input p-mx-2\" style=\"max-width:8rem\" v-model=\"scheduling.daysSelected\" :options=\"days\" :placeholder=\"$t('common.default')\" @change=\"formatCronForSave\" />\r\n                </div>\r\n                <div class=\"p-field\" v-if=\"scheduling.repeatInterval && scheduling.repeatInterval != 'minute'\">\r\n                    <label for=\"hours\" class=\"kn-material-input-label\"> {{ $t('cron.inHour') }}</label>\r\n                    <MultiSelect id=\"hours\" class=\"kn-material-input p-mx-2\" style=\"max-width:8rem\" v-model=\"scheduling.hoursSelected\" :options=\"hours\" :placeholder=\"$t('common.default')\" @change=\"formatCronForSave\" />\r\n                </div>\r\n                <div class=\"p-field p-ml-2\" v-if=\"scheduling.repeatInterval\">\r\n                    <label for=\"minutes\" class=\"kn-material-input-label\"> {{ $t('cron.inMinute') }} </label>\r\n                    <MultiSelect id=\"minutes\" class=\"kn-material-input p-mx-2\" style=\"max-width:8rem\" v-model=\"scheduling.minutesSelected\" :options=\"minutes\" :placeholder=\"$t('common.default')\" @change=\"formatCronForSave\" />\r\n                </div>\r\n            </div>\r\n        </template>\r\n    </Card>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport advancedTabDescriptor from './DatasetManagementAdvancedCardDescriptor.json'\r\nimport Card from 'primevue/card'\r\nimport Calendar from 'primevue/calendar'\r\nimport MultiSelect from 'primevue/multiselect'\r\nimport knCronDescriptor from '@/components/UI/KnCron/KnCronDescriptor.json'\r\nimport Dropdown from 'primevue/dropdown'\r\nimport moment from 'moment'\r\n\r\nexport default defineComponent({\r\n    components: { Card, Calendar, MultiSelect, Dropdown },\r\n    props: {\r\n        selectedDataset: { type: Object as any },\r\n        schedulingData: { type: Object as any }\r\n    },\r\n    computed: {\r\n        validDates() {\r\n            let valid = true\r\n            const startDate = this.dataset.startDate\r\n            const now = new Date()\r\n            const endDate = this.dataset.endDate\r\n\r\n            if (endDate && endDate.valueOf() < now.valueOf()) {\r\n                valid = false\r\n            }\r\n\r\n            if (endDate && endDate.valueOf() < startDate.valueOf()) {\r\n                valid = false\r\n            }\r\n\r\n            this.$emit('cronValid', valid)\r\n            return valid\r\n        }\r\n    },\r\n    emits: ['touched', 'cronValid'],\r\n    data() {\r\n        return {\r\n            moment,\r\n            knCronDescriptor,\r\n            advancedTabDescriptor,\r\n            dataset: {} as any,\r\n            scheduling: {} as any,\r\n            nextSchedulation: null as any,\r\n            startTemp: null as any,\r\n            endTemp: null as any,\r\n            minutes: Array.from(Array(60).keys()).map(String),\r\n            hours: Array.from(Array(24).keys()).map(String),\r\n            days: Array.from({ length: 31 }, (_, i) => i + 1).map(String),\r\n            months: [\r\n                { value: '1', label: this.$t('cron.january') },\r\n                { value: '2', label: this.$t('cron.february') },\r\n                { value: '3', label: this.$t('cron.march') },\r\n                { value: '4', label: this.$t('cron.april') },\r\n                { value: '5', label: this.$t('cron.may') },\r\n                { value: '6', label: this.$t('cron.june') },\r\n                { value: '7', label: this.$t('cron.july') },\r\n                { value: '8', label: this.$t('cron.august') },\r\n                { value: '9', label: this.$t('cron.september') },\r\n                { value: '10', label: this.$t('cron.october') },\r\n                { value: '11', label: this.$t('cron.november') },\r\n                { value: '12', label: this.$t('cron.december') }\r\n            ],\r\n            weekdays: [\r\n                { value: '1', label: this.$t('cron.monday') },\r\n                { value: '2', label: this.$t('cron.tuesday') },\r\n                { value: '3', label: this.$t('cron.wednesday') },\r\n                { value: '4', label: this.$t('cron.thursday') },\r\n                { value: '5', label: this.$t('cron.friday') },\r\n                { value: '6', label: this.$t('cron.saturday') },\r\n                { value: '7', label: this.$t('cron.sunday') }\r\n            ]\r\n        }\r\n    },\r\n    created() {\r\n        this.loadData()\r\n        this.deparseScheduling()\r\n    },\r\n    watch: {\r\n        selectedDataset() {\r\n            this.loadData()\r\n            this.deparseScheduling()\r\n        }\r\n    },\r\n\r\n    methods: {\r\n        loadData() {\r\n            this.dataset = this.selectedDataset\r\n            this.scheduling = this.schedulingData\r\n            this.nextSchedulation = this.selectedDataset.schedulingCronLine\r\n            this.startTemp = this.selectedDataset.startDate ? new Date(this.selectedDataset.startDate) : null\r\n            this.endTemp = this.selectedDataset.endDate ? new Date(this.selectedDataset.endDate) : null\r\n        },\r\n        deparseScheduling() {\r\n            var cronNoSeconds = ''\r\n\r\n            if (this.dataset.isScheduled && this.dataset.schedulingCronLine) {\r\n                this.dataset.startDate = new Date(this.dataset.startDate)\r\n                this.dataset.endDate ? (this.dataset.endDate = new Date(this.dataset.endDate)) : (this.dataset.endDate = null)\r\n\r\n                var splitCron = this.dataset.schedulingCronLine.split(' ')\r\n                var selectedMinutesCronString = splitCron[1] != '*' ? splitCron[1] : null\r\n                var selectedHoursCronString = splitCron[2] != '*' ? splitCron[2] : null\r\n                var selectedDaysCronString = splitCron[3] != '*' ? splitCron[3] : null\r\n                var selectedMonthsCronString = splitCron[4] != '*' ? splitCron[4] : null\r\n                var selectedWeekdaysCronString = splitCron[5] != '*' && splitCron[5] != '?' ? splitCron[5] : null\r\n\r\n                for (let i = 1; i < splitCron.length; i++) {\r\n                    cronNoSeconds += splitCron[i] + ' '\r\n                }\r\n                this.dataset.schedulingCronLine = cronNoSeconds\r\n                this.setSchedulingValues(selectedMinutesCronString, 'minutesSelected', 'minute')\r\n                this.setSchedulingValues(selectedHoursCronString, 'hoursSelected', 'hour')\r\n                this.setSchedulingValues(selectedDaysCronString, 'daysSelected', 'day')\r\n                this.setSchedulingValues(selectedMonthsCronString, 'monthsSelected', 'month')\r\n                this.setSchedulingValues(selectedWeekdaysCronString, 'weekdaysSelected', 'week')\r\n            }\r\n        },\r\n        setSchedulingValues(cronString, valueToSet, customCheck) {\r\n            var splitValue = new Array()\r\n\r\n            if (cronString != null) {\r\n                var tempValue = cronString.split(',')\r\n\r\n                for (let i = 0; i < tempValue.length; i++) {\r\n                    splitValue.push(tempValue[i])\r\n                }\r\n\r\n                this.scheduling[valueToSet] = splitValue\r\n                this.scheduling.repeatInterval = customCheck\r\n            } else {\r\n                this.scheduling[valueToSet] = []\r\n            }\r\n        },\r\n        formatCronForSave() {\r\n            if (this.dataset.isScheduled) {\r\n                if (this.dataset.startDate == null) {\r\n                    this.dataset.startDate = new Date()\r\n                }\r\n                var repeatInterval = this.scheduling.repeatInterval\r\n\r\n                var minutesForCron = this.stringifySchedulingValues(this.scheduling.minutesSelected && this.scheduling.minutesSelected.length != 0, 'minutesSelected')\r\n                var hoursForCron = this.stringifySchedulingValues(repeatInterval != 'minute' && this.scheduling.hoursSelected && this.scheduling.hoursSelected.length != 0, 'hoursSelected')\r\n                var daysForCron = this.stringifySchedulingValues((repeatInterval === 'day' || repeatInterval === 'month') && this.scheduling.daysSelected && this.scheduling.daysSelected.length != 0, 'daysSelected')\r\n                var monthsForCron = this.stringifySchedulingValues(repeatInterval === 'month' && this.scheduling.monthsSelected.length != 0, 'monthsSelected')\r\n                var weekdaysForCron = this.stringifySchedulingValues(repeatInterval === 'week' && this.scheduling.weekdaysSelected.length != 0, 'weekdaysSelected')\r\n\r\n                if (daysForCron == '*' && weekdaysForCron != '*') {\r\n                    daysForCron = '?'\r\n                } else {\r\n                    weekdaysForCron = '?'\r\n                }\r\n\r\n                this.nextSchedulation = minutesForCron + ' ' + hoursForCron + ' ' + daysForCron + ' ' + monthsForCron + ' ' + weekdaysForCron\r\n            }\r\n        },\r\n        stringifySchedulingValues(condition, selectedValue) {\r\n            var stringValue = ''\r\n            if (condition) {\r\n                for (var i = 0; i < this.scheduling[selectedValue].length; i++) {\r\n                    stringValue += '' + this.scheduling[selectedValue][i]\r\n\r\n                    if (i < this.scheduling[selectedValue].length - 1) {\r\n                        stringValue += ','\r\n                    }\r\n                }\r\n                return stringValue\r\n            } else {\r\n                stringValue = '*'\r\n                return stringValue\r\n            }\r\n        },\r\n        setDate(event, type) {\r\n            var date = moment(event)\r\n            type === 'startDate' ? (this.dataset.startDate = date.format('YYYY-MM-DD[T]HH:mm:ss[Z]')) : (this.dataset.endDate = date.format('YYYY-MM-DD[T]HH:mm:ss[Z]'))\r\n        }\r\n    }\r\n})\r\n</script>\r\n","<template>\r\n    <Toolbar class=\"kn-toolbar kn-toolbar--secondary\">\r\n        <template #start>\r\n            <InputSwitch v-model=\"dataset.isPersistedHDFS\" class=\"p-mr-2\" @change=\"$emit('touched')\" />\r\n            <span>{{ $t('managers.datasetManagement.isPersistedHDFS') }}</span>\r\n        </template>\r\n    </Toolbar>\r\n\r\n    <div v-if=\"dataset.dsTypeCd != 'Flat'\">\r\n        <Toolbar class=\"kn-toolbar kn-toolbar--secondary p-mt-3\">\r\n            <template #start>\r\n                <InputSwitch v-model=\"dataset.isPersisted\" :disabled=\"disablePersist\" class=\"p-mr-2\" @change=\"$emit('touched')\" />\r\n                <span>{{ $t('managers.datasetManagement.isPersisted') }}</span>\r\n            </template>\r\n        </Toolbar>\r\n        <Card v-if=\"dataset.isPersisted\">\r\n            <template #content>\r\n                <form class=\"p-fluid p-formgrid p-grid\">\r\n                    <div class=\"p-field p-col-6\">\r\n                        <span class=\"p-float-label\">\r\n                            <InputText\r\n                                id=\"persistTableName\"\r\n                                class=\"kn-material-input\"\r\n                                type=\"text\"\r\n                                v-model=\"dataset.persistTableName\"\r\n                                :class=\"{\r\n                                    'p-invalid': v$.dataset.persistTableName.$invalid && v$.dataset.persistTableName.$dirty\r\n                                }\"\r\n                                @blur=\"v$.dataset.persistTableName.$touch()\"\r\n                                @change=\"$emit('touched')\"\r\n                            />\r\n                            <label for=\"persistTableName\" class=\"kn-material-input-label\"> {{ $t('managers.datasetManagement.persistTableName') }} *</label>\r\n                        </span>\r\n                        <KnValidationMessages class=\"p-mt-1\" :vComp=\"v$.dataset.persistTableName\" :additionalTranslateParams=\"{ fieldName: $t('managers.datasetManagement.persistTableName') }\" />\r\n                    </div>\r\n                </form>\r\n                <Toolbar class=\"kn-toolbar kn-toolbar--default p-mt-3\" v-if=\"dataset.isPersisted\">\r\n                    <template #start>\r\n                        <InputSwitch v-model=\"dataset.isScheduled\" class=\"p-mr-2\" @change=\"$emit('touched')\" />\r\n                        <span>{{ $t('managers.datasetManagement.isScheduled') }}</span>\r\n                    </template>\r\n                </Toolbar>\r\n                <DatasetScheduler v-if=\"dataset.isPersisted && dataset.isScheduled\" :selectedDataset=\"dataset\" :schedulingData=\"schedulingData\" />\r\n            </template>\r\n        </Card>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport { createValidations, ICustomValidatorMap } from '@/helpers/commons/validationHelper'\r\nimport useValidate from '@vuelidate/core'\r\nimport KnValidationMessages from '@/components/UI/KnValidatonMessages.vue'\r\nimport InputSwitch from 'primevue/inputswitch'\r\nimport DatasetScheduler from '@/modules/managers/datasetManagement/detailView/advancedCard/DatasetManagementScheduler.vue'\r\nimport Card from 'primevue/card'\r\nimport descriptor from './QBESavingDialogDescriptor.json'\r\n\r\nexport default defineComponent({\r\n    name: 'olap-custom-view-save-dialog',\r\n    components: { Card, KnValidationMessages, InputSwitch, DatasetScheduler },\r\n    props: { propDataset: Object, schedulingData: Object },\r\n    computed: {\r\n        disablePersist() {\r\n            if (this.dataset['pars'] && this.dataset['pars'].length > 0) {\r\n                return true\r\n            }\r\n            return false\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            v$: useValidate() as any,\r\n            dataset: {} as any,\r\n            descriptor\r\n        }\r\n    },\r\n    created() {\r\n        this.dataset = this.propDataset\r\n    },\r\n    watch: {\r\n        selectedDataset() {\r\n            this.dataset = this.propDataset\r\n        }\r\n    },\r\n    validations() {\r\n        const persistFieldsRequired = (value) => {\r\n            return !this.dataset.isPersisted || value\r\n        }\r\n        const customValidators: ICustomValidatorMap = {\r\n            'persist-field-required': persistFieldsRequired\r\n        }\r\n        const validationObject = {\r\n            dataset: createValidations('dataset', descriptor.validations.advancedTab, customValidators)\r\n        }\r\n        return validationObject\r\n    },\r\n    methods: {\r\n        updateIdFromCd(optionsArray, fieldToUpdate, updatedField) {\r\n            const selectedField = optionsArray.find((option) => option.VALUE_CD === updatedField)\r\n            selectedField ? (this.dataset[fieldToUpdate] = selectedField.VALUE_ID) : ''\r\n        }\r\n    }\r\n})\r\n</script>\r\n<style lang=\"scss\">\r\n#qbe-saving-dialog .p-dialog-content {\r\n    padding: 0;\r\n}\r\n</style>\r\n","<template>\r\n    <Card class=\"p-m-2\">\r\n        <template #header>\r\n            <Toolbar class=\"kn-toolbar kn-toolbar--secondary\">\r\n                <template #start>\r\n                    {{ $t('managers.datasetManagement.fieldsMetadata') }}\r\n                </template>\r\n            </Toolbar>\r\n        </template>\r\n        <template #content>\r\n            <DataTable class=\"p-datatable-sm kn-table kn-table-small-input\" :autoLayout=\"true\" :value=\"fieldsMetadata\" responsiveLayout=\"stack\" breakpoint=\"960px\">\r\n                <Column field=\"fieldAlias\" :header=\"$t('managers.datasetManagement.fieldAlias')\" :sortable=\"true\">\r\n                    <template #body=\"{ data }\"> {{ data.fieldAlias }} </template>\r\n                </Column>\r\n                <Column field=\"Type\" :header=\"$t('importExport.catalogFunction.column.type')\" :sortable=\"true\">\r\n                    <template #body=\"{ data }\">\r\n                        <Dropdown class=\"kn-material-input\" :style=\"linkTabDescriptor.style.maxwidth\" v-model=\"data.Type\" :options=\"valueTypes\" optionDisabled=\"disabled\" optionLabel=\"value\" optionValue=\"name\" @change=\"warnForDuplicateSpatialFields\" :disabled=\"true\" />\r\n                    </template>\r\n                </Column>\r\n                <Column field=\"fieldType\" :header=\"$t('managers.datasetManagement.fieldType')\" :sortable=\"true\">\r\n                    <template #body=\"{ data }\">\r\n                        <Dropdown class=\"kn-material-input\" :style=\"linkTabDescriptor.style.maxwidth\" v-model=\"data.fieldType\" :options=\"fieldMetadataTypes\" optionLabel=\"value\" optionValue=\"value\" @change=\"warnForDuplicateSpatialFields('fieldType')\" />\r\n                    </template>\r\n                </Column>\r\n                <Column hidden=\"true\" field=\"personal\" :header=\"$t('managers.datasetManagement.personal')\" :sortable=\"true\">\r\n                    <template #body=\"{ data }\">\r\n                        <Checkbox id=\"personal\" v-model=\"data.personal\" :binary=\"true\" @change=\"warnForDuplicateSpatialFields('personal')\" />\r\n                    </template>\r\n                </Column>\r\n                <Column hidden=\"true\" field=\"decrypt\" :header=\"$t('managers.datasetManagement.decrypt')\" :sortable=\"true\">\r\n                    <template #body=\"{ data }\">\r\n                        <Checkbox id=\"decrypt\" v-model=\"data.decrypt\" :binary=\"true\" @change=\"warnForDuplicateSpatialFields('decrypt')\" />\r\n                    </template>\r\n                </Column>\r\n                <Column hidden=\"true\" field=\"subjectId\" :header=\"$t('managers.datasetManagement.subjectId')\" :sortable=\"true\">\r\n                    <template #body=\"{ data }\">\r\n                        <Checkbox id=\"subjectId\" v-model=\"data.subjectId\" :binary=\"true\" @change=\"warnForDuplicateSpatialFields('subjectId')\" />\r\n                    </template>\r\n                </Column>\r\n            </DataTable>\r\n        </template>\r\n    </Card>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport linkTabDescriptor from '@/modules/managers/datasetManagement/detailView/metadataCard/DatasetManagementMetadataCardDescriptor.json'\r\nimport DataTable from 'primevue/datatable'\r\nimport Column from 'primevue/column'\r\nimport Dropdown from 'primevue/dropdown'\r\nimport Checkbox from 'primevue/checkbox'\r\nimport Card from 'primevue/card'\r\nimport mainStore from '../../../../App.store'\r\n\r\nexport default defineComponent({\r\n    components: { Card, Column, DataTable, Dropdown, Checkbox },\r\n    props: { propMetadata: { type: Array as any } },\r\n    emits: ['touched'],\r\n    data() {\r\n        return {\r\n            linkTabDescriptor,\r\n            fieldMetadataTypes: linkTabDescriptor.fieldsMetadataTypes,\r\n            valueTypes: linkTabDescriptor.valueTypes,\r\n            fieldsMetadata: [] as any\r\n        }\r\n    },\r\n    setup() {\r\n        const store = mainStore()\r\n        return { store }\r\n    },\r\n    created() {\r\n        this.fieldsMetadata = this.propMetadata\r\n    },\r\n    watch: {\r\n        propMetadata: {\r\n            handler() {\r\n                this.fieldsMetadata = this.propMetadata\r\n            },\r\n            deep: true\r\n        }\r\n    },\r\n\r\n    methods: {\r\n        warnForDuplicateSpatialFields() {\r\n            var numberOfSpatialAttribute = 0\r\n            for (let i = 0; i < this.fieldsMetadata.length; i++) {\r\n                if (this.fieldsMetadata[i].fieldType == 'SPATIAL_ATTRIBUTE') {\r\n                    numberOfSpatialAttribute++\r\n                    if (numberOfSpatialAttribute > 1) {\r\n                        this.store.setError({ title: this.$t('common.error.saving'), msg: this.$t('managers.datasetManagement.duplicateSpatialAttribute') })\r\n                        return\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n})\r\n</script>\r\n","<template>\r\n    <Dialog id=\"qbe-saving-dialog\" class=\"p-fluid kn-dialog--toolbar--primary\" :style=\"descriptor.dialog.style\" :visible=\"visible\" :modal=\"true\" :closable=\"false\">\r\n        <template #header>\r\n            <Toolbar class=\"kn-toolbar kn-toolbar--primary\">\r\n                <template #start>\r\n                    {{ $t('qbe.savingDialog.title') }}\r\n                </template>\r\n            </Toolbar>\r\n        </template>\r\n\r\n        <TabView class=\"tabview-custom\" v-model:activeIndex=\"activeTab\" data-test=\"tab-view\">\r\n            <TabPanel>\r\n                <template #header>\r\n                    <span>{{ $t('managers.mondrianSchemasManagement.detail.title') }}</span>\r\n                </template>\r\n                <DetailTab :propDataset=\"propDataset\" :scopeTypes=\"scopeTypes\" :categoryTypes=\"categoryTypes\" />\r\n            </TabPanel>\r\n\r\n            <TabPanel>\r\n                <template #header>\r\n                    <span>{{ $t('kpi.measureDefinition.metadata') }}</span>\r\n                </template>\r\n                <MetadataCard :propMetadata=\"propMetadata\" @touched=\"$emit('touched')\" />\r\n            </TabPanel>\r\n\r\n            <TabPanel>\r\n                <template #header>\r\n                    <span>{{ $t('qbe.savingDialog.persistence') }}</span>\r\n                </template>\r\n\r\n                <PersistenceTab :propDataset=\"propDataset\" :schedulingData=\"scheduling\" />\r\n            </TabPanel>\r\n        </TabView>\r\n\r\n        <template #footer>\r\n            <Button class=\"kn-button kn-button--secondary\" @click=\"$emit('close')\"> {{ $t('common.cancel') }}</Button>\r\n            <Button class=\"kn-button kn-button--primary\" :disabled=\"buttonDisabled\" @click=\"saveDataset\"> {{ $t('common.save') }}</Button>\r\n        </template>\r\n    </Dialog>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { AxiosResponse } from 'axios'\r\nimport { defineComponent } from 'vue'\r\nimport Dialog from 'primevue/dialog'\r\nimport TabView from 'primevue/tabview'\r\nimport TabPanel from 'primevue/tabpanel'\r\nimport DetailTab from './QBESavingDialogDetailTab.vue'\r\nimport PersistenceTab from './QBESavingDialogPersistence.vue'\r\nimport MetadataCard from './QbeSavingDialogMetadata.vue'\r\nimport useValidate from '@vuelidate/core'\r\nimport descriptor from './QBESavingDialogDescriptor.json'\r\nimport mainStore from '../../../../App.store'\r\n\r\nexport default defineComponent({\r\n    name: 'olap-custom-view-save-dialog',\r\n    components: { TabView, TabPanel, Dialog, DetailTab, PersistenceTab, MetadataCard },\r\n    props: { propDataset: { type: Object, required: true }, propMetadata: { type: Array, required: true }, visible: Boolean },\r\n    computed: {\r\n        buttonDisabled(): any {\r\n            return this.v$.$invalid\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            descriptor,\r\n            v$: useValidate() as any,\r\n            scopeTypes: [] as any,\r\n            selectedDataset: {} as any,\r\n            selectedDatasetId: null as any,\r\n            categoryTypes: [] as any,\r\n            fieldsMetadata: [] as any,\r\n            scheduling: {\r\n                repeatInterval: null as String | null\r\n            } as any\r\n        }\r\n    },\r\n    setup() {\r\n        const store = mainStore()\r\n        return { store }\r\n    },\r\n    created() {\r\n        this.getDomainData()\r\n        this.selectedDataset = this.propDataset\r\n    },\r\n    watch: {\r\n        propDataset: {\r\n            handler() {\r\n                this.selectedDataset = this.propDataset\r\n                this.setEndUserScope()\r\n            },\r\n            deep: true\r\n        }\r\n    },\r\n    methods: {\r\n        getDomainByType(type: string) {\r\n            return this.$http.get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `domains/listValueDescriptionByType?DOMAIN_TYPE=${type}`)\r\n        },\r\n        async getDomainData() {\r\n            await this.getDomainByType('DS_SCOPE').then((response: AxiosResponse<any>) => (this.scopeTypes = response.data))\r\n            await this.getDomainByType('DATASET_CATEGORY').then((response: AxiosResponse<any>) => (this.categoryTypes = response.data))\r\n        },\r\n\r\n        async saveDataset() {\r\n            let dsToSave = { ...this.selectedDataset } as any\r\n            dsToSave.pars ? '' : (dsToSave.pars = [])\r\n            dsToSave.pythonEnvironment ? (dsToSave.pythonEnvironment = JSON.stringify(dsToSave.pythonEnvironment)) : ''\r\n            dsToSave.meta ? (dsToSave.meta = await this.manageDatasetFieldMetadata(this.propMetadata)) : (dsToSave.meta = [])\r\n\r\n            dsToSave.isScheduled ? (dsToSave.schedulingCronLine = await this.formatCronForSave()) : ''\r\n\r\n            await this.$http\r\n                .post(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `1.0/datasets/`, dsToSave, {\r\n                    headers: {\r\n                        Accept: 'application/json, text/plain, */*',\r\n                        'Content-Type': 'application/json;charset=UTF-8'\r\n                    }\r\n                })\r\n                .then((response: AxiosResponse<any>) => {\r\n                    this.store.setInfo({ title: this.$t('common.toast.createTitle'), msg: this.$t('common.toast.success') })\r\n                    this.selectedDataset.meta = response.data.meta\r\n                    if (!this.selectedDataset.id) {\r\n                        this.selectedDataset.id = response.data.id\r\n                        this.$emit('created', response)\r\n                    } else this.$emit('updated')\r\n                    this.$emit('datasetSaved')\r\n                    this.$emit('close')\r\n                })\r\n                .catch()\r\n        },\r\n        async manageDatasetFieldMetadata(metadata) {\r\n            var metaToSave = metadata.map((meta: any) => {\r\n                return {\r\n                    name: meta.column,\r\n                    displayedName: meta.fieldAlias,\r\n                    type: meta.Type,\r\n                    fieldType: meta.fieldType,\r\n                    decrypt: meta.decrypt,\r\n                    personal: meta.personal,\r\n                    subjectId: meta.subjectId\r\n                }\r\n            })\r\n\r\n            return metaToSave\r\n        },\r\n        async manageDatasetFieldMetadata1(fieldsColumns) {\r\n            if (fieldsColumns.columns != undefined && fieldsColumns.columns != null) {\r\n                var columnsArray = new Array()\r\n\r\n                var columnsNames = new Array()\r\n\r\n                for (var i = 0; i < fieldsColumns.columns.length; i++) {\r\n                    var element = fieldsColumns.columns[i]\r\n                    columnsNames.push(element.column)\r\n                }\r\n\r\n                columnsNames = this.removeDuplicates(columnsNames)\r\n\r\n                for (i = 0; i < columnsNames.length; i++) {\r\n                    var columnObject = { displayedName: '', name: '', fieldType: '', type: '', personal: false, decrypt: false, subjectId: false }\r\n                    var currentColumnName = columnsNames[i]\r\n\r\n                    if (currentColumnName.indexOf(':') != -1) {\r\n                        var arr = currentColumnName.split(':')\r\n                        columnObject.displayedName = arr[1]\r\n                    } else {\r\n                        columnObject.displayedName = currentColumnName\r\n                    }\r\n\r\n                    columnObject.name = currentColumnName\r\n                    for (var j = 0; j < fieldsColumns.columns.length; j++) {\r\n                        element = fieldsColumns.columns[j]\r\n                        if (element.column == currentColumnName) {\r\n                            if (element.pname.toUpperCase() == 'type'.toUpperCase()) {\r\n                                columnObject.type = element.pvalue\r\n                            } else if (element.pname.toUpperCase() == 'fieldType'.toUpperCase()) {\r\n                                columnObject.fieldType = element.pvalue\r\n                            } else if (element.pname.toUpperCase() == 'personal'.toUpperCase()) {\r\n                                columnObject.personal = element.pvalue\r\n                            } else if (element.pname.toUpperCase() == 'decrypt'.toUpperCase()) {\r\n                                columnObject.decrypt = element.pvalue\r\n                            } else if (element.pname.toUpperCase() == 'subjectId'.toUpperCase()) {\r\n                                columnObject.subjectId = element.pvalue\r\n                            }\r\n                        }\r\n                    }\r\n                    columnsArray.push(columnObject)\r\n                }\r\n\r\n                return columnsArray\r\n            }\r\n        },\r\n        removeDuplicates(array) {\r\n            var index = {}\r\n            for (var i = array.length - 1; i >= 0; i--) {\r\n                if (array[i] in index) {\r\n                    array.splice(i, 1)\r\n                } else {\r\n                    index[array[i]] = true\r\n                }\r\n            }\r\n            return array\r\n        },\r\n        async formatCronForSave() {\r\n            if (this.selectedDataset.isScheduled) {\r\n                if (this.selectedDataset.startDate == null) {\r\n                    this.selectedDataset.startDate = new Date()\r\n                }\r\n                var repeatInterval = this.scheduling.repeatInterval\r\n                var finalCronString = ''\r\n                var secondsForCron = 0\r\n                var minutesForCron = this.stringifySchedulingValues(this.scheduling.minutesSelected && this.scheduling.minutesSelected.length != 0, 'minutesSelected')\r\n                var hoursForCron = this.stringifySchedulingValues(repeatInterval != 'minute' && this.scheduling.hoursSelected && this.scheduling.hoursSelected.length != 0, 'hoursSelected')\r\n                var daysForCron = this.stringifySchedulingValues((repeatInterval === 'day' || repeatInterval === 'month') && this.scheduling.daysSelected && this.scheduling.daysSelected.length != 0, 'daysSelected')\r\n                var monthsForCron = this.stringifySchedulingValues(repeatInterval === 'month' && this.scheduling.monthsSelected && this.scheduling.monthsSelected.length != 0, 'monthsSelected')\r\n                var weekdaysForCron = this.stringifySchedulingValues(repeatInterval === 'week' && this.scheduling.weekdaysSelected && this.scheduling.weekdaysSelected.length != 0, 'weekdaysSelected')\r\n\r\n                if (daysForCron == '*' && weekdaysForCron != '*') {\r\n                    daysForCron = '?'\r\n                } else {\r\n                    weekdaysForCron = '?'\r\n                }\r\n                finalCronString = minutesForCron + ' ' + hoursForCron + ' ' + daysForCron + ' ' + monthsForCron + ' ' + weekdaysForCron\r\n\r\n                return secondsForCron + ' ' + finalCronString\r\n            }\r\n        },\r\n        stringifySchedulingValues(condition, selectedValue) {\r\n            var stringValue = ''\r\n            if (condition) {\r\n                for (var i = 0; i < this.scheduling[selectedValue].length; i++) {\r\n                    stringValue += '' + this.scheduling[selectedValue][i]\r\n\r\n                    if (i < this.scheduling[selectedValue].length - 1) {\r\n                        stringValue += ','\r\n                    }\r\n                }\r\n                return stringValue\r\n            } else {\r\n                stringValue = '*'\r\n                return stringValue\r\n            }\r\n        },\r\n        setEndUserScope() {\r\n            if (this.selectedDataset && !this.selectedDataset.id && !(this.store.$state as any).user.functionalities.includes('QbeAdvancedSaving')) {\r\n                let userScope = this.scopeTypes.find((scope) => scope.VALUE_CD === 'USER')\r\n                this.selectedDataset.scopeCd = userScope.VALUE_CD\r\n                this.selectedDataset.scopeId = userScope.VALUE_ID\r\n            }\r\n        }\r\n    }\r\n})\r\n</script>\r\n<style lang=\"scss\">\r\n#qbe-saving-dialog .p-dialog-content {\r\n    padding: 0;\r\n}\r\n</style>\r\n","<template>\r\n    <DataTable\r\n        class=\"qbe-smart-table\"\r\n        v-if=\"previewData != null\"\r\n        :first=\"first\"\r\n        :value=\"previewData.rows\"\r\n        :scrollable=\"true\"\r\n        scrollHeight=\"flex\"\r\n        scrollDirection=\"both\"\r\n        :resizableColumns=\"true\"\r\n        :reorderableColumns=\"true\"\r\n        :rowHover=\"true\"\r\n        columnResizeMode=\"expand\"\r\n        :paginator=\"true\"\r\n        :lazy=\"true\"\r\n        :rows=\"25\"\r\n        :totalRecords=\"lazyParams.size\"\r\n        :currentPageReportTemplate=\"\r\n            $t('common.table.footer.paginated', {\r\n                first: '{first}',\r\n                last: '{last}',\r\n                totalRecords: '{totalRecords}'\r\n            })\r\n        \"\r\n        @page=\"onPage($event)\"\r\n        @column-reorder=\"$emit('reordered', $event)\"\r\n        @drop.stop=\"onDrop($event)\"\r\n        @dragover.prevent\r\n        @dragenter.prevent\r\n        stripedRows\r\n        showGridlines\r\n    >\r\n        <template #empty>\r\n            <div id=\"noFunctionsFound\">\r\n                {{ $t('common.info.noDataFound') }}\r\n            </div>\r\n        </template>\r\n        <Column v-for=\"(col, index) of filteredVisibleFields\" class=\"kn-truncated\" :hidden=\"!col.visible\" :field=\"`column_${index + 1}`\" :key=\"index\" :style=\"qbeSimpleTableDescriptor.style.column\">\r\n            <template #header>\r\n                <div class=\"customHeader\">\r\n                    <div class=\"qbeCustomTopColor\" :style=\"`background-color: ${col.color}`\" :title=\"col.entity\"></div>\r\n                    <div class=\"qbeHeaderContainer\">\r\n                        <i class=\"fas fa-sort p-ml-2\" @click=\"changeOrder(col)\" :data-test=\"'change-order-' + col.alias\" v-tooltip.bottom=\"$t(`qbe.detailView.smartViewMenu.sorting`)\" />\r\n                        <span class=\"p-mx-2 kn-truncated\" v-tooltip.bottom=\"col.alias\">{{ col.alias }}</span>\r\n                        <i class=\"fas fa-cog p-ml-auto\" v-tooltip.bottom=\"$t(`qbe.detailView.smartViewMenu.colset`)\" @click=\"showMenu($event, col)\" />\r\n                        <i class=\"fas fa-filter p-mx-2\" :class=\"{ 'qbe-active-filter-icon': fieldHasFilters(col) }\" v-tooltip.bottom=\"$t(`qbe.detailView.smartViewMenu.colfil`)\" @click=\"openFiltersDialog(col)\" />\r\n                        <i class=\"fas fa-times p-mr-2\" v-tooltip.bottom=\"$t(`qbe.detailView.smartViewMenu.coldel`)\" @click=\"$emit('removeFieldFromQuery', col.uniqueID)\" :data-test=\"'delete-column-' + col.alias\" />\r\n                    </div>\r\n                </div>\r\n            </template>\r\n            <template #body=\"slotProps\">\r\n                <span v-if=\"typeof slotProps.data[`column_${index + 1}`] === 'number' && slotProps.data[`column_${index + 1}`]\"> {{ getFormattedNumber(slotProps.data[`column_${index + 1}`]) }}</span>\r\n                <span v-if=\"previewData?.metaData?.fields[index + 1]?.type === 'date' && col.type != 'inline.calculated.field'\">{{ getFormattedDate(slotProps.data[`column_${index + 1}`], previewData.metaData.fields[index + 1].metawebDateFormat, 'DD/MM/YYYY') }} </span>\r\n                <span v-else-if=\"previewData?.metaData?.fields[index + 1]?.type === 'date' && col.type == 'inline.calculated.field'\">{{ getFormattedDate(slotProps.data[`column_${index + 1}`], col.id.format, 'DD/MM/YYYY') }} </span>\r\n                <span v-else-if=\"previewData?.metaData?.fields[index + 1]?.type === 'timestamp' && col.type != 'inline.calculated.field'\">{{ getFormattedDate(slotProps.data[`column_${index + 1}`], previewData.metaData.fields[index + 1].metawebDateFormat, 'DD/MM/YYYY HH:mm:ss.SSS') }} </span>\r\n                <span v-else-if=\"previewData?.metaData?.fields[index + 1]?.type === 'timestamp' && col.type == 'inline.calculated.field'\">{{ getFormattedDate(slotProps.data[`column_${index + 1}`], col.id.format, 'DD/MM/YYYY HH:mm:ss.SSS') }} </span>\r\n                <span v-else v-tooltip.bottom=\"slotProps.data[`column_${index + 1}`]\">{{ slotProps.data[`column_${index + 1}`] }}</span>\r\n            </template>\r\n        </Column>\r\n    </DataTable>\r\n\r\n    <div v-else class=\"kn-height-full kn-width-full\" @drop=\"onDrop($event)\" @dragover.prevent @dragenter.prevent>{{ $t('common.info.noDataFound') }}</div>\r\n\r\n    <Dialog v-if=\"aliasDialogVisible\" class=\"qbe-smart-table-alias-dialog\" :visible=\"aliasDialogVisible\" :modal=\"true\" :closable=\"false\" :baseZIndex=\"1\" :autoZIndex=\"true\">\r\n        <template #header>\r\n            <Toolbar class=\"kn-toolbar kn-toolbar--primary p-col-12\">\r\n                <template #start>\r\n                    {{ $t('common.alias') }}\r\n                </template>\r\n            </Toolbar>\r\n        </template>\r\n\r\n        <span class=\"p-float-label p-m-4\">\r\n            <InputText id=\"alias\" class=\"kn-material-input\" type=\"text\" maxLength=\"50\" v-model=\"alias\" />\r\n            <label for=\"alias\" class=\"kn-material-input-label\"> {{ $t('common.alias') }} </label>\r\n        </span>\r\n\r\n        <template #footer>\r\n            <Button class=\"kn-button kn-button--secondary\" @click=\"aliasDialogVisible = false\"> {{ $t('common.cancel') }}</Button>\r\n            <Button class=\"kn-button kn-button--primary\" @click=\"changeAlias\"> {{ $t('common.save') }}</Button>\r\n        </template>\r\n    </Dialog>\r\n\r\n    <Menu id=\"smartTableMenu\" ref=\"smartTableMenu\" :model=\"menuButtons\" />\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport DataTable from 'primevue/datatable'\r\nimport Column from 'primevue/column'\r\nimport Menu from 'primevue/contextmenu'\r\nimport Dialog from 'primevue/dialog'\r\nimport qbeSimpleTableDescriptor from './QBESmartTableDescriptor.json'\r\nimport { formatNumberWithLocale } from '@/helpers/commons/localeHelper'\r\nimport { formatDate } from '@/helpers/commons/localeHelper'\r\n\r\nexport default defineComponent({\r\n    name: 'qbe-simple-table',\r\n    props: { previewData: { type: Object, required: true }, query: { type: Object, required: true }, pagination: { type: Object } },\r\n    components: { Column, DataTable, Menu, Dialog },\r\n    emits: ['removeFieldFromQuery', 'orderChanged', 'fieldHidden', 'fieldGrouped', 'fieldAggregated', 'aliasChanged', 'entityDropped', 'reordered', 'pageChanged', 'openFilterDialog'],\r\n    data() {\r\n        return {\r\n            qbeSimpleTableDescriptor,\r\n            aliasDialogVisible: false,\r\n            alias: '',\r\n            menuButtons: [] as any,\r\n            lazyParams: {} as any,\r\n            selectedField: {} as any,\r\n            first: 0\r\n        }\r\n    },\r\n    computed: {\r\n        filteredVisibleFields(): any {\r\n            var newArr = this.query.fields.filter((field) => field.visible === true && field.inUse === true)\r\n            return newArr\r\n        }\r\n    },\r\n    watch: {\r\n        previewData() {\r\n            this.loadPagination()\r\n        }\r\n    },\r\n    created() {\r\n        this.loadPagination()\r\n    },\r\n    methods: {\r\n        showMenu(event, col) {\r\n            this.createMenuItems(col)\r\n            // eslint-disable-next-line\r\n            // @ts-ignore\r\n            this.$refs.smartTableMenu.toggle(event)\r\n        },\r\n        createMenuItems(field) {\r\n            this.menuButtons = []\r\n            let visibleIcon = field.visible ? 'fas fa-check' : 'fas fa-times'\r\n            let groupIcon = field.group ? 'fas fa-check' : 'fas fa-times'\r\n            this.menuButtons.push(\r\n                { key: '1', label: this.$t('qbe.detailView.smartViewMenu.showField'), icon: visibleIcon, command: () => this.hideField(field) },\r\n                { key: '2', label: this.$t('qbe.detailView.smartViewMenu.group'), icon: groupIcon, visible: field.iconCls == 'attribute' || (field.iconCls == 'calculation' && field.attributes.formState.nature.toLowerCase() == 'attribute'), command: () => this.groupField(field) },\r\n                {\r\n                    key: '3',\r\n                    label: this.$t('qbe.detailView.smartViewMenu.aggregation.title') + `: ${field.funct}`,\r\n                    visible: field.iconCls == 'measure' || (field.iconCls == 'calculation' && field.attributes.formState.nature.toLowerCase() == 'measure'),\r\n                    items: [\r\n                        { label: this.$t('qbe.detailView.smartViewMenu.aggregation.sum'), command: () => this.applyAggregation(field, 'SUM') },\r\n                        { label: this.$t('qbe.detailView.smartViewMenu.aggregation.min'), command: () => this.applyAggregation(field, 'MIN') },\r\n                        { label: this.$t('qbe.detailView.smartViewMenu.aggregation.max'), command: () => this.applyAggregation(field, 'MAX') },\r\n                        { label: this.$t('qbe.detailView.smartViewMenu.aggregation.avg'), command: () => this.applyAggregation(field, 'AVG') },\r\n                        { label: this.$t('qbe.detailView.smartViewMenu.aggregation.count'), command: () => this.applyAggregation(field, 'COUNT') },\r\n                        { label: this.$t('qbe.detailView.smartViewMenu.aggregation.distinct'), command: () => this.applyAggregation(field, 'COUNT_DISTINCT') }\r\n                    ]\r\n                },\r\n                { key: '4', label: this.$t('qbe.detailView.smartViewMenu.rename'), icon: 'fas fa-tag', command: () => this.showChangeAliasDialog(field) }\r\n            )\r\n        },\r\n        changeOrder(field) {\r\n            field.order === 'ASC' ? (field.order = 'DESC') : (field.order = 'ASC')\r\n            this.$emit('orderChanged')\r\n        },\r\n        hideField(field) {\r\n            field.visible = !field.visible\r\n            this.$emit('fieldHidden')\r\n        },\r\n        groupField(field) {\r\n            field.group = !field.group\r\n            this.$emit('fieldGrouped')\r\n        },\r\n        applyAggregation(field, value) {\r\n            field.funct = value\r\n            this.$emit('fieldAggregated')\r\n        },\r\n        showChangeAliasDialog(field) {\r\n            this.selectedField = field\r\n            this.alias = JSON.parse(JSON.stringify(field.alias))\r\n            this.aliasDialogVisible = true\r\n        },\r\n        changeAlias() {\r\n            this.selectedField.alias = this.alias\r\n            this.aliasDialogVisible = false\r\n            this.$emit('aliasChanged', this.selectedField)\r\n        },\r\n        onDrop(event) {\r\n            var data = JSON.parse(event.dataTransfer.getData('text/plain'))\r\n            this.$emit('entityDropped', data)\r\n        },\r\n        loadPagination() {\r\n            this.lazyParams = this.pagination as any\r\n            this.first = this.pagination?.start\r\n        },\r\n        onPage(event: any) {\r\n            this.lazyParams = { paginationStart: event.first, paginationLimit: event.rows, paginationEnd: event.first + event.rows, size: this.lazyParams.size }\r\n            this.$emit('pageChanged', this.lazyParams)\r\n        },\r\n        fieldHasFilters(field: any) {\r\n            for (let i = 0; i < this.query.filters.length; i++) {\r\n                const tempFilter = this.query.filters[i]\r\n                if (tempFilter.leftOperandValue === field.id) {\r\n                    return true\r\n                }\r\n            }\r\n\r\n            return false\r\n        },\r\n        openFiltersDialog(field: any) {\r\n            this.$emit('openFilterDialog', field)\r\n        },\r\n        getFormattedNumber(number: number, precision?: number, format?: any) {\r\n            return formatNumberWithLocale(number, precision, format)\r\n        },\r\n        getFormattedDate(date: any, output: any, input: any) {\r\n            return formatDate(date, output, input)\r\n        }\r\n    }\r\n})\r\n</script>\r\n<style lang=\"scss\">\r\n.qbe-smart-table {\r\n    th {\r\n        padding: 0 !important;\r\n        border-bottom: 1px solid #a9a9a9 !important;\r\n        .p-column-header-content {\r\n            flex: 1;\r\n            min-width: 0;\r\n        }\r\n    }\r\n    td {\r\n        height: 20px;\r\n    }\r\n    .customHeader {\r\n        width: 100%;\r\n        flex-direction: column;\r\n        display: flex;\r\n        justify-content: flex-start;\r\n        align-items: center;\r\n        .qbeCustomTopColor {\r\n            width: 100%;\r\n            height: 5px;\r\n        }\r\n        .qbeHeaderContainer {\r\n            width: 100%;\r\n            display: flex;\r\n            justify-content: flex-start;\r\n            align-items: baseline;\r\n            color: #707171;\r\n        }\r\n        i {\r\n            transition: color 0.3s ease-out;\r\n            line-height: 24px;\r\n            cursor: pointer;\r\n            margin: 0;\r\n            &:hover {\r\n                color: #bbd6ed;\r\n            }\r\n        }\r\n    }\r\n}\r\n.qbe-smart-table-alias-dialog .p-dialog-header,\r\n.qbe-smart-table-alias-dialog .p-dialog-content {\r\n    padding: 0;\r\n    margin: 0;\r\n}\r\n\r\n.qbe-active-filter-icon {\r\n    color: red !important;\r\n}\r\n</style>\r\n","<template>\r\n    <div class=\"expandable-entities\" v-for=\"(entity, index) in entities\" :key=\"index\">\r\n        <h4 class=\"entity-item-container\" :style=\"{ 'border-left': `10px solid ${entity.color}` }\" draggable=\"true\" @dragstart=\"onDragStart($event, entity)\" :data-test=\"'entity-container-' + entity.id\">\r\n            <i :class=\"getIconCls(entity.attributes.iconCls)\" class=\"p-mx-2\" v-tooltip.top=\"$t(`qbe.entities.types.${entity.attributes.iconCls}`)\" />\r\n            <span class=\"kn-flex\" @click=\"expandEntity(entity)\" :data-test=\"'expand-' + entity.id\">{{ entity.text }}</span>\r\n            <Button icon=\"fas fa-info\" class=\"p-button-text p-button-rounded p-button-plain \" v-tooltip.top=\"$t('qbe.entities.relations')\" @click=\"$emit('showRelationDialog', entity)\" />\r\n            <Button v-if=\"entity.expanded\" icon=\"pi pi-chevron-up\" class=\"p-button-text p-button-rounded p-button-plain\" @click=\"entity.expanded = false\" />\r\n            <Button v-else icon=\"pi pi-chevron-down\" class=\"p-button-text p-button-rounded p-button-plain\" @click=\"entity.expanded = true\" />\r\n        </h4>\r\n        <ul v-show=\"entity.expanded\">\r\n            <li :style=\"{ 'border-left': `5px solid ${child.color}` }\" v-for=\"(child, index) in entity.children\" :key=\"index\" draggable=\"true\" @click=\"$emit('entityChildClicked', child)\" @dragstart=\"onDragStart($event, child)\">\r\n                <i :class=\"getIconCls(child.attributes.iconCls)\" class=\"p-mx-2\" v-tooltip.top=\"$t(`qbe.entities.types.${child.attributes.iconCls}`)\" />\r\n                <span :data-test=\"'entity-' + entity.id\">{{ child.text }}</span>\r\n                <Button icon=\"fas fa-filter\" :class=\"{ 'qbe-active-filter-icon': fieldHasFilters(child) }\" class=\"p-button-text p-button-rounded p-button-plain p-ml-auto\" @click.stop=\"openFiltersDialog(child)\" :data-test=\"'child-' + child.id\" />\r\n            </li>\r\n        </ul>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent, PropType } from 'vue'\r\nimport { iQuery } from '../QBE'\r\n\r\nexport default defineComponent({\r\n    name: 'expandable-entity',\r\n    components: {},\r\n    props: { availableEntities: { type: Array }, query: { type: Object as PropType<iQuery>, required: true } },\r\n    emits: ['close', 'showRelationDialog', 'openFilterDialog', 'entityChildClicked'],\r\n    data() {\r\n        return {\r\n            entities: [] as any,\r\n            colors: ['#D7263D', '#F46036', '#2E294E', '#1B998B', '#C5D86D', '#3F51B5', '#8BC34A', '#009688', '#F44336']\r\n        }\r\n    },\r\n    watch: {\r\n        availableEntities() {\r\n            this.entities = this.availableEntities\r\n            this.setupEntities()\r\n        }\r\n    },\r\n    created() {\r\n        this.entities = this.availableEntities\r\n        this.setupEntities()\r\n    },\r\n    methods: {\r\n        expandEntity(entity) {\r\n            entity.expanded = !entity.expanded\r\n        },\r\n        setupEntities() {\r\n            let usedColorIndex = 0\r\n            this.entities?.forEach((entity) => {\r\n                if (!this.colors[usedColorIndex]) usedColorIndex = 0\r\n                var color = this.colors[usedColorIndex]\r\n                usedColorIndex++\r\n                entity.color = color\r\n                if (entity.children) {\r\n                    entity.children.forEach((child) => {\r\n                        child.color = color\r\n                    })\r\n                }\r\n            })\r\n        },\r\n\r\n        getIconCls(iconCls) {\r\n            switch (iconCls) {\r\n                case 'measure':\r\n                    return 'fas fa-ruler'\r\n                case 'cube':\r\n                    return 'fas fa-cube'\r\n                case 'calculation':\r\n                    return 'fas fa-calculator'\r\n                case 'dimension':\r\n                    return 'fas fa-ruler-horizontal'\r\n                case 'geographic dimension':\r\n                    return 'fas fa-map-marked-alt'\r\n                case 'attribute':\r\n                    return 'fas fa-font'\r\n                case 'generic':\r\n                    return 'fas fa-layer-group'\r\n                case 'geographic_dimension':\r\n                    return 'fas fa-globe'\r\n                default:\r\n                    return 'fas fa-cube'\r\n            }\r\n        },\r\n        onDragStart(event, entity) {\r\n            event.dataTransfer.setData('text', JSON.stringify(entity))\r\n            event.dataTransfer.dropEffect = 'move'\r\n            event.dataTransfer.effectAllowed = 'move'\r\n        },\r\n        openFiltersDialog(field: any) {\r\n            this.$emit('openFilterDialog', field)\r\n        },\r\n        fieldHasFilters(field: any) {\r\n            for (let i = 0; i < this.query.filters?.length; i++) {\r\n                const tempFilter = this.query.filters[i]\r\n                if (tempFilter.leftOperandValue === field.id) {\r\n                    return true\r\n                }\r\n            }\r\n            return false\r\n        }\r\n    }\r\n})\r\n</script>\r\n<style lang=\"scss\">\r\n.expandable-entities {\r\n    ul {\r\n        background-color: #eceff1;\r\n        margin: 0;\r\n        list-style: none;\r\n        padding-left: 0;\r\n        cursor: pointer;\r\n        li {\r\n            display: flex;\r\n            flex-direction: row;\r\n            align-items: center;\r\n            justify-content: flex-start;\r\n            padding: 4px 0px 4px 20px;\r\n            font-size: 0.8rem;\r\n            border-bottom: 1px solid #cccccc;\r\n            height: 24px;\r\n            cursor: grab;\r\n            button {\r\n                margin: 0;\r\n                padding: 0;\r\n                width: 32px;\r\n            }\r\n            &:hover {\r\n                background-color: darken(#eceff1, 10%);\r\n            }\r\n            i {\r\n                cursor: help;\r\n            }\r\n            span {\r\n                padding-left: 5px;\r\n                flex: 1;\r\n            }\r\n        }\r\n    }\r\n    h4 {\r\n        display: flex;\r\n        background-color: #fff;\r\n        flex-direction: row;\r\n        align-items: center;\r\n        justify-content: flex-start;\r\n        height: 24px;\r\n        line-height: 24px;\r\n        margin: 0;\r\n        padding: 4px 8px 4px 8px;\r\n        font-size: 0.8rem;\r\n        border-bottom: 1px solid #ccc;\r\n        outline: none;\r\n        cursor: grab;\r\n        &:hover {\r\n            background-color: darken(#ffffff, 15%);\r\n        }\r\n        button {\r\n            cursor: pointer;\r\n        }\r\n        i {\r\n            cursor: help;\r\n        }\r\n    }\r\n}\r\n\r\n.qbe-active-filter-icon {\r\n    color: red !important;\r\n}\r\n</style>\r\n","<template>\r\n    <div class=\"expandable-entities\" v-for=\"(entity, index) in entities\" :key=\"index\">\r\n        <h4 draggable=\"true\" @dragstart=\"onDragStart($event, entity)\">\r\n            <i class=\"fas fa-cube p-mx-2\" v-tooltip.top=\"$t(`qbe.entities.types.cube`)\" />\r\n            <span class=\"kn-flex\" @click=\"expandEntity(entity)\">{{ entity.name }}</span>\r\n            <Button icon=\"fas fa-edit\" class=\"p-button-text p-button-rounded p-button-plain p-ml-auto\" @click=\"$emit('editSubquery', entity)\" />\r\n            <Button icon=\"fas fa-trash\" class=\"p-button-text p-button-rounded p-button-plain\" @click=\"$emit('deleteSubquery', index, entity)\" />\r\n            <Button v-if=\"entity.expanded\" icon=\"pi pi-chevron-up\" class=\"p-button-text p-button-rounded p-button-plain\" @click=\"entity.expanded = false\" />\r\n            <Button v-else icon=\"pi pi-chevron-down\" class=\"p-button-text p-button-rounded p-button-plain\" @click=\"entity.expanded = true\" />\r\n        </h4>\r\n        <ul v-show=\"entity.expanded\">\r\n            <li v-for=\"(child, index) in entity.fields\" :key=\"index\" draggable=\"true\" @dragstart=\"onDragStart($event, child)\">\r\n                <i :class=\"getIconCls(child.iconCls)\" class=\"p-mx-2\" v-tooltip.top=\"$t(`qbe.entities.types.${child.iconCls}`)\" />\r\n                <span>{{ child.alias }}</span>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\n\r\nexport default defineComponent({\r\n    name: 'expandable-entity',\r\n    components: {},\r\n    props: { availableEntities: { type: Array } },\r\n    emits: ['close'],\r\n    data() {\r\n        return {\r\n            entities: [] as any,\r\n            colors: ['#D7263D', '#F46036', '#2E294E', '#1B998B', '#C5D86D', '#3F51B5', '#8BC34A', '#009688', '#F44336']\r\n        }\r\n    },\r\n    watch: {\r\n        availableEntities() {\r\n            this.entities = this.availableEntities\r\n        }\r\n    },\r\n    created() {\r\n        this.entities = this.availableEntities\r\n    },\r\n    methods: {\r\n        expandEntity(entity) {\r\n            entity.expanded = !entity.expanded\r\n        },\r\n        getIconCls(iconCls) {\r\n            switch (iconCls) {\r\n                case 'measure':\r\n                    return 'fas fa-ruler'\r\n                case 'cube':\r\n                    return 'fas fa-cube'\r\n                case 'calculation':\r\n                    return 'fas fa-calculator'\r\n                case 'dimension':\r\n                    return 'fas fa-ruler-horizontal'\r\n                case 'geographic dimension':\r\n                    return 'fas fa-map-marked-alt'\r\n                case 'attribute':\r\n                    return 'fas fa-font'\r\n                case 'generic':\r\n                    return 'fas fa-layer-group'\r\n                default:\r\n                    return 'fas fa-cube'\r\n            }\r\n        },\r\n        onDragStart(event, entity) {\r\n            event.dataTransfer.setData('text', JSON.stringify(entity))\r\n            event.dataTransfer.dropEffect = 'move'\r\n            event.dataTransfer.effectAllowed = 'move'\r\n        }\r\n    }\r\n})\r\n</script>\r\n<style lang=\"scss\">\r\n.expandable-entities {\r\n    ul {\r\n        background-color: #eceff1;\r\n        margin: 0;\r\n        list-style: none;\r\n        padding-left: 0;\r\n        cursor: pointer;\r\n        li {\r\n            display: flex;\r\n            flex-direction: row;\r\n            align-items: center;\r\n            justify-content: flex-start;\r\n            padding: 4px 0px 4px 20px;\r\n            font-size: 0.8rem;\r\n            border-bottom: 1px solid #cccccc;\r\n            border-left: 5px solid #000;\r\n            height: 24px;\r\n            cursor: grab;\r\n            button {\r\n                margin: 0;\r\n                padding: 0;\r\n                width: 32px;\r\n            }\r\n            &:hover {\r\n                background-color: darken(#eceff1, 10%);\r\n            }\r\n            i {\r\n                cursor: help;\r\n            }\r\n            span {\r\n                padding-left: 5px;\r\n            }\r\n        }\r\n    }\r\n    h4 {\r\n        display: flex;\r\n        background-color: #fff;\r\n        flex-direction: row;\r\n        align-items: center;\r\n        justify-content: flex-start;\r\n        height: 24px;\r\n        line-height: 24px;\r\n        margin: 0;\r\n        padding: 4px 8px 4px 8px;\r\n        font-size: 0.8rem;\r\n        border-bottom: 1px solid #ccc;\r\n        border-left: 10px solid #000;\r\n        outline: none;\r\n        cursor: grab;\r\n        &:hover {\r\n            background-color: darken(#ffffff, 15%);\r\n        }\r\n        button {\r\n            cursor: pointer;\r\n        }\r\n        i {\r\n            cursor: help;\r\n        }\r\n    }\r\n}\r\n</style>\r\n","<template>\r\n    <Dialog id=\"qbe-join-definition-dialog\" class=\"p-fluid kn-dialog--toolbar--primary\" :style=\"QBEJoinDefinitionDialogDescriptor.dialog.style\" :visible=\"visible\" :modal=\"true\" :closable=\"false\">\r\n        <template #header>\r\n            <Toolbar class=\"kn-toolbar kn-toolbar--primary p-p-0 p-m-2 p-col-12\">\r\n                <template #start>\r\n                    {{ $t('qbe.joinDefinitions.dialogTitle') }}\r\n                </template>\r\n            </Toolbar>\r\n        </template>\r\n\r\n        <div>\r\n            <div class=\"p-d-flex p-ai-center p-m-4\">\r\n                <i class=\"pi pi-search kn-cursor-pointer\" />\r\n                <InputText class=\"kn-material-input p-ml-2\" v-model=\"searchWord\" :placeholder=\"$t('common.search')\" @input=\"searchItems\" />\r\n            </div>\r\n\r\n            <div class=\"p-m-4\">\r\n                <div v-for=\"(relation, index) in filteredRelations\" :key=\"relation.id\" class=\"p-d-flex p-flex-row p-ai-center p-m-3\">\r\n                    <label class=\"p-text-bold\">{{ index + 1 }}</label>\r\n                    <Dropdown class=\"kn-material-input p-mx-4\" v-model=\"relation.joinType\" :options=\"QBEJoinDefinitionDialogDescriptor.joinTypes\" />\r\n                    <label class=\"p-text-bold kn-truncated\" v-tooltip.top=\"relation.attributes.sourceEntity + ' --- ' + relation.attributes.entity\">{{ relation.attributes.sourceEntity + ' --- ' + relation.attributes.entity }}</label>\r\n                    <div class=\"p-d-flex p-flex-row p-ml-auto\">\r\n                        <i v-show=\"index !== 0 && searchWord.trim() === ''\" class=\"fa fa-arrow-up kn-cursor-pointer\" @click=\"moveUp(index)\"></i>\r\n                        <i v-show=\"index !== filteredRelations.length - 1 && searchWord.trim() === ''\" class=\"fa fa-arrow-down kn-cursor-pointer p-ml-2\" @click=\"moveDown(index)\"></i>\r\n                        <Checkbox class=\"p-ml-3\" v-model=\"relation.isConsidered\" :binary=\"true\"></Checkbox>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <template #footer>\r\n            <Button class=\"kn-button kn-button--primary\" @click=\"closeDialog\"> {{ $t('common.cancel') }}</Button>\r\n            <Button class=\"kn-button kn-button--primary\" @click=\"save\"> {{ $t('common.save') }}</Button>\r\n        </template>\r\n    </Dialog>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent, PropType } from 'vue'\r\nimport { iQuery, iField } from '../../QBE'\r\nimport { AxiosResponse } from 'axios'\r\nimport Checkbox from 'primevue/checkbox'\r\nimport Dialog from 'primevue/dialog'\r\nimport Dropdown from 'primevue/dropdown'\r\nimport QBEJoinDefinitionDialogDescriptor from './QBEJoinDefinitionDialogDescriptor.json'\r\n\r\nexport default defineComponent({\r\n    name: 'qbe-join-definition-dialog',\r\n    components: { Checkbox, Dialog, Dropdown },\r\n    props: { visible: { type: Boolean }, qbe: { type: Object }, selectedQuery: { type: Object as PropType<iQuery> }, propEntities: { type: Array }, id: { type: String } },\r\n    emits: ['close'],\r\n    data() {\r\n        return {\r\n            QBEJoinDefinitionDialogDescriptor,\r\n            entityNames: [] as string[],\r\n            usedEntities: [] as any[],\r\n            relations: [] as any[],\r\n            filteredRelations: [] as any[],\r\n            searchWord: '',\r\n            query: {} as iQuery,\r\n            entities: [] as any[]\r\n        }\r\n    },\r\n    watch: {\r\n        async visible(isVisible: boolean) {\r\n            if (isVisible) {\r\n                this.loadQuery()\r\n                await this.loadEntityNames()\r\n                this.loadData()\r\n            }\r\n        },\r\n        selectedQuery() {\r\n            this.loadQuery()\r\n        },\r\n        propEntities() {\r\n            this.loadEntities()\r\n            this.loadData()\r\n        }\r\n    },\r\n    async created() {\r\n        this.loadQuery()\r\n        await this.loadEntityNames()\r\n        this.loadEntities()\r\n        this.loadData()\r\n    },\r\n    methods: {\r\n        loadData() {\r\n            if (this.qbe && this.query && this.entities) {\r\n                this.usedEntities = []\r\n                this.entities?.forEach((entity: any) => {\r\n                    if (this.entityNames.includes(entity.id)) {\r\n                        this.usedEntities.push(entity)\r\n                    }\r\n                })\r\n\r\n                this.getRelations()\r\n            }\r\n        },\r\n        loadQuery() {\r\n            this.query = this.selectedQuery as iQuery\r\n        },\r\n        loadEntities() {\r\n            this.entities = this.propEntities as any\r\n        },\r\n        getRelations() {\r\n            this.relations = []\r\n            this.usedEntities?.forEach((usedEntity: any) => {\r\n                usedEntity.relation?.forEach((relation: any) => {\r\n                    const index = this.usedEntities.findIndex((targetUsedEntity: any) => targetUsedEntity.id === relation.targetEntity)\r\n                    if (index !== -1) this.relations.push({ ...relation })\r\n                })\r\n            })\r\n            this.filteredRelations = [...this.relations]\r\n        },\r\n        async loadEntityNames() {\r\n            if (this.id && this.query) {\r\n                const postData = { catalogue: this.qbe?.qbeJSONQuery.catalogue.queries, meta: this.formatQbeMeta(), pars: this.qbe?.pars, qbeJSONQuery: {}, schedulingCronLine: '0 * * * * ?' }\r\n                await this.$http\r\n                    .post(`/knowageqbeengine/restful-services/qbequery/queryEntities/?SBI_EXECUTION_ID=${this.id}&currentQueryId=${this.query?.id}`, postData)\r\n                    .then((response: AxiosResponse<any>) => (this.entityNames = response.data))\r\n                    .catch(() => {})\r\n            }\r\n        },\r\n        formatQbeMeta() {\r\n            const meta = [] as any[]\r\n            this.qbe?.qbeJSONQuery.catalogue.queries?.forEach((query: iQuery) => {\r\n                query.fields?.forEach((field: iField) => {\r\n                    meta.push({ dataType: field.dataType, displayedName: field.alias, fieldType: field.fieldType.toUpperCase(), format: field.format, name: field.alias, type: field.type })\r\n                })\r\n            })\r\n            return meta\r\n        },\r\n        searchItems() {\r\n            setTimeout(() => {\r\n                if (!this.searchWord.trim().length) {\r\n                    this.filteredRelations = [...this.relations]\r\n                } else {\r\n                    this.filteredRelations = this.relations.filter((relation: any) => {\r\n                        return relation.attributes.entity.toLowerCase().includes(this.searchWord.trim().toLocaleLowerCase()) || relation.attributes.sourceEntity.toLowerCase().includes(this.searchWord.trim().toLocaleLowerCase())\r\n                    })\r\n                }\r\n            }, 250)\r\n        },\r\n        moveDown(index: number) {\r\n            const temp = this.relations[index]\r\n            this.relations[index] = this.relations[index + 1]\r\n            this.relations[index + 1] = temp\r\n            this.filteredRelations = [...this.relations]\r\n        },\r\n        moveUp(index: number) {\r\n            const temp = this.relations[index]\r\n            this.relations[index] = this.relations[index - 1]\r\n            this.relations[index - 1] = temp\r\n            this.filteredRelations = [...this.relations]\r\n        },\r\n        closeDialog() {\r\n            this.$emit('close')\r\n            this.relations = []\r\n            this.filteredRelations = []\r\n        },\r\n        save() {\r\n            this.query.graph = [...this.relations]\r\n\r\n            this.relations.forEach((relation: any) => {\r\n                this.entities?.forEach((entity: any) => {\r\n                    for (let i = 0; i < entity.relation.length; i++) {\r\n                        const tempRelation = entity.relation[i]\r\n                        if (tempRelation.id === relation.id) {\r\n                            entity.relation[i] = { ...relation }\r\n                        }\r\n                    }\r\n                })\r\n            })\r\n\r\n            this.relations = []\r\n            this.filteredRelations = []\r\n            this.$emit('close')\r\n        }\r\n    }\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n#qbe-join-definition-dialog .p-dialog-header,\r\n#qbe-join-definition-dialog .p-dialog-content {\r\n    padding: 0;\r\n}\r\n#qbe-join-definition-dialog .p-dialog-content {\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex: 1;\r\n}\r\n\r\n.qbe-advanced-filter-button {\r\n    max-width: 150px;\r\n}\r\n</style>\r\n","<template>\r\n    <div id=\"qbe-preview-dialog\" class=\"p-fluid kn-dialog--toolbar--primary\">\r\n        <Toolbar class=\"kn-toolbar kn-toolbar--secondary p-p-0 p-m-0 p-col-12\">\r\n            <template #start>\r\n                {{ $t('common.preview') }}\r\n            </template>\r\n            <template #end>\r\n                <i class=\"fa fa-times kn-cursor-pointer\" @click=\"close\"></i>\r\n            </template>\r\n        </Toolbar>\r\n\r\n        <DataTable\r\n            id=\"qbe-preview-datatable\"\r\n            class=\"p-datatable-sm kn-table\"\r\n            v-model:first=\"first\"\r\n            :value=\"rows\"\r\n            :paginator=\"true\"\r\n            :lazy=\"true\"\r\n            :rows=\"20\"\r\n            :totalRecords=\"lazyParams.size\"\r\n            paginatorTemplate=\"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink\"\r\n            :currentPageReportTemplate=\"$t('common.table.footer.paginated', { first: '{first}', last: '{last}', totalRecords: '{totalRecords}' })\"\r\n            responsiveLayout=\"stack\"\r\n            breakpoint=\"960px\"\r\n            :scrollable=\"true\"\r\n            :scrollHeight=\"QBEPreviewDialogDescriptor.scrollHeight\"\r\n            @page=\"onPage($event)\"\r\n        >\r\n            <template #empty>\r\n                <div>\r\n                    {{ $t('common.info.noDataFound') }}\r\n                </div>\r\n            </template>\r\n            <Column class=\"kn-truncated\" v-for=\"col of columns\" :field=\"col.dataIndex\" :header=\"col.header\" :key=\"col.field\" :sortable=\"true\">\r\n                <template #body=\"slotProps\">\r\n                    {{ col.metawebDateFormat ? getFormattedDate(slotProps.data[col.dataIndex], col) : slotProps.data[col.dataIndex] }}\r\n                </template>\r\n            </Column>\r\n        </DataTable>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport { formatDate } from '@/helpers/commons/localeHelper'\r\nimport Column from 'primevue/column'\r\nimport DataTable from 'primevue/datatable'\r\nimport QBEPreviewDialogDescriptor from './QBEPreviewDialogDescriptor.json'\r\nimport QBEDescriptor from '../../QBEDescriptor.json'\r\n\r\nexport default defineComponent({\r\n    name: 'qbe-preview-dialog',\r\n    components: { Column, DataTable },\r\n    props: { id: { type: String }, queryPreviewData: { type: Object }, pagination: { type: Object }, entities: { type: Array }, selectedQuery: { type: Object, required: true } },\r\n    emits: ['close', 'pageChanged'],\r\n    data() {\r\n        return {\r\n            QBEPreviewDialogDescriptor,\r\n            QBEDescriptor,\r\n            columns: [] as any[],\r\n            rows: [] as any[],\r\n            lazyParams: {} as any,\r\n            first: 0,\r\n            loading: false\r\n        }\r\n    },\r\n    watch: {\r\n        queryPreviewData() {\r\n            this.loadData()\r\n        },\r\n        pagination() {\r\n            this.loadPagination()\r\n        }\r\n    },\r\n    created() {\r\n        this.loadData()\r\n        this.loadPagination()\r\n    },\r\n    methods: {\r\n        loadData() {\r\n            if (this.queryPreviewData) {\r\n                this.setPreviewColumns(this.queryPreviewData)\r\n                this.rows = this.queryPreviewData.rows\r\n            }\r\n        },\r\n        setPreviewColumns(data: any) {\r\n            this.columns = []\r\n\r\n            for (let i = 1; i < data.metaData?.fields?.length; i++) {\r\n                const tempColumn = data.metaData?.fields[i]\r\n                if (['timestamp', 'date'].includes(tempColumn.type)) {\r\n                    const field = this.findField(tempColumn) as any\r\n                    if (field) tempColumn.metawebDateFormat = field.format\r\n                    if (!tempColumn.metawebDateFormat) {\r\n                        this.setCalculatedFieldDateFormat(tempColumn, i - 1)\r\n                    }\r\n                }\r\n                this.columns.push(data.metaData?.fields[i])\r\n            }\r\n        },\r\n        setCalculatedFieldDateFormat(tempColumn: any, index: number) {\r\n            if (!this.selectedQuery || !this.selectedQuery.fields) return\r\n            if (this.selectedQuery.fields[index]) tempColumn.metawebDateFormat = this.selectedQuery.fields[index].id.format ?? 'L'\r\n        },\r\n        findField(column: any) {\r\n            if (!this.entities) return\r\n\r\n            let field = null\r\n\r\n            for (let i = 0; i < this.entities.length; i++) {\r\n                const tempEntity = this.entities[i] as any\r\n                for (let j = 0; j < tempEntity.children.length; j++) {\r\n                    if (tempEntity.children[j].attributes.field === column.header) {\r\n                        field = tempEntity.children[j]\r\n                        break\r\n                    }\r\n                }\r\n            }\r\n\r\n            return field\r\n        },\r\n        loadPagination() {\r\n            this.lazyParams = this.pagination as any\r\n            this.first = this.pagination?.start\r\n        },\r\n        onPage(event: any) {\r\n            this.lazyParams = { paginationStart: event.first, paginationLimit: event.rows, paginationEnd: event.first + event.rows, size: this.lazyParams.size }\r\n            this.$emit('pageChanged', this.lazyParams)\r\n        },\r\n        close() {\r\n            this.$emit('close')\r\n            this.first = 0\r\n            this.lazyParams = {}\r\n        },\r\n        getFormattedDate(date: any, column: any) {\r\n            const inputFormat = column.type === 'timestamp' ? 'DD/MM/YYYY HH:mm:ss.SSS' : 'DD/MM/YYYY'\r\n            let format = undefined as string | undefined\r\n            if (QBEDescriptor.admissibleDateFormats.includes(column.metawebDateFormat)) {\r\n                format = column.metawebDateFormat\r\n            }\r\n            return formatDate(date, format, inputFormat)\r\n        }\r\n    }\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n#qbe-preview-dialog .p-dialog-header,\r\n#qbe-preview-dialog .p-dialog-content {\r\n    padding: 0;\r\n    padding-bottom: 35px;\r\n}\r\n\r\n#qbe-preview-dialog .p-dialog-content {\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex: 1;\r\n}\r\n</style>\r\n","<template>\r\n    <Dialog class=\"full-screen-dialog\" :visible=\"true\" :modal=\"false\" :closable=\"false\" position=\"right\" :baseZIndex=\"1\" :autoZIndex=\"true\">\r\n        <template #header>\r\n            <Toolbar class=\"kn-toolbar kn-toolbar--primary p-col-12\">\r\n                <template #start>\r\n                    <span v-if=\"qbe\">{{ qbe.label ? qbe.label : qbe.qbeDatamarts }}</span>\r\n                </template>\r\n                <template #end>\r\n                    <Button v-if=\"isParameterSidebarVisible\" icon=\"pi pi-filter\" class=\"p-button-text p-button-rounded p-button-plain\" v-tooltip.bottom=\"$t('common.filter')\" @click=\"parameterSidebarVisible = !parameterSidebarVisible\" />\r\n                    <Button icon=\"pi pi-save\" class=\"p-button-text p-button-rounded p-button-plain\" v-tooltip.bottom=\"$t('common.save')\" @click=\"openSavingDialog\" />\r\n                    <Button icon=\"pi pi-times\" class=\"p-button-text p-button-rounded p-button-plain\" v-tooltip.bottom=\"$t('common.close')\" @click=\"$emit('close')\" />\r\n                </template>\r\n            </Toolbar>\r\n        </template>\r\n        <ProgressSpinner class=\"kn-progress-spinner\" v-if=\"loading\" />\r\n        <div v-if=\"!qbePreviewDialogVisible\" class=\"kn-relative p-d-flex p-flex-row kn-height-full kn-width-full\">\r\n            <div v-if=\"parameterSidebarVisible\" :style=\"qbeDescriptor.style.backdrop\" @click=\"parameterSidebarVisible = false\"></div>\r\n            <div v-if=\"showEntitiesLists && qbeLoaded\" :style=\"qbeDescriptor.style.entitiesLists\">\r\n                <div class=\"p-d-flex p-flex-column kn-flex kn-overflow-hidden\">\r\n                    <Toolbar class=\"kn-toolbar kn-toolbar--secondary kn-flex-0\">\r\n                        <template #start>\r\n                            <span>{{ $t('qbe.entities.title') }}</span>\r\n                        </template>\r\n                        <template #end>\r\n                            <Chip style=\"background-color: white\"> {{ entities?.entities?.length }} </Chip>\r\n                        </template>\r\n                    </Toolbar>\r\n                    <div class=\"kn-flex kn-overflow-hidden\">\r\n                        <ScrollPanel class=\"kn-height-full qbe-scroll-panel\">\r\n                            <ExpandableEntity :availableEntities=\"entities.entities\" :query=\"mainQuery\" @showRelationDialog=\"showRelationDialog\" @entityClicked=\"onDropComplete($event, false)\" @entityChildClicked=\"onDropComplete($event, false)\" @openFilterDialog=\"openFilterDialog\" />\r\n                        </ScrollPanel>\r\n                    </div>\r\n                </div>\r\n                <div class=\"p-d-flex p-flex-column kn-overflow-hidden\" :class=\"{ 'derived-entities-toggle': showDerivedList }\">\r\n                    <Toolbar class=\"kn-toolbar kn-toolbar--secondary kn-flex-0\">\r\n                        <template #start>\r\n                            <span>{{ $t('qbe.entities.derived') }}</span>\r\n                        </template>\r\n                        <template #end>\r\n                            <Button v-if=\"showEntitiesLists\" icon=\"fas fa-plus-circle\" class=\"p-button-text p-button-rounded p-button-plain\" v-tooltip.top=\"$t('common.add')\" @click=\"createSubquery\" />\r\n                            <Chip style=\"background-color: white\"> {{ mainQuery?.subqueries?.length }} </Chip>\r\n                            <Button v-if=\"showDerivedList\" icon=\"pi pi-chevron-down\" class=\"p-button-text p-button-rounded p-button-plain\" @click=\"collapseDerivedList\" />\r\n                            <Button v-else icon=\"pi pi-chevron-up\" class=\"p-button-text p-button-rounded p-button-plain\" @click=\"collapseDerivedList\" />\r\n                        </template>\r\n                    </Toolbar>\r\n                    <div v-show=\"showDerivedList\" class=\"kn-flex kn-overflow-hidden\">\r\n                        <ScrollPanel class=\"kn-height-full qbe-scroll-panel\">\r\n                            <SubqueryEntity :availableEntities=\"mainQuery?.subqueries\" @editSubquery=\"selectSubquery\" @deleteSubquery=\"deleteSubquery\" />\r\n                        </ScrollPanel>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"qbe-detail-view p-m-1\" v-if=\"qbe && qbeLoaded\">\r\n                <Toolbar class=\"kn-toolbar kn-toolbar--primary kn-width-full\">\r\n                    <template #start>\r\n                        <Button v-if=\"showEntitiesLists\" icon=\"pi pi-chevron-left\" class=\"p-button-text p-button-rounded p-button-plain\" v-tooltip.bottom=\"$t('qbe.detailView.hideList')\" @click=\"toggleEntitiesLists\" />\r\n                        <Button v-else icon=\"pi pi-chevron-right\" class=\"p-button-text p-button-rounded p-button-plain\" v-tooltip.bottom=\"$t('qbe.detailView.showList')\" @click=\"toggleEntitiesLists\" />\r\n                        <span v-if=\"selectedQuery.id !== 'q1'\">\r\n                            <Button label=\"MAIN\" class=\"p-button-text p-button-plain kn-uppercase\" @click=\"selectMainQuery\" />\r\n                            <Button icon=\"pi pi-chevron-right\" class=\"p-button-text p-button-plain\" />\r\n                            <Button :label=\"selectedQuery?.name\" class=\"p-button-text p-button-plain kn-uppercase\" />\r\n                        </span>\r\n                    </template>\r\n                    <template #end>\r\n                        <i v-if=\"selectedQuery.fields.length > 0\" class=\"fas fa-eraser kn-cursor-pointer p-mx-2\" v-tooltip.top=\"$t('qbe.viewToolbar.deleteAllSelectedFields')\" @click=\"deleteAllFieldsFromQuery\"></i>\r\n                        <i v-if=\"hiddenColumnsExist\" class=\"pi pi-eye kn-cursor-pointer p-mx-2\" v-tooltip.top=\"$t('qbe.viewToolbar.showHiddenColumns')\" @click=\"showHiddenColumns\"></i>\r\n                        <span v-if=\"selectedQuery.filters.length > 0\" class=\"fa-stack p-mx-2\">\r\n                            <i class=\"fas fa-ban fa-stack-2x\"></i>\r\n                            <i class=\"fas fa-filter fa-stack-1x kn-cursor-pointer\" v-tooltip.top=\"$t('qbe.viewToolbar.deleteAllFilters')\" @click=\"deleteAllFilters\"></i>\r\n                        </span>\r\n                        <InputSwitch class=\"p-mr-2\" v-model=\"smartView\" @change=\"updateSmartView\" />\r\n                        <span>{{ $t('qbe.viewToolbar.smartView') }}</span>\r\n                        <i v-show=\"!smartView\" class=\"fas fa-play p-m-2 kn-cursor-pointer\" @click=\"openPreviewDialog\"></i>\r\n                        <Button icon=\"fas fa-ellipsis-v kn-cursor-pointer\" class=\"p-button-text p-button-rounded p-button-plain\" @click=\"showMenu\" />\r\n                    </template>\r\n                </Toolbar>\r\n                <div class=\"kn-relative kn-flex p-mt-2\">\r\n                    <div class=\"kn-height-full kn-width-full kn-absolute\">\r\n                        <QBESimpleTable\r\n                            v-if=\"!smartView\"\r\n                            :query=\"selectedQuery\"\r\n                            @columnVisibilityChanged=\"checkIfHiddenColumnsExist\"\r\n                            @openFilterDialog=\"openFilterDialog\"\r\n                            @openHavingDialog=\"openHavingDialog\"\r\n                            @entityDropped=\"onDropComplete($event, false)\"\r\n                            @groupingChanged=\"onGroupingChanged\"\r\n                            @openCalculatedFieldDialog=\"editCalcField\"\r\n                            @fieldDeleted=\"onFieldDeleted\"\r\n                            @fieldAliasChanged=\"onFieldAliasChange\"\r\n                        />\r\n                        <QBESmartTable\r\n                            v-else\r\n                            :query=\"selectedQuery\"\r\n                            :previewData=\"queryPreviewData\"\r\n                            :pagination=\"pagination\"\r\n                            @removeFieldFromQuery=\"deleteFieldFromQuery\"\r\n                            @orderChanged=\"updateSmartView\"\r\n                            @fieldHidden=\"smartViewFieldHidden\"\r\n                            @fieldGrouped=\"updateSmartView\"\r\n                            @fieldAggregated=\"updateSmartView\"\r\n                            @aliasChanged=\"onFieldAliasChange\"\r\n                            @reordered=\"smartViewReorder\"\r\n                            @entityDropped=\"onDropComplete($event, false)\"\r\n                            @pageChanged=\"updatePagination($event)\"\r\n                            @openFilterDialog=\"openFilterDialog\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <KnParameterSidebar v-if=\"parameterSidebarVisible\" :filtersData=\"filtersData\" :propDocument=\"dataset\" :userRole=\"userRole\" :propMode=\"'qbeView'\" :propQBEParameters=\"qbe?.pars\" @execute=\"onExecute\" @roleChanged=\"onRoleChange\"></KnParameterSidebar>\r\n        </div>\r\n\r\n        <QBEPreviewDialog v-show=\"!loading && qbePreviewDialogVisible\" :id=\"uniqueID\" :queryPreviewData=\"queryPreviewData\" :pagination=\"pagination\" :entities=\"entities?.entities\" :selectedQuery=\"selectedQuery\" @close=\"closePreview\" @pageChanged=\"updatePagination($event)\"></QBEPreviewDialog>\r\n        <QBEFilterDialog :visible=\"filterDialogVisible\" :filterDialogData=\"filterDialogData\" :id=\"uniqueID\" :entities=\"entities?.entities\" :propParameters=\"qbe?.pars\" :propExpression=\"selectedQuery?.expression\" @close=\"filterDialogVisible = false\" @save=\"onFiltersSave\"></QBEFilterDialog>\r\n        <QBESqlDialog :visible=\"sqlDialogVisible\" :sqlData=\"sqlData\" @close=\"sqlDialogVisible = false\" />\r\n        <QBERelationDialog :visible=\"relationDialogVisible\" :propEntity=\"relationEntity\" @close=\"relationDialogVisible = false\" />\r\n        <QBEParamDialog v-if=\"paramDialogVisible\" :visible=\"paramDialogVisible\" :propDataset=\"qbe\" @close=\"paramDialogVisible = false\" @save=\"onParametersSave\" />\r\n        <QBEHavingDialog :visible=\"havingDialogVisible\" :havingDialogData=\"havingDialogData\" :entities=\"selectedQuery?.fields\" @close=\"havingDialogVisible = false\" @save=\"onHavingsSave\"></QBEHavingDialog>\r\n        <QBEAdvancedFilterDialog :visible=\"advancedFilterDialogVisible\" :query=\"selectedQuery\" @close=\"advancedFilterDialogVisible = false\" @save=\"onAdvancedFiltersSave\"></QBEAdvancedFilterDialog>\r\n        <QBESavingDialog :visible=\"savingDialogVisible\" :propDataset=\"qbe\" :propMetadata=\"qbeMetadata\" @close=\"savingDialogVisible = false\" @datasetSaved=\"$emit('datasetSaved')\" />\r\n        <QBEJoinDefinitionDialog v-if=\"joinDefinitionDialogVisible\" :visible=\"joinDefinitionDialogVisible\" :qbe=\"qbe\" :propEntities=\"entities?.entities\" :id=\"uniqueID\" :selectedQuery=\"selectedQuery\" @close=\"onJoinDefinitionDialogClose\"></QBEJoinDefinitionDialog>\r\n\r\n        <KnCalculatedField\r\n            v-if=\"calcFieldDialogVisible\"\r\n            v-model:template=\"selectedCalcField\"\r\n            v-model:visibility=\"calcFieldDialogVisible\"\r\n            :fields=\"calcFieldColumns\"\r\n            :descriptor=\"calcFieldDescriptor\"\r\n            :propCalcFieldFunctions=\"calcFieldFunctionsToShow\"\r\n            :readOnly=\"false\"\r\n            :valid=\"true\"\r\n            source=\"QBE\"\r\n            @save=\"onCalcFieldSave\"\r\n            @cancel=\"calcFieldDialogVisible = false\"\r\n        >\r\n            <template #additionalInputs>\r\n                <div class=\"p-field\" :class=\"[selectedCalcField.type === 'DATE' ? 'p-col-3' : 'p-col-4']\">\r\n                    <span class=\"p-float-label\">\r\n                        <Dropdown id=\"type\" class=\"kn-material-input\" v-model=\"selectedCalcField.type\" :options=\"qbeDescriptor.types\" optionLabel=\"label\" optionValue=\"name\" />\r\n                        <label for=\"type\" class=\"kn-material-input-label\"> {{ $t('components.knCalculatedField.type') }} </label>\r\n                    </span>\r\n                </div>\r\n                <div v-if=\"selectedCalcField.type === 'DATE'\" class=\"p-field p-col-3\">\r\n                    <span class=\"p-float-label\">\r\n                        <Dropdown id=\"type\" class=\"kn-material-input\" v-model=\"selectedCalcField.format\" :options=\"qbeDescriptor.admissibleDateFormats\">\r\n                            <template #value>\r\n                                <span>{{ selectedCalcField.format ? moment().format(selectedCalcField.format) : '' }}</span>\r\n                            </template>\r\n                            <template #option=\"slotProps\">\r\n                                <span>{{ moment().format(slotProps.option) }}</span>\r\n                            </template>\r\n                        </Dropdown>\r\n                        <label for=\"type\" class=\"kn-material-input-label\"> {{ $t('managers.datasetManagement.ckanDateFormat') }} </label>\r\n                    </span>\r\n                </div>\r\n                <div class=\"p-field\" :class=\"[selectedCalcField.type === 'DATE' ? 'p-col-3' : 'p-col-4']\">\r\n                    <span class=\"p-float-label\">\r\n                        <Dropdown id=\"columnType\" class=\"kn-material-input\" v-model=\"selectedCalcField.nature\" :options=\"qbeDescriptor.columnTypes\" optionLabel=\"label\" optionValue=\"name\" />\r\n                        <label for=\"columnType\" class=\"kn-material-input-label\"> {{ $t('managers.functionsCatalog.columnType') }} </label>\r\n                    </span>\r\n                </div>\r\n            </template>\r\n        </KnCalculatedField>\r\n\r\n        <Menu id=\"optionsMenu\" ref=\"optionsMenu\" :model=\"menuButtons\" />\r\n    </Dialog>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { AxiosResponse } from 'axios'\r\nimport { defineComponent } from 'vue'\r\nimport { downloadDirect } from '@/helpers/commons/fileHelper'\r\nimport { iQBE, iQuery, iField, iQueryResult, iFilter } from './QBE'\r\nimport { onFiltersSaveCallback } from './QBEFilterService'\r\nimport { formatDrivers } from './QBEDriversService'\r\nimport { onHavingsSaveCallback } from './QBEHavingsService'\r\nimport { createNewField, creatNewMetadataFromField } from '@/helpers/commons/qbeHelpers'\r\nimport { buildCalculatedField, updateCalculatedField } from '@/helpers/commons/buildQbeCalculatedField'\r\nimport { removeInPlace } from './qbeDialogs/qbeAdvancedFilterDialog/treeService'\r\nimport moment from 'moment'\r\nimport Dialog from 'primevue/dialog'\r\nimport Chip from 'primevue/chip'\r\nimport InputSwitch from 'primevue/inputswitch'\r\nimport QBEAdvancedFilterDialog from './qbeDialogs/qbeAdvancedFilterDialog/QBEAdvancedFilterDialog.vue'\r\nimport QBEFilterDialog from './qbeDialogs/qbeFilterDialog/QBEFilterDialog.vue'\r\nimport QBEHavingDialog from './qbeDialogs/qbeHavingDialog/QBEHavingDialog.vue'\r\nimport QBESimpleTable from './qbeTables/qbeSimpleTable/QBESimpleTable.vue'\r\nimport QBESqlDialog from './qbeDialogs/QBESqlDialog.vue'\r\nimport QBERelationDialog from './qbeDialogs/QBEEntityRelationDialog.vue'\r\nimport QBEParamDialog from './qbeDialogs/QBEParameterDialog.vue'\r\nimport QBESavingDialog from './qbeDialogs/qbeSavingDialog/QBESavingDialog.vue'\r\nimport QBESmartTable from './qbeTables/qbeSmartTable/QBESmartTable.vue'\r\nimport ExpandableEntity from '@/modules/qbe/qbeComponents/QBEExpandableEntity.vue'\r\nimport SubqueryEntity from '@/modules/qbe/qbeComponents/QBESubqueryEntity.vue'\r\nimport ScrollPanel from 'primevue/scrollpanel'\r\nimport Menu from 'primevue/contextmenu'\r\nimport QBEJoinDefinitionDialog from './qbeDialogs/qbeJoinDefinitionDialog/QBEJoinDefinitionDialog.vue'\r\nimport KnParameterSidebar from '@/components/UI/KnParameterSidebar/KnParameterSidebar.vue'\r\nimport QBEPreviewDialog from './qbeDialogs/qbePreviewDialog/QBEPreviewDialog.vue'\r\nimport qbeDescriptor from './QBEDescriptor.json'\r\nimport ProgressSpinner from 'primevue/progressspinner'\r\nimport calcFieldDescriptor from './QBECalcFieldDescriptor.json'\r\nimport KnCalculatedField from '@/components/functionalities/KnCalculatedField/KnCalculatedField.vue'\r\nimport Dropdown from 'primevue/dropdown'\r\nimport mainStore from '../../App.store'\r\nimport cryptoRandomString from 'crypto-random-string'\r\nimport deepcopy from 'deepcopy'\r\n\r\nexport default defineComponent({\r\n    name: 'qbe',\r\n    components: {\r\n        Dialog,\r\n        Chip,\r\n        InputSwitch,\r\n        ScrollPanel,\r\n        Menu,\r\n        QBEFilterDialog,\r\n        QBESavingDialog,\r\n        QBESqlDialog,\r\n        QBESimpleTable,\r\n        QBERelationDialog,\r\n        QBEParamDialog,\r\n        ExpandableEntity,\r\n        SubqueryEntity,\r\n        QBEHavingDialog,\r\n        QBEAdvancedFilterDialog,\r\n        QBEJoinDefinitionDialog,\r\n        KnParameterSidebar,\r\n        QBEPreviewDialog,\r\n        QBESmartTable,\r\n        ProgressSpinner,\r\n        KnCalculatedField,\r\n        Dropdown\r\n    },\r\n    props: { visible: { type: Boolean }, dataset: { type: Object }, returnQueryMode: { type: Boolean }, getQueryFromDatasetProp: { type: Boolean } },\r\n    emits: ['close', 'querySaved'],\r\n    data() {\r\n        return {\r\n            moment,\r\n            qbeDescriptor,\r\n            calcFieldDescriptor,\r\n            qbe: null as iQBE | null,\r\n            customizedDatasetFunctions: {} as any,\r\n            entities: {} as any,\r\n            queryPreviewData: {} as iQueryResult,\r\n            selectedQuery: {} as any,\r\n            mainQuery: {} as any,\r\n            loading: false,\r\n            showEntitiesLists: true,\r\n            smartView: true,\r\n            hiddenColumnsExist: false,\r\n            filterDialogVisible: false,\r\n            sqlDialogVisible: false,\r\n            paramDialogVisible: false,\r\n            relationDialogVisible: false,\r\n            savingDialogVisible: false,\r\n            filterDialogData: {} as { field: iField; query: iQuery },\r\n            showDerivedList: true,\r\n            discardRepetitions: false,\r\n            sqlData: {} as any,\r\n            menuButtons: [] as any,\r\n            relationEntity: {} as any,\r\n            havingDialogVisible: false,\r\n            havingDialogData: {} as { field: iField; query: iQuery },\r\n            advancedFilterDialogVisible: false,\r\n            joinDefinitionDialogVisible: false,\r\n            parameterSidebarVisible: false,\r\n            user: null as any,\r\n            userRole: null,\r\n            qbePreviewDialogVisible: false,\r\n            pagination: { start: 0, limit: 25 } as any,\r\n            uniqueID: null as string | null,\r\n            filtersData: {} as any,\r\n            qbeLoaded: false,\r\n            calcFieldDialogVisible: false,\r\n            calcFieldColumns: [] as any,\r\n            selectedCalcField: null as any,\r\n            calcFieldFunctions: [] as any,\r\n            calcFieldFunctionsToShow: [] as any,\r\n            qbeMetadata: [] as any,\r\n            colors: ['#D7263D', '#F46036', '#2E294E', '#1B998B', '#C5D86D', '#3F51B5', '#8BC34A', '#009688', '#F44336']\r\n        }\r\n    },\r\n    computed: {\r\n        isParameterSidebarVisible(): boolean {\r\n            let parameterVisible = false\r\n            for (let i = 0; i < this.filtersData?.filterStatus?.length; i++) {\r\n                const tempFilter = this.filtersData.filterStatus[i]\r\n                if (tempFilter.showOnPanel === 'true') {\r\n                    parameterVisible = true\r\n                    break\r\n                }\r\n            }\r\n            return parameterVisible || this.qbe?.pars?.length !== 0\r\n        }\r\n    },\r\n    watch: {\r\n        async dataset() {\r\n            await this.loadPage()\r\n        }\r\n    },\r\n    setup() {\r\n        const store = mainStore()\r\n        return { store }\r\n    },\r\n    async created() {\r\n        this.uniqueID = cryptoRandomString({ length: 16, type: 'base64' })\r\n        this.user = (this.store.$state as any).user\r\n        this.userRole = this.user.sessionRole && this.user.sessionRole !== this.$t('role.defaultRolePlaceholder') ? this.user.sessionRole : null\r\n        if (this.userRole) {\r\n            await this.loadPage()\r\n        } else {\r\n            this.parameterSidebarVisible = true\r\n        }\r\n    },\r\n    methods: {\r\n        //#region ===================== Load QBE and format data ====================================================\r\n        async loadPage() {\r\n            this.loading = true\r\n\r\n            if (this.dataset && !this.dataset.dataSourceId && !this.dataset.federation_id) {\r\n                await this.loadDataset()\r\n            } else {\r\n                this.qbe = this.getQBEFromModel()\r\n            }\r\n            this.loadQuery()\r\n            this.qbeMetadata = this.extractFieldsMetadata(this.qbe?.meta.columns)\r\n            this.generateFieldsAndMetadataId()\r\n            if (!this.dataset?.federation_id) await this.loadDatasetDrivers()\r\n            if (this.qbe?.pars?.length === 0 && (this.filtersData?.isReadyForExecution || this.dataset?.federation_id)) {\r\n                await this.loadQBE()\r\n            } else if (this.qbe?.pars?.length !== 0 || !this.filtersData?.isReadyForExecution) {\r\n                this.parameterSidebarVisible = true\r\n            }\r\n            this.loading = false\r\n        },\r\n        async loadDataset() {\r\n            if (!this.dataset) {\r\n                return\r\n            }\r\n            await this.$http.get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `1.0/datasets/${this.dataset.label}`).then((response: AxiosResponse<any>) => {\r\n                this.qbe = response.data[0]\r\n                if (this.qbe && this.qbe.qbeJSONQuery) this.qbe.qbeJSONQuery = JSON.parse(this.qbe.qbeJSONQuery)\r\n            })\r\n\r\n            if (this.qbe && this.getQueryFromDatasetProp) {\r\n                this.qbe = deepcopy(this.dataset) as any\r\n                if (this.qbe && this.qbe.qbeJSONQuery && typeof this.qbe.qbeJSONQuery === 'string') this.qbe.qbeJSONQuery = JSON.parse(this.qbe.qbeJSONQuery)\r\n            }\r\n\r\n            if (this.qbe && this.dataset) {\r\n                this.qbe.pars = this.dataset.pars ?? []\r\n            }\r\n        },\r\n        getQBEFromModel() {\r\n            if (!this.dataset) return {}\r\n            this.smartView = this.dataset.smartView\r\n            return {\r\n                dsTypeCd: 'Qbe',\r\n                qbeDatamarts: this.dataset.name,\r\n                qbeDataSource: this.dataset.dataSourceLabel,\r\n                qbeJSONQuery: this.getQueryFromDatasetProp\r\n                    ? this.dataset.qbeJSONQuery\r\n                    : {\r\n                          catalogue: {\r\n                              queries: [{ id: 'q1', name: 'Main', fields: [], distinct: false, filters: [], calendar: {}, expression: {}, isNestedExpression: false, havings: [], graph: [], relationRoles: [], subqueries: [] }]\r\n                          }\r\n                      },\r\n                meta: [],\r\n                pars: this.dataset.pars ?? [],\r\n                scopeId: null,\r\n                scopeCd: '',\r\n                label: '',\r\n                name: ''\r\n            } as any\r\n        },\r\n        loadQuery() {\r\n            this.mainQuery = this.qbe?.qbeJSONQuery?.catalogue?.queries[0]\r\n            this.selectedQuery = this.qbe?.qbeJSONQuery?.catalogue?.queries[0]\r\n        },\r\n        extractFieldsMetadata(array) {\r\n            if (array && array.length > 0) {\r\n                var object = {}\r\n                for (var item in array) {\r\n                    var element = object[array[item].column]\r\n                    if (!element) {\r\n                        element = {}\r\n                        object[array[item].column] = element\r\n                        element['column'] = array[item].column\r\n                    }\r\n                    element[array[item].pname] = array[item].pvalue\r\n                }\r\n                var fieldsMetadata = new Array()\r\n                for (item in object) {\r\n                    fieldsMetadata.push(object[item])\r\n                }\r\n                return fieldsMetadata\r\n            } else return []\r\n        },\r\n        generateFieldsAndMetadataId() {\r\n            this.selectedQuery.fields.forEach((field) => {\r\n                field.uniqueID = cryptoRandomString({ length: 4, type: 'base64' })\r\n                this.qbeMetadata.find((metadata) => {\r\n                    field.alias === metadata.column ? (metadata.uniqueID = field.uniqueID) : ''\r\n                })\r\n            })\r\n        },\r\n        async loadDatasetDrivers() {\r\n            if (!this.qbe) return\r\n            const label = this.qbe.label ? this.qbe.label : this.qbe.qbeDatamarts\r\n            const url = this.qbe.label ? `3.0/datasets/${label}/filters` : `1.0/businessmodel/${this.qbe.qbeDatamarts}/filters`\r\n\r\n            await this.$http\r\n                .post(import.meta.env.VITE_RESTFUL_SERVICES_PATH + url, { role: this.userRole })\r\n                .then((response: AxiosResponse<any>) => {\r\n                    this.filtersData = response.data\r\n                    if (this.filtersData.filterStatus) {\r\n                        this.filtersData.filterStatus = this.filtersData.filterStatus.filter((filter: any) => filter.id)\r\n                    }\r\n                })\r\n                .catch(() => {})\r\n\r\n            formatDrivers(this.filtersData)\r\n        },\r\n        async loadQBE() {\r\n            this.loadCalcFieldFunctions()\r\n            await this.initializeQBE()\r\n            await this.loadCustomizedDatasetFunctions()\r\n            await this.loadEntities()\r\n\r\n            if (!this.dataset?.dataSourceLabel) {\r\n                await this.executeQBEQuery(false)\r\n            }\r\n        },\r\n        loadCalcFieldFunctions() {\r\n            this.calcFieldFunctions = calcFieldDescriptor.availableFunctions\r\n        },\r\n        async initializeQBE() {\r\n            const label = this.dataset?.dataSourceLabel ? this.dataset.dataSourceLabel : this.qbe?.qbeDataSource\r\n            const datamart = this.dataset?.dataSourceLabel ? this.dataset.name : this.qbe?.qbeDatamarts\r\n            const temp = this.getFormattedParameters(this.filtersData)\r\n            const drivers = encodeURI(JSON.stringify(temp))\r\n            const url = this.dataset?.federation_id\r\n                ? `start-federation?federationId=${this.dataset.federation_id}&datasourceForCache=cache&drivers=%7B%7D`\r\n                : `start-qbe?datamart=${datamart}&user_id=${this.user?.userUniqueIdentifier}&SBI_EXECUTION_ID=${this.uniqueID}&DATA_SOURCE_LABEL=${label}&drivers=${drivers}`\r\n            if (this.dataset) {\r\n                await this.$http\r\n                    .get(import.meta.env.VITE_QBE_PATH + url)\r\n                    .then(() => {\r\n                        this.qbeLoaded = true\r\n                    })\r\n                    .catch(() => {})\r\n            }\r\n        },\r\n        getFormattedParameters(loadedParameters: { filterStatus: any[]; isReadyForExecution: boolean }) {\r\n            let parameters = {} as any\r\n            if (!loadedParameters.filterStatus) return parameters\r\n            Object.keys(loadedParameters.filterStatus).forEach((key: any) => {\r\n                const parameter = loadedParameters.filterStatus[key]\r\n                if (!parameter.multivalue) {\r\n                    parameters[parameter.urlName] = [{ value: parameter.parameterValue[0].value, description: parameter.parameterValue[0].description }]\r\n                } else {\r\n                    parameters[parameter.urlName] = [{ value: parameter.parameterValue?.map((el: any) => el.value), description: parameter.parameterDescription }]\r\n                }\r\n            })\r\n            return parameters\r\n        },\r\n        async loadCustomizedDatasetFunctions() {\r\n            if (this.dataset && this.dataset.federation_id) return\r\n            const id = this.dataset?.dataSourceId ? this.dataset.dataSourceId : this.qbe?.qbeDataSourceId\r\n            await this.$http.get(import.meta.env.VITE_RESTFUL_SERVICES_PATH + `2.0/configs/KNOWAGE.CUSTOMIZED_DATABASE_FUNCTIONS/${id}`).then((response: AxiosResponse<any>) => {\r\n                this.customizedDatasetFunctions = response.data\r\n                if (response.data.data && response.data.data.length > 0) {\r\n                    let customFunctions = response.data.data.map((funct) => ({ category: 'CUSTOM', formula: funct.value, label: funct.label, name: funct.name, help: 'dataPreparation.custom' }))\r\n                    customFunctions.forEach((funct) => {\r\n                        this.calcFieldFunctions.push(funct)\r\n                    })\r\n                }\r\n            })\r\n            this.hideSpatialFunct()\r\n        },\r\n        hideSpatialFunct() {\r\n            const isSpatial = (field) => field.isSpatial\r\n            if (!this.selectedQuery.fields.some(isSpatial)) {\r\n                let tempFunctions = deepcopy(this.calcFieldFunctions)\r\n                this.calcFieldFunctionsToShow = tempFunctions.filter((funct) => {\r\n                    return funct.category !== 'SPATIAL'\r\n                })\r\n            } else this.calcFieldFunctionsToShow = deepcopy(this.calcFieldFunctions)\r\n        },\r\n        async loadEntities() {\r\n            const datamartName = this.dataset?.dataSourceId ? this.dataset.name : this.qbe?.qbeDatamarts\r\n            await this.$http\r\n                .get(`/knowageqbeengine/servlet/AdapterHTTP?ACTION_NAME=GET_TREE_ACTION&SBI_EXECUTION_ID=${this.uniqueID}&datamartName=${datamartName}`)\r\n                .then(async (response: AxiosResponse<any>) => {\r\n                    this.addExpandedProperty(response.data.entities)\r\n                    await this.addSpatialProperty(response.data.entities)\r\n                    this.entities = response.data\r\n                })\r\n                .catch((error: any) => console.log('ERROR: ', error))\r\n        },\r\n        addExpandedProperty(entities) {\r\n            entities.forEach((entity) => {\r\n                entity.expanded = false\r\n            })\r\n        },\r\n        async addSpatialProperty(entities) {\r\n            await entities.forEach((entity) => {\r\n                if (entity.iconCls == 'geographic_dimension') {\r\n                    entity.children.forEach((child) => {\r\n                        child.isSpatial = true\r\n                    })\r\n                }\r\n            })\r\n        },\r\n        async executeQBEQuery(showPreview: boolean) {\r\n            this.loading = true\r\n\r\n            if (!this.qbe) return\r\n\r\n            const postData = { catalogue: this.qbe?.qbeJSONQuery?.catalogue.queries, meta: this.formatQbeMeta(), pars: this.qbe?.pars, qbeJSONQuery: {}, schedulingCronLine: '0 * * * * ?' }\r\n            await this.$http\r\n                .post(import.meta.env.VITE_QBE_PATH + `qbequery/executeQuery/?SBI_EXECUTION_ID=${this.uniqueID}&currentQueryId=${this.selectedQuery.id}&start=${this.pagination.start}&limit=${this.pagination.limit}`, postData)\r\n                .then((response: AxiosResponse<any>) => {\r\n                    this.queryPreviewData = response.data\r\n                    this.pagination.size = response.data.results\r\n                    if (showPreview) this.qbePreviewDialogVisible = true\r\n                })\r\n                .catch(() => {\r\n                    if (showPreview) this.qbePreviewDialogVisible = false\r\n                })\r\n            this.loading = false\r\n        },\r\n        formatQbeMeta() {\r\n            const meta = [] as any[]\r\n            this.qbe?.qbeJSONQuery?.catalogue.queries?.forEach((query: iQuery) => {\r\n                query.fields?.forEach((field: iField) => {\r\n                    meta.push({ dataType: field.dataType, displayedName: field.alias, fieldType: field.fieldType.toUpperCase(), format: field.format, name: field.alias, type: field.type })\r\n                })\r\n            })\r\n            return meta\r\n        },\r\n        //#endregion ================================================================================================\r\n\r\n        //#region ===================== Manage Fields Logic =========================================================\r\n        onDropComplete(field) {\r\n            if (field.connector) return\r\n            if (field.children) {\r\n                for (var i in field.children) {\r\n                    this.addEntityToMainQuery(field.children[i])\r\n                }\r\n            } else {\r\n                this.addEntityToMainQuery(field)\r\n            }\r\n            this.updateSmartView()\r\n        },\r\n        addEntityToMainQuery(field, isCalcField?) {\r\n            let queryModel = this.selectedQuery.fields\r\n            let editQueryObj = this.selectedQuery\r\n            for (var i = 0; i < queryModel.length; i++) {\r\n                if (queryModel != undefined && !this.smartView && queryModel.length > 0) {\r\n                    editQueryObj.fields[i].group = queryModel[i].group\r\n                    editQueryObj.fields[i].funct = queryModel[i].funct\r\n                    editQueryObj.fields[i].visible = queryModel[i].visible\r\n                    editQueryObj.fields[i].distinct = queryModel[i].distinct\r\n                    editQueryObj.fields[i].iconCls = queryModel[i].visible\r\n                    editQueryObj.fields[i].inUse = queryModel[i].inUse\r\n                }\r\n                editQueryObj.fields[i].alias = queryModel[i].alias\r\n            }\r\n\r\n            if (!isCalcField) {\r\n                var newField = createNewField(editQueryObj, field)\r\n                var newMetadata = creatNewMetadataFromField(newField)\r\n\r\n                editQueryObj.fields.push(newField)\r\n                this.qbeMetadata.push(newMetadata)\r\n            }\r\n            // eslint-disable-next-line no-prototype-builtins\r\n            this.hideSpatialFunct()\r\n        },\r\n        deleteAllFieldsFromQuery() {\r\n            this.selectedQuery.fields = []\r\n            this.selectedQuery.havings = []\r\n            this.qbeMetadata = []\r\n            this.updateSmartView()\r\n        },\r\n        deleteFieldFromQuery(fieldID) {\r\n            let indexOfFieldToDelete = this.selectedQuery.fields.findIndex((field) => {\r\n                return field.uniqueID === fieldID\r\n            })\r\n            this.onFieldDeleted({ ...this.selectedQuery.fields[indexOfFieldToDelete] })\r\n            this.selectedQuery.fields.splice(indexOfFieldToDelete, 1)\r\n            this.updateSmartView()\r\n        },\r\n        onFieldDeleted(field: any) {\r\n            this.deleteFieldMetadata(field.uniqueID)\r\n            for (let i = this.selectedQuery.havings.length - 1; i >= 0; i--) {\r\n                if (this.selectedQuery.havings[i].leftOperandValue === field.id) {\r\n                    this.selectedQuery.havings.splice(i, 1)\r\n                }\r\n            }\r\n            setTimeout(() => {\r\n                this.hideSpatialFunct()\r\n            }, 0)\r\n        },\r\n        deleteFieldMetadata(fieldID) {\r\n            let indexOfFieldMetadataToDelete = this.qbeMetadata.findIndex((metadata) => {\r\n                return metadata.uniqueID === fieldID\r\n            })\r\n            this.qbeMetadata.splice(indexOfFieldMetadataToDelete, 1)\r\n        },\r\n        //#endregion ================================================================================================\r\n\r\n        //#region ===================== Calc Fields Logic ===========================================================\r\n        createNewCalcField() {\r\n            this.createCalcFieldColumns()\r\n            this.selectedCalcField = { alias: '', expression: '', format: undefined, nature: 'ATTRIBUTE', type: 'STRING' } as any\r\n            this.calcFieldDialogVisible = true\r\n        },\r\n        editCalcField(calcField) {\r\n            this.createCalcFieldColumns()\r\n            this.selectedCalcField = this.formatCalcFieldForComponent(calcField)\r\n            this.calcFieldDialogVisible = true\r\n        },\r\n        formatCalcFieldForComponent(calcField) {\r\n            let formatField = {\r\n                uniqueID: calcField.uniqueID,\r\n                alias: calcField.id.alias,\r\n                type: calcField.id.type,\r\n                expression: calcField.id.expressionSimple,\r\n                nature: calcField.id.nature,\r\n                format: calcField.id.format\r\n            } as any\r\n            return formatField\r\n        },\r\n        createCalcFieldColumns() {\r\n            this.calcFieldColumns = []\r\n            this.selectedQuery.fields.forEach((field) => {\r\n                field.type != 'inline.calculated.field' ? this.calcFieldColumns.push({ fieldAlias: `$F{${field.alias}}`, fieldLabel: field.alias }) : ''\r\n            })\r\n        },\r\n        onCalcFieldSave(calcFieldOutput) {\r\n            var calculatedField = {} as any\r\n            this.selectedCalcField.alias = calcFieldOutput.colName\r\n            this.selectedCalcField.expression = calcFieldOutput.formula\r\n\r\n            if (this.selectedCalcField.uniqueID) {\r\n                this.updateExistingCalculatedField(this.selectedCalcField)\r\n            } else {\r\n                calculatedField = buildCalculatedField(this.selectedCalcField, this.selectedQuery.fields)\r\n                calculatedField.uniqueID = cryptoRandomString({ length: 4, type: 'base64' })\r\n                this.selectedQuery.fields.push(calculatedField)\r\n                this.addEntityToMainQuery(calculatedField, true)\r\n                this.addCalculatedFieldMetadata(calculatedField)\r\n            }\r\n\r\n            this.calcFieldDialogVisible = false\r\n        },\r\n        addCalculatedFieldMetadata(calculatedField) {\r\n            var newMetadata = {\r\n                uniqueID: calculatedField.uniqueID,\r\n                column: calculatedField.alias,\r\n                fieldAlias: calculatedField.field,\r\n                fieldType: calculatedField.id.nature.toUpperCase(),\r\n                decrypt: false,\r\n                personal: false,\r\n                subjectid: false\r\n            } as any\r\n\r\n            switch (calculatedField.id.type) {\r\n                case 'STRING':\r\n                    newMetadata.Type = 'java.lang.String'\r\n                    break\r\n                case 'NUMBER':\r\n                    newMetadata.Type = 'java.lang.Long'\r\n                    break\r\n                case 'DATE':\r\n                    newMetadata.Type = 'java.sql.Date'\r\n                    break\r\n            }\r\n            this.qbeMetadata.push(newMetadata)\r\n        },\r\n        updateExistingCalculatedField(calculatedField) {\r\n            let fieldToEditIndex = this.selectedQuery.fields.findIndex((field) => field.uniqueID == calculatedField.uniqueID)\r\n            this.selectedQuery.fields[fieldToEditIndex] = updateCalculatedField(this.selectedQuery.fields[fieldToEditIndex], this.selectedCalcField, this.selectedQuery.fields)\r\n            this.updateCalculatedFieldMetadata(this.selectedQuery.fields[fieldToEditIndex])\r\n        },\r\n        updateCalculatedFieldMetadata(calculatedField) {\r\n            let metaToEditIndex = this.qbeMetadata.findIndex((meta) => meta.uniqueID == calculatedField.uniqueID)\r\n\r\n            this.qbeMetadata[metaToEditIndex].alias = calculatedField.alias\r\n            this.qbeMetadata[metaToEditIndex].column = calculatedField.alias\r\n            this.qbeMetadata[metaToEditIndex].fieldAlias = calculatedField.field\r\n            this.qbeMetadata[metaToEditIndex].fieldType = calculatedField.id.nature.toUpperCase()\r\n            this.qbeMetadata[metaToEditIndex].format = calculatedField.format\r\n            switch (calculatedField.id.type) {\r\n                case 'STRING':\r\n                    this.qbeMetadata[metaToEditIndex].Type = 'java.lang.String'\r\n                    break\r\n                case 'NUMBER':\r\n                    this.qbeMetadata[metaToEditIndex].Type = 'java.lang.Long'\r\n                    break\r\n                case 'DATE':\r\n                    this.qbeMetadata[metaToEditIndex].Type = 'java.sql.Date'\r\n                    break\r\n            }\r\n        },\r\n        //#endregion ================================================================================================\r\n\r\n        //#region ===================== Mini Menu Handler ==========================================================\r\n        showMenu(event) {\r\n            this.createMenuItems()\r\n            // eslint-disable-next-line\r\n            // @ts-ignore\r\n            this.$refs.optionsMenu.toggle(event)\r\n        },\r\n        createMenuItems() {\r\n            this.menuButtons = []\r\n            let repetitionIcon = this.discardRepetitions ? 'fas fa-check' : 'fas fa-times'\r\n            this.menuButtons.push(\r\n                { key: '1', label: this.$t('qbe.detailView.toolbarMenu.sql'), command: () => this.showSQLQuery() },\r\n                { key: '2', icon: repetitionIcon, label: this.$t('qbe.detailView.toolbarMenu.repetitions'), command: () => this.toggleDiscardRepetitions() },\r\n                { key: '3', label: this.$t('common.parameters'), command: () => this.showParamDialog() },\r\n                { key: '4', label: this.$t('components.knCalculatedField.title'), visible: !this.smartView && this.selectedQuery.fields.length > 0, command: () => this.createNewCalcField() },\r\n                { key: '5', label: this.$t('qbe.advancedFilters.advancedFilterVisualisation'), command: () => this.showAdvancedFilters() },\r\n                { key: '6', label: this.$t('qbe.joinDefinitions.title'), command: () => this.showJoinDefinitions() },\r\n                {\r\n                    key: '7',\r\n                    label: this.$t('qbe.detailView.toolbarMenu.exportTo'),\r\n                    items: [\r\n                        { label: 'CSV', command: () => this.exportQueryResults('csv') },\r\n                        { label: 'XLSX', command: () => this.exportQueryResults('xlsx') }\r\n                    ]\r\n                }\r\n            )\r\n        },\r\n        async showSQLQuery() {\r\n            var item = {} as any\r\n            item.catalogue = JSON.stringify(this.qbe?.qbeJSONQuery?.catalogue?.queries)\r\n            item.currentQueryId = 'q1'\r\n            item.ambiguousFieldsPaths = []\r\n            item.ambiguousRoles = []\r\n            item.pars = this.qbe?.pars\r\n\r\n            let conf = {} as any\r\n            conf.headers = { 'Content-Type': 'application/x-www-form-urlencoded' } as any\r\n            conf.transformRequest = function (obj) {\r\n                var str = [] as any\r\n                for (var p in obj) str.push(encodeURIComponent(p) + '=' + encodeURIComponent(obj[p]))\r\n                return str.join('&')\r\n            }\r\n\r\n            await this.$http\r\n                .post(`/knowageqbeengine/servlet/AdapterHTTP?ACTION_NAME=SET_CATALOGUE_ACTION&SBI_EXECUTION_ID=${this.uniqueID}`, item, conf)\r\n                .then(() => {\r\n                    this.getSQL()\r\n                })\r\n                .catch((error) => {\r\n                    this.store.setError({ title: this.$t('common.toast.error'), msg: error.errors[0].message })\r\n                })\r\n        },\r\n        async getSQL() {\r\n            var item = {} as any\r\n            item.replaceParametersWithQuestion = true\r\n            item.queryId = this.selectedQuery.id\r\n\r\n            let conf = {} as any\r\n            conf.headers = { 'Content-Type': 'application/x-www-form-urlencoded' } as any\r\n            conf.transformRequest = function (obj) {\r\n                var str = [] as any\r\n                for (var p in obj) str.push(encodeURIComponent(p) + '=' + encodeURIComponent(obj[p]))\r\n                return str.join('&')\r\n            }\r\n\r\n            await this.$http\r\n                .post(`/knowageqbeengine/servlet/AdapterHTTP?ACTION_NAME=GET_SQL_QUERY_ACTION&SBI_EXECUTION_ID=${this.uniqueID}`, item, conf)\r\n                .then((response: AxiosResponse<any>) => {\r\n                    this.sqlData = response.data\r\n                    this.sqlDialogVisible = true\r\n                })\r\n                .catch((error) => {\r\n                    this.store.setError({ title: this.$t('common.toast.error'), msg: error.errors[0].message })\r\n                })\r\n        },\r\n        toggleDiscardRepetitions() {\r\n            this.discardRepetitions = !this.discardRepetitions\r\n            this.qbe ? (this.qbe.qbeJSONQuery.catalogue.queries[0].distinct = this.discardRepetitions) : ''\r\n            if (this.smartView) {\r\n                this.executeQBEQuery(false)\r\n            }\r\n        },\r\n        showParamDialog() {\r\n            this.paramDialogVisible = true\r\n        },\r\n        showAdvancedFilters() {\r\n            this.advancedFilterDialogVisible = true\r\n        },\r\n        showJoinDefinitions() {\r\n            this.joinDefinitionDialogVisible = true\r\n        },\r\n        async exportQueryResults(mimeType) {\r\n            var fileName = ''\r\n            mimeType == 'csv' ? (fileName = 'report.csv') : (fileName = 'report.xlsx')\r\n\r\n            const postData = { catalogue: this.qbe?.qbeJSONQuery?.catalogue.queries, meta: this.formatQbeMeta(), pars: this.qbe?.pars, qbeJSONQuery: {}, schedulingCronLine: '0 * * * * ?' }\r\n            await this.$http\r\n                .post(import.meta.env.VITE_QBE_PATH + `qbequery/export/?SBI_EXECUTION_ID=${this.uniqueID}&currentQueryId=${this.selectedQuery.id}&outputType=${mimeType}`, postData, { headers: { Accept: 'application/json, text/plain, */*' }, responseType: 'blob' })\r\n                .then((response: AxiosResponse<any>) => {\r\n                    downloadDirect(response.data, fileName, response.headers['content-type'])\r\n                })\r\n                .catch(() => {})\r\n        },\r\n        //#endregion ================================================================================================\r\n\r\n        //#region ===================== Event Handlers ==============================================================\r\n        async updatePagination(lazyParams: any) {\r\n            this.pagination.start = lazyParams.paginationStart\r\n            this.pagination.limit = lazyParams.paginationLimit\r\n            await this.executeQBEQuery(false)\r\n        },\r\n        toggleEntitiesLists() {\r\n            this.showEntitiesLists = !this.showEntitiesLists\r\n        },\r\n        collapseDerivedList() {\r\n            this.showDerivedList = !this.showDerivedList\r\n        },\r\n        checkIfHiddenColumnsExist() {\r\n            if (this.qbe) {\r\n                this.hiddenColumnsExist = false\r\n                for (let i = 0; i < this.selectedQuery.fields.length; i++) {\r\n                    if (!this.selectedQuery.fields[i].visible) {\r\n                        this.hiddenColumnsExist = true\r\n                        break\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        showHiddenColumns() {\r\n            this.selectedQuery.fields.forEach((field: iField) => (field.visible = true))\r\n            if (this.smartView) {\r\n                this.updateSmartView()\r\n            }\r\n            this.hiddenColumnsExist = false\r\n        },\r\n        openFilterDialog(field: iField) {\r\n            this.filterDialogData = { field: field, query: this.selectedQuery }\r\n            this.filterDialogVisible = true\r\n        },\r\n        openHavingDialog(payload: { field: iField; query: iQuery }) {\r\n            this.havingDialogData = payload\r\n            this.havingDialogVisible = true\r\n        },\r\n        onFiltersSave(filters: iFilter[], field: iField, parameters: any[], expression: any) {\r\n            onFiltersSaveCallback(filters, field, parameters, expression, this.qbe, this.selectedQuery, this.smartView, this.executeQBEQuery)\r\n            this.filterDialogVisible = false\r\n        },\r\n        onAdvancedFiltersSave(expression: any) {\r\n            this.selectedQuery.expression = expression\r\n            this.advancedFilterDialogVisible = false\r\n            this.updateSmartView()\r\n        },\r\n\r\n        showRelationDialog(entity) {\r\n            this.relationEntity = entity\r\n            this.relationDialogVisible = true\r\n        },\r\n        onHavingsSave(havings: iFilter[], field: iField) {\r\n            onHavingsSaveCallback(havings, this.qbe, this.selectedQuery, field)\r\n            this.havingDialogVisible = false\r\n        },\r\n        onGroupingChanged(field: iField) {\r\n            if (field.group && this.selectedQuery) {\r\n                this.selectedQuery.havings = this.selectedQuery.havings.filter((having: any) => having.letOperandValue !== field.id)\r\n            }\r\n        },\r\n\r\n        onJoinDefinitionDialogClose() {\r\n            this.joinDefinitionDialogVisible = false\r\n            if (this.smartView) {\r\n                this.executeQBEQuery(false)\r\n            }\r\n        },\r\n        deleteAllFilters() {\r\n            if (this.qbe) {\r\n                this.selectedQuery.filters = []\r\n                this.selectedQuery.havings = []\r\n                this.selectedQuery.expression = {}\r\n                if (this.smartView) this.executeQBEQuery(false)\r\n            }\r\n        },\r\n\r\n        selectSubquery(subquery) {\r\n            this.selectedQuery = subquery\r\n            this.updateSmartView()\r\n        },\r\n        selectMainQuery() {\r\n            if (this.selectedQuery.fields.length < 1) {\r\n                this.store.setInfo({ title: this.$t('common.toast.error'), msg: 'Sub entities must have one and one only field' })\r\n            } else {\r\n                this.selectedQuery = this.mainQuery\r\n            }\r\n            this.updateSmartView()\r\n        },\r\n        deleteSubquery(index, subquery) {\r\n            subquery.id === this.selectedQuery.id ? (this.selectedQuery = this.mainQuery) : ''\r\n            this.mainQuery.subqueries.splice(index, 1)\r\n            this.updateSmartView()\r\n        },\r\n        createSubquery() {\r\n            let newSubquery = { id: 'q' + this.createQueryName(), name: 'subentity-q' + this.createQueryName(), fields: [], distinct: false, filters: [], calendar: {}, expression: {}, isNestedExpression: false, havings: [], graph: [], relationRoles: [], subqueries: [] } as any\r\n            this.mainQuery.subqueries.push(newSubquery)\r\n            this.selectedQuery = newSubquery\r\n            this.queryPreviewData = null as any\r\n        },\r\n        createQueryName() {\r\n            var lastcount = 0\r\n            var lastIndex = this.mainQuery.subqueries?.length - 1\r\n            if (lastIndex != -1 && this.mainQuery.subqueries) {\r\n                var lastQueryId = this.mainQuery.subqueries[lastIndex].id\r\n                lastcount = parseInt(lastQueryId.substr(1))\r\n            } else {\r\n                lastcount = 1\r\n            }\r\n            return lastcount + 1\r\n        },\r\n        async onExecute(qbeParameters: any[]) {\r\n            if (this.qbe) {\r\n                this.qbe.pars = [...qbeParameters]\r\n                if (this.dataset && !this.dataset.dataSourceId && !this.dataset.federation_id) {\r\n                    await this.loadDataset()\r\n                } else {\r\n                    this.qbe = this.getQBEFromModel()\r\n                }\r\n                await this.loadQBE()\r\n                this.loadQuery()\r\n                this.qbeMetadata = this.extractFieldsMetadata(this.qbe?.meta?.columns)\r\n                this.generateFieldsAndMetadataId()\r\n                this.parameterSidebarVisible = false\r\n            }\r\n        },\r\n        async openPreviewDialog() {\r\n            this.pagination.limit = 20\r\n            await this.executeQBEQuery(true)\r\n        },\r\n        updateSmartView() {\r\n            this.smartView && this.selectedQuery.fields.length > 0 ? this.executeQBEQuery(false) : this.resetQueryPreviewAndPagination()\r\n        },\r\n        resetQueryPreviewAndPagination() {\r\n            this.pagination = { start: 0, limit: 25, size: 0 }\r\n            this.queryPreviewData = {} as any\r\n        },\r\n        smartViewFieldHidden() {\r\n            this.checkIfHiddenColumnsExist()\r\n            this.updateSmartView()\r\n        },\r\n        smartViewReorder(event) {\r\n            var temp = this.selectedQuery.fields[event.dragIndex]\r\n            this.selectedQuery.fields[event.dragIndex] = this.selectedQuery.fields[event.dropIndex]\r\n            this.selectedQuery.fields[event.dropIndex] = temp\r\n            this.updateSmartView()\r\n        },\r\n        closePreview() {\r\n            this.qbePreviewDialogVisible = false\r\n            this.pagination = { start: 0, limit: 25 }\r\n        },\r\n        onFieldAliasChange(field) {\r\n            this.qbeMetadata.findIndex((metadata) => {\r\n                if (metadata.uniqueID === field.uniqueID) metadata.fieldAlias = field.alias\r\n            })\r\n            this.updateSmartView()\r\n        },\r\n        onParametersSave() {\r\n            this.paramDialogVisible = false\r\n\r\n            for (let i = this.selectedQuery.filters.length - 1; i >= 0; i--) {\r\n                if (this.selectedQuery.filters[i].rightType === 'parameter') {\r\n                    const index = this.qbe?.pars.findIndex((parameter: any) => parameter.name === this.selectedQuery.filters[i].paramName)\r\n                    if (index === -1) {\r\n                        removeInPlace(this.selectedQuery.expression, '$F{' + this.selectedQuery.filters[i].filterId + '}')\r\n                        this.selectedQuery.filters.splice(index, 1)\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (this.selectedQuery.expression.childNodes?.length === 0) this.selectedQuery.expression = {}\r\n            this.updateSmartView()\r\n        },\r\n        async onRoleChange(role: string) {\r\n            this.userRole = role as any\r\n            this.filtersData = {}\r\n            if (this.dataset && !this.dataset.dataSourceId && !this.dataset.federation_id) {\r\n                await this.loadDataset()\r\n            } else {\r\n                this.qbe = this.getQBEFromModel()\r\n            }\r\n            this.loadQuery()\r\n            if (!this.dataset?.federation_id) await this.loadDatasetDrivers()\r\n        },\r\n        //#endregion ================================================================================================\r\n        openSavingDialog() {\r\n            if (this.returnQueryMode) {\r\n                this.$emit('querySaved', this.qbe?.qbeJSONQuery)\r\n            } else {\r\n                this.savingDialogVisible = true\r\n            }\r\n        }\r\n    }\r\n})\r\n</script>\r\n<style lang=\"scss\">\r\n.full-screen-dialog.p-dialog {\r\n    max-height: 100%;\r\n    height: 100vh;\r\n    width: calc(100vw - #{54px});\r\n    margin: 0;\r\n    .p-dialog-content {\r\n        padding: 0;\r\n        margin: 0;\r\n        flex: 1;\r\n        overflow: hidden;\r\n    }\r\n    .p-dialog-header {\r\n        padding: 0;\r\n        margin: 0;\r\n    }\r\n}\r\n.qbe-detail-view {\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex: 3;\r\n}\r\n.derived-entities-toggle {\r\n    height: 25%;\r\n}\r\n.qbe-scroll-panel .p-scrollpanel-content {\r\n    padding: 0 !important;\r\n}\r\n.qbe-scroll-panel .p-scrollpanel-bar {\r\n    background-color: #43749eb6;\r\n    width: 5px;\r\n}\r\n</style>\r\n"],"names":["moment","_sfc_main","Dialog","selectedOperandService.getSelectedCount","selectedOperandService.isSingleGroupSelected","selectedOperandService.getSelected","treeService.setFilterTree","treeService.getFilterTree","advancedFilterservice.group","selectedOperandService.unSelectAll","advancedFilterservice.ungroup","_openBlock","_createBlock","_normalizeStyle","_withCtx","_createVNode","_createElementVNode","_hoisted_1","_hoisted_1$1","_hoisted_2$1","_hoisted_3$1","_hoisted_4$1","_hoisted_5$1","Portal","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","createElementVNode","Column","DataTable","_toDisplayString","_createElementBlock","_Fragment","_renderList","Calendar","CascadeSelect","Chip","Chips","Dropdown","_hoisted_10","_hoisted_21","_hoisted_7","_withDirectives","_hoisted_8","_createTextVNode","_hoisted_9","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_createCommentVNode","_hoisted_16","_hoisted_17","_vShow","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_22","Message","mainStore","Checkbox","Menu","_withModifiers","relationDescriptor","descriptor","Card","useValidate","_normalizeClass","MultiSelect","advancedTabDescriptor","InputSwitch","TabView","TabPanel","QBEDescriptor","ScrollPanel","ProgressSpinner"],"mappings":"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"}